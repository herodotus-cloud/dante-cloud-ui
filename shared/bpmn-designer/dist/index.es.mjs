var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
import { QSpace, QBtn, QCardSection, QSeparator, QCard, QDialog, copyToClipboard, QAvatar, QItemSection, QItemLabel, QItem, QIcon, QBadge, QExpansionItem, QTooltip, QList, QBtnDropdown, QBtnGroup, QCardActions, QCheckbox, QTable, QInput, QSelect, QPopupEdit, QTd, QTr, QToggle, QScrollArea, QDrawer, useQuasar, QSpinnerGears, QFile, QToolbar, QPage, QPageContainer, QLayout } from "quasar";
import { markRaw, ref, onMounted, watch, defineComponent, onBeforeUnmount, openBlock, createElementBlock, computed, createBlock, withCtx, createVNode, normalizeStyle, createElementVNode, toDisplayString, createCommentVNode, h as h$2, resolveComponent, createTextVNode, renderSlot, mergeProps, createSlots, normalizeProps, guardReactiveProps, resolveDirective, withDirectives, Fragment, renderList, resolveDynamicComponent, nextTick, withModifiers } from "vue";
import { lodash, toast, Swal } from "@herodotus/core";
import { Swal as Swal2, lodash as lodash2, toast as toast2 } from "@herodotus/core";
import { defineStore, storeToRefs } from "pinia";
import { BpmnPropertiesPanelModule, BpmnPropertiesProviderModule, CamundaPlatformPropertiesProviderModule } from "bpmn-js-properties-panel";
import ElementTemplateChooserModule from "@bpmn-io/element-template-chooser";
import ConnectorsExtensionModule from "bpmn-js-connectors-extension";
import TokenSimulationModule from "bpmn-js-token-simulation";
import BpmnLintModule from "bpmn-js-bpmnlint";
import MinimapModule from "diagram-js-minimap";
import GridModule from "diagram-js-grid";
import Ids from "ids";
import Diagram from "diagram-js";
import BpmnModdle from "bpmn-moddle";
import { HTextField, HSelect } from "@herodotus/components";
import { BpmnQueryByGetService, DeploymentService } from "@herodotus/bpmn-apis";
function flatten$2(arr) {
  return Array.prototype.concat.apply([], arr);
}
const nativeToString$2 = Object.prototype.toString;
const nativeHasOwnProperty$2 = Object.prototype.hasOwnProperty;
function isUndefined$2(obj) {
  return obj === void 0;
}
function isDefined$1(obj) {
  return obj !== void 0;
}
function isNil$1(obj) {
  return obj == null;
}
function isArray$3(obj) {
  return nativeToString$2.call(obj) === "[object Array]";
}
function isObject$1(obj) {
  return nativeToString$2.call(obj) === "[object Object]";
}
function isNumber$1(obj) {
  return nativeToString$2.call(obj) === "[object Number]";
}
function isFunction$1(obj) {
  const tag = nativeToString$2.call(obj);
  return tag === "[object Function]" || tag === "[object AsyncFunction]" || tag === "[object GeneratorFunction]" || tag === "[object AsyncGeneratorFunction]" || tag === "[object Proxy]";
}
function isString$1(obj) {
  return nativeToString$2.call(obj) === "[object String]";
}
function ensureArray$1(obj) {
  if (isArray$3(obj)) {
    return;
  }
  throw new Error("must supply array");
}
function has$2(target, key) {
  return nativeHasOwnProperty$2.call(target, key);
}
function find$1(collection, matcher) {
  const matchFn = toMatcher$1(matcher);
  let match;
  forEach$2(collection, function(val, key) {
    if (matchFn(val, key)) {
      match = val;
      return false;
    }
  });
  return match;
}
function findIndex$1(collection, matcher) {
  const matchFn = toMatcher$1(matcher);
  let idx = isArray$3(collection) ? -1 : void 0;
  forEach$2(collection, function(val, key) {
    if (matchFn(val, key)) {
      idx = key;
      return false;
    }
  });
  return idx;
}
function filter$1(collection, matcher) {
  const matchFn = toMatcher$1(matcher);
  let result = [];
  forEach$2(collection, function(val, key) {
    if (matchFn(val, key)) {
      result.push(val);
    }
  });
  return result;
}
function forEach$2(collection, iterator) {
  let val, result;
  if (isUndefined$2(collection)) {
    return;
  }
  const convertKey = isArray$3(collection) ? toNum$2 : identity$2;
  for (let key in collection) {
    if (has$2(collection, key)) {
      val = collection[key];
      result = iterator(val, convertKey(key));
      if (result === false) {
        return val;
      }
    }
  }
}
function without$1(arr, matcher) {
  if (isUndefined$2(arr)) {
    return [];
  }
  ensureArray$1(arr);
  const matchFn = toMatcher$1(matcher);
  return arr.filter(function(el, idx) {
    return !matchFn(el, idx);
  });
}
function reduce$1(collection, iterator, result) {
  forEach$2(collection, function(value, idx) {
    result = iterator(result, value, idx);
  });
  return result;
}
function every$1(collection, matcher) {
  return !!reduce$1(collection, function(matches2, val, key) {
    return matches2 && matcher(val, key);
  }, true);
}
function some$1(collection, matcher) {
  return !!find$1(collection, matcher);
}
function map$2(collection, fn) {
  let result = [];
  forEach$2(collection, function(val, key) {
    result.push(fn(val, key));
  });
  return result;
}
function keys$1(collection) {
  return collection && Object.keys(collection) || [];
}
function size$1(collection) {
  return keys$1(collection).length;
}
function values$1(collection) {
  return map$2(collection, (val) => val);
}
function groupBy$1(collection, extractor, grouped = {}) {
  extractor = toExtractor$1(extractor);
  forEach$2(collection, function(val) {
    let discriminator = extractor(val) || "_";
    let group = grouped[discriminator];
    if (!group) {
      group = grouped[discriminator] = [];
    }
    group.push(val);
  });
  return grouped;
}
function uniqueBy$1(extractor, ...collections) {
  extractor = toExtractor$1(extractor);
  let grouped = {};
  forEach$2(collections, (c2) => groupBy$1(c2, extractor, grouped));
  let result = map$2(grouped, function(val, key) {
    return val[0];
  });
  return result;
}
const unionBy$1 = uniqueBy$1;
function sortBy$1(collection, extractor) {
  extractor = toExtractor$1(extractor);
  let sorted = [];
  forEach$2(collection, function(value, key) {
    let disc = extractor(value, key);
    let entry = {
      d: disc,
      v: value
    };
    for (var idx = 0; idx < sorted.length; idx++) {
      let { d: d2 } = sorted[idx];
      if (disc < d2) {
        sorted.splice(idx, 0, entry);
        return;
      }
    }
    sorted.push(entry);
  });
  return map$2(sorted, (e2) => e2.v);
}
function matchPattern$1(pattern) {
  return function(el) {
    return every$1(pattern, function(val, key) {
      return el[key] === val;
    });
  };
}
function toExtractor$1(extractor) {
  return isFunction$1(extractor) ? extractor : (e2) => {
    return e2[extractor];
  };
}
function toMatcher$1(matcher) {
  return isFunction$1(matcher) ? matcher : (e2) => {
    return e2 === matcher;
  };
}
function identity$2(arg) {
  return arg;
}
function toNum$2(arg) {
  return Number(arg);
}
function debounce$1(fn, timeout) {
  let timer;
  let lastArgs;
  let lastThis;
  let lastNow;
  function fire(force) {
    let now = Date.now();
    let scheduledDiff = force ? 0 : lastNow + timeout - now;
    if (scheduledDiff > 0) {
      return schedule(scheduledDiff);
    }
    fn.apply(lastThis, lastArgs);
    clear2();
  }
  function schedule(timeout2) {
    timer = setTimeout(fire, timeout2);
  }
  function clear2() {
    if (timer) {
      clearTimeout(timer);
    }
    timer = lastNow = lastArgs = lastThis = void 0;
  }
  function flush() {
    if (timer) {
      fire(true);
    }
    clear2();
  }
  function callback(...args) {
    lastNow = Date.now();
    lastArgs = args;
    lastThis = this;
    if (!timer) {
      schedule(timeout);
    }
  }
  callback.flush = flush;
  callback.cancel = clear2;
  return callback;
}
function bind$3(fn, target) {
  return fn.bind(target);
}
function assign$2(target, ...others) {
  return Object.assign(target, ...others);
}
function pick$1(target, properties) {
  let result = {};
  let obj = Object(target);
  forEach$2(properties, function(prop) {
    if (prop in obj) {
      result[prop] = target[prop];
    }
  });
  return result;
}
function omit$1(target, properties) {
  let result = {};
  let obj = Object(target);
  forEach$2(obj, function(prop, key) {
    if (properties.indexOf(key) === -1) {
      result[key] = prop;
    }
  });
  return result;
}
function is$g(element, type) {
  var bo = getBusinessObject(element);
  return bo && typeof bo.$instanceOf === "function" && bo.$instanceOf(type);
}
function isAny$7(element, types2) {
  return some$1(types2, function(t2) {
    return is$g(element, t2);
  });
}
function getBusinessObject(element) {
  return element && element.businessObject || element;
}
function getDi(element) {
  return element && element.di;
}
function remove$2(collection, element) {
  if (!collection || !element) {
    return -1;
  }
  var idx = collection.indexOf(element);
  if (idx !== -1) {
    collection.splice(idx, 1);
  }
  return idx;
}
function add$1(collection, element, idx) {
  if (!collection || !element) {
    return;
  }
  if (typeof idx !== "number") {
    idx = -1;
  }
  var currentIdx = collection.indexOf(element);
  if (currentIdx !== -1) {
    if (currentIdx === idx) {
      return;
    } else {
      if (idx !== -1) {
        collection.splice(currentIdx, 1);
      } else {
        return;
      }
    }
  }
  if (idx !== -1) {
    collection.splice(idx, 0, element);
  } else {
    collection.push(element);
  }
}
function indexOf(collection, element) {
  if (!collection || !element) {
    return -1;
  }
  return collection.indexOf(element);
}
const _BpmnLog = class _BpmnLog {
  constructor() {
    __publicField(this, "switchColor", (type) => {
      switch (type) {
        case "primary":
          return "#2d8cf0";
        case "success":
          return "#19be6b";
        case "info":
          return "#909399";
        case "warn":
          return "#ff9900";
        case "error":
          return "#f03f14";
        default:
          return "#35495E";
      }
    });
  }
  static getInstance() {
    return this.instance;
  }
  isArray(obj) {
    return lodash.isArray(obj);
  }
  print(type = "default", text, back = false) {
    if (typeof text === "object") {
      this.isArray(text) ? console.table(text) : console.dir(text);
      return;
    }
    if (back) {
      console.log(
        `%c ${text} `,
        `background:${this.switchColor(type)}; padding: 2px; border-radius: 4px; color: #fff;`
      );
    } else {
      console.log(
        `%c ${text} `,
        `border: 1px solid ${this.switchColor(type)};
          padding: 2px; border-radius: 4px;
          color: ${this.switchColor(type)};`
      );
    }
  }
  printBack(type = "primary", text) {
    this.print(type, text, true);
  }
  pretty(type = "primary", title, text) {
    if (typeof text === "object") {
      console.group("Console Group", title);
      console.log(
        `%c ${title}`,
        `background:${this.switchColor(type)};border:1px solid ${this.switchColor(type)};
          padding: 1px; border-radius: 4px; color: #fff;`
      );
      this.isArray(text) ? console.table(text) : console.dir(text);
      console.groupEnd();
      return;
    }
    console.log(
      `%c ${title} %c ${text} %c`,
      `background:${this.switchColor(type)};border:1px solid ${this.switchColor(type)};
        padding: 1px; border-radius: 4px 0 0 4px; color: #fff;`,
      `border:1px solid ${this.switchColor(type)};
        padding: 1px; border-radius: 0 4px 4px 0; color: ${this.switchColor(type)};`,
      "background:transparent"
    );
  }
  prettyPrimary(title, ...text) {
    text.forEach((t2) => this.pretty("primary", title, t2));
  }
  prettySuccess(title, ...text) {
    text.forEach((t2) => this.pretty("success", title, t2));
  }
  prettyWarn(title, ...text) {
    text.forEach((t2) => this.pretty("warn", title, t2));
  }
  prettyError(title, ...text) {
    text.forEach((t2) => this.pretty("error", title, t2));
  }
  prettyInfo(title, ...text) {
    text.forEach((t2) => this.pretty("info", title, t2));
  }
};
__publicField(_BpmnLog, "instance", new _BpmnLog());
__publicField(_BpmnLog, "types", ["primary", "success", "warn", "error", "info"]);
let BpmnLog = _BpmnLog;
const Logger = BpmnLog.getInstance();
const useSettingStore = defineStore("BpmnDesignerSetting", {
  state: () => ({
    // 是否使用官方属性面板
    useOfficialPanel: true,
    // 是否使用官方模版选择器
    useOfficialTemplateChooser: false,
    // 是否使用官方背景
    useOfficialBackground: true,
    // 是否使用其它模块配置
    useOtherModule: true,
    // 是否显示缩略图
    showMiniMap: true,
    // 是否开启 Bpmn 提示
    showBpmnLint: true,
    processId: `Process_${(/* @__PURE__ */ new Date()).getTime()}`,
    processName: `业务流程`,
    // 使用的工作流引擎
    processEngine: "camunda"
  })
});
const useResourceStore = defineStore("BpmnDesignerResources", {
  state: () => ({
    resources: {}
  }),
  getters: {
    userService: (state) => state.resources.user(),
    groupService: (state) => state.resources.group(),
    deploymentService: (state) => state.resources.deployment(),
    dynamicFormService: (state) => state.resources.dynamicForm()
  },
  actions: {
    init(instance) {
      this.resources = instance;
    }
  }
});
const useDesignerStore = defineStore("BpmnDesignerModeler", {
  state: () => ({
    modeler: {},
    modeling: {},
    canvas: {},
    elementRegistry: {},
    moddle: {},
    isClosed: false,
    activeElement: {},
    activeElementId: "",
    panelGroups: [],
    elementType: "",
    elementRawType: "",
    elementTitle: "",
    elementIcon: "",
    elementCaption: "",
    isMultiInstance: false
  }),
  actions: {
    switchElement(activeElement, activeElementId, panelGroups, elementType, elementRawType, elementTitle, elementIcon, elementCaption, isMultiInstance) {
      this.activeElement = activeElement;
      this.activeElementId = activeElementId;
      this.panelGroups = panelGroups;
      this.elementType = elementType;
      this.elementRawType = elementRawType;
      this.elementTitle = elementTitle;
      this.elementIcon = elementIcon;
      this.elementCaption = elementCaption;
      this.isMultiInstance = isMultiInstance;
    }
  }
});
function usePropertyElements() {
  const designer = useDesignerStore();
  const setting = useSettingStore();
  const { processEngine } = setting;
  const getModeler = () => {
    return designer.modeler;
  };
  const getModeling = () => {
    return designer.modeling;
  };
  const getModdle = () => {
    return designer.moddle;
  };
  const getCanvas = () => {
    return designer.canvas;
  };
  const getBpmnFactory = () => {
    return getModeler().get("bpmnFactory");
  };
  const isBpmnParticipant = (element) => {
    return is$g(element, "bpmn:Participant");
  };
  const getRelevantBusinessObject = (element) => {
    const businessObject = getBusinessObject(element);
    if (isBpmnParticipant(element)) {
      return businessObject.get("processRef");
    }
    return businessObject;
  };
  const createModdleElement = (type, properties, parent = {}) => {
    const moddle = getModdle();
    const element = moddle.create(type, properties);
    parent && (element.$parent = parent);
    return element;
  };
  const hasExtensionElements = (element) => {
    const businessObject = getBusinessObject(element);
    return !!businessObject.extensionElements;
  };
  const getExtensionElements = (element) => {
    const businessObject = getBusinessObject(element);
    let extensionElements = businessObject.extensionElements;
    if (lodash.isEmpty(extensionElements)) {
      extensionElements = createModdleElement("bpmn:ExtensionElements", { values: [] }, businessObject);
      getModeling().updateModdleProperties(element, businessObject, { extensionElements });
    }
    return extensionElements;
  };
  const getExtensionElementsValues = (extensionElements) => {
    return !lodash.isEmpty(extensionElements.values) ? extensionElements.values : [];
  };
  const getFirstExtensionElementsValue = (extensionElements) => {
    const values2 = getExtensionElementsValues(extensionElements);
    return !lodash.isEmpty(values2) ? values2[0] : {};
  };
  const setExtensionElementsValues = (parentElement, extensionElements, values2) => {
    getModeling().updateModdleProperties(parentElement, extensionElements, {
      values: [...extensionElements.get("values"), ...values2]
    });
  };
  const resetExtensionElementsValues = (element, extensionElements) => {
    getModeling().updateModdleProperties(element, extensionElements, {
      values: []
    });
  };
  return {
    processEngine,
    getModeler,
    getModeling,
    getCanvas,
    getBpmnFactory,
    getRelevantBusinessObject,
    createModdleElement,
    hasExtensionElements,
    getExtensionElements,
    getExtensionElementsValues,
    getFirstExtensionElementsValue,
    setExtensionElementsValues,
    resetExtensionElementsValues
  };
}
function useAsynchronousContinuationsProperties() {
  const { getModeling } = usePropertyElements();
  const getBeforeValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.asyncBefore;
  };
  const setBeforeValue = (element, value) => {
    getModeling().updateProperties(element, { asyncBefore: value });
  };
  const getAfterValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.asyncAfter;
  };
  const setAfterValue = (element, value) => {
    getModeling().updateProperties(element, { asyncAfter: value });
  };
  const getExclusiveValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.exclusive;
  };
  const setExclusiveValue = (element, value) => {
    getModeling().updateProperties(element, { exclusive: value });
  };
  return {
    getBeforeValue,
    setBeforeValue,
    getAfterValue,
    setAfterValue,
    getExclusiveValue,
    setExclusiveValue
  };
}
function useCandidateStarterProperties() {
  const { getModeling } = usePropertyElements();
  const getCandidateStarterGroupsValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.candidateStarterGroups;
  };
  const setCandidateStarterGroupsValue = (element, value) => {
    getModeling().updateProperties(element, { candidateStarterGroups: value });
  };
  const getCandidateStarterUsersValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.candidateStarterUsers;
  };
  const setCandidateStarterUsersValue = (element, value) => {
    getModeling().updateProperties(element, { candidateStarterUsers: value });
  };
  return {
    getCandidateStarterGroupsValue,
    setCandidateStarterGroupsValue,
    getCandidateStarterUsersValue,
    setCandidateStarterUsersValue
  };
}
function useConditionProperties() {
  const { getModeling, createModdleElement } = usePropertyElements();
  const fetchConditionExpression = (element, create2 = false) => {
    const businessObject = getBusinessObject(element);
    let conditionExpression = businessObject.conditionExpression;
    if (!lodash.isEmpty(conditionExpression)) {
      return conditionExpression;
    } else {
      if (create2) {
        conditionExpression = createModdleElement("bpmn:FormalExpression", {}, businessObject);
        getModeling().updateModdleProperties(element, businessObject, { conditionExpression });
        return conditionExpression;
      } else {
        return {};
      }
    }
  };
  const getConditionExpressionValue = (element) => {
    const conditionExpression = fetchConditionExpression(element);
    return !lodash.isEmpty(conditionExpression) ? conditionExpression.body : "";
  };
  const setConditionExpressionValue = (element, value) => {
    const conditionExpression = fetchConditionExpression(element, true);
    getModeling().updateModdleProperties(element, conditionExpression, { body: value });
  };
  const getFormatValue = (element) => {
    const conditionExpression = fetchConditionExpression(element);
    return !lodash.isEmpty(conditionExpression) ? conditionExpression.language : "";
  };
  const setFormatValue = (element, value) => {
    const conditionExpression = fetchConditionExpression(element, true);
    getModeling().updateModdleProperties(element, conditionExpression, { language: value });
  };
  const getResourceValue = (element) => {
    const conditionExpression = fetchConditionExpression(element);
    return !lodash.isEmpty(conditionExpression) ? conditionExpression.resource : "";
  };
  const setResourceValue = (element, value) => {
    const conditionExpression = fetchConditionExpression(element, true);
    getModeling().updateModdleProperties(element, conditionExpression, { resource: value });
  };
  const getScriptValue = (element) => {
    return getConditionExpressionValue(element);
  };
  const setScriptValue = (element, value) => {
    const conditionExpression = fetchConditionExpression(element, true);
    getModeling().updateModdleProperties(element, conditionExpression, { body: value });
  };
  const resetConditionExpression = (element) => {
    const businessObject = getBusinessObject(element);
    let conditionExpression = businessObject.conditionExpression;
    conditionExpression = createModdleElement("bpmn:FormalExpression", {}, businessObject);
    getModeling().updateModdleProperties(element, businessObject, { conditionExpression });
  };
  return {
    getConditionExpressionValue,
    setConditionExpressionValue,
    getFormatValue,
    setFormatValue,
    getResourceValue,
    setResourceValue,
    getScriptValue,
    setScriptValue,
    resetConditionExpression
  };
}
function useDocumentProperties() {
  const DOCUMENTATION_TEXT_FORMAT = "text/plain";
  const { getModeling, getBpmnFactory } = usePropertyElements();
  const findDocumentation = (docs) => {
    if (lodash.isEmpty(docs)) {
      return void 0;
    }
    return docs.find((d2) => {
      return (d2.textFormat || DOCUMENTATION_TEXT_FORMAT) === DOCUMENTATION_TEXT_FORMAT;
    });
  };
  const getDocumentations = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.documentation;
  };
  const getDocumentation = (element) => {
    return findDocumentation(getDocumentations(element));
  };
  const getDocumentationValue = (element) => {
    const documentation = getDocumentation(element);
    return documentation && documentation.text;
  };
  const setDocumentationValue = (element, value) => {
    const businessObject = getBusinessObject(element);
    const documentation = getDocumentation(element);
    if (documentation) {
      if (value) {
        return getModeling().updateModdleProperties(element, documentation, { text: value });
      } else {
        return getModeling().updateModdleProperties(element, businessObject, {
          documentation: lodash.without(businessObject.get("documentation"), documentation)
        });
      }
    }
    if (value) {
      const newDocumentation = getBpmnFactory().create("bpmn:Documentation", {
        text: value
      });
      return getModeling().updateModdleProperties(element, businessObject, {
        documentation: [...businessObject.get("documentation"), newDocumentation]
      });
    }
  };
  return {
    getDocumentationValue,
    setDocumentationValue
  };
}
function useExtensionProperties() {
  const { getModeling, createModdleElement, getRelevantBusinessObject, processEngine } = usePropertyElements();
  const getExtensionElements = (businessObject) => {
    return !lodash.isEmpty(businessObject.extensionElements) ? businessObject.extensionElements : {};
  };
  const getExtensionElementsValues = (extensionElements) => {
    return !lodash.isEmpty(extensionElements.values) ? extensionElements.values : [];
  };
  const getProperties2 = (extensionElements) => {
    const values2 = getExtensionElementsValues(extensionElements);
    return !lodash.isEmpty(values2) ? values2[0] : {};
  };
  const getPropertiesValues = (properties) => {
    return !lodash.isEmpty(properties.values) ? properties.values : [];
  };
  const getExtensionProperties = (element) => {
    const businessObject = getRelevantBusinessObject(element);
    const extensionElements = getExtensionElements(businessObject);
    const properties = getProperties2(extensionElements);
    const values2 = getPropertiesValues(properties);
    if (!lodash.isEmpty(values2)) {
      return lodash.map(values2, (item) => lodash.pick(item, ["name", "value"]));
    } else {
      return [];
    }
  };
  const deleteExtensionProperty = (element, property) => {
    const businessObject = getRelevantBusinessObject(element);
    const extensionElements = getExtensionElements(businessObject);
    const properties = getProperties2(extensionElements);
    if (!lodash.isEmpty(properties)) {
      const values2 = lodash.pullAllBy(getPropertiesValues(properties), [property], "name");
      getModeling().updateModdleProperties(element, properties, { values: values2 });
      if (lodash.isEmpty(values2)) {
        getModeling().updateModdleProperties(element, extensionElements, {
          values: lodash.without(getExtensionElementsValues(extensionElements), properties)
        });
      }
    }
  };
  const modifyExtensionProperty = (element, items) => {
    const businessObject = getRelevantBusinessObject(element);
    let extensionElements = getExtensionElements(businessObject);
    if (lodash.isEmpty(extensionElements)) {
      extensionElements = createModdleElement("bpmn:ExtensionElements", { values: [] }, businessObject);
      getModeling().updateModdleProperties(element, businessObject, { extensionElements });
    }
    let properties = getProperties2(extensionElements);
    if (lodash.isEmpty(properties)) {
      properties = createModdleElement(`${processEngine}:Properties`, { values: [] }, extensionElements);
      getModeling().updateModdleProperties(element, extensionElements, {
        values: [...extensionElements.get("values"), properties]
      });
    }
    createProperties(element, items, properties);
  };
  const createProperties = (element, items, parent) => {
    if (!lodash.isEmpty(items)) {
      const newElements = lodash.map(items, (item) => {
        return createModdleElement(`${processEngine}:Property`, item, parent);
      });
      getModeling().updateModdleProperties(element, parent, {
        values: newElements
      });
    }
  };
  return {
    getExtensionProperties,
    modifyExtensionProperty,
    deleteExtensionProperty
  };
}
function useFormsProperties() {
  const {
    getModeling,
    hasExtensionElements,
    getExtensionElements,
    getExtensionElementsValues,
    setExtensionElementsValues,
    createModdleElement,
    resetExtensionElementsValues
  } = usePropertyElements();
  const getFormKeyValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.formKey;
  };
  const setFormKeyValue = (element, value) => {
    getModeling().updateProperties(element, { formKey: value });
  };
  const getFormRefValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.formRef;
  };
  const setFormRefValue = (element, value) => {
    getModeling().updateProperties(element, { formRef: value });
  };
  const getFormRefVersionValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.formRefVersion;
  };
  const setFormRefVersionValue = (element, value) => {
    getModeling().updateProperties(element, { formRefVersion: value });
  };
  const getFormRefBindingValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.formRefBinding;
  };
  const setFormRefBindingValue = (element, value) => {
    getModeling().updateProperties(element, { formRefBinding: value });
  };
  const setGeneratedTaskFormsValues = (element) => {
    const extensionElements = getExtensionElements(element);
    let values2 = getExtensionElementsValues(extensionElements);
    if (lodash.isEmpty(values2)) {
      values2 = createModdleElement("camunda:FormData", { fields: [] }, extensionElements);
      setExtensionElementsValues(element, extensionElements, values2);
    }
  };
  const resetGeneratedTaskFormsValues = (element) => {
    if (hasExtensionElements(element)) {
      const extensionElements = getExtensionElements(element);
      const values2 = getExtensionElementsValues(extensionElements);
      if (!lodash.isEmpty(values2)) {
        resetExtensionElementsValues(element, extensionElements);
      }
    }
  };
  const resetProperties = (element) => {
    getModeling().updateProperties(element, {});
  };
  return {
    getFormKeyValue,
    setFormKeyValue,
    getFormRefValue,
    setFormRefValue,
    getFormRefVersionValue,
    setFormRefVersionValue,
    getFormRefBindingValue,
    setFormRefBindingValue,
    setGeneratedTaskFormsValues,
    resetGeneratedTaskFormsValues,
    resetProperties,
    hasExtensionElements
  };
}
function useGeneralProperties() {
  const { getModeling, getBpmnFactory, getCanvas } = usePropertyElements();
  const SPACE_REGEX = /\s/;
  const QNAME_REGEX = /^([a-z][\w-.]*:)?[a-z_][\w-.]*$/i;
  const ID_REGEX = /^[a-z_][\w-.]*$/i;
  const VERSION_REGEX = /((\d|([1-9](\d*))).){2}(\d|([1-9](\d*)))/;
  const setting = useSettingStore();
  const isIgnored = (element) => {
    return isAny$7(element, ["bpmn:Collaboration", "bpmn:DataAssociation", "bpmn:Association"]);
  };
  const isProcess = (element) => {
    return is$g(element, "bpmn:Process");
  };
  const isTextAnnotation2 = (element) => {
    return is$g(element, "bpmn:TextAnnotation");
  };
  const isGroup2 = (element) => {
    return is$g(element, "bpmn:Group");
  };
  const createCategoryValue2 = (definitions) => {
    const categoryValue = getBpmnFactory().create("bpmn:CategoryValue");
    const category = getBpmnFactory().create("bpmn:Category", {
      categoryValue: [categoryValue]
    });
    add$1(definitions.get("rootElements"), category, 0);
    getBusinessObject(category).$parent = definitions;
    getBusinessObject(categoryValue).$parent = category;
    return categoryValue;
  };
  const initializeCategory = (businessObject, rootElement) => {
    const definitions = getBusinessObject(rootElement).$parent;
    businessObject.categoryValueRef = createCategoryValue2(definitions);
  };
  const getNameValue = (element) => {
    const businessObject = getBusinessObject(element);
    if (isIgnored(element)) {
      return "";
    }
    if (isTextAnnotation2(element)) {
      return businessObject.text;
    }
    if (is$g(element, "bpmn:Group")) {
      return businessObject.categoryValueRef.value;
    }
    return businessObject.name;
  };
  const setNameValue = (element, value) => {
    const businessObject = getBusinessObject(element);
    if (isIgnored(element)) {
      return void 0;
    }
    if (isTextAnnotation2(element)) {
      return getModeling().updateProperties(element, { text: value });
    }
    if (isGroup2(element)) {
      const categoryValueRef = businessObject.categoryValueRef;
      if (!categoryValueRef) {
        initializeCategory(businessObject, getCanvas().getRootElement());
      }
      return getModeling().updateLabel(element, value);
    }
    getModeling().updateProperties(element, { name: value });
  };
  const getIsExecutableValue = (element) => {
    return !!element.businessObject.isExecutable;
  };
  const setIsExecutableValue = (element, value) => {
    getModeling().updateProperties(element, {
      isExecutable: value
    });
  };
  const getVersionTagValue = (element) => {
    const prefix2 = setting.processEngine;
    return element.businessObject.get(`${prefix2}:versionTag`);
  };
  const setVersionTagValue = (element, value) => {
    const prefix2 = setting.processEngine;
    getModeling().updateProperties(element, {
      [`${prefix2}:versionTag`]: value
    });
  };
  const getIdValue = (element) => {
    return element.businessObject.id;
  };
  const setIdValue = (element, value) => {
    getModeling().updateProperties(element, {
      id: value
    });
  };
  const isIdValid = (element, id) => {
    const assigned = element.businessObject.$model.ids.assigned(id);
    const idAlreadyExists = assigned && assigned !== element;
    if (!id) {
      return "ID 不能为空.";
    }
    if (idAlreadyExists) {
      return "ID 必须是唯一的";
    }
    if (SPACE_REGEX.test(id)) {
      return "ID 不能包含空格";
    }
    if (!ID_REGEX.test(id)) {
      if (QNAME_REGEX.test(id)) {
        return "ID 不能包含前缀";
      }
      return "ID 必须符合 BPMN 规范";
    }
    return "";
  };
  const isVersionTagValid = (value) => {
    return VERSION_REGEX.test(value);
  };
  return {
    isProcess,
    getIdValue,
    setIdValue,
    getNameValue,
    setNameValue,
    getIsExecutableValue,
    setIsExecutableValue,
    getVersionTagValue,
    setVersionTagValue,
    isIdValid,
    isVersionTagValid
  };
}
function useStartInitiatorProperties() {
  const { getModeling } = usePropertyElements();
  const getInitiatorValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.initiator;
  };
  const setInitiatorValue = (element, value) => {
    getModeling().updateProperties(element, { initiator: value });
  };
  return {
    getInitiatorValue,
    setInitiatorValue
  };
}
function useUserAssignmentProperties() {
  const { getModeling } = usePropertyElements();
  const getAssigneeValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.assignee;
  };
  const setAssigneeValue = (element, value) => {
    getModeling().updateProperties(element, { assignee: value });
  };
  const getCandidateGroupsValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.candidateGroups;
  };
  const setCandidateGroupsValue = (element, value) => {
    getModeling().updateProperties(element, { candidateGroups: value });
  };
  const getCandidateUsersValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.candidateUsers;
  };
  const setCandidateUsersValue = (element, value) => {
    getModeling().updateProperties(element, { candidateUsers: value });
  };
  const getDueDateValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.dueDate;
  };
  const setDueDateValue = (element, value) => {
    getModeling().updateProperties(element, { dueDate: value });
  };
  const getFollowUpDateValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.followUpDate;
  };
  const setFollowUpDateValue = (element, value) => {
    getModeling().updateProperties(element, { followUpDate: value });
  };
  const getPriorityValue = (element) => {
    const businessObject = getBusinessObject(element);
    return businessObject.priority;
  };
  const setPriorityValue = (element, value) => {
    getModeling().updateProperties(element, { priority: value });
  };
  return {
    getAssigneeValue,
    setAssigneeValue,
    getCandidateGroupsValue,
    setCandidateGroupsValue,
    getCandidateUsersValue,
    setCandidateUsersValue,
    getDueDateValue,
    setDueDateValue,
    getFollowUpDateValue,
    setFollowUpDateValue,
    getPriorityValue,
    setPriorityValue
  };
}
function e$3(e2, t2) {
  t2 && (e2.super_ = t2, e2.prototype = Object.create(t2.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } }));
}
function _mergeNamespaces(n2, m2) {
  m2.forEach(function(e2) {
    e2 && typeof e2 !== "string" && !Array.isArray(e2) && Object.keys(e2).forEach(function(k2) {
      if (k2 !== "default" && !(k2 in n2)) {
        var d2 = Object.getOwnPropertyDescriptor(e2, k2);
        Object.defineProperty(n2, k2, d2.get ? d2 : {
          enumerable: true,
          get: function() {
            return e2[k2];
          }
        });
      }
    });
  });
  return Object.freeze(n2);
}
const nativeToString$1 = Object.prototype.toString;
const nativeHasOwnProperty$1 = Object.prototype.hasOwnProperty;
function isUndefined$1(obj) {
  return obj === void 0;
}
function isArray$2(obj) {
  return nativeToString$1.call(obj) === "[object Array]";
}
function has$1(target, key) {
  return nativeHasOwnProperty$1.call(target, key);
}
function forEach$1(collection, iterator) {
  let val, result;
  if (isUndefined$1(collection)) {
    return;
  }
  const convertKey = isArray$2(collection) ? toNum$1 : identity$1;
  for (let key in collection) {
    if (has$1(collection, key)) {
      val = collection[key];
      result = iterator(val, convertKey(key));
      if (result === false) {
        return val;
      }
    }
  }
}
function identity$1(arg) {
  return arg;
}
function toNum$1(arg) {
  return Number(arg);
}
function assign$1(element, ...styleSources) {
  const target = element.style;
  forEach$1(styleSources, function(style) {
    if (!style) {
      return;
    }
    forEach$1(style, function(value, key) {
      target[key] = value;
    });
  });
  return element;
}
function attr$1(el, name2, val) {
  if (arguments.length == 2) {
    return el.getAttribute(name2);
  }
  if (val === null) {
    return el.removeAttribute(name2);
  }
  el.setAttribute(name2, val);
  return el;
}
const toString$1 = Object.prototype.toString;
function classes$1(el) {
  return new ClassList$1(el);
}
function ClassList$1(el) {
  if (!el || !el.nodeType) {
    throw new Error("A DOM element reference is required");
  }
  this.el = el;
  this.list = el.classList;
}
ClassList$1.prototype.add = function(name2) {
  this.list.add(name2);
  return this;
};
ClassList$1.prototype.remove = function(name2) {
  if ("[object RegExp]" == toString$1.call(name2)) {
    return this.removeMatching(name2);
  }
  this.list.remove(name2);
  return this;
};
ClassList$1.prototype.removeMatching = function(re) {
  const arr = this.array();
  for (let i2 = 0; i2 < arr.length; i2++) {
    if (re.test(arr[i2])) {
      this.remove(arr[i2]);
    }
  }
  return this;
};
ClassList$1.prototype.toggle = function(name2, force) {
  if ("undefined" !== typeof force) {
    if (force !== this.list.toggle(name2, force)) {
      this.list.toggle(name2);
    }
  } else {
    this.list.toggle(name2);
  }
  return this;
};
ClassList$1.prototype.array = function() {
  return Array.from(this.list);
};
ClassList$1.prototype.has = ClassList$1.prototype.contains = function(name2) {
  return this.list.contains(name2);
};
function clear$1(el) {
  var c2;
  while (el.childNodes.length) {
    c2 = el.childNodes[0];
    el.removeChild(c2);
  }
  return el;
}
function matches(element, selector) {
  return element && typeof element.matches === "function" && element.matches(selector);
}
function closest(element, selector, checkYourSelf) {
  var currentElem = checkYourSelf ? element : element.parentNode;
  while (currentElem && currentElem.nodeType !== document.DOCUMENT_NODE && currentElem.nodeType !== document.DOCUMENT_FRAGMENT_NODE) {
    if (matches(currentElem, selector)) {
      return currentElem;
    }
    currentElem = currentElem.parentNode;
  }
  return matches(currentElem, selector) ? currentElem : null;
}
var componentEvent = {};
var bind$1, unbind$1, prefix$1;
function detect() {
  bind$1 = window.addEventListener ? "addEventListener" : "attachEvent";
  unbind$1 = window.removeEventListener ? "removeEventListener" : "detachEvent";
  prefix$1 = bind$1 !== "addEventListener" ? "on" : "";
}
var bind_1 = componentEvent.bind = function(el, type, fn, capture) {
  if (!bind$1)
    detect();
  el[bind$1](prefix$1 + type, fn, capture || false);
  return fn;
};
var unbind_1 = componentEvent.unbind = function(el, type, fn, capture) {
  if (!unbind$1)
    detect();
  el[unbind$1](prefix$1 + type, fn, capture || false);
  return fn;
};
var event = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  bind: bind_1,
  unbind: unbind_1,
  "default": componentEvent
}, [componentEvent]);
var forceCaptureEvents = ["focus", "blur"];
function bind$2(el, selector, type, fn, capture) {
  if (forceCaptureEvents.indexOf(type) !== -1) {
    capture = true;
  }
  return event.bind(el, type, function(e2) {
    var target = e2.target || e2.srcElement;
    e2.delegateTarget = closest(target, selector, true);
    if (e2.delegateTarget) {
      fn.call(el, e2);
    }
  }, capture);
}
function unbind(el, type, fn, capture) {
  if (forceCaptureEvents.indexOf(type) !== -1) {
    capture = true;
  }
  return event.unbind(el, type, fn, capture);
}
var delegate = {
  bind: bind$2,
  unbind
};
var domify = parse$1;
var innerHTMLBug = false;
var bugTestDiv;
if (typeof document !== "undefined") {
  bugTestDiv = document.createElement("div");
  bugTestDiv.innerHTML = '  <link/><table></table><a href="/a">a</a><input type="checkbox"/>';
  innerHTMLBug = !bugTestDiv.getElementsByTagName("link").length;
  bugTestDiv = void 0;
}
var map$1 = {
  legend: [1, "<fieldset>", "</fieldset>"],
  tr: [2, "<table><tbody>", "</tbody></table>"],
  col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
  // for script/link/style tags to work in IE6-8, you have to wrap
  // in a div with a non-whitespace character in front, ha!
  _default: innerHTMLBug ? [1, "X<div>", "</div>"] : [0, "", ""]
};
map$1.td = map$1.th = [3, "<table><tbody><tr>", "</tr></tbody></table>"];
map$1.option = map$1.optgroup = [1, '<select multiple="multiple">', "</select>"];
map$1.thead = map$1.tbody = map$1.colgroup = map$1.caption = map$1.tfoot = [1, "<table>", "</table>"];
map$1.polyline = map$1.ellipse = map$1.polygon = map$1.circle = map$1.text = map$1.line = map$1.path = map$1.rect = map$1.g = [1, '<svg xmlns="http://www.w3.org/2000/svg" version="1.1">', "</svg>"];
function parse$1(html, doc) {
  if ("string" != typeof html)
    throw new TypeError("String expected");
  if (!doc)
    doc = document;
  var m2 = /<([\w:]+)/.exec(html);
  if (!m2)
    return doc.createTextNode(html);
  html = html.replace(/^\s+|\s+$/g, "");
  var tag = m2[1];
  if (tag == "body") {
    var el = doc.createElement("html");
    el.innerHTML = html;
    return el.removeChild(el.lastChild);
  }
  var wrap = Object.prototype.hasOwnProperty.call(map$1, tag) ? map$1[tag] : map$1._default;
  var depth = wrap[0];
  var prefix2 = wrap[1];
  var suffix = wrap[2];
  var el = doc.createElement("div");
  el.innerHTML = prefix2 + html + suffix;
  while (depth--)
    el = el.lastChild;
  if (el.firstChild == el.lastChild) {
    return el.removeChild(el.firstChild);
  }
  var fragment = doc.createDocumentFragment();
  while (el.firstChild) {
    fragment.appendChild(el.removeChild(el.firstChild));
  }
  return fragment;
}
var domify$1 = domify;
function query(selector, el) {
  el = el || document;
  return el.querySelector(selector);
}
function all(selector, el) {
  el = el || document;
  return el.querySelectorAll(selector);
}
function remove$1(el) {
  el.parentNode && el.parentNode.removeChild(el);
}
function ensureImported(element, target) {
  if (element.ownerDocument !== target.ownerDocument) {
    try {
      return target.ownerDocument.importNode(element, true);
    } catch (e2) {
    }
  }
  return element;
}
function appendTo(element, target) {
  return target.appendChild(ensureImported(element, target));
}
function append(target, node2) {
  appendTo(node2, target);
  return target;
}
var LENGTH_ATTR = 2;
var CSS_PROPERTIES = {
  "alignment-baseline": 1,
  "baseline-shift": 1,
  "clip": 1,
  "clip-path": 1,
  "clip-rule": 1,
  "color": 1,
  "color-interpolation": 1,
  "color-interpolation-filters": 1,
  "color-profile": 1,
  "color-rendering": 1,
  "cursor": 1,
  "direction": 1,
  "display": 1,
  "dominant-baseline": 1,
  "enable-background": 1,
  "fill": 1,
  "fill-opacity": 1,
  "fill-rule": 1,
  "filter": 1,
  "flood-color": 1,
  "flood-opacity": 1,
  "font": 1,
  "font-family": 1,
  "font-size": LENGTH_ATTR,
  "font-size-adjust": 1,
  "font-stretch": 1,
  "font-style": 1,
  "font-variant": 1,
  "font-weight": 1,
  "glyph-orientation-horizontal": 1,
  "glyph-orientation-vertical": 1,
  "image-rendering": 1,
  "kerning": 1,
  "letter-spacing": 1,
  "lighting-color": 1,
  "marker": 1,
  "marker-end": 1,
  "marker-mid": 1,
  "marker-start": 1,
  "mask": 1,
  "opacity": 1,
  "overflow": 1,
  "pointer-events": 1,
  "shape-rendering": 1,
  "stop-color": 1,
  "stop-opacity": 1,
  "stroke": 1,
  "stroke-dasharray": 1,
  "stroke-dashoffset": 1,
  "stroke-linecap": 1,
  "stroke-linejoin": 1,
  "stroke-miterlimit": 1,
  "stroke-opacity": 1,
  "stroke-width": LENGTH_ATTR,
  "text-anchor": 1,
  "text-decoration": 1,
  "text-rendering": 1,
  "unicode-bidi": 1,
  "visibility": 1,
  "word-spacing": 1,
  "writing-mode": 1
};
function getAttribute(node2, name2) {
  if (CSS_PROPERTIES[name2]) {
    return node2.style[name2];
  } else {
    return node2.getAttributeNS(null, name2);
  }
}
function setAttribute(node2, name2, value) {
  var hyphenated = name2.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
  var type = CSS_PROPERTIES[hyphenated];
  if (type) {
    if (type === LENGTH_ATTR && typeof value === "number") {
      value = String(value) + "px";
    }
    node2.style[hyphenated] = value;
  } else {
    node2.setAttributeNS(null, name2, value);
  }
}
function setAttributes(node2, attrs) {
  var names = Object.keys(attrs), i2, name2;
  for (i2 = 0, name2; name2 = names[i2]; i2++) {
    setAttribute(node2, name2, attrs[name2]);
  }
}
function attr(node2, name2, value) {
  if (typeof name2 === "string") {
    if (value !== void 0) {
      setAttribute(node2, name2, value);
    } else {
      return getAttribute(node2, name2);
    }
  } else {
    setAttributes(node2, name2);
  }
  return node2;
}
const toString = Object.prototype.toString;
function classes(el) {
  return new ClassList(el);
}
function ClassList(el) {
  if (!el || !el.nodeType) {
    throw new Error("A DOM element reference is required");
  }
  this.el = el;
  this.list = el.classList;
}
ClassList.prototype.add = function(name2) {
  this.list.add(name2);
  return this;
};
ClassList.prototype.remove = function(name2) {
  if ("[object RegExp]" == toString.call(name2)) {
    return this.removeMatching(name2);
  }
  this.list.remove(name2);
  return this;
};
ClassList.prototype.removeMatching = function(re) {
  const arr = this.array();
  for (let i2 = 0; i2 < arr.length; i2++) {
    if (re.test(arr[i2])) {
      this.remove(arr[i2]);
    }
  }
  return this;
};
ClassList.prototype.toggle = function(name2, force) {
  if ("undefined" !== typeof force) {
    if (force !== this.list.toggle(name2, force)) {
      this.list.toggle(name2);
    }
  } else {
    this.list.toggle(name2);
  }
  return this;
};
ClassList.prototype.array = function() {
  return Array.from(this.list);
};
ClassList.prototype.has = ClassList.prototype.contains = function(name2) {
  return this.list.contains(name2);
};
function remove(element) {
  var parent = element.parentNode;
  if (parent) {
    parent.removeChild(element);
  }
  return element;
}
function clear(element) {
  var child;
  while (child = element.firstChild) {
    remove(child);
  }
  return element;
}
function clone$1(element) {
  return element.cloneNode(true);
}
var ns = {
  svg: "http://www.w3.org/2000/svg"
};
var SVG_START = '<svg xmlns="' + ns.svg + '"';
function parse(svg) {
  var unwrap = false;
  if (svg.substring(0, 4) === "<svg") {
    if (svg.indexOf(ns.svg) === -1) {
      svg = SVG_START + svg.substring(4);
    }
  } else {
    svg = SVG_START + ">" + svg + "</svg>";
    unwrap = true;
  }
  var parsed = parseDocument(svg);
  if (!unwrap) {
    return parsed;
  }
  var fragment = document.createDocumentFragment();
  var parent = parsed.firstChild;
  while (parent.firstChild) {
    fragment.appendChild(parent.firstChild);
  }
  return fragment;
}
function parseDocument(svg) {
  var parser;
  parser = new DOMParser();
  parser.async = false;
  return parser.parseFromString(svg, "text/xml");
}
function create$1(name2, attrs) {
  var element;
  if (name2.charAt(0) === "<") {
    element = parse(name2).firstChild;
    element = document.importNode(element, true);
  } else {
    element = document.createElementNS(ns.svg, name2);
  }
  if (attrs) {
    attr(element, attrs);
  }
  return element;
}
var node = null;
function getNode() {
  if (node === null) {
    node = create$1("svg");
  }
  return node;
}
function createTransform(matrix) {
  {
    return getNode().createSVGTransform();
  }
}
var TEXT_ENTITIES = /([&<>]{1})/g;
var ATTR_ENTITIES = /([\n\r"]{1})/g;
var ENTITY_REPLACEMENT = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "'"
};
function escape$1(str, pattern) {
  function replaceFn(match, entity) {
    return ENTITY_REPLACEMENT[entity] || entity;
  }
  return str.replace(pattern, replaceFn);
}
function serialize(node2, output) {
  var i2, len, attrMap, attrNode, childNodes;
  switch (node2.nodeType) {
    case 3:
      output.push(escape$1(node2.textContent, TEXT_ENTITIES));
      break;
    case 1:
      output.push("<", node2.tagName);
      if (node2.hasAttributes()) {
        attrMap = node2.attributes;
        for (i2 = 0, len = attrMap.length; i2 < len; ++i2) {
          attrNode = attrMap.item(i2);
          output.push(" ", attrNode.name, '="', escape$1(attrNode.value, ATTR_ENTITIES), '"');
        }
      }
      if (node2.hasChildNodes()) {
        output.push(">");
        childNodes = node2.childNodes;
        for (i2 = 0, len = childNodes.length; i2 < len; ++i2) {
          serialize(childNodes.item(i2), output);
        }
        output.push("</", node2.tagName, ">");
      } else {
        output.push("/>");
      }
      break;
    case 8:
      output.push("<!--", escape$1(node2.nodeValue, TEXT_ENTITIES), "-->");
      break;
    case 4:
      output.push("<![CDATA[", node2.nodeValue, "]]>");
      break;
    default:
      throw new Error("unable to handle node " + node2.nodeType);
  }
  return output;
}
function get$1(element) {
  var child = element.firstChild, output = [];
  while (child) {
    serialize(child, output);
    child = child.nextSibling;
  }
  return output.join("");
}
function innerSVG(element, svg) {
  {
    return get$1(element);
  }
}
function wrapMatrix(transformList, transform2) {
  if (transform2 instanceof SVGMatrix) {
    return transformList.createSVGTransformFromMatrix(transform2);
  }
  return transform2;
}
function setTransforms(transformList, transforms) {
  var i2, t2;
  transformList.clear();
  for (i2 = 0; t2 = transforms[i2]; i2++) {
    transformList.appendItem(wrapMatrix(transformList, t2));
  }
}
function transform$1(node2, transforms) {
  var transformList = node2.transform.baseVal;
  if (transforms) {
    if (!Array.isArray(transforms)) {
      transforms = [transforms];
    }
    setTransforms(transformList, transforms);
  }
  return transformList.consolidate();
}
function elementToString(e2) {
  if (!e2) {
    return "<null>";
  }
  return "<" + e2.$type + (e2.id ? ' id="' + e2.id : "") + '" />';
}
var DI_ERROR_MESSAGE = "Tried to access di from the businessObject. The di is available through the diagram element only. For more information, see https://github.com/bpmn-io/bpmn-js/issues/1472";
function ensureCompatDiRef(businessObject) {
  if (!has$2(businessObject, "di")) {
    Object.defineProperty(businessObject, "di", {
      enumerable: false,
      get: function() {
        throw new Error(DI_ERROR_MESSAGE);
      }
    });
  }
}
function is$f(element, type) {
  return element.$instanceOf(type);
}
function findDisplayCandidate(definitions) {
  return find$1(definitions.rootElements, function(e2) {
    return is$f(e2, "bpmn:Process") || is$f(e2, "bpmn:Collaboration");
  });
}
function BpmnTreeWalker(handler) {
  var handledElements = {};
  var deferred = [];
  var diMap = {};
  function contextual(fn, ctx) {
    return function(e2) {
      fn(e2, ctx);
    };
  }
  function handled(element) {
    handledElements[element.id] = element;
  }
  function isHandled(element) {
    return handledElements[element.id];
  }
  function visit(element, ctx) {
    var gfx = element.gfx;
    if (gfx) {
      throw new Error(
        `already rendered ${elementToString(element)}`
      );
    }
    return handler.element(element, diMap[element.id], ctx);
  }
  function visitRoot(element, diagram) {
    return handler.root(element, diMap[element.id], diagram);
  }
  function visitIfDi(element, ctx) {
    try {
      var gfx = diMap[element.id] && visit(element, ctx);
      handled(element);
      return gfx;
    } catch (error2) {
      logError(error2.message, { element, error: error2 });
      console.error(`failed to import ${elementToString(element)}`, error2);
    }
  }
  function logError(message, context) {
    handler.error(message, context);
  }
  var registerDi = this.registerDi = function registerDi2(di) {
    var bpmnElement = di.bpmnElement;
    if (bpmnElement) {
      if (diMap[bpmnElement.id]) {
        logError(
          `multiple DI elements defined for ${elementToString(bpmnElement)}`,
          { element: bpmnElement }
        );
      } else {
        diMap[bpmnElement.id] = di;
        ensureCompatDiRef(bpmnElement);
      }
    } else {
      logError(
        `no bpmnElement referenced in ${elementToString(di)}`,
        { element: di }
      );
    }
  };
  function handleDiagram(diagram) {
    handlePlane(diagram.plane);
  }
  function handlePlane(plane) {
    registerDi(plane);
    forEach$2(plane.planeElement, handlePlaneElement);
  }
  function handlePlaneElement(planeElement) {
    registerDi(planeElement);
  }
  this.handleDefinitions = function handleDefinitions(definitions, diagram) {
    var diagrams = definitions.diagrams;
    if (diagram && diagrams.indexOf(diagram) === -1) {
      throw new Error("diagram not part of <bpmn:Definitions />");
    }
    if (!diagram && diagrams && diagrams.length) {
      diagram = diagrams[0];
    }
    if (!diagram) {
      throw new Error("no diagram to display");
    }
    diMap = {};
    handleDiagram(diagram);
    var plane = diagram.plane;
    if (!plane) {
      throw new Error(
        `no plane for ${elementToString(diagram)}`
      );
    }
    var rootElement = plane.bpmnElement;
    if (!rootElement) {
      rootElement = findDisplayCandidate(definitions);
      if (!rootElement) {
        throw new Error("no process or collaboration to display");
      } else {
        logError(
          `correcting missing bpmnElement on ${elementToString(plane)} to ${elementToString(rootElement)}`
        );
        plane.bpmnElement = rootElement;
        registerDi(plane);
      }
    }
    var ctx = visitRoot(rootElement, plane);
    if (is$f(rootElement, "bpmn:Process") || is$f(rootElement, "bpmn:SubProcess")) {
      handleProcess(rootElement, ctx);
    } else if (is$f(rootElement, "bpmn:Collaboration")) {
      handleCollaboration(rootElement, ctx);
      handleUnhandledProcesses(definitions.rootElements, ctx);
    } else {
      throw new Error(
        `unsupported bpmnElement for ${elementToString(plane)}: ${elementToString(rootElement)}`
      );
    }
    handleDeferred(deferred);
  };
  var handleDeferred = this.handleDeferred = function handleDeferred2() {
    var fn;
    while (deferred.length) {
      fn = deferred.shift();
      fn();
    }
  };
  function handleProcess(process, context) {
    handleFlowElementsContainer(process, context);
    handleIoSpecification(process.ioSpecification, context);
    handleArtifacts(process.artifacts, context);
    handled(process);
  }
  function handleUnhandledProcesses(rootElements, ctx) {
    var processes = filter$1(rootElements, function(e2) {
      return !isHandled(e2) && is$f(e2, "bpmn:Process") && e2.laneSets;
    });
    processes.forEach(contextual(handleProcess, ctx));
  }
  function handleMessageFlow(messageFlow, context) {
    visitIfDi(messageFlow, context);
  }
  function handleMessageFlows(messageFlows, context) {
    forEach$2(messageFlows, contextual(handleMessageFlow, context));
  }
  function handleDataAssociation(association, context) {
    visitIfDi(association, context);
  }
  function handleDataInput(dataInput, context) {
    visitIfDi(dataInput, context);
  }
  function handleDataOutput(dataOutput, context) {
    visitIfDi(dataOutput, context);
  }
  function handleArtifact(artifact, context) {
    visitIfDi(artifact, context);
  }
  function handleArtifacts(artifacts, context) {
    forEach$2(artifacts, function(e2) {
      if (is$f(e2, "bpmn:Association")) {
        deferred.push(function() {
          handleArtifact(e2, context);
        });
      } else {
        handleArtifact(e2, context);
      }
    });
  }
  function handleIoSpecification(ioSpecification, context) {
    if (!ioSpecification) {
      return;
    }
    forEach$2(ioSpecification.dataInputs, contextual(handleDataInput, context));
    forEach$2(ioSpecification.dataOutputs, contextual(handleDataOutput, context));
  }
  var handleSubProcess = this.handleSubProcess = function handleSubProcess2(subProcess, context) {
    handleFlowElementsContainer(subProcess, context);
    handleArtifacts(subProcess.artifacts, context);
  };
  function handleFlowNode(flowNode, context) {
    var childCtx = visitIfDi(flowNode, context);
    if (is$f(flowNode, "bpmn:SubProcess")) {
      handleSubProcess(flowNode, childCtx || context);
    }
    if (is$f(flowNode, "bpmn:Activity")) {
      handleIoSpecification(flowNode.ioSpecification, context);
    }
    deferred.push(function() {
      forEach$2(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));
      forEach$2(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));
    });
  }
  function handleSequenceFlow(sequenceFlow, context) {
    visitIfDi(sequenceFlow, context);
  }
  function handleDataElement(dataObject, context) {
    visitIfDi(dataObject, context);
  }
  function handleLane(lane, context) {
    deferred.push(function() {
      var newContext = visitIfDi(lane, context);
      if (lane.childLaneSet) {
        handleLaneSet(lane.childLaneSet, newContext || context);
      }
      wireFlowNodeRefs(lane);
    });
  }
  function handleLaneSet(laneSet, context) {
    forEach$2(laneSet.lanes, contextual(handleLane, context));
  }
  function handleLaneSets(laneSets, context) {
    forEach$2(laneSets, contextual(handleLaneSet, context));
  }
  function handleFlowElementsContainer(container, context) {
    handleFlowElements(container.flowElements, context);
    if (container.laneSets) {
      handleLaneSets(container.laneSets, context);
    }
  }
  function handleFlowElements(flowElements, context) {
    forEach$2(flowElements, function(flowElement) {
      if (is$f(flowElement, "bpmn:SequenceFlow")) {
        deferred.push(function() {
          handleSequenceFlow(flowElement, context);
        });
      } else if (is$f(flowElement, "bpmn:BoundaryEvent")) {
        deferred.unshift(function() {
          handleFlowNode(flowElement, context);
        });
      } else if (is$f(flowElement, "bpmn:FlowNode")) {
        handleFlowNode(flowElement, context);
      } else if (is$f(flowElement, "bpmn:DataObject"))
        ;
      else if (is$f(flowElement, "bpmn:DataStoreReference")) {
        handleDataElement(flowElement, context);
      } else if (is$f(flowElement, "bpmn:DataObjectReference")) {
        handleDataElement(flowElement, context);
      } else {
        logError(
          `unrecognized flowElement ${elementToString(flowElement)} in context ${elementToString(context && context.businessObject)}`,
          {
            element: flowElement,
            context
          }
        );
      }
    });
  }
  function handleParticipant(participant, context) {
    var newCtx = visitIfDi(participant, context);
    var process = participant.processRef;
    if (process) {
      handleProcess(process, newCtx || context);
    }
  }
  function handleCollaboration(collaboration, context) {
    forEach$2(collaboration.participants, contextual(handleParticipant, context));
    handleArtifacts(collaboration.artifacts, context);
    deferred.push(function() {
      handleMessageFlows(collaboration.messageFlows, context);
    });
  }
  function wireFlowNodeRefs(lane) {
    forEach$2(lane.flowNodeRef, function(flowNode) {
      var lanes = flowNode.get("lanes");
      if (lanes) {
        lanes.push(lane);
      }
    });
  }
}
function importBpmnDiagram(diagram, definitions, bpmnDiagram) {
  var importer, eventBus, canvas;
  var error2, warnings = [];
  function render(definitions2, bpmnDiagram2) {
    var visitor = {
      root: function(element, di) {
        return importer.add(element, di);
      },
      element: function(element, di, parentShape) {
        return importer.add(element, di, parentShape);
      },
      error: function(message, context) {
        warnings.push({ message, context });
      }
    };
    var walker = new BpmnTreeWalker(visitor);
    bpmnDiagram2 = bpmnDiagram2 || definitions2.diagrams && definitions2.diagrams[0];
    var diagramsToImport = getDiagramsToImport(definitions2, bpmnDiagram2);
    if (!diagramsToImport) {
      throw new Error("no diagram to display");
    }
    forEach$2(diagramsToImport, function(diagram2) {
      walker.handleDefinitions(definitions2, diagram2);
    });
    var rootId = bpmnDiagram2.plane.bpmnElement.id;
    canvas.setRootElement(
      canvas.findRoot(rootId + "_plane") || canvas.findRoot(rootId)
    );
  }
  return new Promise(function(resolve, reject) {
    try {
      importer = diagram.get("bpmnImporter");
      eventBus = diagram.get("eventBus");
      canvas = diagram.get("canvas");
      eventBus.fire("import.render.start", { definitions });
      render(definitions, bpmnDiagram);
      eventBus.fire("import.render.complete", {
        error: error2,
        warnings
      });
      return resolve({ warnings });
    } catch (e2) {
      e2.warnings = warnings;
      return reject(e2);
    }
  });
}
function getDiagramsToImport(definitions, bpmnDiagram) {
  if (!bpmnDiagram) {
    return;
  }
  var bpmnElement = bpmnDiagram.plane.bpmnElement, rootElement = bpmnElement;
  if (!is$g(bpmnElement, "bpmn:Process") && !is$g(bpmnElement, "bpmn:Collaboration")) {
    rootElement = findRootProcess(bpmnElement);
  }
  var collaboration;
  if (is$g(rootElement, "bpmn:Collaboration")) {
    collaboration = rootElement;
  } else {
    collaboration = find$1(definitions.rootElements, function(element) {
      if (!is$g(element, "bpmn:Collaboration")) {
        return;
      }
      return find$1(element.participants, function(participant) {
        return participant.processRef === rootElement;
      });
    });
  }
  var rootElements = [rootElement];
  if (collaboration) {
    rootElements = map$2(collaboration.participants, function(participant) {
      return participant.processRef;
    });
    rootElements.push(collaboration);
  }
  var allChildren = selfAndAllFlowElements(rootElements);
  var diagramsToImport = [bpmnDiagram];
  var handledElements = [bpmnElement];
  forEach$2(definitions.diagrams, function(diagram) {
    var businessObject = diagram.plane.bpmnElement;
    if (allChildren.indexOf(businessObject) !== -1 && handledElements.indexOf(businessObject) === -1) {
      diagramsToImport.push(diagram);
      handledElements.push(businessObject);
    }
  });
  return diagramsToImport;
}
function selfAndAllFlowElements(elements) {
  var result = [];
  forEach$2(elements, function(element) {
    if (!element) {
      return;
    }
    result.push(element);
    result = result.concat(selfAndAllFlowElements(element.flowElements));
  });
  return result;
}
function findRootProcess(element) {
  var parent = element;
  while (parent) {
    if (is$g(parent, "bpmn:Process")) {
      return parent;
    }
    parent = parent.$parent;
  }
}
var BPMNIO_LOGO_SVG = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14.02 5.57" width="53" height="21"><path fill="currentColor" d="M1.88.92v.14c0 .41-.13.68-.4.8.33.14.46.44.46.86v.33c0 .61-.33.95-.95.95H0V0h.95c.65 0 .93.3.93.92zM.63.57v1.06h.24c.24 0 .38-.1.38-.43V.98c0-.28-.1-.4-.32-.4zm0 1.63v1.22h.36c.2 0 .32-.1.32-.39v-.35c0-.37-.12-.48-.4-.48H.63zM4.18.99v.52c0 .64-.31.98-.94.98h-.3V4h-.62V0h.92c.63 0 .94.35.94.99zM2.94.57v1.35h.3c.2 0 .3-.09.3-.37v-.6c0-.29-.1-.38-.3-.38h-.3zm2.89 2.27L6.25 0h.88v4h-.6V1.12L6.1 3.99h-.6l-.46-2.82v2.82h-.55V0h.87zM8.14 1.1V4h-.56V0h.79L9 2.4V0h.56v4h-.64zm2.49 2.29v.6h-.6v-.6zM12.12 1c0-.63.33-1 .95-1 .61 0 .95.37.95 1v2.04c0 .64-.34 1-.95 1-.62 0-.95-.37-.95-1zm.62 2.08c0 .28.13.39.33.39s.32-.1.32-.4V.98c0-.29-.12-.4-.32-.4s-.33.11-.33.4z"/><path fill="currentColor" d="M0 4.53h14.02v1.04H0zM11.08 0h.63v.62h-.63zm.63 4V1h-.63v2.98z"/></svg>';
var BPMNIO_IMG = BPMNIO_LOGO_SVG;
var LOGO_STYLES = {
  verticalAlign: "middle"
};
var LINK_STYLES = {
  "color": "#404040"
};
var LIGHTBOX_STYLES = {
  "zIndex": "1001",
  "position": "fixed",
  "top": "0",
  "left": "0",
  "right": "0",
  "bottom": "0"
};
var BACKDROP_STYLES = {
  "width": "100%",
  "height": "100%",
  "background": "rgba(40,40,40,0.2)"
};
var NOTICE_STYLES = {
  "position": "absolute",
  "left": "50%",
  "top": "40%",
  "transform": "translate(-50%)",
  "width": "260px",
  "padding": "10px",
  "background": "white",
  "boxShadow": "0 1px 4px rgba(0,0,0,0.3)",
  "fontFamily": "Helvetica, Arial, sans-serif",
  "fontSize": "14px",
  "display": "flex",
  "lineHeight": "1.3"
};
var LIGHTBOX_MARKUP = '<div class="bjs-powered-by-lightbox"><div class="backdrop"></div><div class="notice"><a href="https://bpmn.io" target="_blank" rel="noopener" class="link">' + BPMNIO_IMG + '</a><span>Web-based tooling for BPMN, DMN and forms powered by <a href="https://bpmn.io" target="_blank" rel="noopener">bpmn.io</a>.</span></div></div>';
var lightbox;
function createLightbox() {
  lightbox = domify$1(LIGHTBOX_MARKUP);
  assign$1(lightbox, LIGHTBOX_STYLES);
  assign$1(query("svg", lightbox), LOGO_STYLES);
  assign$1(query(".backdrop", lightbox), BACKDROP_STYLES);
  assign$1(query(".notice", lightbox), NOTICE_STYLES);
  assign$1(query(".link", lightbox), LINK_STYLES, {
    "margin": "15px 20px 15px 10px",
    "alignSelf": "center"
  });
}
function open() {
  if (!lightbox) {
    createLightbox();
    delegate.bind(lightbox, ".backdrop", "click", function(event2) {
      document.body.removeChild(lightbox);
    });
  }
  document.body.appendChild(lightbox);
}
function BaseViewer(options) {
  options = assign$2({}, DEFAULT_OPTIONS, options);
  this._moddle = this._createModdle(options);
  this._container = this._createContainer(options);
  addProjectLogo(this._container);
  this._init(this._container, this._moddle, options);
}
e$3(BaseViewer, Diagram);
BaseViewer.prototype.importXML = async function importXML(xml2, bpmnDiagram) {
  const self2 = this;
  function ParseCompleteEvent(data) {
    return self2.get("eventBus").createEvent(data);
  }
  let aggregatedWarnings = [];
  try {
    xml2 = this._emit("import.parse.start", { xml: xml2 }) || xml2;
    let parseResult;
    try {
      parseResult = await this._moddle.fromXML(xml2, "bpmn:Definitions");
    } catch (error2) {
      this._emit("import.parse.complete", {
        error: error2
      });
      throw error2;
    }
    let definitions = parseResult.rootElement;
    const references = parseResult.references;
    const parseWarnings = parseResult.warnings;
    const elementsById = parseResult.elementsById;
    aggregatedWarnings = aggregatedWarnings.concat(parseWarnings);
    definitions = this._emit("import.parse.complete", ParseCompleteEvent({
      error: null,
      definitions,
      elementsById,
      references,
      warnings: aggregatedWarnings
    })) || definitions;
    const importResult = await this.importDefinitions(definitions, bpmnDiagram);
    aggregatedWarnings = aggregatedWarnings.concat(importResult.warnings);
    this._emit("import.done", { error: null, warnings: aggregatedWarnings });
    return { warnings: aggregatedWarnings };
  } catch (err) {
    let error2 = err;
    aggregatedWarnings = aggregatedWarnings.concat(error2.warnings || []);
    addWarningsToError(error2, aggregatedWarnings);
    error2 = checkValidationError(error2);
    this._emit("import.done", { error: error2, warnings: error2.warnings });
    throw error2;
  }
};
BaseViewer.prototype.importDefinitions = async function importDefinitions(definitions, bpmnDiagram) {
  this._setDefinitions(definitions);
  const result = await this.open(bpmnDiagram);
  return { warnings: result.warnings };
};
BaseViewer.prototype.open = async function open2(bpmnDiagramOrId) {
  const definitions = this._definitions;
  let bpmnDiagram = bpmnDiagramOrId;
  if (!definitions) {
    const error2 = new Error("no XML imported");
    addWarningsToError(error2, []);
    throw error2;
  }
  if (typeof bpmnDiagramOrId === "string") {
    bpmnDiagram = findBPMNDiagram(definitions, bpmnDiagramOrId);
    if (!bpmnDiagram) {
      const error2 = new Error("BPMNDiagram <" + bpmnDiagramOrId + "> not found");
      addWarningsToError(error2, []);
      throw error2;
    }
  }
  try {
    this.clear();
  } catch (error2) {
    addWarningsToError(error2, []);
    throw error2;
  }
  const { warnings } = await importBpmnDiagram(this, definitions, bpmnDiagram);
  return { warnings };
};
BaseViewer.prototype.saveXML = async function saveXML(options) {
  options = options || {};
  let definitions = this._definitions, error2, xml2;
  try {
    if (!definitions) {
      throw new Error("no definitions loaded");
    }
    definitions = this._emit("saveXML.start", {
      definitions
    }) || definitions;
    const result2 = await this._moddle.toXML(definitions, options);
    xml2 = result2.xml;
    xml2 = this._emit("saveXML.serialized", {
      xml: xml2
    }) || xml2;
  } catch (err) {
    error2 = err;
  }
  const result = error2 ? { error: error2 } : { xml: xml2 };
  this._emit("saveXML.done", result);
  if (error2) {
    throw error2;
  }
  return result;
};
BaseViewer.prototype.saveSVG = async function saveSVG() {
  this._emit("saveSVG.start");
  let svg, err;
  try {
    const canvas = this.get("canvas");
    const contentNode = canvas.getActiveLayer(), defsNode = query("defs", canvas._svg);
    const contents = innerSVG(contentNode), defs = defsNode ? "<defs>" + innerSVG(defsNode) + "</defs>" : "";
    const bbox = contentNode.getBBox();
    svg = '<?xml version="1.0" encoding="utf-8"?>\n<!-- created with bpmn-js / http://bpmn.io -->\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="' + bbox.width + '" height="' + bbox.height + '" viewBox="' + bbox.x + " " + bbox.y + " " + bbox.width + " " + bbox.height + '" version="1.1">' + defs + contents + "</svg>";
  } catch (e2) {
    err = e2;
  }
  this._emit("saveSVG.done", {
    error: err,
    svg
  });
  if (err) {
    throw err;
  }
  return { svg };
};
BaseViewer.prototype._setDefinitions = function(definitions) {
  this._definitions = definitions;
};
BaseViewer.prototype.getModules = function() {
  return this._modules;
};
BaseViewer.prototype.clear = function() {
  if (!this.getDefinitions()) {
    return;
  }
  Diagram.prototype.clear.call(this);
};
BaseViewer.prototype.destroy = function() {
  Diagram.prototype.destroy.call(this);
  remove$1(this._container);
};
BaseViewer.prototype.on = function(events2, priority, callback, that) {
  return this.get("eventBus").on(events2, priority, callback, that);
};
BaseViewer.prototype.off = function(events2, callback) {
  this.get("eventBus").off(events2, callback);
};
BaseViewer.prototype.attachTo = function(parentNode) {
  if (!parentNode) {
    throw new Error("parentNode required");
  }
  this.detach();
  if (parentNode.get && parentNode.constructor.prototype.jquery) {
    parentNode = parentNode.get(0);
  }
  if (typeof parentNode === "string") {
    parentNode = query(parentNode);
  }
  parentNode.appendChild(this._container);
  this._emit("attach", {});
  this.get("canvas").resized();
};
BaseViewer.prototype.getDefinitions = function() {
  return this._definitions;
};
BaseViewer.prototype.detach = function() {
  const container = this._container, parentNode = container.parentNode;
  if (!parentNode) {
    return;
  }
  this._emit("detach", {});
  parentNode.removeChild(container);
};
BaseViewer.prototype._init = function(container, moddle, options) {
  const baseModules = options.modules || this.getModules(options), additionalModules = options.additionalModules || [], staticModules = [
    {
      bpmnjs: ["value", this],
      moddle: ["value", moddle]
    }
  ];
  const diagramModules = [].concat(staticModules, baseModules, additionalModules);
  const diagramOptions = assign$2(omit$1(options, ["additionalModules"]), {
    canvas: assign$2({}, options.canvas, { container }),
    modules: diagramModules
  });
  Diagram.call(this, diagramOptions);
  if (options && options.container) {
    this.attachTo(options.container);
  }
};
BaseViewer.prototype._emit = function(type, event2) {
  return this.get("eventBus").fire(type, event2);
};
BaseViewer.prototype._createContainer = function(options) {
  const container = domify$1('<div class="bjs-container"></div>');
  assign$1(container, {
    width: ensureUnit(options.width),
    height: ensureUnit(options.height),
    position: options.position
  });
  return container;
};
BaseViewer.prototype._createModdle = function(options) {
  const moddleOptions = assign$2({}, this._moddleExtensions, options.moddleExtensions);
  return new BpmnModdle(moddleOptions);
};
BaseViewer.prototype._modules = [];
function addWarningsToError(err, warningsAry) {
  err.warnings = warningsAry;
  return err;
}
function checkValidationError(err) {
  const pattern = /unparsable content <([^>]+)> detected([\s\S]*)$/;
  const match = pattern.exec(err.message);
  if (match) {
    err.message = "unparsable content <" + match[1] + "> detected; this may indicate an invalid BPMN 2.0 diagram file" + match[2];
  }
  return err;
}
const DEFAULT_OPTIONS = {
  width: "100%",
  height: "100%",
  position: "relative"
};
function ensureUnit(val) {
  return val + (isNumber$1(val) ? "px" : "");
}
function findBPMNDiagram(definitions, diagramId) {
  if (!diagramId) {
    return null;
  }
  return find$1(definitions.diagrams, function(element) {
    return element.id === diagramId;
  }) || null;
}
function addProjectLogo(container) {
  const img = BPMNIO_IMG;
  const linkMarkup = '<a href="http://bpmn.io" target="_blank" class="bjs-powered-by" title="Powered by bpmn.io" >' + img + "</a>";
  const linkElement = domify$1(linkMarkup);
  assign$1(query("svg", linkElement), LOGO_STYLES);
  assign$1(linkElement, LINK_STYLES, {
    position: "absolute",
    bottom: "15px",
    right: "15px",
    zIndex: "100"
  });
  container.appendChild(linkElement);
  event.bind(linkElement, "click", function(event2) {
    open();
    event2.preventDefault();
  });
}
function BaseModeler(options) {
  BaseViewer.call(this, options);
  this.on("import.parse.complete", function(event2) {
    if (!event2.error) {
      this._collectIds(event2.definitions, event2.elementsById);
    }
  }, this);
  this.on("diagram.destroy", function() {
    this.get("moddle").ids.clear();
  }, this);
}
e$3(BaseModeler, BaseViewer);
BaseModeler.prototype._createModdle = function(options) {
  var moddle = BaseViewer.prototype._createModdle.call(this, options);
  moddle.ids = new Ids([32, 36, 1]);
  return moddle;
};
BaseModeler.prototype._collectIds = function(definitions, elementsById) {
  var moddle = definitions.$model, ids2 = moddle.ids, id;
  ids2.clear();
  for (id in elementsById) {
    ids2.claim(id, elementsById[id]);
  }
};
var DEFAULT_RENDER_PRIORITY = 1e3;
function BaseRenderer(eventBus, renderPriority) {
  var self2 = this;
  renderPriority = renderPriority || DEFAULT_RENDER_PRIORITY;
  eventBus.on(["render.shape", "render.connection"], renderPriority, function(evt, context) {
    var type = evt.type, element = context.element, visuals = context.gfx, attrs = context.attrs;
    if (self2.canRender(element)) {
      if (type === "render.shape") {
        return self2.drawShape(visuals, element, attrs);
      } else {
        return self2.drawConnection(visuals, element, attrs);
      }
    }
  });
  eventBus.on(["render.getShapePath", "render.getConnectionPath"], renderPriority, function(evt, element) {
    if (self2.canRender(element)) {
      if (evt.type === "render.getShapePath") {
        return self2.getShapePath(element);
      } else {
        return self2.getConnectionPath(element);
      }
    }
  });
}
BaseRenderer.prototype.canRender = function(element) {
};
BaseRenderer.prototype.drawShape = function(visuals, shape) {
};
BaseRenderer.prototype.drawConnection = function(visuals, connection) {
};
BaseRenderer.prototype.getShapePath = function(shape) {
};
BaseRenderer.prototype.getConnectionPath = function(connection) {
};
function isExpanded(element, di) {
  if (is$g(element, "bpmn:CallActivity")) {
    return false;
  }
  if (is$g(element, "bpmn:SubProcess")) {
    di = di || getDi(element);
    if (di && is$g(di, "bpmndi:BPMNPlane")) {
      return true;
    }
    return di && !!di.isExpanded;
  }
  if (is$g(element, "bpmn:Participant")) {
    return !!getBusinessObject(element).processRef;
  }
  return true;
}
function isHorizontal$3(element) {
  if (!is$g(element, "bpmn:Participant") && !is$g(element, "bpmn:Lane")) {
    return void 0;
  }
  var isHorizontal2 = getDi(element).isHorizontal;
  if (isHorizontal2 === void 0) {
    return true;
  }
  return isHorizontal2;
}
function isInterrupting(element) {
  return element && getBusinessObject(element).isInterrupting !== false;
}
function isEventSubProcess(element) {
  return element && !!getBusinessObject(element).triggeredByEvent;
}
function hasEventDefinition$2(element, eventType) {
  var eventDefinitions = getBusinessObject(element).eventDefinitions;
  return some$1(eventDefinitions, function(event2) {
    return is$g(event2, eventType);
  });
}
function hasErrorEventDefinition(element) {
  return hasEventDefinition$2(element, "bpmn:ErrorEventDefinition");
}
function hasEscalationEventDefinition(element) {
  return hasEventDefinition$2(element, "bpmn:EscalationEventDefinition");
}
function hasCompensateEventDefinition(element) {
  return hasEventDefinition$2(element, "bpmn:CompensateEventDefinition");
}
function isConnection(value) {
  return isObject$1(value) && has$2(value, "waypoints");
}
function isLabel(value) {
  return isObject$1(value) && has$2(value, "labelTarget");
}
var DEFAULT_LABEL_SIZE$1 = {
  width: 90,
  height: 20
};
var FLOW_LABEL_INDENT = 15;
function isLabelExternal(semantic) {
  return is$g(semantic, "bpmn:Event") || is$g(semantic, "bpmn:Gateway") || is$g(semantic, "bpmn:DataStoreReference") || is$g(semantic, "bpmn:DataObjectReference") || is$g(semantic, "bpmn:DataInput") || is$g(semantic, "bpmn:DataOutput") || is$g(semantic, "bpmn:SequenceFlow") || is$g(semantic, "bpmn:MessageFlow") || is$g(semantic, "bpmn:Group");
}
function hasExternalLabel(element) {
  return isLabel(element.label);
}
function getFlowLabelPosition(waypoints) {
  var mid2 = waypoints.length / 2 - 1;
  var first = waypoints[Math.floor(mid2)];
  var second = waypoints[Math.ceil(mid2 + 0.01)];
  var position = getWaypointsMid(waypoints);
  var angle = Math.atan((second.y - first.y) / (second.x - first.x));
  var x2 = position.x, y2 = position.y;
  if (Math.abs(angle) < Math.PI / 2) {
    y2 -= FLOW_LABEL_INDENT;
  } else {
    x2 += FLOW_LABEL_INDENT;
  }
  return { x: x2, y: y2 };
}
function getWaypointsMid(waypoints) {
  var mid2 = waypoints.length / 2 - 1;
  var first = waypoints[Math.floor(mid2)];
  var second = waypoints[Math.ceil(mid2 + 0.01)];
  return {
    x: first.x + (second.x - first.x) / 2,
    y: first.y + (second.y - first.y) / 2
  };
}
function getExternalLabelMid(element) {
  if (element.waypoints) {
    return getFlowLabelPosition(element.waypoints);
  } else if (is$g(element, "bpmn:Group")) {
    return {
      x: element.x + element.width / 2,
      y: element.y + DEFAULT_LABEL_SIZE$1.height / 2
    };
  } else {
    return {
      x: element.x + element.width / 2,
      y: element.y + element.height + DEFAULT_LABEL_SIZE$1.height / 2
    };
  }
}
function getExternalLabelBounds(di, element) {
  var mid2, size2, bounds, label = di.label;
  if (label && label.bounds) {
    bounds = label.bounds;
    size2 = {
      width: Math.max(DEFAULT_LABEL_SIZE$1.width, bounds.width),
      height: bounds.height
    };
    mid2 = {
      x: bounds.x + bounds.width / 2,
      y: bounds.y + bounds.height / 2
    };
  } else {
    mid2 = getExternalLabelMid(element);
    size2 = DEFAULT_LABEL_SIZE$1;
  }
  return assign$2({
    x: mid2.x - size2.width / 2,
    y: mid2.y - size2.height / 2
  }, size2);
}
function getLabelAttr(semantic) {
  if (is$g(semantic, "bpmn:FlowElement") || is$g(semantic, "bpmn:Participant") || is$g(semantic, "bpmn:Lane") || is$g(semantic, "bpmn:SequenceFlow") || is$g(semantic, "bpmn:MessageFlow") || is$g(semantic, "bpmn:DataInput") || is$g(semantic, "bpmn:DataOutput")) {
    return "name";
  }
  if (is$g(semantic, "bpmn:TextAnnotation")) {
    return "text";
  }
  if (is$g(semantic, "bpmn:Group")) {
    return "categoryValueRef";
  }
}
function getCategoryValue(semantic) {
  var categoryValueRef = semantic["categoryValueRef"];
  if (!categoryValueRef) {
    return "";
  }
  return categoryValueRef.value || "";
}
function getLabel(element) {
  var semantic = element.businessObject, attr2 = getLabelAttr(semantic);
  if (attr2) {
    if (attr2 === "categoryValueRef") {
      return getCategoryValue(semantic);
    }
    return semantic[attr2] || "";
  }
}
function setLabel(element, text) {
  var semantic = element.businessObject, attr2 = getLabelAttr(semantic);
  if (attr2) {
    if (attr2 === "categoryValueRef") {
      semantic["categoryValueRef"].value = text;
    } else {
      semantic[attr2] = text;
    }
  }
  return element;
}
function componentsToPath(elements) {
  return elements.flat().join(",").replace(/,?([A-z]),?/g, "$1");
}
function move(point) {
  return ["M", point.x, point.y];
}
function lineTo(point) {
  return ["L", point.x, point.y];
}
function curveTo(p1, p2, p3) {
  return ["C", p1.x, p1.y, p2.x, p2.y, p3.x, p3.y];
}
function drawPath(waypoints, cornerRadius) {
  const pointCount = waypoints.length;
  const path = [move(waypoints[0])];
  for (let i2 = 1; i2 < pointCount; i2++) {
    const pointBefore = waypoints[i2 - 1];
    const point = waypoints[i2];
    const pointAfter = waypoints[i2 + 1];
    if (!pointAfter || !cornerRadius) {
      path.push(lineTo(point));
      continue;
    }
    const effectiveRadius = Math.min(
      cornerRadius,
      vectorLength$1(point.x - pointBefore.x, point.y - pointBefore.y),
      vectorLength$1(pointAfter.x - point.x, pointAfter.y - point.y)
    );
    if (!effectiveRadius) {
      path.push(lineTo(point));
      continue;
    }
    const beforePoint = getPointAtLength(point, pointBefore, effectiveRadius);
    const beforePoint2 = getPointAtLength(point, pointBefore, effectiveRadius * 0.5);
    const afterPoint = getPointAtLength(point, pointAfter, effectiveRadius);
    const afterPoint2 = getPointAtLength(point, pointAfter, effectiveRadius * 0.5);
    path.push(lineTo(beforePoint));
    path.push(curveTo(beforePoint2, afterPoint2, afterPoint));
  }
  return path;
}
function getPointAtLength(start, end, length2) {
  const deltaX = end.x - start.x;
  const deltaY = end.y - start.y;
  const totalLength = vectorLength$1(deltaX, deltaY);
  const percent = length2 / totalLength;
  return {
    x: start.x + deltaX * percent,
    y: start.y + deltaY * percent
  };
}
function vectorLength$1(x2, y2) {
  return Math.sqrt(Math.pow(x2, 2) + Math.pow(y2, 2));
}
function createLine(points, attrs, radius) {
  if (isNumber$1(attrs)) {
    radius = attrs;
    attrs = null;
  }
  if (!attrs) {
    attrs = {};
  }
  const line = create$1("path", attrs);
  if (isNumber$1(radius)) {
    line.dataset.cornerRadius = String(radius);
  }
  return updateLine(line, points);
}
function updateLine(gfx, points) {
  const cornerRadius = parseInt(gfx.dataset.cornerRadius, 10) || 0;
  attr(gfx, {
    d: componentsToPath(drawPath(points, cornerRadius))
  });
  return gfx;
}
var black = "hsl(225, 10%, 15%)";
var white = "white";
function isTypedEvent(event2, eventDefinitionType) {
  return some$1(event2.eventDefinitions, function(definition) {
    return definition.$type === eventDefinitionType;
  });
}
function isThrowEvent(event2) {
  return event2.$type === "bpmn:IntermediateThrowEvent" || event2.$type === "bpmn:EndEvent";
}
function isCollection(element) {
  var dataObject = element.dataObjectRef;
  return element.isCollection || dataObject && dataObject.isCollection;
}
function getFillColor(element, defaultColor, overrideColor) {
  var di = getDi(element);
  return overrideColor || di.get("color:background-color") || di.get("bioc:fill") || defaultColor || white;
}
function getStrokeColor$1(element, defaultColor, overrideColor) {
  var di = getDi(element);
  return overrideColor || di.get("color:border-color") || di.get("bioc:stroke") || defaultColor || black;
}
function getLabelColor(element, defaultColor, defaultStrokeColor, overrideColor) {
  var di = getDi(element), label = di.get("label");
  return overrideColor || label && label.get("color:color") || defaultColor || getStrokeColor$1(element, defaultStrokeColor);
}
function getCirclePath(shape) {
  var cx = shape.x + shape.width / 2, cy = shape.y + shape.height / 2, radius = shape.width / 2;
  var circlePath2 = [
    ["M", cx, cy],
    ["m", 0, -radius],
    ["a", radius, radius, 0, 1, 1, 0, 2 * radius],
    ["a", radius, radius, 0, 1, 1, 0, -2 * radius],
    ["z"]
  ];
  return componentsToPath(circlePath2);
}
function getRoundRectPath(shape, borderRadius) {
  var x2 = shape.x, y2 = shape.y, width = shape.width, height = shape.height;
  var roundRectPath = [
    ["M", x2 + borderRadius, y2],
    ["l", width - borderRadius * 2, 0],
    ["a", borderRadius, borderRadius, 0, 0, 1, borderRadius, borderRadius],
    ["l", 0, height - borderRadius * 2],
    ["a", borderRadius, borderRadius, 0, 0, 1, -borderRadius, borderRadius],
    ["l", borderRadius * 2 - width, 0],
    ["a", borderRadius, borderRadius, 0, 0, 1, -borderRadius, -borderRadius],
    ["l", 0, borderRadius * 2 - height],
    ["a", borderRadius, borderRadius, 0, 0, 1, borderRadius, -borderRadius],
    ["z"]
  ];
  return componentsToPath(roundRectPath);
}
function getDiamondPath(shape) {
  var width = shape.width, height = shape.height, x2 = shape.x, y2 = shape.y, halfWidth = width / 2, halfHeight = height / 2;
  var diamondPath = [
    ["M", x2 + halfWidth, y2],
    ["l", halfWidth, halfHeight],
    ["l", -halfWidth, halfHeight],
    ["l", -halfWidth, -halfHeight],
    ["z"]
  ];
  return componentsToPath(diamondPath);
}
function getRectPath(shape) {
  var x2 = shape.x, y2 = shape.y, width = shape.width, height = shape.height;
  var rectPath = [
    ["M", x2, y2],
    ["l", width, 0],
    ["l", 0, height],
    ["l", -width, 0],
    ["z"]
  ];
  return componentsToPath(rectPath);
}
function getBounds$1(bounds, overrides = {}) {
  return {
    width: getWidth(bounds, overrides),
    height: getHeight(bounds, overrides)
  };
}
function getWidth(bounds, overrides = {}) {
  return has$2(overrides, "width") ? overrides.width : bounds.width;
}
function getHeight(bounds, overrides = {}) {
  return has$2(overrides, "height") ? overrides.height : bounds.height;
}
function transform(gfx, x2, y2, angle, amount) {
  var translate2 = createTransform();
  translate2.setTranslate(x2, y2);
  var rotate2 = createTransform();
  rotate2.setRotate(angle || 0, 0, 0);
  var scale = createTransform();
  scale.setScale(1, 1);
  transform$1(gfx, [translate2, rotate2, scale]);
}
function translate$2(gfx, x2, y2) {
  var translate2 = createTransform();
  translate2.setTranslate(x2, y2);
  transform$1(gfx, translate2);
}
function rotate(gfx, angle) {
  var rotate2 = createTransform();
  rotate2.setRotate(angle, 0, 0);
  transform$1(gfx, rotate2);
}
var rendererIds = new Ids();
var ELEMENT_LABEL_DISTANCE$1 = 10, INNER_OUTER_DIST = 3, PARTICIPANT_STROKE_WIDTH = 1.5, TASK_BORDER_RADIUS = 10;
var DEFAULT_OPACITY = 0.95, FULL_OPACITY = 1, LOW_OPACITY = 0.25;
function BpmnRenderer(config2, eventBus, styles, pathMap, canvas, textRenderer, priority) {
  BaseRenderer.call(this, eventBus, priority);
  var defaultFillColor = config2 && config2.defaultFillColor, defaultStrokeColor = config2 && config2.defaultStrokeColor, defaultLabelColor = config2 && config2.defaultLabelColor;
  var rendererId = rendererIds.next();
  var markers = {};
  function shapeStyle(attrs) {
    return styles.computeStyle(attrs, {
      strokeLinecap: "round",
      strokeLinejoin: "round",
      stroke: black,
      strokeWidth: 2,
      fill: "white"
    });
  }
  function lineStyle(attrs) {
    return styles.computeStyle(attrs, ["no-fill"], {
      strokeLinecap: "round",
      strokeLinejoin: "round",
      stroke: black,
      strokeWidth: 2
    });
  }
  function addMarker(id, options) {
    var {
      ref: ref2 = { x: 0, y: 0 },
      scale = 1,
      element
    } = options;
    var marker2 = create$1("marker", {
      id,
      viewBox: "0 0 20 20",
      refX: ref2.x,
      refY: ref2.y,
      markerWidth: 20 * scale,
      markerHeight: 20 * scale,
      orient: "auto"
    });
    append(marker2, element);
    var defs = query("defs", canvas._svg);
    if (!defs) {
      defs = create$1("defs");
      append(canvas._svg, defs);
    }
    append(defs, marker2);
    markers[id] = marker2;
  }
  function colorEscape(str) {
    return str.replace(/[^0-9a-zA-Z]+/g, "_");
  }
  function marker(type, fill, stroke) {
    var id = type + "-" + colorEscape(fill) + "-" + colorEscape(stroke) + "-" + rendererId;
    if (!markers[id]) {
      createMarker(id, type, fill, stroke);
    }
    return "url(#" + id + ")";
  }
  function createMarker(id, type, fill, stroke) {
    if (type === "sequenceflow-end") {
      var sequenceflowEnd = create$1("path", {
        d: "M 1 5 L 11 10 L 1 15 Z",
        ...shapeStyle({
          fill: stroke,
          stroke,
          strokeWidth: 1
        })
      });
      addMarker(id, {
        element: sequenceflowEnd,
        ref: { x: 11, y: 10 },
        scale: 0.5
      });
    }
    if (type === "messageflow-start") {
      var messageflowStart = create$1("circle", {
        cx: 6,
        cy: 6,
        r: 3.5,
        ...shapeStyle({
          fill,
          stroke,
          strokeWidth: 1,
          // fix for safari / chrome / firefox bug not correctly
          // resetting stroke dash array
          strokeDasharray: [1e4, 1]
        })
      });
      addMarker(id, {
        element: messageflowStart,
        ref: { x: 6, y: 6 }
      });
    }
    if (type === "messageflow-end") {
      var messageflowEnd = create$1("path", {
        d: "m 1 5 l 0 -3 l 7 3 l -7 3 z",
        ...shapeStyle({
          fill,
          stroke,
          strokeWidth: 1,
          // fix for safari / chrome / firefox bug not correctly
          // resetting stroke dash array
          strokeDasharray: [1e4, 1]
        })
      });
      addMarker(id, {
        element: messageflowEnd,
        ref: { x: 8.5, y: 5 }
      });
    }
    if (type === "association-start") {
      var associationStart = create$1("path", {
        d: "M 11 5 L 1 10 L 11 15",
        ...lineStyle({
          fill: "none",
          stroke,
          strokeWidth: 1.5,
          // fix for safari / chrome / firefox bug not correctly
          // resetting stroke dash array
          strokeDasharray: [1e4, 1]
        })
      });
      addMarker(id, {
        element: associationStart,
        ref: { x: 1, y: 10 },
        scale: 0.5
      });
    }
    if (type === "association-end") {
      var associationEnd = create$1("path", {
        d: "M 1 5 L 11 10 L 1 15",
        ...lineStyle({
          fill: "none",
          stroke,
          strokeWidth: 1.5,
          // fix for safari / chrome / firefox bug not correctly
          // resetting stroke dash array
          strokeDasharray: [1e4, 1]
        })
      });
      addMarker(id, {
        element: associationEnd,
        ref: { x: 11, y: 10 },
        scale: 0.5
      });
    }
    if (type === "conditional-flow-marker") {
      var conditionalFlowMarker = create$1("path", {
        d: "M 0 10 L 8 6 L 16 10 L 8 14 Z",
        ...shapeStyle({
          fill,
          stroke
        })
      });
      addMarker(id, {
        element: conditionalFlowMarker,
        ref: { x: -1, y: 10 },
        scale: 0.5
      });
    }
    if (type === "conditional-default-flow-marker") {
      var defaultFlowMarker = create$1("path", {
        d: "M 6 4 L 10 16",
        ...shapeStyle({
          stroke
        })
      });
      addMarker(id, {
        element: defaultFlowMarker,
        ref: { x: 0, y: 10 },
        scale: 0.5
      });
    }
  }
  function drawCircle(parentGfx, width, height, offset, attrs = {}) {
    if (isObject$1(offset)) {
      attrs = offset;
      offset = 0;
    }
    offset = offset || 0;
    attrs = shapeStyle(attrs);
    var cx = width / 2, cy = height / 2;
    var circle = create$1("circle", {
      cx,
      cy,
      r: Math.round((width + height) / 4 - offset),
      ...attrs
    });
    append(parentGfx, circle);
    return circle;
  }
  function drawRect(parentGfx, width, height, r2, offset, attrs) {
    if (isObject$1(offset)) {
      attrs = offset;
      offset = 0;
    }
    offset = offset || 0;
    attrs = shapeStyle(attrs);
    var rect = create$1("rect", {
      x: offset,
      y: offset,
      width: width - offset * 2,
      height: height - offset * 2,
      rx: r2,
      ry: r2,
      ...attrs
    });
    append(parentGfx, rect);
    return rect;
  }
  function drawDiamond(parentGfx, width, height, attrs) {
    var x_2 = width / 2;
    var y_2 = height / 2;
    var points = [
      { x: x_2, y: 0 },
      { x: width, y: y_2 },
      { x: x_2, y: height },
      { x: 0, y: y_2 }
    ];
    var pointsString = points.map(function(point) {
      return point.x + "," + point.y;
    }).join(" ");
    attrs = shapeStyle(attrs);
    var polygon = create$1("polygon", {
      ...attrs,
      points: pointsString
    });
    append(parentGfx, polygon);
    return polygon;
  }
  function drawLine(parentGfx, waypoints, attrs, radius) {
    attrs = lineStyle(attrs);
    var line = createLine(waypoints, attrs, radius);
    append(parentGfx, line);
    return line;
  }
  function drawConnectionSegments(parentGfx, waypoints, attrs) {
    return drawLine(parentGfx, waypoints, attrs, 5);
  }
  function drawPath2(parentGfx, d2, attrs) {
    attrs = lineStyle(attrs);
    var path = create$1("path", {
      ...attrs,
      d: d2
    });
    append(parentGfx, path);
    return path;
  }
  function drawMarker(type, parentGfx, path, attrs) {
    return drawPath2(parentGfx, path, assign$2({ "data-marker": type }, attrs));
  }
  function renderer(type) {
    return handlers[type];
  }
  function as(type) {
    return function(parentGfx, element, attrs) {
      return renderer(type)(parentGfx, element, attrs);
    };
  }
  var eventIconRenderers = {
    "bpmn:MessageEventDefinition": function(parentGfx, element, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_MESSAGE", {
        xScaleFactor: 0.9,
        yScaleFactor: 0.9,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0.235,
          my: 0.315
        }
      });
      var fill = isThrowing ? getStrokeColor$1(element, defaultStrokeColor, attrs.stroke) : getFillColor(element, defaultFillColor, attrs.fill);
      var stroke = isThrowing ? getFillColor(element, defaultFillColor, attrs.fill) : getStrokeColor$1(element, defaultStrokeColor, attrs.stroke);
      var messagePath = drawPath2(parentGfx, pathData, {
        fill,
        stroke,
        strokeWidth: 1
      });
      return messagePath;
    },
    "bpmn:TimerEventDefinition": function(parentGfx, element, attrs = {}) {
      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 2
      });
      var pathData = pathMap.getScaledPath("EVENT_TIMER_WH", {
        xScaleFactor: 0.75,
        yScaleFactor: 0.75,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0.5,
          my: 0.5
        }
      });
      drawPath2(parentGfx, pathData, {
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 2
      });
      for (var i2 = 0; i2 < 12; i2++) {
        var linePathData = pathMap.getScaledPath("EVENT_TIMER_LINE", {
          xScaleFactor: 0.75,
          yScaleFactor: 0.75,
          containerWidth: element.width,
          containerHeight: element.height,
          position: {
            mx: 0.5,
            my: 0.5
          }
        });
        var width = element.width / 2, height = element.height / 2;
        drawPath2(parentGfx, linePathData, {
          strokeWidth: 1,
          stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
          transform: "rotate(" + i2 * 30 + "," + height + "," + width + ")"
        });
      }
      return circle;
    },
    "bpmn:EscalationEventDefinition": function(parentGfx, event2, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_ESCALATION", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.5,
          my: 0.2
        }
      });
      var fill = isThrowing ? getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke) : getFillColor(event2, defaultFillColor, attrs.fill);
      return drawPath2(parentGfx, pathData, {
        fill,
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
    },
    "bpmn:ConditionalEventDefinition": function(parentGfx, event2, attrs = {}) {
      var pathData = pathMap.getScaledPath("EVENT_CONDITIONAL", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.5,
          my: 0.222
        }
      });
      return drawPath2(parentGfx, pathData, {
        fill: getFillColor(event2, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
    },
    "bpmn:LinkEventDefinition": function(parentGfx, event2, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_LINK", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.57,
          my: 0.263
        }
      });
      var fill = isThrowing ? getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke) : getFillColor(event2, defaultFillColor, attrs.fill);
      return drawPath2(parentGfx, pathData, {
        fill,
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
    },
    "bpmn:ErrorEventDefinition": function(parentGfx, event2, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_ERROR", {
        xScaleFactor: 1.1,
        yScaleFactor: 1.1,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.2,
          my: 0.722
        }
      });
      var fill = isThrowing ? getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke) : getFillColor(event2, defaultFillColor, attrs.fill);
      return drawPath2(parentGfx, pathData, {
        fill,
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
    },
    "bpmn:CancelEventDefinition": function(parentGfx, event2, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_CANCEL_45", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.638,
          my: -0.055
        }
      });
      var fill = isThrowing ? getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke) : "none";
      var path = drawPath2(parentGfx, pathData, {
        fill,
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      rotate(path, 45);
      return path;
    },
    "bpmn:CompensateEventDefinition": function(parentGfx, event2, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_COMPENSATION", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.22,
          my: 0.5
        }
      });
      var fill = isThrowing ? getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke) : getFillColor(event2, defaultFillColor, attrs.fill);
      return drawPath2(parentGfx, pathData, {
        fill,
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
    },
    "bpmn:SignalEventDefinition": function(parentGfx, event2, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_SIGNAL", {
        xScaleFactor: 0.9,
        yScaleFactor: 0.9,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.5,
          my: 0.2
        }
      });
      var fill = isThrowing ? getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke) : getFillColor(event2, defaultFillColor, attrs.fill);
      return drawPath2(parentGfx, pathData, {
        strokeWidth: 1,
        fill,
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke)
      });
    },
    "bpmn:MultipleEventDefinition": function(parentGfx, event2, attrs = {}, isThrowing) {
      var pathData = pathMap.getScaledPath("EVENT_MULTIPLE", {
        xScaleFactor: 1.1,
        yScaleFactor: 1.1,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.222,
          my: 0.36
        }
      });
      var fill = isThrowing ? getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke) : getFillColor(event2, defaultFillColor, attrs.fill);
      return drawPath2(parentGfx, pathData, {
        fill,
        strokeWidth: 1
      });
    },
    "bpmn:ParallelMultipleEventDefinition": function(parentGfx, event2, attrs = {}) {
      var pathData = pathMap.getScaledPath("EVENT_PARALLEL_MULTIPLE", {
        xScaleFactor: 1.2,
        yScaleFactor: 1.2,
        containerWidth: event2.width,
        containerHeight: event2.height,
        position: {
          mx: 0.458,
          my: 0.194
        }
      });
      return drawPath2(parentGfx, pathData, {
        fill: getFillColor(event2, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(event2, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
    },
    "bpmn:TerminateEventDefinition": function(parentGfx, element, attrs = {}) {
      var circle = drawCircle(parentGfx, element.width, element.height, 8, {
        fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 4
      });
      return circle;
    }
  };
  function renderEventIcon(element, parentGfx, attrs = {}) {
    var semantic = getBusinessObject(element), isThrowing = isThrowEvent(semantic);
    if (semantic.get("eventDefinitions") && semantic.get("eventDefinitions").length > 1) {
      if (semantic.get("parallelMultiple")) {
        return eventIconRenderers["bpmn:ParallelMultipleEventDefinition"](parentGfx, element, attrs, isThrowing);
      } else {
        return eventIconRenderers["bpmn:MultipleEventDefinition"](parentGfx, element, attrs, isThrowing);
      }
    }
    if (isTypedEvent(semantic, "bpmn:MessageEventDefinition")) {
      return eventIconRenderers["bpmn:MessageEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:TimerEventDefinition")) {
      return eventIconRenderers["bpmn:TimerEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:ConditionalEventDefinition")) {
      return eventIconRenderers["bpmn:ConditionalEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:SignalEventDefinition")) {
      return eventIconRenderers["bpmn:SignalEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:EscalationEventDefinition")) {
      return eventIconRenderers["bpmn:EscalationEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:LinkEventDefinition")) {
      return eventIconRenderers["bpmn:LinkEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:ErrorEventDefinition")) {
      return eventIconRenderers["bpmn:ErrorEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:CancelEventDefinition")) {
      return eventIconRenderers["bpmn:CancelEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:CompensateEventDefinition")) {
      return eventIconRenderers["bpmn:CompensateEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    if (isTypedEvent(semantic, "bpmn:TerminateEventDefinition")) {
      return eventIconRenderers["bpmn:TerminateEventDefinition"](parentGfx, element, attrs, isThrowing);
    }
    return null;
  }
  var taskMarkerRenderers = {
    "ParticipantMultiplicityMarker": function(parentGfx, element, attrs = {}) {
      var width = getWidth(element, attrs), height = getHeight(element, attrs);
      var markerPath = pathMap.getScaledPath("MARKER_PARALLEL", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: width,
        containerHeight: height,
        position: {
          mx: (width / 2 - 6) / width,
          my: (height - 15) / height
        }
      });
      drawMarker("participant-multiplicity", parentGfx, markerPath, {
        strokeWidth: 2,
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
    },
    "SubProcessMarker": function(parentGfx, element, attrs = {}) {
      var markerRect = drawRect(parentGfx, 14, 14, 0, {
        strokeWidth: 1,
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
      translate$2(markerRect, element.width / 2 - 7.5, element.height - 20);
      var markerPath = pathMap.getScaledPath("MARKER_SUB_PROCESS", {
        xScaleFactor: 1.5,
        yScaleFactor: 1.5,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: (element.width / 2 - 7.5) / element.width,
          my: (element.height - 20) / element.height
        }
      });
      drawMarker("sub-process", parentGfx, markerPath, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
    },
    "ParallelMarker": function(parentGfx, element, attrs) {
      var width = getWidth(element, attrs), height = getHeight(element, attrs);
      var markerPath = pathMap.getScaledPath("MARKER_PARALLEL", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: width,
        containerHeight: height,
        position: {
          mx: (width / 2 + attrs.parallel) / width,
          my: (height - 20) / height
        }
      });
      drawMarker("parallel", parentGfx, markerPath, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
    },
    "SequentialMarker": function(parentGfx, element, attrs) {
      var markerPath = pathMap.getScaledPath("MARKER_SEQUENTIAL", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: (element.width / 2 + attrs.seq) / element.width,
          my: (element.height - 19) / element.height
        }
      });
      drawMarker("sequential", parentGfx, markerPath, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
    },
    "CompensationMarker": function(parentGfx, element, attrs) {
      var markerMath = pathMap.getScaledPath("MARKER_COMPENSATION", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: (element.width / 2 + attrs.compensation) / element.width,
          my: (element.height - 13) / element.height
        }
      });
      drawMarker("compensation", parentGfx, markerMath, {
        strokeWidth: 1,
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
    },
    "LoopMarker": function(parentGfx, element, attrs) {
      var width = getWidth(element, attrs), height = getHeight(element, attrs);
      var markerPath = pathMap.getScaledPath("MARKER_LOOP", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: width,
        containerHeight: height,
        position: {
          mx: (width / 2 + attrs.loop) / width,
          my: (height - 7) / height
        }
      });
      drawMarker("loop", parentGfx, markerPath, {
        strokeWidth: 1.5,
        fill: "none",
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeMiterlimit: 0.5
      });
    },
    "AdhocMarker": function(parentGfx, element, attrs) {
      var width = getWidth(element, attrs), height = getHeight(element, attrs);
      var markerPath = pathMap.getScaledPath("MARKER_ADHOC", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: width,
        containerHeight: height,
        position: {
          mx: (width / 2 + attrs.adhoc) / width,
          my: (height - 15) / height
        }
      });
      drawMarker("adhoc", parentGfx, markerPath, {
        strokeWidth: 1,
        fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
    }
  };
  function renderTaskMarker(type, parentGfx, element, attrs) {
    taskMarkerRenderers[type](parentGfx, element, attrs);
  }
  function renderTaskMarkers(parentGfx, element, taskMarkers, attrs = {}) {
    attrs = {
      fill: attrs.fill,
      stroke: attrs.stroke,
      width: getWidth(element, attrs),
      height: getHeight(element, attrs)
    };
    var semantic = getBusinessObject(element);
    var subprocess = taskMarkers && taskMarkers.includes("SubProcessMarker");
    if (subprocess) {
      attrs = {
        ...attrs,
        seq: -21,
        parallel: -22,
        compensation: -42,
        loop: -18,
        adhoc: 10
      };
    } else {
      attrs = {
        ...attrs,
        seq: -5,
        parallel: -6,
        compensation: -27,
        loop: 0,
        adhoc: 10
      };
    }
    forEach$2(taskMarkers, function(marker2) {
      renderTaskMarker(marker2, parentGfx, element, attrs);
    });
    if (semantic.get("isForCompensation")) {
      renderTaskMarker("CompensationMarker", parentGfx, element, attrs);
    }
    if (is$g(semantic, "bpmn:AdHocSubProcess")) {
      renderTaskMarker("AdhocMarker", parentGfx, element, attrs);
    }
    var loopCharacteristics = semantic.get("loopCharacteristics"), isSequential = loopCharacteristics && loopCharacteristics.get("isSequential");
    if (loopCharacteristics) {
      if (isSequential === void 0) {
        renderTaskMarker("LoopMarker", parentGfx, element, attrs);
      }
      if (isSequential === false) {
        renderTaskMarker("ParallelMarker", parentGfx, element, attrs);
      }
      if (isSequential === true) {
        renderTaskMarker("SequentialMarker", parentGfx, element, attrs);
      }
    }
  }
  function renderLabel(parentGfx, label, attrs = {}) {
    attrs = assign$2({
      size: {
        width: 100
      }
    }, attrs);
    var text = textRenderer.createText(label || "", attrs);
    classes(text).add("djs-label");
    append(parentGfx, text);
    return text;
  }
  function renderEmbeddedLabel(parentGfx, element, align, attrs = {}) {
    var semantic = getBusinessObject(element);
    var box = getBounds$1({
      x: element.x,
      y: element.y,
      width: element.width,
      height: element.height
    }, attrs);
    return renderLabel(parentGfx, semantic.name, {
      align,
      box,
      padding: 7,
      style: {
        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)
      }
    });
  }
  function renderExternalLabel(parentGfx, element, attrs = {}) {
    var box = {
      width: 90,
      height: 30,
      x: element.width / 2 + element.x,
      y: element.height / 2 + element.y
    };
    return renderLabel(parentGfx, getLabel(element), {
      box,
      fitBox: true,
      style: assign$2(
        {},
        textRenderer.getExternalStyle(),
        {
          fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)
        }
      )
    });
  }
  function renderLaneLabel(parentGfx, text, element, attrs = {}) {
    var isHorizontalLane = isHorizontal$3(element);
    var textBox = renderLabel(parentGfx, text, {
      box: {
        height: 30,
        width: isHorizontalLane ? getHeight(element, attrs) : getWidth(element, attrs)
      },
      align: "center-middle",
      style: {
        fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)
      }
    });
    if (isHorizontalLane) {
      var top = -1 * getHeight(element, attrs);
      transform(textBox, 0, -top, 270);
    }
  }
  function renderActivity(parentGfx, element, attrs = {}) {
    var {
      width,
      height
    } = getBounds$1(element, attrs);
    return drawRect(parentGfx, width, height, TASK_BORDER_RADIUS, {
      ...attrs,
      fill: getFillColor(element, defaultFillColor, attrs.fill),
      fillOpacity: DEFAULT_OPACITY,
      stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
    });
  }
  function renderAssociation(parentGfx, element, attrs = {}) {
    var semantic = getBusinessObject(element);
    var fill = getFillColor(element, defaultFillColor, attrs.fill), stroke = getStrokeColor$1(element, defaultStrokeColor, attrs.stroke);
    if (semantic.get("associationDirection") === "One" || semantic.get("associationDirection") === "Both") {
      attrs.markerEnd = marker("association-end", fill, stroke);
    }
    if (semantic.get("associationDirection") === "Both") {
      attrs.markerStart = marker("association-start", fill, stroke);
    }
    attrs = pickAttrs(attrs, [
      "markerStart",
      "markerEnd"
    ]);
    return drawConnectionSegments(parentGfx, element.waypoints, {
      ...attrs,
      stroke,
      strokeDasharray: "0, 5"
    });
  }
  function renderDataObject(parentGfx, element, attrs = {}) {
    var fill = getFillColor(element, defaultFillColor, attrs.fill), stroke = getStrokeColor$1(element, defaultStrokeColor, attrs.stroke);
    var pathData = pathMap.getScaledPath("DATA_OBJECT_PATH", {
      xScaleFactor: 1,
      yScaleFactor: 1,
      containerWidth: element.width,
      containerHeight: element.height,
      position: {
        mx: 0.474,
        my: 0.296
      }
    });
    var dataObject = drawPath2(parentGfx, pathData, {
      fill,
      fillOpacity: DEFAULT_OPACITY,
      stroke
    });
    var semantic = getBusinessObject(element);
    if (isCollection(semantic)) {
      var collectionPathData = pathMap.getScaledPath("DATA_OBJECT_COLLECTION_PATH", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0.33,
          my: (element.height - 18) / element.height
        }
      });
      drawPath2(parentGfx, collectionPathData, {
        strokeWidth: 2,
        fill,
        stroke
      });
    }
    return dataObject;
  }
  function renderEvent(parentGfx, element, attrs = {}) {
    return drawCircle(parentGfx, element.width, element.height, {
      fillOpacity: DEFAULT_OPACITY,
      ...attrs,
      fill: getFillColor(element, defaultFillColor, attrs.fill),
      stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
    });
  }
  function renderGateway(parentGfx, element, attrs = {}) {
    return drawDiamond(parentGfx, element.width, element.height, {
      fill: getFillColor(element, defaultFillColor, attrs.fill),
      fillOpacity: DEFAULT_OPACITY,
      stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
    });
  }
  function renderLane(parentGfx, element, attrs = {}) {
    var lane = drawRect(parentGfx, getWidth(element, attrs), getHeight(element, attrs), 0, {
      fill: getFillColor(element, defaultFillColor, attrs.fill),
      fillOpacity: attrs.fillOpacity || DEFAULT_OPACITY,
      stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
      strokeWidth: 1.5
    });
    var semantic = getBusinessObject(element);
    if (is$g(semantic, "bpmn:Lane")) {
      var text = semantic.get("name");
      renderLaneLabel(parentGfx, text, element, attrs);
    }
    return lane;
  }
  function renderSubProcess(parentGfx, element, attrs = {}) {
    var activity = renderActivity(parentGfx, element, attrs);
    if (isEventSubProcess(element)) {
      attr(activity, {
        strokeDasharray: "0, 5.5",
        strokeWidth: 2.5
      });
    }
    var expanded = isExpanded(element);
    renderEmbeddedLabel(parentGfx, element, expanded ? "center-top" : "center-middle", attrs);
    if (expanded) {
      renderTaskMarkers(parentGfx, element, void 0, attrs);
    } else {
      renderTaskMarkers(parentGfx, element, ["SubProcessMarker"], attrs);
    }
    return activity;
  }
  function renderTask(parentGfx, element, attrs = {}) {
    var activity = renderActivity(parentGfx, element, attrs);
    renderEmbeddedLabel(parentGfx, element, "center-middle", attrs);
    renderTaskMarkers(parentGfx, element, void 0, attrs);
    return activity;
  }
  var handlers = this.handlers = {
    "bpmn:AdHocSubProcess": function(parentGfx, element, attrs = {}) {
      if (isExpanded(element)) {
        attrs = pickAttrs(attrs, [
          "fill",
          "stroke",
          "width",
          "height"
        ]);
      } else {
        attrs = pickAttrs(attrs, [
          "fill",
          "stroke"
        ]);
      }
      return renderSubProcess(parentGfx, element, attrs);
    },
    "bpmn:Association": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      return renderAssociation(parentGfx, element, attrs);
    },
    "bpmn:BoundaryEvent": function(parentGfx, element, attrs = {}) {
      var { renderIcon = true } = attrs;
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var semantic = getBusinessObject(element), cancelActivity = semantic.get("cancelActivity");
      attrs = {
        strokeWidth: 1.5,
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        fillOpacity: FULL_OPACITY,
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      };
      if (!cancelActivity) {
        attrs.strokeDasharray = "6";
      }
      var event2 = renderEvent(parentGfx, element, attrs);
      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {
        ...attrs,
        fill: "none"
      });
      if (renderIcon) {
        renderEventIcon(element, parentGfx, attrs);
      }
      return event2;
    },
    "bpmn:BusinessRuleTask": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var task = renderTask(parentGfx, element, attrs);
      var headerData = pathMap.getScaledPath("TASK_TYPE_BUSINESS_RULE_MAIN", {
        abspos: {
          x: 8,
          y: 8
        }
      });
      var businessPath = drawPath2(parentGfx, headerData);
      attr(businessPath, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      var headerPathData = pathMap.getScaledPath("TASK_TYPE_BUSINESS_RULE_HEADER", {
        abspos: {
          x: 8,
          y: 8
        }
      });
      var businessHeaderPath = drawPath2(parentGfx, headerPathData);
      attr(businessHeaderPath, {
        fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      return task;
    },
    "bpmn:CallActivity": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      return renderSubProcess(parentGfx, element, {
        strokeWidth: 5,
        ...attrs
      });
    },
    "bpmn:ComplexGateway": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var gateway2 = renderGateway(parentGfx, element, attrs);
      var pathData = pathMap.getScaledPath("GATEWAY_COMPLEX", {
        xScaleFactor: 0.5,
        yScaleFactor: 0.5,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0.46,
          my: 0.26
        }
      });
      drawPath2(parentGfx, pathData, {
        fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      return gateway2;
    },
    "bpmn:DataInput": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var arrowPathData = pathMap.getRawPath("DATA_ARROW");
      var dataObject = renderDataObject(parentGfx, element, attrs);
      drawPath2(parentGfx, arrowPathData, {
        fill: "none",
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      return dataObject;
    },
    "bpmn:DataInputAssociation": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      return renderAssociation(parentGfx, element, {
        ...attrs,
        markerEnd: marker("association-end", getFillColor(element, defaultFillColor, attrs.fill), getStrokeColor$1(element, defaultStrokeColor, attrs.stroke))
      });
    },
    "bpmn:DataObject": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      return renderDataObject(parentGfx, element, attrs);
    },
    "bpmn:DataObjectReference": as("bpmn:DataObject"),
    "bpmn:DataOutput": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var arrowPathData = pathMap.getRawPath("DATA_ARROW");
      var dataObject = renderDataObject(parentGfx, element, attrs);
      drawPath2(parentGfx, arrowPathData, {
        strokeWidth: 1,
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
      return dataObject;
    },
    "bpmn:DataOutputAssociation": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      return renderAssociation(parentGfx, element, {
        ...attrs,
        markerEnd: marker("association-end", getFillColor(element, defaultFillColor, attrs.fill), getStrokeColor$1(element, defaultStrokeColor, attrs.stroke))
      });
    },
    "bpmn:DataStoreReference": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var dataStorePath = pathMap.getScaledPath("DATA_STORE", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0,
          my: 0.133
        }
      });
      return drawPath2(parentGfx, dataStorePath, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        fillOpacity: DEFAULT_OPACITY,
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 2
      });
    },
    "bpmn:EndEvent": function(parentGfx, element, attrs = {}) {
      var { renderIcon = true } = attrs;
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var event2 = renderEvent(parentGfx, element, {
        ...attrs,
        strokeWidth: 4
      });
      if (renderIcon) {
        renderEventIcon(element, parentGfx, attrs);
      }
      return event2;
    },
    "bpmn:EventBasedGateway": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var semantic = getBusinessObject(element);
      var diamond = renderGateway(parentGfx, element, attrs);
      drawCircle(parentGfx, element.width, element.height, element.height * 0.2, {
        fill: getFillColor(element, "none", attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      var type = semantic.get("eventGatewayType"), instantiate = !!semantic.get("instantiate");
      function drawEvent() {
        var pathData2 = pathMap.getScaledPath("GATEWAY_EVENT_BASED", {
          xScaleFactor: 0.18,
          yScaleFactor: 0.18,
          containerWidth: element.width,
          containerHeight: element.height,
          position: {
            mx: 0.36,
            my: 0.44
          }
        });
        drawPath2(parentGfx, pathData2, {
          fill: "none",
          stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
          strokeWidth: 2
        });
      }
      if (type === "Parallel") {
        var pathData = pathMap.getScaledPath("GATEWAY_PARALLEL", {
          xScaleFactor: 0.4,
          yScaleFactor: 0.4,
          containerWidth: element.width,
          containerHeight: element.height,
          position: {
            mx: 0.474,
            my: 0.296
          }
        });
        drawPath2(parentGfx, pathData, {
          fill: "none",
          stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
          strokeWidth: 1
        });
      } else if (type === "Exclusive") {
        if (!instantiate) {
          drawCircle(parentGfx, element.width, element.height, element.height * 0.26, {
            fill: "none",
            stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
            strokeWidth: 1
          });
        }
        drawEvent();
      }
      return diamond;
    },
    "bpmn:ExclusiveGateway": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var gateway2 = renderGateway(parentGfx, element, attrs);
      var pathData = pathMap.getScaledPath("GATEWAY_EXCLUSIVE", {
        xScaleFactor: 0.4,
        yScaleFactor: 0.4,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0.32,
          my: 0.3
        }
      });
      var di = getDi(element);
      if (di.get("isMarkerVisible")) {
        drawPath2(parentGfx, pathData, {
          fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
          stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
          strokeWidth: 1
        });
      }
      return gateway2;
    },
    "bpmn:Gateway": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      return renderGateway(parentGfx, element, attrs);
    },
    "bpmn:Group": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke",
        "width",
        "height"
      ]);
      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1.5,
        strokeDasharray: "10, 6, 0, 6",
        fill: "none",
        pointerEvents: "none",
        width: getWidth(element, attrs),
        height: getHeight(element, attrs)
      });
    },
    "bpmn:InclusiveGateway": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var gateway2 = renderGateway(parentGfx, element, attrs);
      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 2.5
      });
      return gateway2;
    },
    "bpmn:IntermediateEvent": function(parentGfx, element, attrs = {}) {
      var { renderIcon = true } = attrs;
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var outer = renderEvent(parentGfx, element, {
        ...attrs,
        strokeWidth: 1.5
      });
      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {
        fill: "none",
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1.5
      });
      if (renderIcon) {
        renderEventIcon(element, parentGfx, attrs);
      }
      return outer;
    },
    "bpmn:IntermediateCatchEvent": as("bpmn:IntermediateEvent"),
    "bpmn:IntermediateThrowEvent": as("bpmn:IntermediateEvent"),
    "bpmn:Lane": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke",
        "width",
        "height"
      ]);
      return renderLane(parentGfx, element, {
        ...attrs,
        fillOpacity: LOW_OPACITY
      });
    },
    "bpmn:ManualTask": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var task = renderTask(parentGfx, element, attrs);
      var pathData = pathMap.getScaledPath("TASK_TYPE_MANUAL", {
        abspos: {
          x: 17,
          y: 15
        }
      });
      drawPath2(parentGfx, pathData, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 0.5
      });
      return task;
    },
    "bpmn:MessageFlow": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var semantic = getBusinessObject(element), di = getDi(element);
      var fill = getFillColor(element, defaultFillColor, attrs.fill), stroke = getStrokeColor$1(element, defaultStrokeColor, attrs.stroke);
      var path = drawConnectionSegments(parentGfx, element.waypoints, {
        markerEnd: marker("messageflow-end", fill, stroke),
        markerStart: marker("messageflow-start", fill, stroke),
        stroke,
        strokeDasharray: "10, 11",
        strokeWidth: 1.5
      });
      if (semantic.get("messageRef")) {
        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);
        var markerPathData = pathMap.getScaledPath("MESSAGE_FLOW_MARKER", {
          abspos: {
            x: midPoint.x,
            y: midPoint.y
          }
        });
        var messageAttrs = {
          strokeWidth: 1
        };
        if (di.get("messageVisibleKind") === "initiating") {
          messageAttrs.fill = fill;
          messageAttrs.stroke = stroke;
        } else {
          messageAttrs.fill = stroke;
          messageAttrs.stroke = fill;
        }
        var message = drawPath2(parentGfx, markerPathData, messageAttrs);
        var messageRef = semantic.get("messageRef"), name2 = messageRef.get("name");
        var label = renderLabel(parentGfx, name2, {
          align: "center-top",
          fitBox: true,
          style: {
            fill: stroke
          }
        });
        var messageBounds = message.getBBox(), labelBounds = label.getBBox();
        var translateX = midPoint.x - labelBounds.width / 2, translateY = midPoint.y + messageBounds.height / 2 + ELEMENT_LABEL_DISTANCE$1;
        transform(label, translateX, translateY, 0);
      }
      return path;
    },
    "bpmn:ParallelGateway": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var diamond = renderGateway(parentGfx, element, attrs);
      var pathData = pathMap.getScaledPath("GATEWAY_PARALLEL", {
        xScaleFactor: 0.6,
        yScaleFactor: 0.6,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0.46,
          my: 0.2
        }
      });
      drawPath2(parentGfx, pathData, {
        fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      return diamond;
    },
    "bpmn:Participant": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke",
        "width",
        "height"
      ]);
      var participant = renderLane(parentGfx, element, attrs);
      var expandedParticipant = isExpanded(element);
      var horizontalParticipant = isHorizontal$3(element);
      var semantic = getBusinessObject(element), name2 = semantic.get("name");
      if (expandedParticipant) {
        var waypoints = horizontalParticipant ? [
          {
            x: 30,
            y: 0
          },
          {
            x: 30,
            y: getHeight(element, attrs)
          }
        ] : [
          {
            x: 0,
            y: 30
          },
          {
            x: getWidth(element, attrs),
            y: 30
          }
        ];
        drawLine(parentGfx, waypoints, {
          stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
          strokeWidth: PARTICIPANT_STROKE_WIDTH
        });
        renderLaneLabel(parentGfx, name2, element, attrs);
      } else {
        var bounds = getBounds$1(element, attrs);
        if (!horizontalParticipant) {
          bounds.height = getWidth(element, attrs);
          bounds.width = getHeight(element, attrs);
        }
        var textBox = renderLabel(parentGfx, name2, {
          box: bounds,
          align: "center-middle",
          style: {
            fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)
          }
        });
        if (!horizontalParticipant) {
          var top = -1 * getHeight(element, attrs);
          transform(textBox, 0, -top, 270);
        }
      }
      if (semantic.get("participantMultiplicity")) {
        renderTaskMarker("ParticipantMultiplicityMarker", parentGfx, element, attrs);
      }
      return participant;
    },
    "bpmn:ReceiveTask": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var semantic = getBusinessObject(element);
      var task = renderTask(parentGfx, element, attrs);
      var pathData;
      if (semantic.get("instantiate")) {
        drawCircle(parentGfx, 28, 28, 20 * 0.22, {
          fill: getFillColor(element, defaultFillColor, attrs.fill),
          stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
          strokeWidth: 1
        });
        pathData = pathMap.getScaledPath("TASK_TYPE_INSTANTIATING_SEND", {
          abspos: {
            x: 7.77,
            y: 9.52
          }
        });
      } else {
        pathData = pathMap.getScaledPath("TASK_TYPE_SEND", {
          xScaleFactor: 0.9,
          yScaleFactor: 0.9,
          containerWidth: 21,
          containerHeight: 14,
          position: {
            mx: 0.3,
            my: 0.4
          }
        });
      }
      drawPath2(parentGfx, pathData, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      return task;
    },
    "bpmn:ScriptTask": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var task = renderTask(parentGfx, element, attrs);
      var pathData = pathMap.getScaledPath("TASK_TYPE_SCRIPT", {
        abspos: {
          x: 15,
          y: 20
        }
      });
      drawPath2(parentGfx, pathData, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      return task;
    },
    "bpmn:SendTask": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var task = renderTask(parentGfx, element, attrs);
      var pathData = pathMap.getScaledPath("TASK_TYPE_SEND", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: 21,
        containerHeight: 14,
        position: {
          mx: 0.285,
          my: 0.357
        }
      });
      drawPath2(parentGfx, pathData, {
        fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        stroke: getFillColor(element, defaultFillColor, attrs.fill),
        strokeWidth: 1
      });
      return task;
    },
    "bpmn:SequenceFlow": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var fill = getFillColor(element, defaultFillColor, attrs.fill), stroke = getStrokeColor$1(element, defaultStrokeColor, attrs.stroke);
      var connection = drawConnectionSegments(parentGfx, element.waypoints, {
        markerEnd: marker("sequenceflow-end", fill, stroke),
        stroke
      });
      var semantic = getBusinessObject(element);
      var { source: source2 } = element;
      if (source2) {
        var sourceSemantic = getBusinessObject(source2);
        if (semantic.get("conditionExpression") && is$g(sourceSemantic, "bpmn:Activity")) {
          attr(connection, {
            markerStart: marker("conditional-flow-marker", fill, stroke)
          });
        }
        if (sourceSemantic.get("default") && (is$g(sourceSemantic, "bpmn:Gateway") || is$g(sourceSemantic, "bpmn:Activity")) && sourceSemantic.get("default") === semantic) {
          attr(connection, {
            markerStart: marker("conditional-default-flow-marker", fill, stroke)
          });
        }
      }
      return connection;
    },
    "bpmn:ServiceTask": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var task = renderTask(parentGfx, element, attrs);
      drawCircle(parentGfx, 10, 10, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: "none",
        transform: "translate(6, 6)"
      });
      var pathDataService1 = pathMap.getScaledPath("TASK_TYPE_SERVICE", {
        abspos: {
          x: 12,
          y: 18
        }
      });
      drawPath2(parentGfx, pathDataService1, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      drawCircle(parentGfx, 10, 10, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: "none",
        transform: "translate(11, 10)"
      });
      var pathDataService2 = pathMap.getScaledPath("TASK_TYPE_SERVICE", {
        abspos: {
          x: 17,
          y: 22
        }
      });
      drawPath2(parentGfx, pathDataService2, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1
      });
      return task;
    },
    "bpmn:StartEvent": function(parentGfx, element, attrs = {}) {
      var { renderIcon = true } = attrs;
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var semantic = getBusinessObject(element);
      if (!semantic.get("isInterrupting")) {
        attrs = {
          ...attrs,
          strokeDasharray: "6"
        };
      }
      var event2 = renderEvent(parentGfx, element, attrs);
      if (renderIcon) {
        renderEventIcon(element, parentGfx, attrs);
      }
      return event2;
    },
    "bpmn:SubProcess": function(parentGfx, element, attrs = {}) {
      if (isExpanded(element)) {
        attrs = pickAttrs(attrs, [
          "fill",
          "stroke",
          "width",
          "height"
        ]);
      } else {
        attrs = pickAttrs(attrs, [
          "fill",
          "stroke"
        ]);
      }
      return renderSubProcess(parentGfx, element, attrs);
    },
    "bpmn:Task": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      return renderTask(parentGfx, element, attrs);
    },
    "bpmn:TextAnnotation": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke",
        "width",
        "height"
      ]);
      var {
        width,
        height
      } = getBounds$1(element, attrs);
      var textElement = drawRect(parentGfx, width, height, 0, 0, {
        fill: "none",
        stroke: "none"
      });
      var textPathData = pathMap.getScaledPath("TEXT_ANNOTATION", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: width,
        containerHeight: height,
        position: {
          mx: 0,
          my: 0
        }
      });
      drawPath2(parentGfx, textPathData, {
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke)
      });
      var semantic = getBusinessObject(element), text = semantic.get("text") || "";
      renderLabel(parentGfx, text, {
        align: "left-top",
        box: getBounds$1(element, attrs),
        padding: 7,
        style: {
          fill: getLabelColor(element, defaultLabelColor, defaultStrokeColor, attrs.stroke)
        }
      });
      return textElement;
    },
    "bpmn:Transaction": function(parentGfx, element, attrs = {}) {
      if (isExpanded(element)) {
        attrs = pickAttrs(attrs, [
          "fill",
          "stroke",
          "width",
          "height"
        ]);
      } else {
        attrs = pickAttrs(attrs, [
          "fill",
          "stroke"
        ]);
      }
      var outer = renderSubProcess(parentGfx, element, {
        strokeWidth: 1.5,
        ...attrs
      });
      var innerAttrs = styles.style(["no-fill", "no-events"], {
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 1.5
      });
      var expanded = isExpanded(element);
      if (!expanded) {
        attrs = {};
      }
      drawRect(
        parentGfx,
        getWidth(element, attrs),
        getHeight(element, attrs),
        TASK_BORDER_RADIUS - INNER_OUTER_DIST,
        INNER_OUTER_DIST,
        innerAttrs
      );
      return outer;
    },
    "bpmn:UserTask": function(parentGfx, element, attrs = {}) {
      attrs = pickAttrs(attrs, [
        "fill",
        "stroke"
      ]);
      var task = renderTask(parentGfx, element, attrs);
      var x2 = 15;
      var y2 = 12;
      var pathDataUser1 = pathMap.getScaledPath("TASK_TYPE_USER_1", {
        abspos: {
          x: x2,
          y: y2
        }
      });
      drawPath2(parentGfx, pathDataUser1, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 0.5
      });
      var pathDataUser2 = pathMap.getScaledPath("TASK_TYPE_USER_2", {
        abspos: {
          x: x2,
          y: y2
        }
      });
      drawPath2(parentGfx, pathDataUser2, {
        fill: getFillColor(element, defaultFillColor, attrs.fill),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 0.5
      });
      var pathDataUser3 = pathMap.getScaledPath("TASK_TYPE_USER_3", {
        abspos: {
          x: x2,
          y: y2
        }
      });
      drawPath2(parentGfx, pathDataUser3, {
        fill: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        stroke: getStrokeColor$1(element, defaultStrokeColor, attrs.stroke),
        strokeWidth: 0.5
      });
      return task;
    },
    "label": function(parentGfx, element, attrs = {}) {
      return renderExternalLabel(parentGfx, element, attrs);
    }
  };
  this._drawPath = drawPath2;
  this._renderer = renderer;
}
e$3(BpmnRenderer, BaseRenderer);
BpmnRenderer.$inject = [
  "config.bpmnRenderer",
  "eventBus",
  "styles",
  "pathMap",
  "canvas",
  "textRenderer"
];
BpmnRenderer.prototype.canRender = function(element) {
  return is$g(element, "bpmn:BaseElement");
};
BpmnRenderer.prototype.drawShape = function(parentGfx, element, attrs = {}) {
  var { type } = element;
  var handler = this._renderer(type);
  return handler(parentGfx, element, attrs);
};
BpmnRenderer.prototype.drawConnection = function(parentGfx, element, attrs = {}) {
  var { type } = element;
  var handler = this._renderer(type);
  return handler(parentGfx, element, attrs);
};
BpmnRenderer.prototype.getShapePath = function(element) {
  if (is$g(element, "bpmn:Event")) {
    return getCirclePath(element);
  }
  if (is$g(element, "bpmn:Activity")) {
    return getRoundRectPath(element, TASK_BORDER_RADIUS);
  }
  if (is$g(element, "bpmn:Gateway")) {
    return getDiamondPath(element);
  }
  return getRectPath(element);
};
function pickAttrs(attrs, keys2 = []) {
  return keys2.reduce((pickedAttrs, key) => {
    if (attrs[key]) {
      pickedAttrs[key] = attrs[key];
    }
    return pickedAttrs;
  }, {});
}
var DEFAULT_BOX_PADDING = 0;
var DEFAULT_LABEL_SIZE = {
  width: 150,
  height: 50
};
function parseAlign(align) {
  var parts = align.split("-");
  return {
    horizontal: parts[0] || "center",
    vertical: parts[1] || "top"
  };
}
function parsePadding(padding) {
  if (isObject$1(padding)) {
    return assign$2({ top: 0, left: 0, right: 0, bottom: 0 }, padding);
  } else {
    return {
      top: padding,
      left: padding,
      right: padding,
      bottom: padding
    };
  }
}
function getTextBBox(text, fakeText) {
  fakeText.textContent = text;
  var textBBox;
  try {
    var bbox, emptyLine = text === "";
    fakeText.textContent = emptyLine ? "dummy" : text;
    textBBox = fakeText.getBBox();
    bbox = {
      width: textBBox.width + textBBox.x * 2,
      height: textBBox.height
    };
    if (emptyLine) {
      bbox.width = 0;
    }
    return bbox;
  } catch (e2) {
    return { width: 0, height: 0 };
  }
}
function layoutNext(lines, maxWidth, fakeText) {
  var originalLine = lines.shift(), fitLine = originalLine;
  var textBBox;
  for (; ; ) {
    textBBox = getTextBBox(fitLine, fakeText);
    textBBox.width = fitLine ? textBBox.width : 0;
    if (fitLine === " " || fitLine === "" || textBBox.width < Math.round(maxWidth) || fitLine.length < 2) {
      return fit(lines, fitLine, originalLine, textBBox);
    }
    fitLine = shortenLine(fitLine, textBBox.width, maxWidth);
  }
}
function fit(lines, fitLine, originalLine, textBBox) {
  if (fitLine.length < originalLine.length) {
    var remainder = originalLine.slice(fitLine.length).trim();
    lines.unshift(remainder);
  }
  return {
    width: textBBox.width,
    height: textBBox.height,
    text: fitLine
  };
}
var SOFT_BREAK = "­";
function semanticShorten(line, maxLength) {
  var parts = line.split(/(\s|-|\u00AD)/g), part, shortenedParts = [], length2 = 0;
  if (parts.length > 1) {
    while (part = parts.shift()) {
      if (part.length + length2 < maxLength) {
        shortenedParts.push(part);
        length2 += part.length;
      } else {
        if (part === "-" || part === SOFT_BREAK) {
          shortenedParts.pop();
        }
        break;
      }
    }
  }
  var last2 = shortenedParts[shortenedParts.length - 1];
  if (last2 && last2 === SOFT_BREAK) {
    shortenedParts[shortenedParts.length - 1] = "-";
  }
  return shortenedParts.join("");
}
function shortenLine(line, width, maxWidth) {
  var length2 = Math.max(line.length * (maxWidth / width), 1);
  var shortenedLine = semanticShorten(line, length2);
  if (!shortenedLine) {
    shortenedLine = line.slice(0, Math.max(Math.round(length2 - 1), 1));
  }
  return shortenedLine;
}
function getHelperSvg() {
  var helperSvg = document.getElementById("helper-svg");
  if (!helperSvg) {
    helperSvg = create$1("svg");
    attr(helperSvg, {
      id: "helper-svg"
    });
    assign$1(helperSvg, {
      visibility: "hidden",
      position: "fixed",
      width: 0,
      height: 0
    });
    document.body.appendChild(helperSvg);
  }
  return helperSvg;
}
function Text(config2) {
  this._config = assign$2({}, {
    size: DEFAULT_LABEL_SIZE,
    padding: DEFAULT_BOX_PADDING,
    style: {},
    align: "center-top"
  }, config2 || {});
}
Text.prototype.createText = function(text, options) {
  return this.layoutText(text, options).element;
};
Text.prototype.getDimensions = function(text, options) {
  return this.layoutText(text, options).dimensions;
};
Text.prototype.layoutText = function(text, options) {
  var box = assign$2({}, this._config.size, options.box), style = assign$2({}, this._config.style, options.style), align = parseAlign(options.align || this._config.align), padding = parsePadding(options.padding !== void 0 ? options.padding : this._config.padding), fitBox = options.fitBox || false;
  var lineHeight = getLineHeight(style);
  var lines = text.split(/\u00AD?\r?\n/), layouted = [];
  var maxWidth = box.width - padding.left - padding.right;
  var helperText = create$1("text");
  attr(helperText, { x: 0, y: 0 });
  attr(helperText, style);
  var helperSvg = getHelperSvg();
  append(helperSvg, helperText);
  while (lines.length) {
    layouted.push(layoutNext(lines, maxWidth, helperText));
  }
  if (align.vertical === "middle") {
    padding.top = padding.bottom = 0;
  }
  var totalHeight = reduce$1(layouted, function(sum, line, idx) {
    return sum + (lineHeight || line.height);
  }, 0) + padding.top + padding.bottom;
  var maxLineWidth = reduce$1(layouted, function(sum, line, idx) {
    return line.width > sum ? line.width : sum;
  }, 0);
  var y2 = padding.top;
  if (align.vertical === "middle") {
    y2 += (box.height - totalHeight) / 2;
  }
  y2 -= (lineHeight || layouted[0].height) / 4;
  var textElement = create$1("text");
  attr(textElement, style);
  forEach$2(layouted, function(line) {
    var x2;
    y2 += lineHeight || line.height;
    switch (align.horizontal) {
      case "left":
        x2 = padding.left;
        break;
      case "right":
        x2 = (fitBox ? maxLineWidth : maxWidth) - padding.right - line.width;
        break;
      default:
        x2 = Math.max(((fitBox ? maxLineWidth : maxWidth) - line.width) / 2 + padding.left, 0);
    }
    var tspan = create$1("tspan");
    attr(tspan, { x: x2, y: y2 });
    tspan.textContent = line.text;
    append(textElement, tspan);
  });
  remove(helperText);
  var dimensions = {
    width: maxLineWidth,
    height: totalHeight
  };
  return {
    dimensions,
    element: textElement
  };
};
function getLineHeight(style) {
  if ("fontSize" in style && "lineHeight" in style) {
    return style.lineHeight * parseInt(style.fontSize, 10);
  }
}
var DEFAULT_FONT_SIZE = 12;
var LINE_HEIGHT_RATIO = 1.2;
var MIN_TEXT_ANNOTATION_HEIGHT = 30;
function TextRenderer(config2) {
  var defaultStyle = assign$2({
    fontFamily: "Arial, sans-serif",
    fontSize: DEFAULT_FONT_SIZE,
    fontWeight: "normal",
    lineHeight: LINE_HEIGHT_RATIO
  }, config2 && config2.defaultStyle || {});
  var fontSize = parseInt(defaultStyle.fontSize, 10) - 1;
  var externalStyle = assign$2({}, defaultStyle, {
    fontSize
  }, config2 && config2.externalStyle || {});
  var textUtil = new Text({
    style: defaultStyle
  });
  this.getExternalLabelBounds = function(bounds, text) {
    var layoutedDimensions = textUtil.getDimensions(text, {
      box: {
        width: 90,
        height: 30
      },
      style: externalStyle
    });
    return {
      x: Math.round(bounds.x + bounds.width / 2 - layoutedDimensions.width / 2),
      y: Math.round(bounds.y),
      width: Math.ceil(layoutedDimensions.width),
      height: Math.ceil(layoutedDimensions.height)
    };
  };
  this.getTextAnnotationBounds = function(bounds, text) {
    var layoutedDimensions = textUtil.getDimensions(text, {
      box: bounds,
      style: defaultStyle,
      align: "left-top",
      padding: 5
    });
    return {
      x: bounds.x,
      y: bounds.y,
      width: bounds.width,
      height: Math.max(MIN_TEXT_ANNOTATION_HEIGHT, Math.round(layoutedDimensions.height))
    };
  };
  this.createText = function(text, options) {
    return textUtil.createText(text, options || {});
  };
  this.getDefaultStyle = function() {
    return defaultStyle;
  };
  this.getExternalStyle = function() {
    return externalStyle;
  };
}
TextRenderer.$inject = [
  "config.textRenderer"
];
function PathMap() {
  this.pathMap = {
    "EVENT_MESSAGE": {
      d: "m {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}",
      height: 36,
      width: 36,
      heightElements: [6, 14],
      widthElements: [10.5, 21]
    },
    "EVENT_SIGNAL": {
      d: "M {mx},{my} l {e.x0},{e.y0} l -{e.x1},0 Z",
      height: 36,
      width: 36,
      heightElements: [18],
      widthElements: [10, 20]
    },
    "EVENT_ESCALATION": {
      d: "M {mx},{my} l {e.x0},{e.y0} l -{e.x0},-{e.y1} l -{e.x0},{e.y1} Z",
      height: 36,
      width: 36,
      heightElements: [20, 7],
      widthElements: [8]
    },
    "EVENT_CONDITIONAL": {
      d: "M {e.x0},{e.y0} l {e.x1},0 l 0,{e.y2} l -{e.x1},0 Z M {e.x2},{e.y3} l {e.x0},0 M {e.x2},{e.y4} l {e.x0},0 M {e.x2},{e.y5} l {e.x0},0 M {e.x2},{e.y6} l {e.x0},0 M {e.x2},{e.y7} l {e.x0},0 M {e.x2},{e.y8} l {e.x0},0 ",
      height: 36,
      width: 36,
      heightElements: [8.5, 14.5, 18, 11.5, 14.5, 17.5, 20.5, 23.5, 26.5],
      widthElements: [10.5, 14.5, 12.5]
    },
    "EVENT_LINK": {
      d: "m {mx},{my} 0,{e.y0} -{e.x1},0 0,{e.y1} {e.x1},0 0,{e.y0} {e.x0},-{e.y2} -{e.x0},-{e.y2} z",
      height: 36,
      width: 36,
      heightElements: [4.4375, 6.75, 7.8125],
      widthElements: [9.84375, 13.5]
    },
    "EVENT_ERROR": {
      d: "m {mx},{my} {e.x0},-{e.y0} {e.x1},-{e.y1} {e.x2},{e.y2} {e.x3},-{e.y3} -{e.x4},{e.y4} -{e.x5},-{e.y5} z",
      height: 36,
      width: 36,
      heightElements: [0.023, 8.737, 8.151, 16.564, 10.591, 8.714],
      widthElements: [0.085, 6.672, 6.97, 4.273, 5.337, 6.636]
    },
    "EVENT_CANCEL_45": {
      d: "m {mx},{my} -{e.x1},0 0,{e.x0} {e.x1},0 0,{e.y1} {e.x0},0 0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z",
      height: 36,
      width: 36,
      heightElements: [4.75, 8.5],
      widthElements: [4.75, 8.5]
    },
    "EVENT_COMPENSATION": {
      d: "m {mx},{my} {e.x0},-{e.y0} 0,{e.y1} z m {e.x1},-{e.y2} {e.x2},-{e.y3} 0,{e.y1} -{e.x2},-{e.y3} z",
      height: 36,
      width: 36,
      heightElements: [6.5, 13, 0.4, 6.1],
      widthElements: [9, 9.3, 8.7]
    },
    "EVENT_TIMER_WH": {
      d: "M {mx},{my} l {e.x0},-{e.y0} m -{e.x0},{e.y0} l {e.x1},{e.y1} ",
      height: 36,
      width: 36,
      heightElements: [10, 2],
      widthElements: [3, 7]
    },
    "EVENT_TIMER_LINE": {
      d: "M {mx},{my} m {e.x0},{e.y0} l -{e.x1},{e.y1} ",
      height: 36,
      width: 36,
      heightElements: [10, 3],
      widthElements: [0, 0]
    },
    "EVENT_MULTIPLE": {
      d: "m {mx},{my} {e.x1},-{e.y0} {e.x1},{e.y0} -{e.x0},{e.y1} -{e.x2},0 z",
      height: 36,
      width: 36,
      heightElements: [6.28099, 12.56199],
      widthElements: [3.1405, 9.42149, 12.56198]
    },
    "EVENT_PARALLEL_MULTIPLE": {
      d: "m {mx},{my} {e.x0},0 0,{e.y1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} -{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z",
      height: 36,
      width: 36,
      heightElements: [2.56228, 7.68683],
      widthElements: [2.56228, 7.68683]
    },
    "GATEWAY_EXCLUSIVE": {
      d: "m {mx},{my} {e.x0},{e.y0} {e.x1},{e.y0} {e.x2},0 {e.x4},{e.y2} {e.x4},{e.y1} {e.x2},0 {e.x1},{e.y3} {e.x0},{e.y3} {e.x3},0 {e.x5},{e.y1} {e.x5},{e.y2} {e.x3},0 z",
      height: 17.5,
      width: 17.5,
      heightElements: [8.5, 6.5312, -6.5312, -8.5],
      widthElements: [6.5, -6.5, 3, -3, 5, -5]
    },
    "GATEWAY_PARALLEL": {
      d: "m {mx},{my} 0,{e.y1} -{e.x1},0 0,{e.y0} {e.x1},0 0,{e.y1} {e.x0},0 0,-{e.y1} {e.x1},0 0,-{e.y0} -{e.x1},0 0,-{e.y1} -{e.x0},0 z",
      height: 30,
      width: 30,
      heightElements: [5, 12.5],
      widthElements: [5, 12.5]
    },
    "GATEWAY_EVENT_BASED": {
      d: "m {mx},{my} {e.x0},{e.y0} {e.x0},{e.y1} {e.x1},{e.y2} {e.x2},0 z",
      height: 11,
      width: 11,
      heightElements: [-6, 6, 12, -12],
      widthElements: [9, -3, -12]
    },
    "GATEWAY_COMPLEX": {
      d: "m {mx},{my} 0,{e.y0} -{e.x0},-{e.y1} -{e.x1},{e.y2} {e.x0},{e.y1} -{e.x2},0 0,{e.y3} {e.x2},0  -{e.x0},{e.y1} l {e.x1},{e.y2} {e.x0},-{e.y1} 0,{e.y0} {e.x3},0 0,-{e.y0} {e.x0},{e.y1} {e.x1},-{e.y2} -{e.x0},-{e.y1} {e.x2},0 0,-{e.y3} -{e.x2},0 {e.x0},-{e.y1} -{e.x1},-{e.y2} -{e.x0},{e.y1} 0,-{e.y0} -{e.x3},0 z",
      height: 17.125,
      width: 17.125,
      heightElements: [4.875, 3.4375, 2.125, 3],
      widthElements: [3.4375, 2.125, 4.875, 3]
    },
    "DATA_OBJECT_PATH": {
      d: "m 0,0 {e.x1},0 {e.x0},{e.y0} 0,{e.y1} -{e.x2},0 0,-{e.y2} {e.x1},0 0,{e.y0} {e.x0},0",
      height: 61,
      width: 51,
      heightElements: [10, 50, 60],
      widthElements: [10, 40, 50, 60]
    },
    "DATA_OBJECT_COLLECTION_PATH": {
      d: "m{mx},{my} m 3,2 l 0,10 m 3,-10 l 0,10 m 3,-10 l 0,10",
      height: 10,
      width: 10,
      heightElements: [],
      widthElements: []
    },
    "DATA_ARROW": {
      d: "m 5,9 9,0 0,-3 5,5 -5,5 0,-3 -9,0 z",
      height: 61,
      width: 51,
      heightElements: [],
      widthElements: []
    },
    "DATA_STORE": {
      d: "m  {mx},{my} l  0,{e.y2} c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 l  0,-{e.y2} c -{e.x0},-{e.y1} -{e.x1},-{e.y1} -{e.x2},0c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0 m  -{e.x2},{e.y0}c  {e.x0},{e.y1} {e.x1},{e.y1} {e.x2},0m  -{e.x2},{e.y0}c  {e.x0},{e.y1} {e.x1},{e.y1}  {e.x2},0",
      height: 61,
      width: 61,
      heightElements: [7, 10, 45],
      widthElements: [2, 58, 60]
    },
    "TEXT_ANNOTATION": {
      d: "m {mx}, {my} m 10,0 l -10,0 l 0,{e.y0} l 10,0",
      height: 30,
      width: 10,
      heightElements: [30],
      widthElements: [10]
    },
    "MARKER_SUB_PROCESS": {
      d: "m{mx},{my} m 7,2 l 0,10 m -5,-5 l 10,0",
      height: 10,
      width: 10,
      heightElements: [],
      widthElements: []
    },
    "MARKER_PARALLEL": {
      d: "m{mx},{my} m 3,2 l 0,10 m 3,-10 l 0,10 m 3,-10 l 0,10",
      height: 10,
      width: 10,
      heightElements: [],
      widthElements: []
    },
    "MARKER_SEQUENTIAL": {
      d: "m{mx},{my} m 0,3 l 10,0 m -10,3 l 10,0 m -10,3 l 10,0",
      height: 10,
      width: 10,
      heightElements: [],
      widthElements: []
    },
    "MARKER_COMPENSATION": {
      d: "m {mx},{my} 7,-5 0,10 z m 7.1,-0.3 6.9,-4.7 0,10 -6.9,-4.7 z",
      height: 10,
      width: 21,
      heightElements: [],
      widthElements: []
    },
    "MARKER_LOOP": {
      d: "m {mx},{my} c 3.526979,0 6.386161,-2.829858 6.386161,-6.320661 0,-3.490806 -2.859182,-6.320661 -6.386161,-6.320661 -3.526978,0 -6.38616,2.829855 -6.38616,6.320661 0,1.745402 0.714797,3.325567 1.870463,4.469381 0.577834,0.571908 1.265885,1.034728 2.029916,1.35457 l -0.718163,-3.909793 m 0.718163,3.909793 -3.885211,0.802902",
      height: 13.9,
      width: 13.7,
      heightElements: [],
      widthElements: []
    },
    "MARKER_ADHOC": {
      d: "m {mx},{my} m 0.84461,2.64411 c 1.05533,-1.23780996 2.64337,-2.07882 4.29653,-1.97997996 2.05163,0.0805 3.85579,1.15803 5.76082,1.79107 1.06385,0.34139996 2.24454,0.1438 3.18759,-0.43767 0.61743,-0.33642 1.2775,-0.64078 1.7542,-1.17511 0,0.56023 0,1.12046 0,1.6807 -0.98706,0.96237996 -2.29792,1.62393996 -3.6918,1.66181996 -1.24459,0.0927 -2.46671,-0.2491 -3.59505,-0.74812 -1.35789,-0.55965 -2.75133,-1.33436996 -4.27027,-1.18121996 -1.37741,0.14601 -2.41842,1.13685996 -3.44288,1.96782996 z",
      height: 4,
      width: 15,
      heightElements: [],
      widthElements: []
    },
    "TASK_TYPE_SEND": {
      d: "m {mx},{my} l 0,{e.y1} l {e.x1},0 l 0,-{e.y1} z l {e.x0},{e.y0} l {e.x0},-{e.y0}",
      height: 14,
      width: 21,
      heightElements: [6, 14],
      widthElements: [10.5, 21]
    },
    "TASK_TYPE_SCRIPT": {
      d: "m {mx},{my} c 9.966553,-6.27276 -8.000926,-7.91932 2.968968,-14.938 l -8.802728,0 c -10.969894,7.01868 6.997585,8.66524 -2.968967,14.938 z m -7,-12 l 5,0 m -4.5,3 l 4.5,0 m -3,3 l 5,0m -4,3 l 5,0",
      height: 15,
      width: 12.6,
      heightElements: [6, 14],
      widthElements: [10.5, 21]
    },
    "TASK_TYPE_USER_1": {
      d: "m {mx},{my} c 0.909,-0.845 1.594,-2.049 1.594,-3.385 0,-2.554 -1.805,-4.62199999 -4.357,-4.62199999 -2.55199998,0 -4.28799998,2.06799999 -4.28799998,4.62199999 0,1.348 0.974,2.562 1.89599998,3.405 -0.52899998,0.187 -5.669,2.097 -5.794,4.7560005 v 6.718 h 17 v -6.718 c 0,-2.2980005 -5.5279996,-4.5950005 -6.0509996,-4.7760005 zm -8,6 l 0,5.5 m 11,0 l 0,-5"
    },
    "TASK_TYPE_USER_2": {
      d: "m {mx},{my} m 2.162,1.009 c 0,2.4470005 -2.158,4.4310005 -4.821,4.4310005 -2.66499998,0 -4.822,-1.981 -4.822,-4.4310005 "
    },
    "TASK_TYPE_USER_3": {
      d: "m {mx},{my} m -6.9,-3.80 c 0,0 2.25099998,-2.358 4.27399998,-1.177 2.024,1.181 4.221,1.537 4.124,0.965 -0.098,-0.57 -0.117,-3.79099999 -4.191,-4.13599999 -3.57499998,0.001 -4.20799998,3.36699999 -4.20699998,4.34799999 z"
    },
    "TASK_TYPE_MANUAL": {
      d: "m {mx},{my} c 0.234,-0.01 5.604,0.008 8.029,0.004 0.808,0 1.271,-0.172 1.417,-0.752 0.227,-0.898 -0.334,-1.314 -1.338,-1.316 -2.467,-0.01 -7.886,-0.004 -8.108,-0.004 -0.014,-0.079 0.016,-0.533 0,-0.61 0.195,-0.042 8.507,0.006 9.616,0.002 0.877,-0.007 1.35,-0.438 1.353,-1.208 0.003,-0.768 -0.479,-1.09 -1.35,-1.091 -2.968,-0.002 -9.619,-0.013 -9.619,-0.013 v -0.591 c 0,0 5.052,-0.016 7.225,-0.016 0.888,-0.002 1.354,-0.416 1.351,-1.193 -0.006,-0.761 -0.492,-1.196 -1.361,-1.196 -3.473,-0.005 -10.86,-0.003 -11.0829995,-0.003 -0.022,-0.047 -0.045,-0.094 -0.069,-0.139 0.3939995,-0.319 2.0409995,-1.626 2.4149995,-2.017 0.469,-0.4870005 0.519,-1.1650005 0.162,-1.6040005 -0.414,-0.511 -0.973,-0.5 -1.48,-0.236 -1.4609995,0.764 -6.5999995,3.6430005 -7.7329995,4.2710005 -0.9,0.499 -1.516,1.253 -1.882,2.19 -0.37000002,0.95 -0.17,2.01 -0.166,2.979 0.004,0.718 -0.27300002,1.345 -0.055,2.063 0.629,2.087 2.425,3.312 4.859,3.318 4.6179995,0.014 9.2379995,-0.139 13.8569995,-0.158 0.755,-0.004 1.171,-0.301 1.182,-1.033 0.012,-0.754 -0.423,-0.969 -1.183,-0.973 -1.778,-0.01 -5.824,-0.004 -6.04,-0.004 10e-4,-0.084 0.003,-0.586 10e-4,-0.67 z"
    },
    "TASK_TYPE_INSTANTIATING_SEND": {
      d: "m {mx},{my} l 0,8.4 l 12.6,0 l 0,-8.4 z l 6.3,3.6 l 6.3,-3.6"
    },
    "TASK_TYPE_SERVICE": {
      d: "m {mx},{my} v -1.71335 c 0.352326,-0.0705 0.703932,-0.17838 1.047628,-0.32133 0.344416,-0.14465 0.665822,-0.32133 0.966377,-0.52145 l 1.19431,1.18005 1.567487,-1.57688 -1.195028,-1.18014 c 0.403376,-0.61394 0.683079,-1.29908 0.825447,-2.01824 l 1.622133,-0.01 v -2.2196 l -1.636514,0.01 c -0.07333,-0.35153 -0.178319,-0.70024 -0.323564,-1.04372 -0.145244,-0.34406 -0.321407,-0.6644 -0.522735,-0.96217 l 1.131035,-1.13631 -1.583305,-1.56293 -1.129598,1.13589 c -0.614052,-0.40108 -1.302883,-0.68093 -2.022633,-0.82247 l 0.0093,-1.61852 h -2.241173 l 0.0042,1.63124 c -0.353763,0.0736 -0.705369,0.17977 -1.049785,0.32371 -0.344415,0.14437 -0.665102,0.32092 -0.9635006,0.52046 l -1.1698628,-1.15823 -1.5667691,1.5792 1.1684265,1.15669 c -0.4026573,0.61283 -0.68308,1.29797 -0.8247287,2.01713 l -1.6588041,0.003 v 2.22174 l 1.6724648,-0.006 c 0.073327,0.35077 0.1797598,0.70243 0.3242851,1.04472 0.1452428,0.34448 0.3214064,0.6644 0.5227339,0.96066 l -1.1993431,1.19723 1.5840256,1.56011 1.1964668,-1.19348 c 0.6140517,0.40346 1.3028827,0.68232 2.0233517,0.82331 l 7.19e-4,1.69892 h 2.226848 z m 0.221462,-3.9957 c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z"
    },
    "TASK_TYPE_SERVICE_FILL": {
      d: "m {mx},{my} c -1.788948,0.7502 -3.8576,-0.0928 -4.6097055,-1.87438 -0.7521065,-1.78321 0.090598,-3.84627 1.8802645,-4.59604 1.78823,-0.74936 3.856881,0.0929 4.608987,1.87437 0.752106,1.78165 -0.0906,3.84612 -1.879546,4.59605 z"
    },
    "TASK_TYPE_BUSINESS_RULE_HEADER": {
      d: "m {mx},{my} 0,4 20,0 0,-4 z"
    },
    "TASK_TYPE_BUSINESS_RULE_MAIN": {
      d: "m {mx},{my} 0,12 20,0 0,-12 zm 0,8 l 20,0 m -13,-4 l 0,8"
    },
    "MESSAGE_FLOW_MARKER": {
      d: "m {mx},{my} m -10.5 ,-7 l 0,14 l 21,0 l 0,-14 z l 10.5,6 l 10.5,-6"
    }
  };
  this.getRawPath = function getRawPath(pathId) {
    return this.pathMap[pathId].d;
  };
  this.getScaledPath = function getScaledPath(pathId, param) {
    var rawPath = this.pathMap[pathId];
    var mx, my;
    if (param.abspos) {
      mx = param.abspos.x;
      my = param.abspos.y;
    } else {
      mx = param.containerWidth * param.position.mx;
      my = param.containerHeight * param.position.my;
    }
    var coordinates = {};
    if (param.position) {
      var heightRatio = param.containerHeight / rawPath.height * param.yScaleFactor;
      var widthRatio = param.containerWidth / rawPath.width * param.xScaleFactor;
      for (var heightIndex = 0; heightIndex < rawPath.heightElements.length; heightIndex++) {
        coordinates["y" + heightIndex] = rawPath.heightElements[heightIndex] * heightRatio;
      }
      for (var widthIndex = 0; widthIndex < rawPath.widthElements.length; widthIndex++) {
        coordinates["x" + widthIndex] = rawPath.widthElements[widthIndex] * widthRatio;
      }
    }
    var path = format(
      rawPath.d,
      {
        mx,
        my,
        e: coordinates
      }
    );
    return path;
  };
}
var tokenRegex = /\{([^{}]+)\}/g, objNotationRegex = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g;
function replacer(all2, key, obj) {
  var res = obj;
  key.replace(objNotationRegex, function(all3, name2, quote, quotedName, isFunc) {
    name2 = name2 || quotedName;
    if (res) {
      if (name2 in res) {
        res = res[name2];
      }
      typeof res == "function" && isFunc && (res = res());
    }
  });
  res = (res == null || res == obj ? all2 : res) + "";
  return res;
}
function format(str, obj) {
  return String(str).replace(tokenRegex, function(all2, key) {
    return replacer(all2, key, obj);
  });
}
const DrawModule = {
  __init__: ["bpmnRenderer"],
  bpmnRenderer: ["type", BpmnRenderer],
  textRenderer: ["type", TextRenderer],
  pathMap: ["type", PathMap]
};
function translate$1(template, replacements) {
  replacements = replacements || {};
  return template.replace(/{([^}]+)}/g, function(_2, key) {
    return replacements[key] || "{" + key + "}";
  });
}
const TranslateModule = {
  translate: ["value", translate$1]
};
function pointDistance(a2, b2) {
  if (!a2 || !b2) {
    return -1;
  }
  return Math.sqrt(
    Math.pow(a2.x - b2.x, 2) + Math.pow(a2.y - b2.y, 2)
  );
}
function pointsOnLine(p2, q2, r2, accuracy) {
  if (typeof accuracy === "undefined") {
    accuracy = 5;
  }
  if (!p2 || !q2 || !r2) {
    return false;
  }
  var val = (q2.x - p2.x) * (r2.y - p2.y) - (q2.y - p2.y) * (r2.x - p2.x), dist2 = pointDistance(p2, q2);
  return Math.abs(val / dist2) <= accuracy;
}
var ALIGNED_THRESHOLD = 2;
function pointsAligned(a2, b2) {
  var points = Array.from(arguments).flat();
  const axisMap = {
    "x": "v",
    "y": "h"
  };
  for (const [axis, orientation] of Object.entries(axisMap)) {
    if (pointsAlignedOnAxis(axis, points)) {
      return orientation;
    }
  }
  return false;
}
function pointsAlignedOnAxis(axis, points) {
  const referencePoint = points[0];
  return every$1(points, function(point) {
    return Math.abs(referencePoint[axis] - point[axis]) <= ALIGNED_THRESHOLD;
  });
}
function pointInRect(p2, rect, tolerance) {
  tolerance = tolerance || 0;
  return p2.x > rect.x - tolerance && p2.y > rect.y - tolerance && p2.x < rect.x + rect.width + tolerance && p2.y < rect.y + rect.height + tolerance;
}
function getMidPoint(p2, q2) {
  return {
    x: Math.round(p2.x + (q2.x - p2.x) / 2),
    y: Math.round(p2.y + (q2.y - p2.y) / 2)
  };
}
var p2s = /,?([a-z]),?/gi, toFloat = parseFloat, math = Math, PI = math.PI, mmin = math.min, mmax = math.max, pow = math.pow, abs$7 = math.abs, pathCommand = /([a-z])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?[\s]*,?[\s]*)+)/ig, pathValues = /(-?\d*\.?\d*(?:e[-+]?\d+)?)[\s]*,?[\s]*/ig;
var isArray$1 = Array.isArray || function(o2) {
  return o2 instanceof Array;
};
function hasProperty(obj, property) {
  return Object.prototype.hasOwnProperty.call(obj, property);
}
function clone(obj) {
  if (typeof obj == "function" || Object(obj) !== obj) {
    return obj;
  }
  var res = new obj.constructor();
  for (var key in obj) {
    if (hasProperty(obj, key)) {
      res[key] = clone(obj[key]);
    }
  }
  return res;
}
function repush(array, item) {
  for (var i2 = 0, ii = array.length; i2 < ii; i2++)
    if (array[i2] === item) {
      return array.push(array.splice(i2, 1)[0]);
    }
}
function cacher(f2) {
  function newf() {
    var arg = Array.prototype.slice.call(arguments, 0), args = arg.join("␀"), cache2 = newf.cache = newf.cache || {}, count = newf.count = newf.count || [];
    if (hasProperty(cache2, args)) {
      repush(count, args);
      return cache2[args];
    }
    count.length >= 1e3 && delete cache2[count.shift()];
    count.push(args);
    cache2[args] = f2(...arguments);
    return cache2[args];
  }
  return newf;
}
function parsePathString(pathString) {
  if (!pathString) {
    return null;
  }
  var pth = paths(pathString);
  if (pth.arr) {
    return clone(pth.arr);
  }
  var paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0 }, data = [];
  if (isArray$1(pathString) && isArray$1(pathString[0])) {
    data = clone(pathString);
  }
  if (!data.length) {
    String(pathString).replace(pathCommand, function(a2, b2, c2) {
      var params = [], name2 = b2.toLowerCase();
      c2.replace(pathValues, function(a3, b3) {
        b3 && params.push(+b3);
      });
      if (name2 == "m" && params.length > 2) {
        data.push([b2, ...params.splice(0, 2)]);
        name2 = "l";
        b2 = b2 == "m" ? "l" : "L";
      }
      while (params.length >= paramCounts[name2]) {
        data.push([b2, ...params.splice(0, paramCounts[name2])]);
        if (!paramCounts[name2]) {
          break;
        }
      }
    });
  }
  data.toString = paths.toString;
  pth.arr = clone(data);
  return data;
}
function paths(ps) {
  var p2 = paths.ps = paths.ps || {};
  if (p2[ps]) {
    p2[ps].sleep = 100;
  } else {
    p2[ps] = {
      sleep: 100
    };
  }
  setTimeout(function() {
    for (var key in p2) {
      if (hasProperty(p2, key) && key != ps) {
        p2[key].sleep--;
        !p2[key].sleep && delete p2[key];
      }
    }
  });
  return p2[ps];
}
function rectBBox(x2, y2, width, height) {
  if (arguments.length === 1) {
    y2 = x2.y;
    width = x2.width;
    height = x2.height;
    x2 = x2.x;
  }
  return {
    x: x2,
    y: y2,
    width,
    height,
    x2: x2 + width,
    y2: y2 + height
  };
}
function pathToString() {
  return this.join(",").replace(p2s, "$1");
}
function pathClone(pathArray) {
  var res = clone(pathArray);
  res.toString = pathToString;
  return res;
}
function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2) {
  var t1 = 1 - t2, t13 = pow(t1, 3), t12 = pow(t1, 2), t22 = t2 * t2, t3 = t22 * t2, x2 = t13 * p1x + t12 * 3 * t2 * c1x + t1 * 3 * t2 * t2 * c2x + t3 * p2x, y2 = t13 * p1y + t12 * 3 * t2 * c1y + t1 * 3 * t2 * t2 * c2y + t3 * p2y;
  return {
    x: fixError(x2),
    y: fixError(y2)
  };
}
function bezierBBox(points) {
  var bbox = curveBBox(...points);
  return rectBBox(
    bbox.x0,
    bbox.y0,
    bbox.x1 - bbox.x0,
    bbox.y1 - bbox.y0
  );
}
function isPointInsideBBox$2(bbox, x2, y2) {
  return x2 >= bbox.x && x2 <= bbox.x + bbox.width && y2 >= bbox.y && y2 <= bbox.y + bbox.height;
}
function isBBoxIntersect(bbox1, bbox2) {
  bbox1 = rectBBox(bbox1);
  bbox2 = rectBBox(bbox2);
  return isPointInsideBBox$2(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox$2(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox$2(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox$2(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox$2(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox$2(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox$2(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox$2(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);
}
function base3(t2, p1, p2, p3, p4) {
  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4, t22 = t2 * t1 + 6 * p1 - 12 * p2 + 6 * p3;
  return t2 * t22 - 3 * p1 + 3 * p2;
}
function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z2) {
  if (z2 == null) {
    z2 = 1;
  }
  z2 = z2 > 1 ? 1 : z2 < 0 ? 0 : z2;
  var z22 = z2 / 2, n2 = 12, Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816], Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472], sum = 0;
  for (var i2 = 0; i2 < n2; i2++) {
    var ct = z22 * Tvalues[i2] + z22, xbase = base3(ct, x1, x2, x3, x4), ybase = base3(ct, y1, y2, y3, y4), comb = xbase * xbase + ybase * ybase;
    sum += Cvalues[i2] * math.sqrt(comb);
  }
  return z22 * sum;
}
function intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {
  if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {
    return;
  }
  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4), ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4), denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);
  if (!denominator) {
    return;
  }
  var px = fixError(nx / denominator), py = fixError(ny / denominator), px2 = +px.toFixed(2), py2 = +py.toFixed(2);
  if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {
    return;
  }
  return { x: px, y: py };
}
function fixError(number) {
  return Math.round(number * 1e11) / 1e11;
}
function findBezierIntersections(bez1, bez2, justCount) {
  var bbox1 = bezierBBox(bez1), bbox2 = bezierBBox(bez2);
  if (!isBBoxIntersect(bbox1, bbox2)) {
    return justCount ? 0 : [];
  }
  var l1 = bezlen(...bez1), l2 = bezlen(...bez2), n1 = isLine(bez1) ? 1 : ~~(l1 / 5) || 1, n2 = isLine(bez2) ? 1 : ~~(l2 / 5) || 1, dots1 = [], dots2 = [], xy = {}, res = justCount ? 0 : [];
  for (var i2 = 0; i2 < n1 + 1; i2++) {
    var p2 = findDotsAtSegment(...bez1, i2 / n1);
    dots1.push({ x: p2.x, y: p2.y, t: i2 / n1 });
  }
  for (i2 = 0; i2 < n2 + 1; i2++) {
    p2 = findDotsAtSegment(...bez2, i2 / n2);
    dots2.push({ x: p2.x, y: p2.y, t: i2 / n2 });
  }
  for (i2 = 0; i2 < n1; i2++) {
    for (var j2 = 0; j2 < n2; j2++) {
      var di = dots1[i2], di1 = dots1[i2 + 1], dj = dots2[j2], dj1 = dots2[j2 + 1], ci = abs$7(di1.x - di.x) < 0.01 ? "y" : "x", cj = abs$7(dj1.x - dj.x) < 0.01 ? "y" : "x", is2 = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y), key;
      if (is2) {
        key = is2.x.toFixed(9) + "#" + is2.y.toFixed(9);
        if (xy[key]) {
          continue;
        }
        xy[key] = true;
        var t1 = di.t + abs$7((is2[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t), t2 = dj.t + abs$7((is2[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);
        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {
          if (justCount) {
            res++;
          } else {
            res.push({
              x: is2.x,
              y: is2.y,
              t1,
              t2
            });
          }
        }
      }
    }
  }
  return res;
}
function findPathIntersections(path1, path2, justCount) {
  path1 = pathToCurve(path1);
  path2 = pathToCurve(path2);
  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2, res = justCount ? 0 : [];
  for (var i2 = 0, ii = path1.length; i2 < ii; i2++) {
    var pi = path1[i2];
    if (pi[0] == "M") {
      x1 = x1m = pi[1];
      y1 = y1m = pi[2];
    } else {
      if (pi[0] == "C") {
        bez1 = [x1, y1, ...pi.slice(1)];
        x1 = bez1[6];
        y1 = bez1[7];
      } else {
        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];
        x1 = x1m;
        y1 = y1m;
      }
      for (var j2 = 0, jj = path2.length; j2 < jj; j2++) {
        var pj = path2[j2];
        if (pj[0] == "M") {
          x2 = x2m = pj[1];
          y2 = y2m = pj[2];
        } else {
          if (pj[0] == "C") {
            bez2 = [x2, y2, ...pj.slice(1)];
            x2 = bez2[6];
            y2 = bez2[7];
          } else {
            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];
            x2 = x2m;
            y2 = y2m;
          }
          var intr = findBezierIntersections(bez1, bez2, justCount);
          if (justCount) {
            res += intr;
          } else {
            for (var k2 = 0, kk = intr.length; k2 < kk; k2++) {
              intr[k2].segment1 = i2;
              intr[k2].segment2 = j2;
              intr[k2].bez1 = bez1;
              intr[k2].bez2 = bez2;
            }
            res = res.concat(intr);
          }
        }
      }
    }
  }
  return res;
}
function pathToAbsolute(pathArray) {
  var pth = paths(pathArray);
  if (pth.abs) {
    return pathClone(pth.abs);
  }
  if (!isArray$1(pathArray) || !isArray$1(pathArray && pathArray[0])) {
    pathArray = parsePathString(pathArray);
  }
  if (!pathArray || !pathArray.length) {
    return [["M", 0, 0]];
  }
  var res = [], x2 = 0, y2 = 0, mx = 0, my = 0, start = 0, pa0;
  if (pathArray[0][0] == "M") {
    x2 = +pathArray[0][1];
    y2 = +pathArray[0][2];
    mx = x2;
    my = y2;
    start++;
    res[0] = ["M", x2, y2];
  }
  for (var r2, pa, i2 = start, ii = pathArray.length; i2 < ii; i2++) {
    res.push(r2 = []);
    pa = pathArray[i2];
    pa0 = pa[0];
    if (pa0 != pa0.toUpperCase()) {
      r2[0] = pa0.toUpperCase();
      switch (r2[0]) {
        case "A":
          r2[1] = pa[1];
          r2[2] = pa[2];
          r2[3] = pa[3];
          r2[4] = pa[4];
          r2[5] = pa[5];
          r2[6] = +pa[6] + x2;
          r2[7] = +pa[7] + y2;
          break;
        case "V":
          r2[1] = +pa[1] + y2;
          break;
        case "H":
          r2[1] = +pa[1] + x2;
          break;
        case "M":
          mx = +pa[1] + x2;
          my = +pa[2] + y2;
        default:
          for (var j2 = 1, jj = pa.length; j2 < jj; j2++) {
            r2[j2] = +pa[j2] + (j2 % 2 ? x2 : y2);
          }
      }
    } else {
      for (var k2 = 0, kk = pa.length; k2 < kk; k2++) {
        r2[k2] = pa[k2];
      }
    }
    pa0 = pa0.toUpperCase();
    switch (r2[0]) {
      case "Z":
        x2 = +mx;
        y2 = +my;
        break;
      case "H":
        x2 = r2[1];
        break;
      case "V":
        y2 = r2[1];
        break;
      case "M":
        mx = r2[r2.length - 2];
        my = r2[r2.length - 1];
      default:
        x2 = r2[r2.length - 2];
        y2 = r2[r2.length - 1];
    }
  }
  res.toString = pathToString;
  pth.abs = pathClone(res);
  return res;
}
function isLine(bez) {
  return bez[0] === bez[2] && bez[1] === bez[3] && bez[4] === bez[6] && bez[5] === bez[7];
}
function lineToCurve(x1, y1, x2, y2) {
  return [
    x1,
    y1,
    x2,
    y2,
    x2,
    y2
  ];
}
function qubicToCurve(x1, y1, ax, ay, x2, y2) {
  var _13 = 1 / 3, _23 = 2 / 3;
  return [
    _13 * x1 + _23 * ax,
    _13 * y1 + _23 * ay,
    _13 * x2 + _23 * ax,
    _13 * y2 + _23 * ay,
    x2,
    y2
  ];
}
function arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {
  var _120 = PI * 120 / 180, rad = PI / 180 * (+angle || 0), res = [], xy, rotate2 = cacher(function(x4, y4, rad2) {
    var X = x4 * math.cos(rad2) - y4 * math.sin(rad2), Y = x4 * math.sin(rad2) + y4 * math.cos(rad2);
    return { x: X, y: Y };
  });
  if (!recursive) {
    xy = rotate2(x1, y1, -rad);
    x1 = xy.x;
    y1 = xy.y;
    xy = rotate2(x2, y2, -rad);
    x2 = xy.x;
    y2 = xy.y;
    var x3 = (x1 - x2) / 2, y3 = (y1 - y2) / 2;
    var h2 = x3 * x3 / (rx * rx) + y3 * y3 / (ry * ry);
    if (h2 > 1) {
      h2 = math.sqrt(h2);
      rx = h2 * rx;
      ry = h2 * ry;
    }
    var rx2 = rx * rx, ry2 = ry * ry, k2 = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs$7((rx2 * ry2 - rx2 * y3 * y3 - ry2 * x3 * x3) / (rx2 * y3 * y3 + ry2 * x3 * x3))), cx = k2 * rx * y3 / ry + (x1 + x2) / 2, cy = k2 * -ry * x3 / rx + (y1 + y2) / 2, f1 = math.asin(((y1 - cy) / ry).toFixed(9)), f2 = math.asin(((y2 - cy) / ry).toFixed(9));
    f1 = x1 < cx ? PI - f1 : f1;
    f2 = x2 < cx ? PI - f2 : f2;
    f1 < 0 && (f1 = PI * 2 + f1);
    f2 < 0 && (f2 = PI * 2 + f2);
    if (sweep_flag && f1 > f2) {
      f1 = f1 - PI * 2;
    }
    if (!sweep_flag && f2 > f1) {
      f2 = f2 - PI * 2;
    }
  } else {
    f1 = recursive[0];
    f2 = recursive[1];
    cx = recursive[2];
    cy = recursive[3];
  }
  var df = f2 - f1;
  if (abs$7(df) > _120) {
    var f2old = f2, x2old = x2, y2old = y2;
    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);
    x2 = cx + rx * math.cos(f2);
    y2 = cy + ry * math.sin(f2);
    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);
  }
  df = f2 - f1;
  var c1 = math.cos(f1), s1 = math.sin(f1), c2 = math.cos(f2), s2 = math.sin(f2), t2 = math.tan(df / 4), hx = 4 / 3 * rx * t2, hy = 4 / 3 * ry * t2, m1 = [x1, y1], m2 = [x1 + hx * s1, y1 - hy * c1], m3 = [x2 + hx * s2, y2 - hy * c2], m4 = [x2, y2];
  m2[0] = 2 * m1[0] - m2[0];
  m2[1] = 2 * m1[1] - m2[1];
  if (recursive) {
    return [m2, m3, m4].concat(res);
  } else {
    res = [m2, m3, m4].concat(res).join().split(",");
    var newres = [];
    for (var i2 = 0, ii = res.length; i2 < ii; i2++) {
      newres[i2] = i2 % 2 ? rotate2(res[i2 - 1], res[i2], rad).y : rotate2(res[i2], res[i2 + 1], rad).x;
    }
    return newres;
  }
}
function curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {
  var tvalues = [], bounds = [[], []], a2, b2, c2, t2, t1, t22, b2ac, sqrtb2ac;
  for (var i2 = 0; i2 < 2; ++i2) {
    if (i2 == 0) {
      b2 = 6 * x0 - 12 * x1 + 6 * x2;
      a2 = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;
      c2 = 3 * x1 - 3 * x0;
    } else {
      b2 = 6 * y0 - 12 * y1 + 6 * y2;
      a2 = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;
      c2 = 3 * y1 - 3 * y0;
    }
    if (abs$7(a2) < 1e-12) {
      if (abs$7(b2) < 1e-12) {
        continue;
      }
      t2 = -c2 / b2;
      if (0 < t2 && t2 < 1) {
        tvalues.push(t2);
      }
      continue;
    }
    b2ac = b2 * b2 - 4 * c2 * a2;
    sqrtb2ac = math.sqrt(b2ac);
    if (b2ac < 0) {
      continue;
    }
    t1 = (-b2 + sqrtb2ac) / (2 * a2);
    if (0 < t1 && t1 < 1) {
      tvalues.push(t1);
    }
    t22 = (-b2 - sqrtb2ac) / (2 * a2);
    if (0 < t22 && t22 < 1) {
      tvalues.push(t22);
    }
  }
  var j2 = tvalues.length, jlen = j2, mt;
  while (j2--) {
    t2 = tvalues[j2];
    mt = 1 - t2;
    bounds[0][j2] = mt * mt * mt * x0 + 3 * mt * mt * t2 * x1 + 3 * mt * t2 * t2 * x2 + t2 * t2 * t2 * x3;
    bounds[1][j2] = mt * mt * mt * y0 + 3 * mt * mt * t2 * y1 + 3 * mt * t2 * t2 * y2 + t2 * t2 * t2 * y3;
  }
  bounds[0][jlen] = x0;
  bounds[1][jlen] = y0;
  bounds[0][jlen + 1] = x3;
  bounds[1][jlen + 1] = y3;
  bounds[0].length = bounds[1].length = jlen + 2;
  return {
    x0: mmin(...bounds[0]),
    y0: mmin(...bounds[1]),
    x1: mmax(...bounds[0]),
    y1: mmax(...bounds[1])
  };
}
function pathToCurve(path) {
  var pth = paths(path);
  if (pth.curve) {
    return pathClone(pth.curve);
  }
  var curvedPath = pathToAbsolute(path), attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null }, processPath = function(path2, d2, pathCommand3) {
    var nx, ny;
    if (!path2) {
      return ["C", d2.x, d2.y, d2.x, d2.y, d2.x, d2.y];
    }
    !(path2[0] in { T: 1, Q: 1 }) && (d2.qx = d2.qy = null);
    switch (path2[0]) {
      case "M":
        d2.X = path2[1];
        d2.Y = path2[2];
        break;
      case "A":
        path2 = ["C", ...arcToCurve(d2.x, d2.y, ...path2.slice(1))];
        break;
      case "S":
        if (pathCommand3 == "C" || pathCommand3 == "S") {
          nx = d2.x * 2 - d2.bx;
          ny = d2.y * 2 - d2.by;
        } else {
          nx = d2.x;
          ny = d2.y;
        }
        path2 = ["C", nx, ny, ...path2.slice(1)];
        break;
      case "T":
        if (pathCommand3 == "Q" || pathCommand3 == "T") {
          d2.qx = d2.x * 2 - d2.qx;
          d2.qy = d2.y * 2 - d2.qy;
        } else {
          d2.qx = d2.x;
          d2.qy = d2.y;
        }
        path2 = ["C", ...qubicToCurve(d2.x, d2.y, d2.qx, d2.qy, path2[1], path2[2])];
        break;
      case "Q":
        d2.qx = path2[1];
        d2.qy = path2[2];
        path2 = ["C", ...qubicToCurve(d2.x, d2.y, path2[1], path2[2], path2[3], path2[4])];
        break;
      case "L":
        path2 = ["C", ...lineToCurve(d2.x, d2.y, path2[1], path2[2])];
        break;
      case "H":
        path2 = ["C", ...lineToCurve(d2.x, d2.y, path2[1], d2.y)];
        break;
      case "V":
        path2 = ["C", ...lineToCurve(d2.x, d2.y, d2.x, path2[1])];
        break;
      case "Z":
        path2 = ["C", ...lineToCurve(d2.x, d2.y, d2.X, d2.Y)];
        break;
    }
    return path2;
  }, fixArc = function(pp, i3) {
    if (pp[i3].length > 7) {
      pp[i3].shift();
      var pi = pp[i3];
      while (pi.length) {
        pathCommands[i3] = "A";
        pp.splice(i3++, 0, ["C", ...pi.splice(0, 6)]);
      }
      pp.splice(i3, 1);
      ii = curvedPath.length;
    }
  }, pathCommands = [], pfirst = "", pathCommand2 = "";
  for (var i2 = 0, ii = curvedPath.length; i2 < ii; i2++) {
    curvedPath[i2] && (pfirst = curvedPath[i2][0]);
    if (pfirst != "C") {
      pathCommands[i2] = pfirst;
      i2 && (pathCommand2 = pathCommands[i2 - 1]);
    }
    curvedPath[i2] = processPath(curvedPath[i2], attrs, pathCommand2);
    if (pathCommands[i2] != "A" && pfirst == "C")
      pathCommands[i2] = "C";
    fixArc(curvedPath, i2);
    var seg = curvedPath[i2], seglen = seg.length;
    attrs.x = seg[seglen - 2];
    attrs.y = seg[seglen - 1];
    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;
    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;
  }
  pth.curve = pathClone(curvedPath);
  return curvedPath;
}
function roundBounds(bounds) {
  return {
    x: Math.round(bounds.x),
    y: Math.round(bounds.y),
    width: Math.round(bounds.width),
    height: Math.round(bounds.height)
  };
}
function roundPoint(point) {
  return {
    x: Math.round(point.x),
    y: Math.round(point.y)
  };
}
function asTRBL(bounds) {
  return {
    top: bounds.y,
    right: bounds.x + (bounds.width || 0),
    bottom: bounds.y + (bounds.height || 0),
    left: bounds.x
  };
}
function asBounds(trbl) {
  return {
    x: trbl.left,
    y: trbl.top,
    width: trbl.right - trbl.left,
    height: trbl.bottom - trbl.top
  };
}
function getBoundsMid(bounds) {
  return roundPoint({
    x: bounds.x + (bounds.width || 0) / 2,
    y: bounds.y + (bounds.height || 0) / 2
  });
}
function getConnectionMid(connection) {
  var waypoints = connection.waypoints;
  var parts = waypoints.reduce(function(parts2, point, index2) {
    var lastPoint = waypoints[index2 - 1];
    if (lastPoint) {
      var lastPart = parts2[parts2.length - 1];
      var startLength = lastPart && lastPart.endLength || 0;
      var length2 = distance(lastPoint, point);
      parts2.push({
        start: lastPoint,
        end: point,
        startLength,
        endLength: startLength + length2,
        length: length2
      });
    }
    return parts2;
  }, []);
  var totalLength = parts.reduce(function(length2, part) {
    return length2 + part.length;
  }, 0);
  var midLength = totalLength / 2;
  var i2 = 0;
  var midSegment = parts[i2];
  while (midSegment.endLength < midLength) {
    midSegment = parts[++i2];
  }
  var segmentProgress = (midLength - midSegment.startLength) / midSegment.length;
  var midPoint = {
    x: midSegment.start.x + (midSegment.end.x - midSegment.start.x) * segmentProgress,
    y: midSegment.start.y + (midSegment.end.y - midSegment.start.y) * segmentProgress
  };
  return midPoint;
}
function getMid(element) {
  if (isConnection(element)) {
    return getConnectionMid(element);
  }
  return getBoundsMid(element);
}
function getOrientation(rect, reference, padding) {
  padding = padding || 0;
  if (!isObject$1(padding)) {
    padding = { x: padding, y: padding };
  }
  var rectOrientation = asTRBL(rect), referenceOrientation = asTRBL(reference);
  var top = rectOrientation.bottom + padding.y <= referenceOrientation.top, right = rectOrientation.left - padding.x >= referenceOrientation.right, bottom = rectOrientation.top - padding.y >= referenceOrientation.bottom, left = rectOrientation.right + padding.x <= referenceOrientation.left;
  var vertical = top ? "top" : bottom ? "bottom" : null, horizontal = left ? "left" : right ? "right" : null;
  if (horizontal && vertical) {
    return vertical + "-" + horizontal;
  } else {
    return horizontal || vertical || "intersect";
  }
}
function getElementLineIntersection(elementPath, linePath2, cropStart) {
  var intersections = getIntersections(elementPath, linePath2);
  if (intersections.length === 1) {
    return roundPoint(intersections[0]);
  } else if (intersections.length === 2 && pointDistance(intersections[0], intersections[1]) < 1) {
    return roundPoint(intersections[0]);
  } else if (intersections.length > 1) {
    intersections = sortBy$1(intersections, function(i2) {
      var distance2 = Math.floor(i2.t2 * 100) || 1;
      distance2 = 100 - distance2;
      distance2 = (distance2 < 10 ? "0" : "") + distance2;
      return i2.segment2 + "#" + distance2;
    });
    return roundPoint(intersections[cropStart ? 0 : intersections.length - 1]);
  }
  return null;
}
function getIntersections(a2, b2) {
  return findPathIntersections(a2, b2);
}
function filterRedundantWaypoints(waypoints) {
  waypoints = waypoints.slice();
  var idx = 0, point, previousPoint, nextPoint;
  while (waypoints[idx]) {
    point = waypoints[idx];
    previousPoint = waypoints[idx - 1];
    nextPoint = waypoints[idx + 1];
    if (pointDistance(point, nextPoint) === 0 || pointsOnLine(previousPoint, nextPoint, point)) {
      waypoints.splice(idx, 1);
    } else {
      idx++;
    }
  }
  return waypoints;
}
function distance(a2, b2) {
  return Math.sqrt(Math.pow(a2.x - b2.x, 2) + Math.pow(a2.y - b2.y, 2));
}
function elementData(semantic, di, attrs) {
  return assign$2({
    id: semantic.id,
    type: semantic.$type,
    businessObject: semantic,
    di
  }, attrs);
}
function getWaypoints(di, source2, target) {
  var waypoints = di.waypoint;
  if (!waypoints || waypoints.length < 2) {
    return [getMid(source2), getMid(target)];
  }
  return waypoints.map(function(p2) {
    return { x: p2.x, y: p2.y };
  });
}
function notYetDrawn(semantic, refSemantic, property) {
  return new Error(
    `element ${elementToString(refSemantic)} referenced by ${elementToString(semantic)}#${property} not yet drawn`
  );
}
function BpmnImporter(eventBus, canvas, elementFactory, elementRegistry, textRenderer) {
  this._eventBus = eventBus;
  this._canvas = canvas;
  this._elementFactory = elementFactory;
  this._elementRegistry = elementRegistry;
  this._textRenderer = textRenderer;
}
BpmnImporter.$inject = [
  "eventBus",
  "canvas",
  "elementFactory",
  "elementRegistry",
  "textRenderer"
];
BpmnImporter.prototype.add = function(semantic, di, parentElement) {
  var element, hidden;
  var parentIndex;
  if (is$g(di, "bpmndi:BPMNPlane")) {
    var attrs = is$g(semantic, "bpmn:SubProcess") ? { id: semantic.id + "_plane" } : {};
    element = this._elementFactory.createRoot(elementData(semantic, di, attrs));
    this._canvas.addRootElement(element);
  } else if (is$g(di, "bpmndi:BPMNShape")) {
    var collapsed = !isExpanded(semantic, di), isFrame = isFrameElement(semantic);
    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);
    var bounds = di.bounds;
    element = this._elementFactory.createShape(elementData(semantic, di, {
      collapsed,
      hidden,
      x: Math.round(bounds.x),
      y: Math.round(bounds.y),
      width: Math.round(bounds.width),
      height: Math.round(bounds.height),
      isFrame
    }));
    if (is$g(semantic, "bpmn:BoundaryEvent")) {
      this._attachBoundary(semantic, element);
    }
    if (is$g(semantic, "bpmn:Lane")) {
      parentIndex = 0;
    }
    if (is$g(semantic, "bpmn:DataStoreReference")) {
      if (!isPointInsideBBox$1(parentElement, getMid(bounds))) {
        parentElement = this._canvas.findRoot(parentElement);
      }
    }
    this._canvas.addShape(element, parentElement, parentIndex);
  } else if (is$g(di, "bpmndi:BPMNEdge")) {
    var source2 = this._getSource(semantic), target = this._getTarget(semantic);
    hidden = parentElement && (parentElement.hidden || parentElement.collapsed);
    element = this._elementFactory.createConnection(elementData(semantic, di, {
      hidden,
      source: source2,
      target,
      waypoints: getWaypoints(di, source2, target)
    }));
    if (is$g(semantic, "bpmn:DataAssociation")) {
      parentElement = this._canvas.findRoot(parentElement);
    }
    this._canvas.addConnection(element, parentElement, parentIndex);
  } else {
    throw new Error(
      `unknown di ${elementToString(di)} for element ${elementToString(semantic)}`
    );
  }
  if (isLabelExternal(semantic) && getLabel(element)) {
    this.addLabel(semantic, di, element);
  }
  this._eventBus.fire("bpmnElement.added", { element });
  return element;
};
BpmnImporter.prototype._attachBoundary = function(boundarySemantic, boundaryElement) {
  var hostSemantic = boundarySemantic.attachedToRef;
  if (!hostSemantic) {
    throw new Error(
      `missing ${elementToString(boundarySemantic)}#attachedToRef`
    );
  }
  var host = this._elementRegistry.get(hostSemantic.id), attachers = host && host.attachers;
  if (!host) {
    throw notYetDrawn(boundarySemantic, hostSemantic, "attachedToRef");
  }
  boundaryElement.host = host;
  if (!attachers) {
    host.attachers = attachers = [];
  }
  if (attachers.indexOf(boundaryElement) === -1) {
    attachers.push(boundaryElement);
  }
};
BpmnImporter.prototype.addLabel = function(semantic, di, element) {
  var bounds, text, label;
  bounds = getExternalLabelBounds(di, element);
  text = getLabel(element);
  if (text) {
    bounds = this._textRenderer.getExternalLabelBounds(bounds, text);
  }
  label = this._elementFactory.createLabel(elementData(semantic, di, {
    id: semantic.id + "_label",
    labelTarget: element,
    type: "label",
    hidden: element.hidden || !getLabel(element),
    x: Math.round(bounds.x),
    y: Math.round(bounds.y),
    width: Math.round(bounds.width),
    height: Math.round(bounds.height)
  }));
  return this._canvas.addShape(label, element.parent);
};
BpmnImporter.prototype._getConnectedElement = function(semantic, side) {
  var element, refSemantic, type = semantic.$type;
  refSemantic = semantic[side + "Ref"];
  if (side === "source" && type === "bpmn:DataInputAssociation") {
    refSemantic = refSemantic && refSemantic[0];
  }
  if (side === "source" && type === "bpmn:DataOutputAssociation" || side === "target" && type === "bpmn:DataInputAssociation") {
    refSemantic = semantic.$parent;
  }
  element = refSemantic && this._getElement(refSemantic);
  if (element) {
    return element;
  }
  if (refSemantic) {
    throw notYetDrawn(semantic, refSemantic, side + "Ref");
  } else {
    throw new Error(
      `${elementToString(semantic)}#${side} Ref not specified`
    );
  }
};
BpmnImporter.prototype._getSource = function(semantic) {
  return this._getConnectedElement(semantic, "source");
};
BpmnImporter.prototype._getTarget = function(semantic) {
  return this._getConnectedElement(semantic, "target");
};
BpmnImporter.prototype._getElement = function(semantic) {
  return this._elementRegistry.get(semantic.id);
};
function isPointInsideBBox$1(bbox, point) {
  var x2 = point.x, y2 = point.y;
  return x2 >= bbox.x && x2 <= bbox.x + bbox.width && y2 >= bbox.y && y2 <= bbox.y + bbox.height;
}
function isFrameElement(semantic) {
  return is$g(semantic, "bpmn:Group");
}
const ImportModule = {
  __depends__: [
    TranslateModule
  ],
  bpmnImporter: ["type", BpmnImporter]
};
const CoreModule = {
  __depends__: [
    DrawModule,
    ImportModule
  ]
};
function getParents$1(elements) {
  return filter$1(elements, function(element) {
    return !find$1(elements, function(e2) {
      return e2 !== element && getParent$1(element, e2);
    });
  });
}
function getParent$1(element, parent) {
  if (!parent) {
    return;
  }
  if (element === parent) {
    return parent;
  }
  if (!element.parent) {
    return;
  }
  return getParent$1(element.parent, parent);
}
function add(elements, element, unique) {
  var canAdd = !unique || elements.indexOf(element) === -1;
  if (canAdd) {
    elements.push(element);
  }
  return canAdd;
}
function eachElement(elements, fn, depth) {
  depth = depth || 0;
  if (!isArray$3(elements)) {
    elements = [elements];
  }
  forEach$2(elements, function(s2, i2) {
    var filter2 = fn(s2, i2, depth);
    if (isArray$3(filter2) && filter2.length) {
      eachElement(filter2, fn, depth + 1);
    }
  });
}
function selfAndChildren(elements, unique, maxDepth) {
  var result = [], processedChildren = [];
  eachElement(elements, function(element, i2, depth) {
    add(result, element, unique);
    var children = element.children;
    {
      if (children && add(processedChildren, children, unique)) {
        return children;
      }
    }
  });
  return result;
}
function selfAndAllChildren(elements, allowDuplicates) {
  return selfAndChildren(elements, !allowDuplicates);
}
function getClosure(elements, isTopLevel, closure) {
  if (isUndefined$2(isTopLevel)) {
    isTopLevel = true;
  }
  if (isObject$1(isTopLevel)) {
    closure = isTopLevel;
    isTopLevel = true;
  }
  closure = closure || {};
  var allShapes = copyObject(closure.allShapes), allConnections = copyObject(closure.allConnections), enclosedElements = copyObject(closure.enclosedElements), enclosedConnections = copyObject(closure.enclosedConnections);
  var topLevel = copyObject(
    closure.topLevel,
    isTopLevel && groupBy$1(elements, function(e2) {
      return e2.id;
    })
  );
  function handleConnection(c2) {
    if (topLevel[c2.source.id] && topLevel[c2.target.id]) {
      topLevel[c2.id] = [c2];
    }
    if (allShapes[c2.source.id] && allShapes[c2.target.id]) {
      enclosedConnections[c2.id] = enclosedElements[c2.id] = c2;
    }
    allConnections[c2.id] = c2;
  }
  function handleElement(element) {
    enclosedElements[element.id] = element;
    if (element.waypoints) {
      enclosedConnections[element.id] = allConnections[element.id] = element;
    } else {
      allShapes[element.id] = element;
      forEach$2(element.incoming, handleConnection);
      forEach$2(element.outgoing, handleConnection);
      return element.children;
    }
  }
  eachElement(elements, handleElement);
  return {
    allShapes,
    allConnections,
    topLevel,
    enclosedConnections,
    enclosedElements
  };
}
function getBBox(elements, stopRecursion) {
  stopRecursion = !!stopRecursion;
  if (!isArray$3(elements)) {
    elements = [elements];
  }
  var minX, minY, maxX, maxY;
  forEach$2(elements, function(element) {
    var bbox = element;
    if (element.waypoints && !stopRecursion) {
      bbox = getBBox(element.waypoints, true);
    }
    var x2 = bbox.x, y2 = bbox.y, height = bbox.height || 0, width = bbox.width || 0;
    if (x2 < minX || minX === void 0) {
      minX = x2;
    }
    if (y2 < minY || minY === void 0) {
      minY = y2;
    }
    if (x2 + width > maxX || maxX === void 0) {
      maxX = x2 + width;
    }
    if (y2 + height > maxY || maxY === void 0) {
      maxY = y2 + height;
    }
  });
  return {
    x: minX,
    y: minY,
    height: maxY - minY,
    width: maxX - minX
  };
}
function getEnclosedElements(elements, bbox) {
  var filteredElements = {};
  forEach$2(elements, function(element) {
    var e2 = element;
    if (e2.waypoints) {
      e2 = getBBox(e2);
    }
    if (!isNumber$1(bbox.y) && e2.x > bbox.x) {
      filteredElements[element.id] = element;
    }
    if (!isNumber$1(bbox.x) && e2.y > bbox.y) {
      filteredElements[element.id] = element;
    }
    if (e2.x > bbox.x && e2.y > bbox.y) {
      if (isNumber$1(bbox.width) && isNumber$1(bbox.height) && e2.width + e2.x < bbox.width + bbox.x && e2.height + e2.y < bbox.height + bbox.y) {
        filteredElements[element.id] = element;
      } else if (!isNumber$1(bbox.width) || !isNumber$1(bbox.height)) {
        filteredElements[element.id] = element;
      }
    }
  });
  return filteredElements;
}
function getType(element) {
  if ("waypoints" in element) {
    return "connection";
  }
  if ("x" in element) {
    return "shape";
  }
  return "root";
}
function copyObject(src1, src2) {
  return assign$2({}, src1 || {}, src2 || {});
}
function IdGenerator(prefix2) {
  this._counter = 0;
  this._prefix = (prefix2 ? prefix2 + "-" : "") + Math.floor(Math.random() * 1e9) + "-";
}
IdGenerator.prototype.next = function() {
  return this._prefix + ++this._counter;
};
var ids$1 = new IdGenerator("ov");
var LOW_PRIORITY$r = 500;
function Overlays(config2, eventBus, canvas, elementRegistry) {
  this._eventBus = eventBus;
  this._canvas = canvas;
  this._elementRegistry = elementRegistry;
  this._ids = ids$1;
  this._overlayDefaults = assign$2({
    // no show constraints
    show: null,
    // always scale
    scale: true
  }, config2 && config2.defaults);
  this._overlays = {};
  this._overlayContainers = [];
  this._overlayRoot = createRoot$1(canvas.getContainer());
  this._init();
}
Overlays.$inject = [
  "config.overlays",
  "eventBus",
  "canvas",
  "elementRegistry"
];
Overlays.prototype.get = function(search) {
  if (isString$1(search)) {
    search = { id: search };
  }
  if (isString$1(search.element)) {
    search.element = this._elementRegistry.get(search.element);
  }
  if (search.element) {
    var container = this._getOverlayContainer(search.element, true);
    if (container) {
      return search.type ? filter$1(container.overlays, matchPattern$1({ type: search.type })) : container.overlays.slice();
    } else {
      return [];
    }
  } else if (search.type) {
    return filter$1(this._overlays, matchPattern$1({ type: search.type }));
  } else {
    return search.id ? this._overlays[search.id] : null;
  }
};
Overlays.prototype.add = function(element, type, overlay) {
  if (isObject$1(type)) {
    overlay = type;
    type = null;
  }
  if (!element.id) {
    element = this._elementRegistry.get(element);
  }
  if (!overlay.position) {
    throw new Error("must specifiy overlay position");
  }
  if (!overlay.html) {
    throw new Error("must specifiy overlay html");
  }
  if (!element) {
    throw new Error("invalid element specified");
  }
  var id = this._ids.next();
  overlay = assign$2({}, this._overlayDefaults, overlay, {
    id,
    type,
    element,
    html: overlay.html
  });
  this._addOverlay(overlay);
  return id;
};
Overlays.prototype.remove = function(filter2) {
  var overlays = this.get(filter2) || [];
  if (!isArray$3(overlays)) {
    overlays = [overlays];
  }
  var self2 = this;
  forEach$2(overlays, function(overlay) {
    var container = self2._getOverlayContainer(overlay.element, true);
    if (overlay) {
      remove$1(overlay.html);
      remove$1(overlay.htmlContainer);
      delete overlay.htmlContainer;
      delete overlay.element;
      delete self2._overlays[overlay.id];
    }
    if (container) {
      var idx = container.overlays.indexOf(overlay);
      if (idx !== -1) {
        container.overlays.splice(idx, 1);
      }
    }
  });
};
Overlays.prototype.isShown = function() {
  return this._overlayRoot.style.display !== "none";
};
Overlays.prototype.show = function() {
  setVisible$1(this._overlayRoot);
};
Overlays.prototype.hide = function() {
  setVisible$1(this._overlayRoot, false);
};
Overlays.prototype.clear = function() {
  this._overlays = {};
  this._overlayContainers = [];
  clear$1(this._overlayRoot);
};
Overlays.prototype._updateOverlayContainer = function(container) {
  var element = container.element, html = container.html;
  var x2 = element.x, y2 = element.y;
  if (element.waypoints) {
    var bbox = getBBox(element);
    x2 = bbox.x;
    y2 = bbox.y;
  }
  setPosition$1(html, x2, y2);
  attr$1(container.html, "data-container-id", element.id);
};
Overlays.prototype._updateOverlay = function(overlay) {
  var position = overlay.position, htmlContainer = overlay.htmlContainer, element = overlay.element;
  var left = position.left, top = position.top;
  if (position.right !== void 0) {
    var width;
    if (element.waypoints) {
      width = getBBox(element).width;
    } else {
      width = element.width;
    }
    left = position.right * -1 + width;
  }
  if (position.bottom !== void 0) {
    var height;
    if (element.waypoints) {
      height = getBBox(element).height;
    } else {
      height = element.height;
    }
    top = position.bottom * -1 + height;
  }
  setPosition$1(htmlContainer, left || 0, top || 0);
  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());
};
Overlays.prototype._createOverlayContainer = function(element) {
  var html = domify$1('<div class="djs-overlays" />');
  assign$1(html, { position: "absolute" });
  this._overlayRoot.appendChild(html);
  var container = {
    html,
    element,
    overlays: []
  };
  this._updateOverlayContainer(container);
  this._overlayContainers.push(container);
  return container;
};
Overlays.prototype._updateRoot = function(viewbox) {
  var scale = viewbox.scale || 1;
  var matrix = "matrix(" + [
    scale,
    0,
    0,
    scale,
    -1 * viewbox.x * scale,
    -1 * viewbox.y * scale
  ].join(",") + ")";
  setTransform(this._overlayRoot, matrix);
};
Overlays.prototype._getOverlayContainer = function(element, raw) {
  var container = find$1(this._overlayContainers, function(c2) {
    return c2.element === element;
  });
  if (!container && !raw) {
    return this._createOverlayContainer(element);
  }
  return container;
};
Overlays.prototype._addOverlay = function(overlay) {
  var id = overlay.id, element = overlay.element, html = overlay.html, htmlContainer, overlayContainer;
  if (html.get && html.constructor.prototype.jquery) {
    html = html.get(0);
  }
  if (isString$1(html)) {
    html = domify$1(html);
  }
  overlayContainer = this._getOverlayContainer(element);
  htmlContainer = domify$1('<div class="djs-overlay" data-overlay-id="' + id + '">');
  assign$1(htmlContainer, { position: "absolute" });
  htmlContainer.appendChild(html);
  if (overlay.type) {
    classes$1(htmlContainer).add("djs-overlay-" + overlay.type);
  }
  var elementRoot = this._canvas.findRoot(element);
  var activeRoot = this._canvas.getRootElement();
  setVisible$1(htmlContainer, elementRoot === activeRoot);
  overlay.htmlContainer = htmlContainer;
  overlayContainer.overlays.push(overlay);
  overlayContainer.html.appendChild(htmlContainer);
  this._overlays[id] = overlay;
  this._updateOverlay(overlay);
  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());
};
Overlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {
  var show = overlay.show, rootElement = this._canvas.findRoot(overlay.element), minZoom = show && show.minZoom, maxZoom = show && show.maxZoom, htmlContainer = overlay.htmlContainer, activeRootElement = this._canvas.getRootElement(), visible = true;
  if (rootElement !== activeRootElement) {
    visible = false;
  } else if (show) {
    if (isDefined$1(minZoom) && minZoom > viewbox.scale || isDefined$1(maxZoom) && maxZoom < viewbox.scale) {
      visible = false;
    }
  }
  setVisible$1(htmlContainer, visible);
  this._updateOverlayScale(overlay, viewbox);
};
Overlays.prototype._updateOverlayScale = function(overlay, viewbox) {
  var shouldScale = overlay.scale, minScale, maxScale, htmlContainer = overlay.htmlContainer;
  var scale, transform2 = "";
  if (shouldScale !== true) {
    if (shouldScale === false) {
      minScale = 1;
      maxScale = 1;
    } else {
      minScale = shouldScale.min;
      maxScale = shouldScale.max;
    }
    if (isDefined$1(minScale) && viewbox.scale < minScale) {
      scale = (1 / viewbox.scale || 1) * minScale;
    }
    if (isDefined$1(maxScale) && viewbox.scale > maxScale) {
      scale = (1 / viewbox.scale || 1) * maxScale;
    }
  }
  if (isDefined$1(scale)) {
    transform2 = "scale(" + scale + "," + scale + ")";
  }
  setTransform(htmlContainer, transform2);
};
Overlays.prototype._updateOverlaysVisibilty = function(viewbox) {
  var self2 = this;
  forEach$2(this._overlays, function(overlay) {
    self2._updateOverlayVisibilty(overlay, viewbox);
  });
};
Overlays.prototype._init = function() {
  var eventBus = this._eventBus;
  var self2 = this;
  function updateViewbox(viewbox) {
    self2._updateRoot(viewbox);
    self2._updateOverlaysVisibilty(viewbox);
    self2.show();
  }
  eventBus.on("canvas.viewbox.changing", function(event2) {
    self2.hide();
  });
  eventBus.on("canvas.viewbox.changed", function(event2) {
    updateViewbox(event2.viewbox);
  });
  eventBus.on(["shape.remove", "connection.remove"], function(e2) {
    var element = e2.element;
    var overlays = self2.get({ element });
    forEach$2(overlays, function(o2) {
      self2.remove(o2.id);
    });
    var container = self2._getOverlayContainer(element);
    if (container) {
      remove$1(container.html);
      var i2 = self2._overlayContainers.indexOf(container);
      if (i2 !== -1) {
        self2._overlayContainers.splice(i2, 1);
      }
    }
  });
  eventBus.on("element.changed", LOW_PRIORITY$r, function(e2) {
    var element = e2.element;
    var container = self2._getOverlayContainer(element, true);
    if (container) {
      forEach$2(container.overlays, function(overlay) {
        self2._updateOverlay(overlay);
      });
      self2._updateOverlayContainer(container);
    }
  });
  eventBus.on("element.marker.update", function(e2) {
    var container = self2._getOverlayContainer(e2.element, true);
    if (container) {
      classes$1(container.html)[e2.add ? "add" : "remove"](e2.marker);
    }
  });
  eventBus.on("root.set", function() {
    self2._updateOverlaysVisibilty(self2._canvas.viewbox());
  });
  eventBus.on("diagram.clear", this.clear, this);
};
function createRoot$1(parentNode) {
  var root = domify$1(
    '<div class="djs-overlay-container" />'
  );
  assign$1(root, {
    position: "absolute",
    width: 0,
    height: 0
  });
  parentNode.insertBefore(root, parentNode.firstChild);
  return root;
}
function setPosition$1(el, x2, y2) {
  assign$1(el, { left: x2 + "px", top: y2 + "px" });
}
function setVisible$1(el, visible) {
  el.style.display = visible === false ? "none" : "";
}
function setTransform(el, transform2) {
  el.style["transform-origin"] = "top left";
  ["", "-ms-", "-webkit-"].forEach(function(prefix2) {
    el.style[prefix2 + "transform"] = transform2;
  });
}
const OverlaysModule = {
  __init__: ["overlays"],
  overlays: ["type", Overlays]
};
function ChangeSupport(eventBus, canvas, elementRegistry, graphicsFactory) {
  eventBus.on("element.changed", function(event2) {
    var element = event2.element;
    if (element.parent || element === canvas.getRootElement()) {
      event2.gfx = elementRegistry.getGraphics(element);
    }
    if (!event2.gfx) {
      return;
    }
    eventBus.fire(getType(element) + ".changed", event2);
  });
  eventBus.on("elements.changed", function(event2) {
    var elements = event2.elements;
    elements.forEach(function(e2) {
      eventBus.fire("element.changed", { element: e2 });
    });
    graphicsFactory.updateContainments(elements);
  });
  eventBus.on("shape.changed", function(event2) {
    graphicsFactory.update("shape", event2.element, event2.gfx);
  });
  eventBus.on("connection.changed", function(event2) {
    graphicsFactory.update("connection", event2.element, event2.gfx);
  });
}
ChangeSupport.$inject = [
  "eventBus",
  "canvas",
  "elementRegistry",
  "graphicsFactory"
];
const ChangeSupportModule = {
  __init__: ["changeSupport"],
  changeSupport: ["type", ChangeSupport]
};
var DEFAULT_PRIORITY$5 = 1e3;
function CommandInterceptor(eventBus) {
  this._eventBus = eventBus;
}
CommandInterceptor.$inject = ["eventBus"];
function unwrapEvent(fn, that) {
  return function(event2) {
    return fn.call(that || null, event2.context, event2.command, event2);
  };
}
CommandInterceptor.prototype.on = function(events2, hook, priority, handlerFn, unwrap, that) {
  if (isFunction$1(hook) || isNumber$1(hook)) {
    that = unwrap;
    unwrap = handlerFn;
    handlerFn = priority;
    priority = hook;
    hook = null;
  }
  if (isFunction$1(priority)) {
    that = unwrap;
    unwrap = handlerFn;
    handlerFn = priority;
    priority = DEFAULT_PRIORITY$5;
  }
  if (isObject$1(unwrap)) {
    that = unwrap;
    unwrap = false;
  }
  if (!isFunction$1(handlerFn)) {
    throw new Error("handlerFn must be a function");
  }
  if (!isArray$3(events2)) {
    events2 = [events2];
  }
  var eventBus = this._eventBus;
  forEach$2(events2, function(event2) {
    var fullEvent = ["commandStack", event2, hook].filter(function(e2) {
      return e2;
    }).join(".");
    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);
  });
};
CommandInterceptor.prototype.canExecute = createHook("canExecute");
CommandInterceptor.prototype.preExecute = createHook("preExecute");
CommandInterceptor.prototype.preExecuted = createHook("preExecuted");
CommandInterceptor.prototype.execute = createHook("execute");
CommandInterceptor.prototype.executed = createHook("executed");
CommandInterceptor.prototype.postExecute = createHook("postExecute");
CommandInterceptor.prototype.postExecuted = createHook("postExecuted");
CommandInterceptor.prototype.revert = createHook("revert");
CommandInterceptor.prototype.reverted = createHook("reverted");
function createHook(hook) {
  const hookFn = function(events2, priority, handlerFn, unwrap, that) {
    if (isFunction$1(events2) || isNumber$1(events2)) {
      that = unwrap;
      unwrap = handlerFn;
      handlerFn = priority;
      priority = events2;
      events2 = null;
    }
    this.on(events2, hook, priority, handlerFn, unwrap, that);
  };
  return hookFn;
}
function RootElementsBehavior(canvas, injector) {
  injector.invoke(CommandInterceptor, this);
  this.executed(function(event2) {
    var context = event2.context;
    if (context.rootElement) {
      canvas.setRootElement(context.rootElement);
    } else {
      context.rootElement = canvas.getRootElement();
    }
  });
  this.revert(function(event2) {
    var context = event2.context;
    if (context.rootElement) {
      canvas.setRootElement(context.rootElement);
    }
  });
}
e$3(RootElementsBehavior, CommandInterceptor);
RootElementsBehavior.$inject = ["canvas", "injector"];
const RootElementsModule = {
  __init__: ["rootElementsBehavior"],
  rootElementsBehavior: ["type", RootElementsBehavior]
};
function escapeCSS(str) {
  return CSS.escape(str);
}
var HTML_ESCAPE_MAP = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function escapeHTML$1(str) {
  str = "" + str;
  return str && str.replace(/[&<>"']/g, function(match) {
    return HTML_ESCAPE_MAP[match];
  });
}
var planeSuffix = "_plane";
function getShapeIdFromPlane(element) {
  var id = element.id;
  return removePlaneSuffix(id);
}
function getPlaneIdFromShape(element) {
  var id = element.id;
  if (is$g(element, "bpmn:SubProcess")) {
    return addPlaneSuffix(id);
  }
  return id;
}
function toPlaneId(id) {
  return addPlaneSuffix(id);
}
function isPlane(element) {
  var di = getDi(element);
  return is$g(di, "bpmndi:BPMNPlane");
}
function addPlaneSuffix(id) {
  return id + planeSuffix;
}
function removePlaneSuffix(id) {
  return id.replace(new RegExp(planeSuffix + "$"), "");
}
var OPEN_CLASS = "bjs-breadcrumbs-shown";
function DrilldownBreadcrumbs(eventBus, elementRegistry, canvas) {
  var breadcrumbs = domify$1('<ul class="bjs-breadcrumbs"></ul>');
  var container = canvas.getContainer();
  var containerClasses = classes$1(container);
  container.appendChild(breadcrumbs);
  var businessObjectParents = [];
  eventBus.on("element.changed", function(event2) {
    var shape = event2.element, businessObject = getBusinessObject(shape);
    var isPresent = find$1(businessObjectParents, function(element) {
      return element === businessObject;
    });
    if (!isPresent) {
      return;
    }
    updateBreadcrumbs();
  });
  function updateBreadcrumbs(element) {
    if (element) {
      businessObjectParents = getBusinessObjectParentChain(element);
    }
    var path = businessObjectParents.map(function(parent) {
      var title = escapeHTML$1(parent.name || parent.id);
      var link = domify$1('<li><span class="bjs-crumb"><a title="' + title + '">' + title + "</a></span></li>");
      var parentPlane = canvas.findRoot(getPlaneIdFromShape(parent)) || canvas.findRoot(parent.id);
      if (!parentPlane && is$g(parent, "bpmn:Process")) {
        var participant = elementRegistry.find(function(element2) {
          var businessObject = getBusinessObject(element2);
          return businessObject && businessObject.get("processRef") && businessObject.get("processRef") === parent;
        });
        parentPlane = canvas.findRoot(participant.id);
      }
      link.addEventListener("click", function() {
        canvas.setRootElement(parentPlane);
      });
      return link;
    });
    breadcrumbs.innerHTML = "";
    var visible = path.length > 1;
    containerClasses.toggle(OPEN_CLASS, visible);
    path.forEach(function(element2) {
      breadcrumbs.appendChild(element2);
    });
  }
  eventBus.on("root.set", function(event2) {
    updateBreadcrumbs(event2.element);
  });
}
DrilldownBreadcrumbs.$inject = ["eventBus", "elementRegistry", "canvas"];
function getBusinessObjectParentChain(child) {
  var businessObject = getBusinessObject(child);
  var parents = [];
  for (var element = businessObject; element; element = element.$parent) {
    if (is$g(element, "bpmn:SubProcess") || is$g(element, "bpmn:Process")) {
      parents.push(element);
    }
  }
  return parents.reverse();
}
function DrilldownCentering(eventBus, canvas) {
  var currentRoot = null;
  var positionMap = new Map$1();
  eventBus.on("root.set", function(event2) {
    var newRoot = event2.element;
    var currentViewbox = canvas.viewbox();
    var storedViewbox = positionMap.get(newRoot);
    positionMap.set(currentRoot, {
      x: currentViewbox.x,
      y: currentViewbox.y,
      zoom: currentViewbox.scale
    });
    currentRoot = newRoot;
    if (is$g(newRoot, "bpmn:Collaboration") && !storedViewbox) {
      return;
    }
    storedViewbox = storedViewbox || { x: 0, y: 0, zoom: 1 };
    var dx = (currentViewbox.x - storedViewbox.x) * currentViewbox.scale, dy = (currentViewbox.y - storedViewbox.y) * currentViewbox.scale;
    if (dx !== 0 || dy !== 0) {
      canvas.scroll({
        dx,
        dy
      });
    }
    if (storedViewbox.zoom !== currentViewbox.scale) {
      canvas.zoom(storedViewbox.zoom, { x: 0, y: 0 });
    }
  });
  eventBus.on("diagram.clear", function() {
    positionMap.clear();
    currentRoot = null;
  });
}
DrilldownCentering.$inject = ["eventBus", "canvas"];
function Map$1() {
  this._entries = [];
  this.set = function(key, value) {
    var found = false;
    for (var k2 in this._entries) {
      if (this._entries[k2][0] === key) {
        this._entries[k2][1] = value;
        found = true;
        break;
      }
    }
    if (!found) {
      this._entries.push([key, value]);
    }
  };
  this.get = function(key) {
    for (var k2 in this._entries) {
      if (this._entries[k2][0] === key) {
        return this._entries[k2][1];
      }
    }
    return null;
  };
  this.clear = function() {
    this._entries.length = 0;
  };
  this.remove = function(key) {
    var idx = -1;
    for (var k2 in this._entries) {
      if (this._entries[k2][0] === key) {
        idx = k2;
        break;
      }
    }
    if (idx !== -1) {
      this._entries.splice(idx, 1);
    }
  };
}
var DEFAULT_POSITION$1 = {
  x: 180,
  y: 160
};
function SubprocessCompatibility(eventBus, moddle) {
  this._eventBus = eventBus;
  this._moddle = moddle;
  var self2 = this;
  eventBus.on("import.render.start", 1500, function(e2, context) {
    self2._handleImport(context.definitions);
  });
}
SubprocessCompatibility.prototype._handleImport = function(definitions) {
  if (!definitions.diagrams) {
    return;
  }
  var self2 = this;
  this._definitions = definitions;
  this._processToDiagramMap = {};
  definitions.diagrams.forEach(function(diagram) {
    if (!diagram.plane || !diagram.plane.bpmnElement) {
      return;
    }
    self2._processToDiagramMap[diagram.plane.bpmnElement.id] = diagram;
  });
  var newDiagrams = [];
  definitions.diagrams.forEach(function(diagram) {
    var createdDiagrams = self2._createNewDiagrams(diagram.plane);
    Array.prototype.push.apply(newDiagrams, createdDiagrams);
  });
  newDiagrams.forEach(function(diagram) {
    self2._movePlaneElementsToOrigin(diagram.plane);
  });
};
SubprocessCompatibility.prototype._createNewDiagrams = function(plane) {
  var self2 = this;
  var collapsedElements = [];
  var elementsToMove = [];
  plane.get("planeElement").forEach(function(diElement) {
    var businessObject = diElement.bpmnElement;
    if (!businessObject) {
      return;
    }
    var parent = businessObject.$parent;
    if (is$g(businessObject, "bpmn:SubProcess") && !diElement.isExpanded) {
      collapsedElements.push(businessObject);
    }
    if (shouldMoveToPlane(businessObject, plane)) {
      elementsToMove.push({ diElement, parent });
    }
  });
  var newDiagrams = [];
  collapsedElements.forEach(function(element) {
    if (!self2._processToDiagramMap[element.id]) {
      var diagram = self2._createDiagram(element);
      self2._processToDiagramMap[element.id] = diagram;
      newDiagrams.push(diagram);
    }
  });
  elementsToMove.forEach(function(element) {
    var diElement = element.diElement;
    var parent = element.parent;
    while (parent && collapsedElements.indexOf(parent) === -1) {
      parent = parent.$parent;
    }
    if (!parent) {
      return;
    }
    var diagram = self2._processToDiagramMap[parent.id];
    self2._moveToDiPlane(diElement, diagram.plane);
  });
  return newDiagrams;
};
SubprocessCompatibility.prototype._movePlaneElementsToOrigin = function(plane) {
  var elements = plane.get("planeElement");
  var planeBounds = getPlaneBounds(plane);
  var offset = {
    x: planeBounds.x - DEFAULT_POSITION$1.x,
    y: planeBounds.y - DEFAULT_POSITION$1.y
  };
  elements.forEach(function(diElement) {
    if (diElement.waypoint) {
      diElement.waypoint.forEach(function(waypoint) {
        waypoint.x = waypoint.x - offset.x;
        waypoint.y = waypoint.y - offset.y;
      });
    } else if (diElement.bounds) {
      diElement.bounds.x = diElement.bounds.x - offset.x;
      diElement.bounds.y = diElement.bounds.y - offset.y;
    }
  });
};
SubprocessCompatibility.prototype._moveToDiPlane = function(diElement, newPlane) {
  var containingDiagram = findRootDiagram(diElement);
  var parentPlaneElement = containingDiagram.plane.get("planeElement");
  parentPlaneElement.splice(parentPlaneElement.indexOf(diElement), 1);
  newPlane.get("planeElement").push(diElement);
};
SubprocessCompatibility.prototype._createDiagram = function(businessObject) {
  var plane = this._moddle.create("bpmndi:BPMNPlane", {
    bpmnElement: businessObject
  });
  var diagram = this._moddle.create("bpmndi:BPMNDiagram", {
    plane
  });
  plane.$parent = diagram;
  plane.bpmnElement = businessObject;
  diagram.$parent = this._definitions;
  this._definitions.diagrams.push(diagram);
  return diagram;
};
SubprocessCompatibility.$inject = ["eventBus", "moddle"];
function findRootDiagram(element) {
  if (is$g(element, "bpmndi:BPMNDiagram")) {
    return element;
  } else {
    return findRootDiagram(element.$parent);
  }
}
function getPlaneBounds(plane) {
  var planeTrbl = {
    top: Infinity,
    right: -Infinity,
    bottom: -Infinity,
    left: Infinity
  };
  plane.planeElement.forEach(function(element) {
    if (!element.bounds) {
      return;
    }
    var trbl = asTRBL(element.bounds);
    planeTrbl.top = Math.min(trbl.top, planeTrbl.top);
    planeTrbl.left = Math.min(trbl.left, planeTrbl.left);
  });
  return asBounds(planeTrbl);
}
function shouldMoveToPlane(businessObject, plane) {
  var parent = businessObject.$parent;
  if (!is$g(parent, "bpmn:SubProcess") || parent === plane.bpmnElement) {
    return false;
  }
  if (isAny$7(businessObject, ["bpmn:DataInputAssociation", "bpmn:DataOutputAssociation"])) {
    return false;
  }
  return true;
}
var LOW_PRIORITY$q = 250;
var ARROW_DOWN_SVG = '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.81801948,3.50735931 L10.4996894,9.1896894 L10.5,4 L12,4 L12,12 L4,12 L4,10.5 L9.6896894,10.4996894 L3.75735931,4.56801948 C3.46446609,4.27512627 3.46446609,3.80025253 3.75735931,3.50735931 C4.05025253,3.21446609 4.52512627,3.21446609 4.81801948,3.50735931 Z"/></svg>';
var EMPTY_MARKER = "bjs-drilldown-empty";
function DrilldownOverlayBehavior(canvas, eventBus, elementRegistry, overlays) {
  CommandInterceptor.call(this, eventBus);
  this._canvas = canvas;
  this._eventBus = eventBus;
  this._elementRegistry = elementRegistry;
  this._overlays = overlays;
  var self2 = this;
  this.executed("shape.toggleCollapse", LOW_PRIORITY$q, function(context) {
    var shape = context.shape;
    if (self2._canDrillDown(shape)) {
      self2._addOverlay(shape);
    } else {
      self2._removeOverlay(shape);
    }
  }, true);
  this.reverted("shape.toggleCollapse", LOW_PRIORITY$q, function(context) {
    var shape = context.shape;
    if (self2._canDrillDown(shape)) {
      self2._addOverlay(shape);
    } else {
      self2._removeOverlay(shape);
    }
  }, true);
  this.executed(
    ["shape.create", "shape.move", "shape.delete"],
    LOW_PRIORITY$q,
    function(context) {
      var oldParent = context.oldParent, newParent = context.newParent || context.parent, shape = context.shape;
      if (self2._canDrillDown(shape)) {
        self2._addOverlay(shape);
      }
      self2._updateDrilldownOverlay(oldParent);
      self2._updateDrilldownOverlay(newParent);
      self2._updateDrilldownOverlay(shape);
    },
    true
  );
  this.reverted(
    ["shape.create", "shape.move", "shape.delete"],
    LOW_PRIORITY$q,
    function(context) {
      var oldParent = context.oldParent, newParent = context.newParent || context.parent, shape = context.shape;
      if (self2._canDrillDown(shape)) {
        self2._addOverlay(shape);
      }
      self2._updateDrilldownOverlay(oldParent);
      self2._updateDrilldownOverlay(newParent);
      self2._updateDrilldownOverlay(shape);
    },
    true
  );
  eventBus.on("import.render.complete", function() {
    elementRegistry.filter(function(e2) {
      return self2._canDrillDown(e2);
    }).map(function(el) {
      self2._addOverlay(el);
    });
  });
}
e$3(DrilldownOverlayBehavior, CommandInterceptor);
DrilldownOverlayBehavior.prototype._updateDrilldownOverlay = function(shape) {
  var canvas = this._canvas;
  if (!shape) {
    return;
  }
  var root = canvas.findRoot(shape);
  if (root) {
    this._updateOverlayVisibility(root);
  }
};
DrilldownOverlayBehavior.prototype._canDrillDown = function(element) {
  var canvas = this._canvas;
  return is$g(element, "bpmn:SubProcess") && canvas.findRoot(getPlaneIdFromShape(element));
};
DrilldownOverlayBehavior.prototype._updateOverlayVisibility = function(element) {
  var overlays = this._overlays;
  var businessObject = getBusinessObject(element);
  var overlay = overlays.get({ element: businessObject.id, type: "drilldown" })[0];
  if (!overlay) {
    return;
  }
  var hasFlowElements2 = businessObject && businessObject.get("flowElements") && businessObject.get("flowElements").length;
  classes$1(overlay.html).toggle(EMPTY_MARKER, !hasFlowElements2);
};
DrilldownOverlayBehavior.prototype._addOverlay = function(element) {
  var canvas = this._canvas, overlays = this._overlays;
  var existingOverlays = overlays.get({ element, type: "drilldown" });
  if (existingOverlays.length) {
    this._removeOverlay(element);
  }
  var button = domify$1('<button class="bjs-drilldown">' + ARROW_DOWN_SVG + "</button>");
  button.addEventListener("click", function() {
    canvas.setRootElement(canvas.findRoot(getPlaneIdFromShape(element)));
  });
  overlays.add(element, "drilldown", {
    position: {
      bottom: -7,
      right: -8
    },
    html: button
  });
  this._updateOverlayVisibility(element);
};
DrilldownOverlayBehavior.prototype._removeOverlay = function(element) {
  var overlays = this._overlays;
  overlays.remove({
    element,
    type: "drilldown"
  });
};
DrilldownOverlayBehavior.$inject = [
  "canvas",
  "eventBus",
  "elementRegistry",
  "overlays"
];
const DrilldownModdule = {
  __depends__: [OverlaysModule, ChangeSupportModule, RootElementsModule],
  __init__: ["drilldownBreadcrumbs", "drilldownOverlayBehavior", "drilldownCentering", "subprocessCompatibility"],
  drilldownBreadcrumbs: ["type", DrilldownBreadcrumbs],
  drilldownCentering: ["type", DrilldownCentering],
  drilldownOverlayBehavior: ["type", DrilldownOverlayBehavior],
  subprocessCompatibility: ["type", SubprocessCompatibility]
};
var LOW_PRIORITY$p = 500;
var DEFAULT_PRIORITY$4 = 1e3;
function Outline(eventBus, styles) {
  this._eventBus = eventBus;
  this.offset = 5;
  var OUTLINE_STYLE = styles.cls("djs-outline", ["no-fill"]);
  var self2 = this;
  function createOutline(gfx) {
    var outline = create$1("rect");
    attr(outline, assign$2({
      x: 0,
      y: 0,
      rx: 4,
      width: 100,
      height: 100
    }, OUTLINE_STYLE));
    return outline;
  }
  eventBus.on(["shape.added", "shape.changed"], LOW_PRIORITY$p, function(event2) {
    var element = event2.element, gfx = event2.gfx;
    var outline = query(".djs-outline", gfx);
    if (!outline) {
      outline = self2.getOutline(element) || createOutline();
      append(gfx, outline);
    }
    self2.updateShapeOutline(outline, element);
  });
  eventBus.on(["connection.added", "connection.changed"], function(event2) {
    var element = event2.element, gfx = event2.gfx;
    var outline = query(".djs-outline", gfx);
    if (!outline) {
      outline = createOutline();
      append(gfx, outline);
    }
    self2.updateConnectionOutline(outline, element);
  });
}
Outline.prototype.updateShapeOutline = function(outline, element) {
  var updated = false;
  var providers = this._getProviders();
  if (providers.length) {
    forEach$2(providers, function(provider) {
      updated = updated || provider.updateOutline(element, outline);
    });
  }
  if (!updated) {
    attr(outline, {
      x: -this.offset,
      y: -this.offset,
      width: element.width + this.offset * 2,
      height: element.height + this.offset * 2
    });
  }
};
Outline.prototype.updateConnectionOutline = function(outline, connection) {
  var bbox = getBBox(connection);
  attr(outline, {
    x: bbox.x - this.offset,
    y: bbox.y - this.offset,
    width: bbox.width + this.offset * 2,
    height: bbox.height + this.offset * 2
  });
};
Outline.prototype.registerProvider = function(priority, provider) {
  if (!provider) {
    provider = priority;
    priority = DEFAULT_PRIORITY$4;
  }
  this._eventBus.on("outline.getProviders", priority, function(event2) {
    event2.providers.push(provider);
  });
};
Outline.prototype._getProviders = function() {
  var event2 = this._eventBus.createEvent({
    type: "outline.getProviders",
    providers: []
  });
  this._eventBus.fire(event2);
  return event2.providers;
};
Outline.prototype.getOutline = function(element) {
  var outline;
  var providers = this._getProviders();
  forEach$2(providers, function(provider) {
    if (!isFunction$1(provider.getOutline)) {
      return;
    }
    outline = outline || provider.getOutline(element);
  });
  return outline;
};
Outline.$inject = ["eventBus", "styles", "elementRegistry"];
const OutlineModule$1 = {
  __init__: ["outline"],
  outline: ["type", Outline]
};
const DATA_OBJECT_REFERENCE_OUTLINE_PATH = "M44.7648 11.3263L36.9892 2.64074C36.0451 1.58628 34.5651 0.988708 33.1904 0.988708H5.98667C3.22688 0.988708 0.989624 3.34892 0.989624 6.26039V55.0235C0.989624 57.9349 3.22688 60.2952 5.98667 60.2952H40.966C43.7257 60.2952 45.963 57.9349 45.963 55.0235V14.9459C45.963 13.5998 45.6407 12.3048 44.7648 11.3263Z";
const DATA_STORE_REFERENCE_OUTLINE_PATH = "M1.03845 48.1347C1.03845 49.3511 1.07295 50.758 1.38342 52.064C1.69949 53.3938 2.32428 54.7154 3.56383 55.6428C6.02533 57.4841 10.1161 58.7685 14.8212 59.6067C19.5772 60.4538 25.1388 60.8738 30.6831 60.8738C36.2276 60.8738 41.7891 60.4538 46.545 59.6067C51.2504 58.7687 55.3412 57.4842 57.8028 55.6429C59.0424 54.7156 59.6673 53.3938 59.9834 52.064C60.2938 50.7579 60.3285 49.351 60.3285 48.1344V13.8415C60.3285 12.6249 60.2938 11.218 59.9834 9.91171C59.6673 8.58194 59.0423 7.2602 57.8027 6.33294C55.341 4.49168 51.2503 3.20723 46.545 2.36914C41.7891 1.522 36.2276 1.10204 30.6831 1.10205C25.1388 1.10206 19.5772 1.52206 14.8213 2.36923C10.1162 3.20734 6.02543 4.49183 3.5639 6.33314C2.32433 7.26038 1.69951 8.58206 1.38343 9.91181C1.07295 11.2179 1.03845 12.6247 1.03845 13.8411V48.1347Z";
const DATA_OBJECT_REFERENCE_STANDARD_SIZE = { width: 36, height: 50 };
const DATA_STORE_REFERENCE_STANDARD_SIZE = { width: 50, height: 50 };
function createPath(path, attrs, OUTLINE_STYLE) {
  return create$1("path", {
    d: path,
    strokeWidth: 2,
    transform: `translate(${attrs.x}, ${attrs.y})`,
    ...OUTLINE_STYLE
  });
}
const DEFAULT_OFFSET = 5;
function OutlineProvider(outline, styles) {
  this._styles = styles;
  outline.registerProvider(this);
}
OutlineProvider.$inject = [
  "outline",
  "styles"
];
OutlineProvider.prototype.getOutline = function(element) {
  const OUTLINE_STYLE = this._styles.cls("djs-outline", ["no-fill"]);
  var outline;
  if (isLabel(element)) {
    return;
  }
  if (is$g(element, "bpmn:Gateway")) {
    outline = create$1("rect");
    assign$2(outline.style, {
      "transform-box": "fill-box",
      "transform": "rotate(45deg)",
      "transform-origin": "center"
    });
    attr(outline, assign$2({
      x: 2,
      y: 2,
      rx: 4,
      width: element.width - 4,
      height: element.height - 4
    }, OUTLINE_STYLE));
  } else if (isAny$7(element, ["bpmn:Task", "bpmn:SubProcess", "bpmn:Group"])) {
    outline = create$1("rect");
    attr(outline, assign$2({
      x: -DEFAULT_OFFSET,
      y: -DEFAULT_OFFSET,
      rx: 14,
      width: element.width + DEFAULT_OFFSET * 2,
      height: element.height + DEFAULT_OFFSET * 2
    }, OUTLINE_STYLE));
  } else if (is$g(element, "bpmn:EndEvent")) {
    outline = create$1("circle");
    attr(outline, assign$2({
      cx: element.width / 2,
      cy: element.height / 2,
      r: element.width / 2 + DEFAULT_OFFSET + 1
    }, OUTLINE_STYLE));
  } else if (is$g(element, "bpmn:Event")) {
    outline = create$1("circle");
    attr(outline, assign$2({
      cx: element.width / 2,
      cy: element.height / 2,
      r: element.width / 2 + DEFAULT_OFFSET
    }, OUTLINE_STYLE));
  } else if (is$g(element, "bpmn:DataObjectReference") && isStandardSize(element, "bpmn:DataObjectReference")) {
    outline = createPath(
      DATA_OBJECT_REFERENCE_OUTLINE_PATH,
      { x: -6, y: -6 },
      OUTLINE_STYLE
    );
  } else if (is$g(element, "bpmn:DataStoreReference") && isStandardSize(element, "bpmn:DataStoreReference")) {
    outline = createPath(
      DATA_STORE_REFERENCE_OUTLINE_PATH,
      { x: -6, y: -6 },
      OUTLINE_STYLE
    );
  }
  return outline;
};
OutlineProvider.prototype.updateOutline = function(element, outline) {
  if (isLabel(element)) {
    return;
  }
  if (isAny$7(element, ["bpmn:SubProcess", "bpmn:Group"])) {
    attr(outline, {
      width: element.width + DEFAULT_OFFSET * 2,
      height: element.height + DEFAULT_OFFSET * 2
    });
    return true;
  } else if (isAny$7(element, [
    "bpmn:Event",
    "bpmn:Gateway",
    "bpmn:DataStoreReference",
    "bpmn:DataObjectReference"
  ])) {
    return true;
  }
  return false;
};
function isStandardSize(element, type) {
  var standardSize;
  if (type === "bpmn:DataObjectReference") {
    standardSize = DATA_OBJECT_REFERENCE_STANDARD_SIZE;
  } else if (type === "bpmn:DataStoreReference") {
    standardSize = DATA_STORE_REFERENCE_STANDARD_SIZE;
  }
  return element.width === standardSize.width && element.height === standardSize.height;
}
const OutlineModule = {
  __depends__: [
    OutlineModule$1
  ],
  __init__: ["outlineProvider"],
  outlineProvider: ["type", OutlineProvider]
};
function __stopPropagation(event2) {
  if (!event2 || typeof event2.stopPropagation !== "function") {
    return;
  }
  event2.stopPropagation();
}
function getOriginal$1(event2) {
  return event2.originalEvent || event2.srcEvent;
}
function stopPropagation$1(event2) {
  __stopPropagation(event2);
  __stopPropagation(getOriginal$1(event2));
}
function toPoint(event2) {
  if (event2.pointers && event2.pointers.length) {
    event2 = event2.pointers[0];
  }
  if (event2.touches && event2.touches.length) {
    event2 = event2.touches[0];
  }
  return event2 ? {
    x: event2.clientX,
    y: event2.clientY
  } : null;
}
function isMac() {
  return /mac/i.test(navigator.platform);
}
function isButton$1(event2, button) {
  return (getOriginal$1(event2) || event2).button === button;
}
function isPrimaryButton(event2) {
  return isButton$1(event2, 0);
}
function isAuxiliaryButton(event2) {
  return isButton$1(event2, 1);
}
function hasPrimaryModifier(event2) {
  var originalEvent = getOriginal$1(event2) || event2;
  if (!isPrimaryButton(event2)) {
    return false;
  }
  if (isMac()) {
    return originalEvent.metaKey;
  } else {
    return originalEvent.ctrlKey;
  }
}
function hasSecondaryModifier(event2) {
  var originalEvent = getOriginal$1(event2) || event2;
  return isPrimaryButton(event2) && originalEvent.shiftKey;
}
function allowAll(event2) {
  return true;
}
function allowPrimaryAndAuxiliary(event2) {
  return isPrimaryButton(event2) || isAuxiliaryButton(event2);
}
var LOW_PRIORITY$o = 500;
function InteractionEvents(eventBus, elementRegistry, styles) {
  var self2 = this;
  function fire(type, event2, element) {
    if (isIgnored(type, event2)) {
      return;
    }
    var target, gfx, returnValue;
    if (!element) {
      target = event2.delegateTarget || event2.target;
      if (target) {
        gfx = target;
        element = elementRegistry.get(gfx);
      }
    } else {
      gfx = elementRegistry.getGraphics(element);
    }
    if (!gfx || !element) {
      return;
    }
    returnValue = eventBus.fire(type, {
      element,
      gfx,
      originalEvent: event2
    });
    if (returnValue === false) {
      event2.stopPropagation();
      event2.preventDefault();
    }
  }
  var handlers = {};
  function mouseHandler(localEventName) {
    return handlers[localEventName];
  }
  function isIgnored(localEventName, event2) {
    var filter2 = ignoredFilters[localEventName] || isPrimaryButton;
    return !filter2(event2);
  }
  var bindings = {
    click: "element.click",
    contextmenu: "element.contextmenu",
    dblclick: "element.dblclick",
    mousedown: "element.mousedown",
    mousemove: "element.mousemove",
    mouseover: "element.hover",
    mouseout: "element.out",
    mouseup: "element.mouseup"
  };
  var ignoredFilters = {
    "element.contextmenu": allowAll,
    "element.mousedown": allowPrimaryAndAuxiliary,
    "element.mouseup": allowPrimaryAndAuxiliary,
    "element.click": allowPrimaryAndAuxiliary,
    "element.dblclick": allowPrimaryAndAuxiliary
  };
  function triggerMouseEvent(eventName, event2, targetElement) {
    var localEventName = bindings[eventName];
    if (!localEventName) {
      throw new Error("unmapped DOM event name <" + eventName + ">");
    }
    return fire(localEventName, event2, targetElement);
  }
  var ELEMENT_SELECTOR2 = "svg, .djs-element";
  function registerEvent(node2, event2, localEvent, ignoredFilter) {
    var handler = handlers[localEvent] = function(event3) {
      fire(localEvent, event3);
    };
    if (ignoredFilter) {
      ignoredFilters[localEvent] = ignoredFilter;
    }
    handler.$delegate = delegate.bind(node2, ELEMENT_SELECTOR2, event2, handler);
  }
  function unregisterEvent(node2, event2, localEvent) {
    var handler = mouseHandler(localEvent);
    if (!handler) {
      return;
    }
    delegate.unbind(node2, event2, handler.$delegate);
  }
  function registerEvents(svg) {
    forEach$2(bindings, function(val, key) {
      registerEvent(svg, key, val);
    });
  }
  function unregisterEvents(svg) {
    forEach$2(bindings, function(val, key) {
      unregisterEvent(svg, key, val);
    });
  }
  eventBus.on("canvas.destroy", function(event2) {
    unregisterEvents(event2.svg);
  });
  eventBus.on("canvas.init", function(event2) {
    registerEvents(event2.svg);
  });
  eventBus.on(["shape.added", "connection.added"], function(event2) {
    var element = event2.element, gfx = event2.gfx;
    eventBus.fire("interactionEvents.createHit", { element, gfx });
  });
  eventBus.on([
    "shape.changed",
    "connection.changed"
  ], LOW_PRIORITY$o, function(event2) {
    var element = event2.element, gfx = event2.gfx;
    eventBus.fire("interactionEvents.updateHit", { element, gfx });
  });
  eventBus.on("interactionEvents.createHit", LOW_PRIORITY$o, function(event2) {
    var element = event2.element, gfx = event2.gfx;
    self2.createDefaultHit(element, gfx);
  });
  eventBus.on("interactionEvents.updateHit", function(event2) {
    var element = event2.element, gfx = event2.gfx;
    self2.updateDefaultHit(element, gfx);
  });
  var STROKE_HIT_STYLE = createHitStyle("djs-hit djs-hit-stroke");
  var CLICK_STROKE_HIT_STYLE = createHitStyle("djs-hit djs-hit-click-stroke");
  var ALL_HIT_STYLE = createHitStyle("djs-hit djs-hit-all");
  var NO_MOVE_HIT_STYLE = createHitStyle("djs-hit djs-hit-no-move");
  var HIT_TYPES = {
    "all": ALL_HIT_STYLE,
    "click-stroke": CLICK_STROKE_HIT_STYLE,
    "stroke": STROKE_HIT_STYLE,
    "no-move": NO_MOVE_HIT_STYLE
  };
  function createHitStyle(classNames, attrs) {
    attrs = assign$2({
      stroke: "white",
      strokeWidth: 15
    }, attrs || {});
    return styles.cls(classNames, ["no-fill", "no-border"], attrs);
  }
  function applyStyle(hit, type) {
    var attrs = HIT_TYPES[type];
    if (!attrs) {
      throw new Error("invalid hit type <" + type + ">");
    }
    attr(hit, attrs);
    return hit;
  }
  function appendHit(gfx, hit) {
    append(gfx, hit);
  }
  this.removeHits = function(gfx) {
    var hits = all(".djs-hit", gfx);
    forEach$2(hits, remove);
  };
  this.createDefaultHit = function(element, gfx) {
    var waypoints = element.waypoints, isFrame = element.isFrame, boxType;
    if (waypoints) {
      return this.createWaypointsHit(gfx, waypoints);
    } else {
      boxType = isFrame ? "stroke" : "all";
      return this.createBoxHit(gfx, boxType, {
        width: element.width,
        height: element.height
      });
    }
  };
  this.createWaypointsHit = function(gfx, waypoints) {
    var hit = createLine(waypoints);
    applyStyle(hit, "stroke");
    appendHit(gfx, hit);
    return hit;
  };
  this.createBoxHit = function(gfx, type, attrs) {
    attrs = assign$2({
      x: 0,
      y: 0
    }, attrs);
    var hit = create$1("rect");
    applyStyle(hit, type);
    attr(hit, attrs);
    appendHit(gfx, hit);
    return hit;
  };
  this.updateDefaultHit = function(element, gfx) {
    var hit = query(".djs-hit", gfx);
    if (!hit) {
      return;
    }
    if (element.waypoints) {
      updateLine(hit, element.waypoints);
    } else {
      attr(hit, {
        width: element.width,
        height: element.height
      });
    }
    return hit;
  };
  this.fire = fire;
  this.triggerMouseEvent = triggerMouseEvent;
  this.mouseHandler = mouseHandler;
  this.registerEvent = registerEvent;
  this.unregisterEvent = unregisterEvent;
}
InteractionEvents.$inject = [
  "eventBus",
  "elementRegistry",
  "styles"
];
const InteractionEventsModule$1 = {
  __init__: ["interactionEvents"],
  interactionEvents: ["type", InteractionEvents]
};
function Selection(eventBus, canvas) {
  this._eventBus = eventBus;
  this._canvas = canvas;
  this._selectedElements = [];
  var self2 = this;
  eventBus.on(["shape.remove", "connection.remove"], function(e2) {
    var element = e2.element;
    self2.deselect(element);
  });
  eventBus.on(["diagram.clear", "root.set"], function(e2) {
    self2.select(null);
  });
}
Selection.$inject = ["eventBus", "canvas"];
Selection.prototype.deselect = function(element) {
  var selectedElements = this._selectedElements;
  var idx = selectedElements.indexOf(element);
  if (idx !== -1) {
    var oldSelection = selectedElements.slice();
    selectedElements.splice(idx, 1);
    this._eventBus.fire("selection.changed", { oldSelection, newSelection: selectedElements });
  }
};
Selection.prototype.get = function() {
  return this._selectedElements;
};
Selection.prototype.isSelected = function(element) {
  return this._selectedElements.indexOf(element) !== -1;
};
Selection.prototype.select = function(elements, add2) {
  var selectedElements = this._selectedElements, oldSelection = selectedElements.slice();
  if (!isArray$3(elements)) {
    elements = elements ? [elements] : [];
  }
  var canvas = this._canvas;
  var rootElement = canvas.getRootElement();
  elements = elements.filter(function(element) {
    var elementRoot = canvas.findRoot(element);
    return rootElement === elementRoot;
  });
  if (add2) {
    forEach$2(elements, function(element) {
      if (selectedElements.indexOf(element) !== -1) {
        return;
      } else {
        selectedElements.push(element);
      }
    });
  } else {
    this._selectedElements = selectedElements = elements.slice();
  }
  this._eventBus.fire("selection.changed", { oldSelection, newSelection: selectedElements });
};
var MARKER_HOVER = "hover", MARKER_SELECTED = "selected";
var SELECTION_OUTLINE_PADDING = 6;
function SelectionVisuals(canvas, eventBus, selection) {
  this._canvas = canvas;
  var self2 = this;
  this._multiSelectionBox = null;
  function addMarker(e2, cls) {
    canvas.addMarker(e2, cls);
  }
  function removeMarker(e2, cls) {
    canvas.removeMarker(e2, cls);
  }
  eventBus.on("element.hover", function(event2) {
    addMarker(event2.element, MARKER_HOVER);
  });
  eventBus.on("element.out", function(event2) {
    removeMarker(event2.element, MARKER_HOVER);
  });
  eventBus.on("selection.changed", function(event2) {
    function deselect(s2) {
      removeMarker(s2, MARKER_SELECTED);
    }
    function select(s2) {
      addMarker(s2, MARKER_SELECTED);
    }
    var oldSelection = event2.oldSelection, newSelection = event2.newSelection;
    forEach$2(oldSelection, function(e2) {
      if (newSelection.indexOf(e2) === -1) {
        deselect(e2);
      }
    });
    forEach$2(newSelection, function(e2) {
      if (oldSelection.indexOf(e2) === -1) {
        select(e2);
      }
    });
    self2._updateSelectionOutline(newSelection);
  });
  eventBus.on("element.changed", function(event2) {
    if (selection.isSelected(event2.element)) {
      self2._updateSelectionOutline(selection.get());
    }
  });
}
SelectionVisuals.$inject = [
  "canvas",
  "eventBus",
  "selection"
];
SelectionVisuals.prototype._updateSelectionOutline = function(selection) {
  var layer = this._canvas.getLayer("selectionOutline");
  clear(layer);
  var enabled = selection.length > 1;
  var container = this._canvas.getContainer();
  classes(container)[enabled ? "add" : "remove"]("djs-multi-select");
  if (!enabled) {
    return;
  }
  var bBox = addSelectionOutlinePadding(getBBox(selection));
  var rect = create$1("rect");
  attr(rect, assign$2({
    rx: 3
  }, bBox));
  classes(rect).add("djs-selection-outline");
  append(layer, rect);
};
function addSelectionOutlinePadding(bBox) {
  return {
    x: bBox.x - SELECTION_OUTLINE_PADDING,
    y: bBox.y - SELECTION_OUTLINE_PADDING,
    width: bBox.width + SELECTION_OUTLINE_PADDING * 2,
    height: bBox.height + SELECTION_OUTLINE_PADDING * 2
  };
}
function SelectionBehavior(eventBus, selection, canvas, elementRegistry) {
  eventBus.on("create.end", 500, function(event2) {
    var context = event2.context, canExecute = context.canExecute, elements = context.elements, hints = context.hints || {}, autoSelect = hints.autoSelect;
    if (canExecute) {
      if (autoSelect === false) {
        return;
      }
      if (isArray$3(autoSelect)) {
        selection.select(autoSelect);
      } else {
        selection.select(elements.filter(isShown));
      }
    }
  });
  eventBus.on("connect.end", 500, function(event2) {
    var context = event2.context, connection = context.connection;
    if (connection) {
      selection.select(connection);
    }
  });
  eventBus.on("shape.move.end", 500, function(event2) {
    var previousSelection = event2.previousSelection || [];
    var shape = elementRegistry.get(event2.context.shape.id);
    var isSelected = find$1(previousSelection, function(selectedShape) {
      return shape.id === selectedShape.id;
    });
    if (!isSelected) {
      selection.select(shape);
    }
  });
  eventBus.on("element.click", function(event2) {
    if (!isPrimaryButton(event2)) {
      return;
    }
    var element = event2.element;
    if (element === canvas.getRootElement()) {
      element = null;
    }
    var isSelected = selection.isSelected(element), isMultiSelect = selection.get().length > 1;
    var add2 = hasSecondaryModifier(event2);
    if (isSelected && isMultiSelect) {
      if (add2) {
        return selection.deselect(element);
      } else {
        return selection.select(element);
      }
    } else if (!isSelected) {
      selection.select(element, add2);
    } else {
      selection.deselect(element);
    }
  });
}
SelectionBehavior.$inject = [
  "eventBus",
  "selection",
  "canvas",
  "elementRegistry"
];
function isShown(element) {
  return !element.hidden;
}
const SelectionModule = {
  __init__: ["selectionVisuals", "selectionBehavior"],
  __depends__: [
    InteractionEventsModule$1,
    OutlineModule$1
  ],
  selection: ["type", Selection],
  selectionVisuals: ["type", SelectionVisuals],
  selectionBehavior: ["type", SelectionBehavior]
};
function Viewer(options) {
  BaseViewer.call(this, options);
}
e$3(Viewer, BaseViewer);
Viewer.prototype._modules = [
  CoreModule,
  DrilldownModdule,
  OutlineModule,
  OverlaysModule,
  SelectionModule,
  TranslateModule
];
Viewer.prototype._moddleExtensions = {};
var KEYS_COPY = ["c", "C"];
var KEYS_PASTE = ["v", "V"];
var KEYS_REDO = ["y", "Y"];
var KEYS_UNDO = ["z", "Z"];
function hasModifier(event2) {
  return event2.ctrlKey || event2.metaKey || event2.shiftKey || event2.altKey;
}
function isCmd(event2) {
  if (event2.altKey) {
    return false;
  }
  return event2.ctrlKey || event2.metaKey;
}
function isKey(keys2, event2) {
  keys2 = isArray$3(keys2) ? keys2 : [keys2];
  return keys2.indexOf(event2.key) !== -1 || keys2.indexOf(event2.code) !== -1;
}
function isShift(event2) {
  return event2.shiftKey;
}
function isCopy(event2) {
  return isCmd(event2) && isKey(KEYS_COPY, event2);
}
function isPaste(event2) {
  return isCmd(event2) && isKey(KEYS_PASTE, event2);
}
function isUndo(event2) {
  return isCmd(event2) && !isShift(event2) && isKey(KEYS_UNDO, event2);
}
function isRedo(event2) {
  return isCmd(event2) && (isKey(KEYS_REDO, event2) || isKey(KEYS_UNDO, event2) && isShift(event2));
}
var KEYDOWN_EVENT = "keyboard.keydown", KEYUP_EVENT = "keyboard.keyup";
var HANDLE_MODIFIER_ATTRIBUTE = "input-handle-modified-keys";
var DEFAULT_PRIORITY$3 = 1e3;
function Keyboard(config2, eventBus) {
  var self2 = this;
  this._config = config2 || {};
  this._eventBus = eventBus;
  this._keydownHandler = this._keydownHandler.bind(this);
  this._keyupHandler = this._keyupHandler.bind(this);
  eventBus.on("diagram.destroy", function() {
    self2._fire("destroy");
    self2.unbind();
  });
  eventBus.on("diagram.init", function() {
    self2._fire("init");
  });
  eventBus.on("attach", function() {
    if (config2 && config2.bindTo) {
      self2.bind(config2.bindTo);
    }
  });
  eventBus.on("detach", function() {
    self2.unbind();
  });
}
Keyboard.$inject = [
  "config.keyboard",
  "eventBus"
];
Keyboard.prototype._keydownHandler = function(event2) {
  this._keyHandler(event2, KEYDOWN_EVENT);
};
Keyboard.prototype._keyupHandler = function(event2) {
  this._keyHandler(event2, KEYUP_EVENT);
};
Keyboard.prototype._keyHandler = function(event2, type) {
  var eventBusResult;
  if (this._isEventIgnored(event2)) {
    return;
  }
  var context = {
    keyEvent: event2
  };
  eventBusResult = this._eventBus.fire(type || KEYDOWN_EVENT, context);
  if (eventBusResult) {
    event2.preventDefault();
  }
};
Keyboard.prototype._isEventIgnored = function(event2) {
  if (event2.defaultPrevented) {
    return true;
  }
  return (isInput(event2.target) || isButton(event2.target) && isKey([" ", "Enter"], event2)) && this._isModifiedKeyIgnored(event2);
};
Keyboard.prototype._isModifiedKeyIgnored = function(event2) {
  if (!isCmd(event2)) {
    return true;
  }
  var allowedModifiers = this._getAllowedModifiers(event2.target);
  return allowedModifiers.indexOf(event2.key) === -1;
};
Keyboard.prototype._getAllowedModifiers = function(element) {
  var modifierContainer = closest(element, "[" + HANDLE_MODIFIER_ATTRIBUTE + "]", true);
  if (!modifierContainer || this._node && !this._node.contains(modifierContainer)) {
    return [];
  }
  return modifierContainer.getAttribute(HANDLE_MODIFIER_ATTRIBUTE).split(",");
};
Keyboard.prototype.bind = function(node2) {
  this.unbind();
  this._node = node2;
  event.bind(node2, "keydown", this._keydownHandler);
  event.bind(node2, "keyup", this._keyupHandler);
  this._fire("bind");
};
Keyboard.prototype.getBinding = function() {
  return this._node;
};
Keyboard.prototype.unbind = function() {
  var node2 = this._node;
  if (node2) {
    this._fire("unbind");
    event.unbind(node2, "keydown", this._keydownHandler);
    event.unbind(node2, "keyup", this._keyupHandler);
  }
  this._node = null;
};
Keyboard.prototype._fire = function(event2) {
  this._eventBus.fire("keyboard." + event2, { node: this._node });
};
Keyboard.prototype.addListener = function(priority, listener, type) {
  if (isFunction$1(priority)) {
    type = listener;
    listener = priority;
    priority = DEFAULT_PRIORITY$3;
  }
  this._eventBus.on(type || KEYDOWN_EVENT, priority, listener);
};
Keyboard.prototype.removeListener = function(listener, type) {
  this._eventBus.off(type || KEYDOWN_EVENT, listener);
};
Keyboard.prototype.hasModifier = hasModifier;
Keyboard.prototype.isCmd = isCmd;
Keyboard.prototype.isShift = isShift;
Keyboard.prototype.isKey = isKey;
function isInput(target) {
  return target && (matches(target, "input, textarea") || target.contentEditable === "true");
}
function isButton(target) {
  return target && matches(target, "button, input[type=submit], input[type=button], a[href], [aria-role=button]");
}
var LOW_PRIORITY$n = 500;
function KeyboardBindings(eventBus, keyboard) {
  var self2 = this;
  eventBus.on("editorActions.init", LOW_PRIORITY$n, function(event2) {
    var editorActions = event2.editorActions;
    self2.registerBindings(keyboard, editorActions);
  });
}
KeyboardBindings.$inject = [
  "eventBus",
  "keyboard"
];
KeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {
  function addListener(action, fn) {
    if (editorActions.isRegistered(action)) {
      keyboard.addListener(fn);
    }
  }
  addListener("undo", function(context) {
    var event2 = context.keyEvent;
    if (isUndo(event2)) {
      editorActions.trigger("undo");
      return true;
    }
  });
  addListener("redo", function(context) {
    var event2 = context.keyEvent;
    if (isRedo(event2)) {
      editorActions.trigger("redo");
      return true;
    }
  });
  addListener("copy", function(context) {
    var event2 = context.keyEvent;
    if (isCopy(event2)) {
      editorActions.trigger("copy");
      return true;
    }
  });
  addListener("paste", function(context) {
    var event2 = context.keyEvent;
    if (isPaste(event2)) {
      editorActions.trigger("paste");
      return true;
    }
  });
  addListener("stepZoom", function(context) {
    var event2 = context.keyEvent;
    if (isKey(["+", "Add", "="], event2) && isCmd(event2)) {
      editorActions.trigger("stepZoom", { value: 1 });
      return true;
    }
  });
  addListener("stepZoom", function(context) {
    var event2 = context.keyEvent;
    if (isKey(["-", "Subtract"], event2) && isCmd(event2)) {
      editorActions.trigger("stepZoom", { value: -1 });
      return true;
    }
  });
  addListener("zoom", function(context) {
    var event2 = context.keyEvent;
    if (isKey("0", event2) && isCmd(event2)) {
      editorActions.trigger("zoom", { value: 1 });
      return true;
    }
  });
  addListener("removeSelection", function(context) {
    var event2 = context.keyEvent;
    if (isKey(["Backspace", "Delete", "Del"], event2)) {
      editorActions.trigger("removeSelection");
      return true;
    }
  });
};
const KeyboardModule$1 = {
  __init__: ["keyboard", "keyboardBindings"],
  keyboard: ["type", Keyboard],
  keyboardBindings: ["type", KeyboardBindings]
};
var DEFAULT_CONFIG$1 = {
  moveSpeed: 50,
  moveSpeedAccelerated: 200
};
function KeyboardMove(config2, keyboard, canvas) {
  var self2 = this;
  this._config = assign$2({}, DEFAULT_CONFIG$1, config2 || {});
  keyboard.addListener(arrowsListener);
  function arrowsListener(context) {
    var event2 = context.keyEvent, config3 = self2._config;
    if (!keyboard.isCmd(event2)) {
      return;
    }
    if (keyboard.isKey([
      "ArrowLeft",
      "Left",
      "ArrowUp",
      "Up",
      "ArrowDown",
      "Down",
      "ArrowRight",
      "Right"
    ], event2)) {
      var speed = keyboard.isShift(event2) ? config3.moveSpeedAccelerated : config3.moveSpeed;
      var direction;
      switch (event2.key) {
        case "ArrowLeft":
        case "Left":
          direction = "left";
          break;
        case "ArrowUp":
        case "Up":
          direction = "up";
          break;
        case "ArrowRight":
        case "Right":
          direction = "right";
          break;
        case "ArrowDown":
        case "Down":
          direction = "down";
          break;
      }
      self2.moveCanvas({
        speed,
        direction
      });
      return true;
    }
  }
  this.moveCanvas = function(options) {
    var dx = 0, dy = 0, speed = options.speed;
    var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);
    switch (options.direction) {
      case "left":
        dx = actualSpeed;
        break;
      case "up":
        dy = actualSpeed;
        break;
      case "right":
        dx = -actualSpeed;
        break;
      case "down":
        dy = -actualSpeed;
        break;
    }
    canvas.scroll({
      dx,
      dy
    });
  };
}
KeyboardMove.$inject = [
  "config.keyboardMove",
  "keyboard",
  "canvas"
];
const KeyboardMoveModule = {
  __depends__: [
    KeyboardModule$1
  ],
  __init__: ["keyboardMove"],
  keyboardMove: ["type", KeyboardMove]
};
var CURSOR_CLS_PATTERN = /^djs-cursor-.*$/;
function set$1(mode) {
  var classes2 = classes$1(document.body);
  classes2.removeMatching(CURSOR_CLS_PATTERN);
  if (mode) {
    classes2.add("djs-cursor-" + mode);
  }
}
function unset() {
  set$1(null);
}
var TRAP_PRIORITY = 5e3;
function install$1(eventBus, eventName) {
  eventName = eventName || "element.click";
  function trap() {
    return false;
  }
  eventBus.once(eventName, TRAP_PRIORITY, trap);
  return function() {
    eventBus.off(eventName, trap);
  };
}
function center(bounds) {
  return {
    x: bounds.x + bounds.width / 2,
    y: bounds.y + bounds.height / 2
  };
}
function delta(a2, b2) {
  return {
    x: a2.x - b2.x,
    y: a2.y - b2.y
  };
}
var THRESHOLD$1 = 15;
function MoveCanvas(eventBus, canvas) {
  var context;
  eventBus.on("element.mousedown", 500, function(e2) {
    return handleStart(e2.originalEvent);
  });
  function handleMove(event2) {
    var start = context.start, button = context.button, position = toPoint(event2), delta$1 = delta(position, start);
    if (!context.dragging && length(delta$1) > THRESHOLD$1) {
      context.dragging = true;
      if (button === 0) {
        install$1(eventBus);
      }
      set$1("grab");
    }
    if (context.dragging) {
      var lastPosition = context.last || context.start;
      delta$1 = delta(position, lastPosition);
      canvas.scroll({
        dx: delta$1.x,
        dy: delta$1.y
      });
      context.last = position;
    }
    event2.preventDefault();
  }
  function handleEnd(event$1) {
    event.unbind(document, "mousemove", handleMove);
    event.unbind(document, "mouseup", handleEnd);
    context = null;
    unset();
  }
  function handleStart(event$1) {
    if (closest(event$1.target, ".djs-draggable")) {
      return;
    }
    var button = event$1.button;
    if (button >= 2 || event$1.ctrlKey || event$1.shiftKey || event$1.altKey) {
      return;
    }
    context = {
      button,
      start: toPoint(event$1)
    };
    event.bind(document, "mousemove", handleMove);
    event.bind(document, "mouseup", handleEnd);
    return true;
  }
  this.isActive = function() {
    return !!context;
  };
}
MoveCanvas.$inject = [
  "eventBus",
  "canvas"
];
function length(point) {
  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
}
const MoveCanvasModule = {
  __init__: ["moveCanvas"],
  moveCanvas: ["type", MoveCanvas]
};
function log10(x2) {
  return Math.log(x2) / Math.log(10);
}
function getStepSize(range, steps) {
  var minLinearRange = log10(range.min), maxLinearRange = log10(range.max);
  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);
  return absoluteLinearRange / steps;
}
function cap(range, scale) {
  return Math.max(range.min, Math.min(range.max, scale));
}
var sign = Math.sign || function(n2) {
  return n2 >= 0 ? 1 : -1;
};
var RANGE = { min: 0.2, max: 4 }, NUM_STEPS = 10;
var DELTA_THRESHOLD = 0.1;
var DEFAULT_SCALE = 0.75;
function ZoomScroll(config2, eventBus, canvas) {
  config2 = config2 || {};
  this._enabled = false;
  this._canvas = canvas;
  this._container = canvas._container;
  this._handleWheel = bind$3(this._handleWheel, this);
  this._totalDelta = 0;
  this._scale = config2.scale || DEFAULT_SCALE;
  var self2 = this;
  eventBus.on("canvas.init", function(e2) {
    self2._init(config2.enabled !== false);
  });
}
ZoomScroll.$inject = [
  "config.zoomScroll",
  "eventBus",
  "canvas"
];
ZoomScroll.prototype.scroll = function scroll(delta2) {
  this._canvas.scroll(delta2);
};
ZoomScroll.prototype.reset = function reset() {
  this._canvas.zoom("fit-viewport");
};
ZoomScroll.prototype.zoom = function zoom(delta2, position) {
  var stepSize = getStepSize(RANGE, NUM_STEPS * 2);
  this._totalDelta += delta2;
  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {
    this._zoom(delta2, position, stepSize);
    this._totalDelta = 0;
  }
};
ZoomScroll.prototype._handleWheel = function handleWheel(event2) {
  if (closest(event2.target, ".djs-scrollable", true)) {
    return;
  }
  var element = this._container;
  event2.preventDefault();
  var isZoom = event2.ctrlKey || isMac() && event2.metaKey;
  var isHorizontalScroll = event2.shiftKey;
  var factor = -1 * this._scale, delta2;
  if (isZoom) {
    factor *= event2.deltaMode === 0 ? 0.02 : 0.32;
  } else {
    factor *= event2.deltaMode === 0 ? 1 : 16;
  }
  if (isZoom) {
    var elementRect = element.getBoundingClientRect();
    var offset = {
      x: event2.clientX - elementRect.left,
      y: event2.clientY - elementRect.top
    };
    delta2 = Math.sqrt(
      Math.pow(event2.deltaY, 2) + Math.pow(event2.deltaX, 2)
    ) * sign(event2.deltaY) * factor;
    this.zoom(delta2, offset);
  } else {
    if (isHorizontalScroll) {
      delta2 = {
        dx: factor * event2.deltaY,
        dy: 0
      };
    } else {
      delta2 = {
        dx: factor * event2.deltaX,
        dy: factor * event2.deltaY
      };
    }
    this.scroll(delta2);
  }
};
ZoomScroll.prototype.stepZoom = function stepZoom(delta2, position) {
  var stepSize = getStepSize(RANGE, NUM_STEPS);
  this._zoom(delta2, position, stepSize);
};
ZoomScroll.prototype._zoom = function(delta2, position, stepSize) {
  var canvas = this._canvas;
  var direction = delta2 > 0 ? 1 : -1;
  var currentLinearZoomLevel = log10(canvas.zoom());
  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;
  newLinearZoomLevel += stepSize * direction;
  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);
  canvas.zoom(cap(RANGE, newLogZoomLevel), position);
};
ZoomScroll.prototype.toggle = function toggle(newEnabled) {
  var element = this._container;
  var handleWheel2 = this._handleWheel;
  var oldEnabled = this._enabled;
  if (typeof newEnabled === "undefined") {
    newEnabled = !oldEnabled;
  }
  if (oldEnabled !== newEnabled) {
    event[newEnabled ? "bind" : "unbind"](element, "wheel", handleWheel2, false);
  }
  this._enabled = newEnabled;
  return newEnabled;
};
ZoomScroll.prototype._init = function(newEnabled) {
  this.toggle(newEnabled);
};
const ZoomScrollModule = {
  __init__: ["zoomScroll"],
  zoomScroll: ["type", ZoomScroll]
};
function NavigatedViewer(options) {
  Viewer.call(this, options);
}
e$3(NavigatedViewer, Viewer);
NavigatedViewer.prototype._navigationModules = [
  KeyboardMoveModule,
  MoveCanvasModule,
  ZoomScrollModule
];
NavigatedViewer.prototype._modules = [].concat(
  Viewer.prototype._modules,
  NavigatedViewer.prototype._navigationModules
);
function last(arr) {
  return arr && arr[arr.length - 1];
}
function sortTopOrMiddle(element) {
  return element.y;
}
function sortLeftOrCenter(element) {
  return element.x;
}
var ALIGNMENT_SORTING = {
  left: sortLeftOrCenter,
  center: sortLeftOrCenter,
  right: function(element) {
    return element.x + element.width;
  },
  top: sortTopOrMiddle,
  middle: sortTopOrMiddle,
  bottom: function(element) {
    return element.y + element.height;
  }
};
function AlignElements$1(modeling, rules2) {
  this._modeling = modeling;
  this._rules = rules2;
}
AlignElements$1.$inject = ["modeling", "rules"];
AlignElements$1.prototype._getOrientationDetails = function(type) {
  var vertical = ["top", "bottom", "middle"], axis = "x", dimension = "width";
  if (vertical.indexOf(type) !== -1) {
    axis = "y";
    dimension = "height";
  }
  return {
    axis,
    dimension
  };
};
AlignElements$1.prototype._isType = function(type, types2) {
  return types2.indexOf(type) !== -1;
};
AlignElements$1.prototype._alignmentPosition = function(type, sortedElements) {
  var orientation = this._getOrientationDetails(type), axis = orientation.axis, dimension = orientation.dimension, alignment = {}, centers = {}, hasSharedCenters = false, centeredElements, firstElement, lastElement;
  function getMiddleOrTop(first, last2) {
    return Math.round((first[axis] + last2[axis] + last2[dimension]) / 2);
  }
  if (this._isType(type, ["left", "top"])) {
    alignment[type] = sortedElements[0][axis];
  } else if (this._isType(type, ["right", "bottom"])) {
    lastElement = last(sortedElements);
    alignment[type] = lastElement[axis] + lastElement[dimension];
  } else if (this._isType(type, ["center", "middle"])) {
    forEach$2(sortedElements, function(element) {
      var center2 = element[axis] + Math.round(element[dimension] / 2);
      if (centers[center2]) {
        centers[center2].elements.push(element);
      } else {
        centers[center2] = {
          elements: [element],
          center: center2
        };
      }
    });
    centeredElements = sortBy$1(centers, function(center2) {
      if (center2.elements.length > 1) {
        hasSharedCenters = true;
      }
      return center2.elements.length;
    });
    if (hasSharedCenters) {
      alignment[type] = last(centeredElements).center;
      return alignment;
    }
    firstElement = sortedElements[0];
    sortedElements = sortBy$1(sortedElements, function(element) {
      return element[axis] + element[dimension];
    });
    lastElement = last(sortedElements);
    alignment[type] = getMiddleOrTop(firstElement, lastElement);
  }
  return alignment;
};
AlignElements$1.prototype.trigger = function(elements, type) {
  var modeling = this._modeling, allowed;
  var filteredElements = filter$1(elements, function(element) {
    return !(element.waypoints || element.host || element.labelTarget);
  });
  allowed = this._rules.allowed("elements.align", { elements: filteredElements });
  if (isArray$3(allowed)) {
    filteredElements = allowed;
  }
  if (filteredElements.length < 2 || !allowed) {
    return;
  }
  var sortFn = ALIGNMENT_SORTING[type];
  var sortedElements = sortBy$1(filteredElements, sortFn);
  var alignment = this._alignmentPosition(type, sortedElements);
  modeling.alignElements(sortedElements, alignment);
};
const AlignElementsModule$1 = {
  __init__: ["alignElements"],
  alignElements: ["type", AlignElements$1]
};
var MARKER_HIDDEN$1 = "djs-element-hidden";
var entrySelector = ".entry";
var DEFAULT_PRIORITY$2 = 1e3;
var CONTEXT_PAD_MARGIN = 8;
var HOVER_DELAY = 300;
function ContextPad(canvas, elementRegistry, eventBus) {
  this._canvas = canvas;
  this._elementRegistry = elementRegistry;
  this._eventBus = eventBus;
  this._current = null;
  this._init();
}
ContextPad.$inject = [
  "canvas",
  "elementRegistry",
  "eventBus"
];
ContextPad.prototype._init = function() {
  var self2 = this;
  this._eventBus.on("selection.changed", function(event2) {
    var selection = event2.newSelection;
    var target = selection.length ? selection.length === 1 ? selection[0] : selection : null;
    if (target) {
      self2.open(target, true);
    } else {
      self2.close();
    }
  });
  this._eventBus.on("elements.changed", function(event2) {
    var elements = event2.elements, current = self2._current;
    if (!current) {
      return;
    }
    var { target } = current;
    var targets = isArray$3(target) ? target : [target];
    var targetsChanged = targets.filter(function(element) {
      return includes$8(elements, element);
    });
    if (targetsChanged.length) {
      self2.close();
      var targetsNew = targets.filter(function(element) {
        return self2._elementRegistry.get(element.id);
      });
      if (targetsNew.length) {
        self2._updateAndOpen(targetsNew.length > 1 ? targetsNew : targetsNew[0]);
      }
    }
  });
  this._eventBus.on("canvas.viewbox.changed", () => {
    this._updatePosition();
  });
  this._eventBus.on("element.marker.update", function(event2) {
    self2._updateVisibility();
  });
  this._container = this._createContainer();
};
ContextPad.prototype._createContainer = function() {
  const container = domify$1('<div class="djs-context-pad-parent"></div>');
  this._canvas.getContainer().appendChild(container);
  return container;
};
ContextPad.prototype.registerProvider = function(priority, provider) {
  if (!provider) {
    provider = priority;
    priority = DEFAULT_PRIORITY$2;
  }
  this._eventBus.on("contextPad.getProviders", priority, function(event2) {
    event2.providers.push(provider);
  });
};
ContextPad.prototype.getEntries = function(target) {
  var providers = this._getProviders();
  var provideFn = isArray$3(target) ? "getMultiElementContextPadEntries" : "getContextPadEntries";
  var entries = {};
  forEach$2(providers, function(provider) {
    if (!isFunction$1(provider[provideFn])) {
      return;
    }
    var entriesOrUpdater = provider[provideFn](target);
    if (isFunction$1(entriesOrUpdater)) {
      entries = entriesOrUpdater(entries);
    } else {
      forEach$2(entriesOrUpdater, function(entry, id) {
        entries[id] = entry;
      });
    }
  });
  return entries;
};
ContextPad.prototype.trigger = function(action, event2, autoActivate) {
  var entry, originalEvent, button = event2.delegateTarget || event2.target;
  if (!button) {
    return event2.preventDefault();
  }
  entry = attr$1(button, "data-action");
  originalEvent = event2.originalEvent || event2;
  if (action === "mouseover") {
    this._timeout = setTimeout(() => {
      this._mouseout = this.triggerEntry(entry, "hover", originalEvent, autoActivate);
    }, HOVER_DELAY);
    return;
  } else if (action === "mouseout") {
    clearTimeout(this._timeout);
    if (this._mouseout) {
      this._mouseout();
      this._mouseout = null;
    }
    return;
  }
  return this.triggerEntry(entry, action, originalEvent, autoActivate);
};
ContextPad.prototype.triggerEntry = function(entryId, action, event2, autoActivate) {
  if (!this.isShown()) {
    return;
  }
  var target = this._current.target, entries = this._current.entries;
  var entry = entries[entryId];
  if (!entry) {
    return;
  }
  var handler = entry.action;
  if (this._eventBus.fire("contextPad.trigger", { entry, event: event2 }) === false) {
    return;
  }
  if (isFunction$1(handler)) {
    if (action === "click") {
      return handler(event2, target, autoActivate);
    }
  } else {
    if (handler[action]) {
      return handler[action](event2, target, autoActivate);
    }
  }
  event2.preventDefault();
};
ContextPad.prototype.open = function(target, force) {
  if (!force && this.isOpen(target)) {
    return;
  }
  this.close();
  this._updateAndOpen(target);
};
ContextPad.prototype._getProviders = function() {
  var event2 = this._eventBus.createEvent({
    type: "contextPad.getProviders",
    providers: []
  });
  this._eventBus.fire(event2);
  return event2.providers;
};
ContextPad.prototype._updateAndOpen = function(target) {
  var entries = this.getEntries(target), html = this._createHtml(target), image;
  forEach$2(entries, function(entry, id) {
    var grouping = entry.group || "default", control = domify$1(entry.html || '<div class="entry" draggable="true"></div>'), container;
    attr$1(control, "data-action", id);
    container = query("[data-group=" + escapeCSS(grouping) + "]", html);
    if (!container) {
      container = domify$1('<div class="group"></div>');
      attr$1(container, "data-group", grouping);
      html.appendChild(container);
    }
    container.appendChild(control);
    if (entry.className) {
      addClasses$1(control, entry.className);
    }
    if (entry.title) {
      attr$1(control, "title", entry.title);
    }
    if (entry.imageUrl) {
      image = domify$1("<img>");
      attr$1(image, "src", entry.imageUrl);
      image.style.width = "100%";
      image.style.height = "100%";
      control.appendChild(image);
    }
  });
  classes$1(html).add("open");
  this._current = {
    entries,
    html,
    target
  };
  this._updatePosition();
  this._updateVisibility();
  this._eventBus.fire("contextPad.open", { current: this._current });
};
ContextPad.prototype._createHtml = function(target) {
  var self2 = this;
  var html = domify$1('<div class="djs-context-pad"></div>');
  delegate.bind(html, entrySelector, "click", function(event2) {
    self2.trigger("click", event2);
  });
  delegate.bind(html, entrySelector, "dragstart", function(event2) {
    self2.trigger("dragstart", event2);
  });
  delegate.bind(html, entrySelector, "mouseover", function(event2) {
    self2.trigger("mouseover", event2);
  });
  delegate.bind(html, entrySelector, "mouseout", function(event2) {
    self2.trigger("mouseout", event2);
  });
  event.bind(html, "mousedown", function(event2) {
    event2.stopPropagation();
  });
  this._container.appendChild(html);
  this._eventBus.fire("contextPad.create", {
    target,
    pad: html
  });
  return html;
};
ContextPad.prototype.getPad = function(target) {
  console.warn(new Error("ContextPad#getPad is deprecated and will be removed in future library versions, cf. https://github.com/bpmn-io/diagram-js/pull/888"));
  let html;
  if (this.isOpen() && targetsEqual(this._current.target, target)) {
    html = this._current.html;
  } else {
    html = this._createHtml(target);
  }
  return { html };
};
ContextPad.prototype.close = function() {
  if (!this.isOpen()) {
    return;
  }
  clearTimeout(this._timeout);
  this._container.innerHTML = "";
  this._eventBus.fire("contextPad.close", { current: this._current });
  this._current = null;
};
ContextPad.prototype.isOpen = function(target) {
  var current = this._current;
  if (!current) {
    return false;
  }
  if (!target) {
    return true;
  }
  var currentTarget = current.target;
  if (isArray$3(target) !== isArray$3(currentTarget)) {
    return false;
  }
  if (isArray$3(target)) {
    return target.length === currentTarget.length && every$1(target, function(element) {
      return includes$8(currentTarget, element);
    });
  } else {
    return currentTarget === target;
  }
};
ContextPad.prototype.isShown = function() {
  return this.isOpen() && classes$1(this._current.html).has("open");
};
ContextPad.prototype.show = function() {
  if (!this.isOpen()) {
    return;
  }
  classes$1(this._current.html).add("open");
  this._updatePosition();
  this._eventBus.fire("contextPad.show", { current: this._current });
};
ContextPad.prototype.hide = function() {
  if (!this.isOpen()) {
    return;
  }
  classes$1(this._current.html).remove("open");
  this._eventBus.fire("contextPad.hide", { current: this._current });
};
ContextPad.prototype._getPosition = function(target) {
  if (!isArray$3(target) && isConnection(target)) {
    const viewbox = this._canvas.viewbox();
    const lastWaypoint = getLastWaypoint(target);
    const x2 = lastWaypoint.x * viewbox.scale - viewbox.x * viewbox.scale, y2 = lastWaypoint.y * viewbox.scale - viewbox.y * viewbox.scale;
    return {
      left: x2 + CONTEXT_PAD_MARGIN * this._canvas.zoom(),
      top: y2
    };
  }
  var container = this._canvas.getContainer();
  var containerBounds = container.getBoundingClientRect();
  var targetBounds = this._getTargetBounds(target);
  return {
    left: targetBounds.right - containerBounds.left + CONTEXT_PAD_MARGIN * this._canvas.zoom(),
    top: targetBounds.top - containerBounds.top
  };
};
ContextPad.prototype._updatePosition = function() {
  if (!this.isOpen()) {
    return;
  }
  var html = this._current.html;
  var position = this._getPosition(this._current.target);
  if ("x" in position && "y" in position) {
    html.style.left = position.x + "px";
    html.style.top = position.y + "px";
  } else {
    [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach(function(key) {
      if (key in position) {
        html.style[key] = position[key] + "px";
      }
    });
  }
};
ContextPad.prototype._updateVisibility = function() {
  if (!this.isOpen()) {
    return;
  }
  var self2 = this;
  var target = this._current.target;
  var targets = isArray$3(target) ? target : [target];
  var isHidden2 = targets.some(function(target2) {
    return self2._canvas.hasMarker(target2, MARKER_HIDDEN$1);
  });
  if (isHidden2) {
    self2.hide();
  } else {
    self2.show();
  }
};
ContextPad.prototype._getTargetBounds = function(target) {
  var elements = isArray$3(target) ? target : [target];
  var elementsGfx = elements.map((element) => {
    return this._canvas.getGraphics(element);
  });
  return elementsGfx.reduce((bounds, elementGfx) => {
    const elementBounds = elementGfx.getBoundingClientRect();
    bounds.top = Math.min(bounds.top, elementBounds.top);
    bounds.right = Math.max(bounds.right, elementBounds.right);
    bounds.bottom = Math.max(bounds.bottom, elementBounds.bottom);
    bounds.left = Math.min(bounds.left, elementBounds.left);
    bounds.x = bounds.left;
    bounds.y = bounds.top;
    bounds.width = bounds.right - bounds.left;
    bounds.height = bounds.bottom - bounds.top;
    return bounds;
  }, {
    top: Infinity,
    right: -Infinity,
    bottom: -Infinity,
    left: Infinity
  });
};
function addClasses$1(element, classNames) {
  var classes2 = classes$1(element);
  classNames = isArray$3(classNames) ? classNames : classNames.split(/\s+/g);
  classNames.forEach(function(cls) {
    classes2.add(cls);
  });
}
function includes$8(array, item) {
  return array.indexOf(item) !== -1;
}
function getLastWaypoint(connection) {
  return connection.waypoints[connection.waypoints.length - 1];
}
function targetsEqual(target, otherTarget) {
  target = isArray$3(target) ? target : [target];
  otherTarget = isArray$3(otherTarget) ? otherTarget : [otherTarget];
  return target.length === otherTarget.length && every$1(target, function(element) {
    return otherTarget.includes(element);
  });
}
const ContextPadModule$1 = {
  __depends__: [
    InteractionEventsModule$1,
    OverlaysModule
  ],
  contextPad: ["type", ContextPad]
};
var n$1, l$1, u$1, i$1, o$2, r$3, f$1, e$2, c$1, s$1, h$1 = {}, p$1 = [], v$1 = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, y$1 = Array.isArray;
function d$1(n2, l2) {
  for (var u2 in l2)
    n2[u2] = l2[u2];
  return n2;
}
function w$1(n2) {
  var l2 = n2.parentNode;
  l2 && l2.removeChild(n2);
}
function _$1(l2, u2, t2) {
  var i2, o2, r2, f2 = {};
  for (r2 in u2)
    "key" == r2 ? i2 = u2[r2] : "ref" == r2 ? o2 = u2[r2] : f2[r2] = u2[r2];
  if (arguments.length > 2 && (f2.children = arguments.length > 3 ? n$1.call(arguments, 2) : t2), "function" == typeof l2 && null != l2.defaultProps)
    for (r2 in l2.defaultProps)
      void 0 === f2[r2] && (f2[r2] = l2.defaultProps[r2]);
  return g(l2, f2, i2, o2, null);
}
function g(n2, t2, i2, o2, r2) {
  var f2 = { type: n2, props: t2, key: i2, ref: o2, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: null == r2 ? ++u$1 : r2, __i: -1, __u: 0 };
  return null == r2 && null != l$1.vnode && l$1.vnode(f2), f2;
}
function k$1(n2) {
  return n2.children;
}
function b(n2, l2) {
  this.props = n2, this.context = l2;
}
function x$1(n2, l2) {
  if (null == l2)
    return n2.__ ? x$1(n2.__, n2.__i + 1) : null;
  for (var u2; l2 < n2.__k.length; l2++)
    if (null != (u2 = n2.__k[l2]) && null != u2.__e)
      return u2.__e;
  return "function" == typeof n2.type ? x$1(n2) : null;
}
function C$1(n2) {
  var l2, u2;
  if (null != (n2 = n2.__) && null != n2.__c) {
    for (n2.__e = n2.__c.base = null, l2 = 0; l2 < n2.__k.length; l2++)
      if (null != (u2 = n2.__k[l2]) && null != u2.__e) {
        n2.__e = n2.__c.base = u2.__e;
        break;
      }
    return C$1(n2);
  }
}
function M(n2) {
  (!n2.__d && (n2.__d = true) && i$1.push(n2) && !P.__r++ || o$2 !== l$1.debounceRendering) && ((o$2 = l$1.debounceRendering) || r$3)(P);
}
function P() {
  var n2, u2, t2, o2, r2, e2, c2, s2;
  for (i$1.sort(f$1); n2 = i$1.shift(); )
    n2.__d && (u2 = i$1.length, o2 = void 0, e2 = (r2 = (t2 = n2).__v).__e, c2 = [], s2 = [], t2.__P && ((o2 = d$1({}, r2)).__v = r2.__v + 1, l$1.vnode && l$1.vnode(o2), O(t2.__P, o2, r2, t2.__n, t2.__P.namespaceURI, 32 & r2.__u ? [e2] : null, c2, null == e2 ? x$1(r2) : e2, !!(32 & r2.__u), s2), o2.__v = r2.__v, o2.__.__k[o2.__i] = o2, j$1(c2, o2, s2), o2.__e != e2 && C$1(o2)), i$1.length > u2 && i$1.sort(f$1));
  P.__r = 0;
}
function S(n2, l2, u2, t2, i2, o2, r2, f2, e2, c2, s2) {
  var a2, v2, y2, d2, w2, _2 = t2 && t2.__k || p$1, g2 = l2.length;
  for (u2.__d = e2, $(u2, l2, _2), e2 = u2.__d, a2 = 0; a2 < g2; a2++)
    null != (y2 = u2.__k[a2]) && "boolean" != typeof y2 && "function" != typeof y2 && (v2 = -1 === y2.__i ? h$1 : _2[y2.__i] || h$1, y2.__i = a2, O(n2, y2, v2, i2, o2, r2, f2, e2, c2, s2), d2 = y2.__e, y2.ref && v2.ref != y2.ref && (v2.ref && N(v2.ref, null, y2), s2.push(y2.ref, y2.__c || d2, y2)), null == w2 && null != d2 && (w2 = d2), 65536 & y2.__u || v2.__k === y2.__k ? (e2 && !e2.isConnected && (e2 = x$1(v2)), e2 = I(y2, e2, n2)) : "function" == typeof y2.type && void 0 !== y2.__d ? e2 = y2.__d : d2 && (e2 = d2.nextSibling), y2.__d = void 0, y2.__u &= -196609);
  u2.__d = e2, u2.__e = w2;
}
function $(n2, l2, u2) {
  var t2, i2, o2, r2, f2, e2 = l2.length, c2 = u2.length, s2 = c2, a2 = 0;
  for (n2.__k = [], t2 = 0; t2 < e2; t2++)
    r2 = t2 + a2, null != (i2 = n2.__k[t2] = null == (i2 = l2[t2]) || "boolean" == typeof i2 || "function" == typeof i2 ? null : "string" == typeof i2 || "number" == typeof i2 || "bigint" == typeof i2 || i2.constructor == String ? g(null, i2, null, null, null) : y$1(i2) ? g(k$1, { children: i2 }, null, null, null) : void 0 === i2.constructor && i2.__b > 0 ? g(i2.type, i2.props, i2.key, i2.ref ? i2.ref : null, i2.__v) : i2) ? (i2.__ = n2, i2.__b = n2.__b + 1, f2 = L(i2, u2, r2, s2), i2.__i = f2, o2 = null, -1 !== f2 && (s2--, (o2 = u2[f2]) && (o2.__u |= 131072)), null == o2 || null === o2.__v ? (-1 == f2 && a2--, "function" != typeof i2.type && (i2.__u |= 65536)) : f2 !== r2 && (f2 === r2 + 1 ? a2++ : f2 > r2 ? s2 > e2 - r2 ? a2 += f2 - r2 : a2-- : f2 < r2 ? f2 == r2 - 1 && (a2 = f2 - r2) : a2 = 0, f2 !== t2 + a2 && (i2.__u |= 65536))) : (o2 = u2[r2]) && null == o2.key && o2.__e && 0 == (131072 & o2.__u) && (o2.__e == n2.__d && (n2.__d = x$1(o2)), V(o2, o2, false), u2[r2] = null, s2--);
  if (s2)
    for (t2 = 0; t2 < c2; t2++)
      null != (o2 = u2[t2]) && 0 == (131072 & o2.__u) && (o2.__e == n2.__d && (n2.__d = x$1(o2)), V(o2, o2));
}
function I(n2, l2, u2) {
  var t2, i2;
  if ("function" == typeof n2.type) {
    for (t2 = n2.__k, i2 = 0; t2 && i2 < t2.length; i2++)
      t2[i2] && (t2[i2].__ = n2, l2 = I(t2[i2], l2, u2));
    return l2;
  }
  n2.__e != l2 && (u2.insertBefore(n2.__e, l2 || null), l2 = n2.__e);
  do {
    l2 = l2 && l2.nextSibling;
  } while (null != l2 && 8 === l2.nodeType);
  return l2;
}
function L(n2, l2, u2, t2) {
  var i2 = n2.key, o2 = n2.type, r2 = u2 - 1, f2 = u2 + 1, e2 = l2[u2];
  if (null === e2 || e2 && i2 == e2.key && o2 === e2.type && 0 == (131072 & e2.__u))
    return u2;
  if (t2 > (null != e2 && 0 == (131072 & e2.__u) ? 1 : 0))
    for (; r2 >= 0 || f2 < l2.length; ) {
      if (r2 >= 0) {
        if ((e2 = l2[r2]) && 0 == (131072 & e2.__u) && i2 == e2.key && o2 === e2.type)
          return r2;
        r2--;
      }
      if (f2 < l2.length) {
        if ((e2 = l2[f2]) && 0 == (131072 & e2.__u) && i2 == e2.key && o2 === e2.type)
          return f2;
        f2++;
      }
    }
  return -1;
}
function T(n2, l2, u2) {
  "-" === l2[0] ? n2.setProperty(l2, null == u2 ? "" : u2) : n2[l2] = null == u2 ? "" : "number" != typeof u2 || v$1.test(l2) ? u2 : u2 + "px";
}
function A$1(n2, l2, u2, t2, i2) {
  var o2;
  n:
    if ("style" === l2)
      if ("string" == typeof u2)
        n2.style.cssText = u2;
      else {
        if ("string" == typeof t2 && (n2.style.cssText = t2 = ""), t2)
          for (l2 in t2)
            u2 && l2 in u2 || T(n2.style, l2, "");
        if (u2)
          for (l2 in u2)
            t2 && u2[l2] === t2[l2] || T(n2.style, l2, u2[l2]);
      }
    else if ("o" === l2[0] && "n" === l2[1])
      o2 = l2 !== (l2 = l2.replace(/(PointerCapture)$|Capture$/i, "$1")), l2 = l2.toLowerCase() in n2 || "onFocusOut" === l2 || "onFocusIn" === l2 ? l2.toLowerCase().slice(2) : l2.slice(2), n2.l || (n2.l = {}), n2.l[l2 + o2] = u2, u2 ? t2 ? u2.u = t2.u : (u2.u = e$2, n2.addEventListener(l2, o2 ? s$1 : c$1, o2)) : n2.removeEventListener(l2, o2 ? s$1 : c$1, o2);
    else {
      if ("http://www.w3.org/2000/svg" == i2)
        l2 = l2.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
      else if ("width" != l2 && "height" != l2 && "href" != l2 && "list" != l2 && "form" != l2 && "tabIndex" != l2 && "download" != l2 && "rowSpan" != l2 && "colSpan" != l2 && "role" != l2 && l2 in n2)
        try {
          n2[l2] = null == u2 ? "" : u2;
          break n;
        } catch (n3) {
        }
      "function" == typeof u2 || (null == u2 || false === u2 && "-" !== l2[4] ? n2.removeAttribute(l2) : n2.setAttribute(l2, u2));
    }
}
function F$1(n2) {
  return function(u2) {
    if (this.l) {
      var t2 = this.l[u2.type + n2];
      if (null == u2.t)
        u2.t = e$2++;
      else if (u2.t < t2.u)
        return;
      return t2(l$1.event ? l$1.event(u2) : u2);
    }
  };
}
function O(n2, u2, t2, i2, o2, r2, f2, e2, c2, s2) {
  var a2, h2, p2, v2, w2, _2, g2, m2, x2, C2, M2, P2, $2, I2, H, L2 = u2.type;
  if (void 0 !== u2.constructor)
    return null;
  128 & t2.__u && (c2 = !!(32 & t2.__u), r2 = [e2 = u2.__e = t2.__e]), (a2 = l$1.__b) && a2(u2);
  n:
    if ("function" == typeof L2)
      try {
        if (m2 = u2.props, x2 = (a2 = L2.contextType) && i2[a2.__c], C2 = a2 ? x2 ? x2.props.value : a2.__ : i2, t2.__c ? g2 = (h2 = u2.__c = t2.__c).__ = h2.__E : ("prototype" in L2 && L2.prototype.render ? u2.__c = h2 = new L2(m2, C2) : (u2.__c = h2 = new b(m2, C2), h2.constructor = L2, h2.render = q$1), x2 && x2.sub(h2), h2.props = m2, h2.state || (h2.state = {}), h2.context = C2, h2.__n = i2, p2 = h2.__d = true, h2.__h = [], h2._sb = []), null == h2.__s && (h2.__s = h2.state), null != L2.getDerivedStateFromProps && (h2.__s == h2.state && (h2.__s = d$1({}, h2.__s)), d$1(h2.__s, L2.getDerivedStateFromProps(m2, h2.__s))), v2 = h2.props, w2 = h2.state, h2.__v = u2, p2)
          null == L2.getDerivedStateFromProps && null != h2.componentWillMount && h2.componentWillMount(), null != h2.componentDidMount && h2.__h.push(h2.componentDidMount);
        else {
          if (null == L2.getDerivedStateFromProps && m2 !== v2 && null != h2.componentWillReceiveProps && h2.componentWillReceiveProps(m2, C2), !h2.__e && (null != h2.shouldComponentUpdate && false === h2.shouldComponentUpdate(m2, h2.__s, C2) || u2.__v === t2.__v)) {
            for (u2.__v !== t2.__v && (h2.props = m2, h2.state = h2.__s, h2.__d = false), u2.__e = t2.__e, u2.__k = t2.__k, u2.__k.forEach(function(n3) {
              n3 && (n3.__ = u2);
            }), M2 = 0; M2 < h2._sb.length; M2++)
              h2.__h.push(h2._sb[M2]);
            h2._sb = [], h2.__h.length && f2.push(h2);
            break n;
          }
          null != h2.componentWillUpdate && h2.componentWillUpdate(m2, h2.__s, C2), null != h2.componentDidUpdate && h2.__h.push(function() {
            h2.componentDidUpdate(v2, w2, _2);
          });
        }
        if (h2.context = C2, h2.props = m2, h2.__P = n2, h2.__e = false, P2 = l$1.__r, $2 = 0, "prototype" in L2 && L2.prototype.render) {
          for (h2.state = h2.__s, h2.__d = false, P2 && P2(u2), a2 = h2.render(h2.props, h2.state, h2.context), I2 = 0; I2 < h2._sb.length; I2++)
            h2.__h.push(h2._sb[I2]);
          h2._sb = [];
        } else
          do {
            h2.__d = false, P2 && P2(u2), a2 = h2.render(h2.props, h2.state, h2.context), h2.state = h2.__s;
          } while (h2.__d && ++$2 < 25);
        h2.state = h2.__s, null != h2.getChildContext && (i2 = d$1(d$1({}, i2), h2.getChildContext())), p2 || null == h2.getSnapshotBeforeUpdate || (_2 = h2.getSnapshotBeforeUpdate(v2, w2)), S(n2, y$1(H = null != a2 && a2.type === k$1 && null == a2.key ? a2.props.children : a2) ? H : [H], u2, t2, i2, o2, r2, f2, e2, c2, s2), h2.base = u2.__e, u2.__u &= -161, h2.__h.length && f2.push(h2), g2 && (h2.__E = h2.__ = null);
      } catch (n3) {
        u2.__v = null, c2 || null != r2 ? (u2.__e = e2, u2.__u |= c2 ? 160 : 32, r2[r2.indexOf(e2)] = null) : (u2.__e = t2.__e, u2.__k = t2.__k), l$1.__e(n3, u2, t2);
      }
    else
      null == r2 && u2.__v === t2.__v ? (u2.__k = t2.__k, u2.__e = t2.__e) : u2.__e = z$1(t2.__e, u2, t2, i2, o2, r2, f2, c2, s2);
  (a2 = l$1.diffed) && a2(u2);
}
function j$1(n2, u2, t2) {
  u2.__d = void 0;
  for (var i2 = 0; i2 < t2.length; i2++)
    N(t2[i2], t2[++i2], t2[++i2]);
  l$1.__c && l$1.__c(u2, n2), n2.some(function(u3) {
    try {
      n2 = u3.__h, u3.__h = [], n2.some(function(n3) {
        n3.call(u3);
      });
    } catch (n3) {
      l$1.__e(n3, u3.__v);
    }
  });
}
function z$1(l2, u2, t2, i2, o2, r2, f2, e2, c2) {
  var s2, a2, p2, v2, d2, _2, g2, m2 = t2.props, k2 = u2.props, b2 = u2.type;
  if ("svg" === b2 ? o2 = "http://www.w3.org/2000/svg" : "math" === b2 ? o2 = "http://www.w3.org/1998/Math/MathML" : o2 || (o2 = "http://www.w3.org/1999/xhtml"), null != r2) {
    for (s2 = 0; s2 < r2.length; s2++)
      if ((d2 = r2[s2]) && "setAttribute" in d2 == !!b2 && (b2 ? d2.localName === b2 : 3 === d2.nodeType)) {
        l2 = d2, r2[s2] = null;
        break;
      }
  }
  if (null == l2) {
    if (null === b2)
      return document.createTextNode(k2);
    l2 = document.createElementNS(o2, b2, k2.is && k2), r2 = null, e2 = false;
  }
  if (null === b2)
    m2 === k2 || e2 && l2.data === k2 || (l2.data = k2);
  else {
    if (r2 = r2 && n$1.call(l2.childNodes), m2 = t2.props || h$1, !e2 && null != r2)
      for (m2 = {}, s2 = 0; s2 < l2.attributes.length; s2++)
        m2[(d2 = l2.attributes[s2]).name] = d2.value;
    for (s2 in m2)
      if (d2 = m2[s2], "children" == s2)
        ;
      else if ("dangerouslySetInnerHTML" == s2)
        p2 = d2;
      else if ("key" !== s2 && !(s2 in k2)) {
        if ("value" == s2 && "defaultValue" in k2 || "checked" == s2 && "defaultChecked" in k2)
          continue;
        A$1(l2, s2, null, d2, o2);
      }
    for (s2 in k2)
      d2 = k2[s2], "children" == s2 ? v2 = d2 : "dangerouslySetInnerHTML" == s2 ? a2 = d2 : "value" == s2 ? _2 = d2 : "checked" == s2 ? g2 = d2 : "key" === s2 || e2 && "function" != typeof d2 || m2[s2] === d2 || A$1(l2, s2, d2, m2[s2], o2);
    if (a2)
      e2 || p2 && (a2.__html === p2.__html || a2.__html === l2.innerHTML) || (l2.innerHTML = a2.__html), u2.__k = [];
    else if (p2 && (l2.innerHTML = ""), S(l2, y$1(v2) ? v2 : [v2], u2, t2, i2, "foreignObject" === b2 ? "http://www.w3.org/1999/xhtml" : o2, r2, f2, r2 ? r2[0] : t2.__k && x$1(t2, 0), e2, c2), null != r2)
      for (s2 = r2.length; s2--; )
        null != r2[s2] && w$1(r2[s2]);
    e2 || (s2 = "value", void 0 !== _2 && (_2 !== l2[s2] || "progress" === b2 && !_2 || "option" === b2 && _2 !== m2[s2]) && A$1(l2, s2, _2, m2[s2], o2), s2 = "checked", void 0 !== g2 && g2 !== l2[s2] && A$1(l2, s2, g2, m2[s2], o2));
  }
  return l2;
}
function N(n2, u2, t2) {
  try {
    "function" == typeof n2 ? n2(u2) : n2.current = u2;
  } catch (n3) {
    l$1.__e(n3, t2);
  }
}
function V(n2, u2, t2) {
  var i2, o2;
  if (l$1.unmount && l$1.unmount(n2), (i2 = n2.ref) && (i2.current && i2.current !== n2.__e || N(i2, null, u2)), null != (i2 = n2.__c)) {
    if (i2.componentWillUnmount)
      try {
        i2.componentWillUnmount();
      } catch (n3) {
        l$1.__e(n3, u2);
      }
    i2.base = i2.__P = null;
  }
  if (i2 = n2.__k)
    for (o2 = 0; o2 < i2.length; o2++)
      i2[o2] && V(i2[o2], u2, t2 || "function" != typeof n2.type);
  t2 || null == n2.__e || w$1(n2.__e), n2.__c = n2.__ = n2.__e = n2.__d = void 0;
}
function q$1(n2, l2, u2) {
  return this.constructor(n2, u2);
}
function B$1(u2, t2, i2) {
  var o2, r2, f2, e2;
  l$1.__ && l$1.__(u2, t2), r2 = (o2 = "function" == typeof i2) ? null : t2.__k, f2 = [], e2 = [], O(t2, u2 = (!o2 && i2 || t2).__k = _$1(k$1, null, [u2]), r2 || h$1, h$1, t2.namespaceURI, !o2 && i2 ? [i2] : r2 ? null : t2.firstChild ? n$1.call(t2.childNodes) : null, f2, !o2 && i2 ? i2 : r2 ? r2.__e : t2.firstChild, o2, e2), j$1(f2, u2, e2);
}
n$1 = p$1.slice, l$1 = { __e: function(n2, l2, u2, t2) {
  for (var i2, o2, r2; l2 = l2.__; )
    if ((i2 = l2.__c) && !i2.__)
      try {
        if ((o2 = i2.constructor) && null != o2.getDerivedStateFromError && (i2.setState(o2.getDerivedStateFromError(n2)), r2 = i2.__d), null != i2.componentDidCatch && (i2.componentDidCatch(n2, t2 || {}), r2 = i2.__d), r2)
          return i2.__E = i2;
      } catch (l3) {
        n2 = l3;
      }
  throw n2;
} }, u$1 = 0, b.prototype.setState = function(n2, l2) {
  var u2;
  u2 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = d$1({}, this.state), "function" == typeof n2 && (n2 = n2(d$1({}, u2), this.props)), n2 && d$1(u2, n2), null != n2 && this.__v && (l2 && this._sb.push(l2), M(this));
}, b.prototype.forceUpdate = function(n2) {
  this.__v && (this.__e = true, n2 && this.__h.push(n2), M(this));
}, b.prototype.render = k$1, i$1 = [], r$3 = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f$1 = function(n2, l2) {
  return n2.__v.__b - l2.__v.__b;
}, P.__r = 0, e$2 = 0, c$1 = F$1(false), s$1 = F$1(true);
var n = function(t2, s2, r2, e2) {
  var u2;
  s2[0] = 0;
  for (var h2 = 1; h2 < s2.length; h2++) {
    var p2 = s2[h2++], a2 = s2[h2] ? (s2[0] |= p2 ? 1 : 2, r2[s2[h2++]]) : s2[++h2];
    3 === p2 ? e2[0] = a2 : 4 === p2 ? e2[1] = Object.assign(e2[1] || {}, a2) : 5 === p2 ? (e2[1] = e2[1] || {})[s2[++h2]] = a2 : 6 === p2 ? e2[1][s2[++h2]] += a2 + "" : p2 ? (u2 = t2.apply(a2, n(t2, a2, r2, ["", null])), e2.push(u2), a2[0] ? s2[0] |= 2 : (s2[h2 - 2] = 0, s2[h2] = u2)) : e2.push(a2);
  }
  return e2;
}, t$1 = /* @__PURE__ */ new Map();
function e$1(s2) {
  var r2 = t$1.get(this);
  return r2 || (r2 = /* @__PURE__ */ new Map(), t$1.set(this, r2)), (r2 = n(this, r2.get(s2) || (r2.set(s2, r2 = function(n2) {
    for (var t2, s3, r3 = 1, e2 = "", u2 = "", h2 = [0], p2 = function(n3) {
      1 === r3 && (n3 || (e2 = e2.replace(/^\s*\n\s*|\s*\n\s*$/g, ""))) ? h2.push(0, n3, e2) : 3 === r3 && (n3 || e2) ? (h2.push(3, n3, e2), r3 = 2) : 2 === r3 && "..." === e2 && n3 ? h2.push(4, n3, 0) : 2 === r3 && e2 && !n3 ? h2.push(5, 0, true, e2) : r3 >= 5 && ((e2 || !n3 && 5 === r3) && (h2.push(r3, 0, e2, s3), r3 = 6), n3 && (h2.push(r3, n3, 0, s3), r3 = 6)), e2 = "";
    }, a2 = 0; a2 < n2.length; a2++) {
      a2 && (1 === r3 && p2(), p2(a2));
      for (var l2 = 0; l2 < n2[a2].length; l2++)
        t2 = n2[a2][l2], 1 === r3 ? "<" === t2 ? (p2(), h2 = [h2], r3 = 3) : e2 += t2 : 4 === r3 ? "--" === e2 && ">" === t2 ? (r3 = 1, e2 = "") : e2 = t2 + e2[0] : u2 ? t2 === u2 ? u2 = "" : e2 += t2 : '"' === t2 || "'" === t2 ? u2 = t2 : ">" === t2 ? (p2(), r3 = 1) : r3 && ("=" === t2 ? (r3 = 5, s3 = e2, e2 = "") : "/" === t2 && (r3 < 5 || ">" === n2[a2][l2 + 1]) ? (p2(), 3 === r3 && (h2 = h2[0]), r3 = h2, (h2 = h2[0]).push(2, 0, r3), r3 = 0) : " " === t2 || "	" === t2 || "\n" === t2 || "\r" === t2 ? (p2(), r3 = 2) : e2 += t2), 3 === r3 && "!--" === e2 && (r3 = 4, h2 = h2[0]);
    }
    return p2(), h2;
  }(s2)), r2), arguments, [])).length > 1 ? r2 : r2[0];
}
var m$1 = e$1.bind(_$1);
var t, r$2, u, i, o$1 = 0, f = [], c = [], e = l$1, a = e.__b, v = e.__r, l = e.diffed, m = e.__c, s = e.unmount, d = e.__;
function h(n2, t2) {
  e.__h && e.__h(r$2, n2, o$1 || t2), o$1 = 0;
  var u2 = r$2.__H || (r$2.__H = { __: [], __h: [] });
  return n2 >= u2.__.length && u2.__.push({ __V: c }), u2.__[n2];
}
function p(n2) {
  return o$1 = 1, y(D, n2);
}
function y(n2, u2, i2) {
  var o2 = h(t++, 2);
  if (o2.t = n2, !o2.__c && (o2.__ = [D(void 0, u2), function(n3) {
    var t2 = o2.__N ? o2.__N[0] : o2.__[0], r2 = o2.t(t2, n3);
    t2 !== r2 && (o2.__N = [r2, o2.__[1]], o2.__c.setState({}));
  }], o2.__c = r$2, !r$2.u)) {
    var f2 = function(n3, t2, r2) {
      if (!o2.__c.__H)
        return true;
      var u3 = o2.__c.__H.__.filter(function(n4) {
        return !!n4.__c;
      });
      if (u3.every(function(n4) {
        return !n4.__N;
      }))
        return !c2 || c2.call(this, n3, t2, r2);
      var i3 = false;
      return u3.forEach(function(n4) {
        if (n4.__N) {
          var t3 = n4.__[0];
          n4.__ = n4.__N, n4.__N = void 0, t3 !== n4.__[0] && (i3 = true);
        }
      }), !(!i3 && o2.__c.props === n3) && (!c2 || c2.call(this, n3, t2, r2));
    };
    r$2.u = true;
    var c2 = r$2.shouldComponentUpdate, e2 = r$2.componentWillUpdate;
    r$2.componentWillUpdate = function(n3, t2, r2) {
      if (this.__e) {
        var u3 = c2;
        c2 = void 0, f2(n3, t2, r2), c2 = u3;
      }
      e2 && e2.call(this, n3, t2, r2);
    }, r$2.shouldComponentUpdate = f2;
  }
  return o2.__N || o2.__;
}
function _(n2, u2) {
  var i2 = h(t++, 3);
  !e.__s && C(i2.__H, u2) && (i2.__ = n2, i2.i = u2, r$2.__H.__h.push(i2));
}
function A(n2, u2) {
  var i2 = h(t++, 4);
  !e.__s && C(i2.__H, u2) && (i2.__ = n2, i2.i = u2, r$2.__h.push(i2));
}
function F(n2) {
  return o$1 = 5, q(function() {
    return { current: n2 };
  }, []);
}
function q(n2, r2) {
  var u2 = h(t++, 7);
  return C(u2.__H, r2) ? (u2.__V = n2(), u2.i = r2, u2.__h = n2, u2.__V) : u2.__;
}
function x(n2, t2) {
  return o$1 = 8, q(function() {
    return n2;
  }, t2);
}
function j() {
  for (var n2; n2 = f.shift(); )
    if (n2.__P && n2.__H)
      try {
        n2.__H.__h.forEach(z), n2.__H.__h.forEach(B), n2.__H.__h = [];
      } catch (t2) {
        n2.__H.__h = [], e.__e(t2, n2.__v);
      }
}
e.__b = function(n2) {
  r$2 = null, a && a(n2);
}, e.__ = function(n2, t2) {
  n2 && t2.__k && t2.__k.__m && (n2.__m = t2.__k.__m), d && d(n2, t2);
}, e.__r = function(n2) {
  v && v(n2), t = 0;
  var i2 = (r$2 = n2.__c).__H;
  i2 && (u === r$2 ? (i2.__h = [], r$2.__h = [], i2.__.forEach(function(n3) {
    n3.__N && (n3.__ = n3.__N), n3.__V = c, n3.__N = n3.i = void 0;
  })) : (i2.__h.forEach(z), i2.__h.forEach(B), i2.__h = [], t = 0)), u = r$2;
}, e.diffed = function(n2) {
  l && l(n2);
  var t2 = n2.__c;
  t2 && t2.__H && (t2.__H.__h.length && (1 !== f.push(t2) && i === e.requestAnimationFrame || ((i = e.requestAnimationFrame) || w)(j)), t2.__H.__.forEach(function(n3) {
    n3.i && (n3.__H = n3.i), n3.__V !== c && (n3.__ = n3.__V), n3.i = void 0, n3.__V = c;
  })), u = r$2 = null;
}, e.__c = function(n2, t2) {
  t2.some(function(n3) {
    try {
      n3.__h.forEach(z), n3.__h = n3.__h.filter(function(n4) {
        return !n4.__ || B(n4);
      });
    } catch (r2) {
      t2.some(function(n4) {
        n4.__h && (n4.__h = []);
      }), t2 = [], e.__e(r2, n3.__v);
    }
  }), m && m(n2, t2);
}, e.unmount = function(n2) {
  s && s(n2);
  var t2, r2 = n2.__c;
  r2 && r2.__H && (r2.__H.__.forEach(function(n3) {
    try {
      z(n3);
    } catch (n4) {
      t2 = n4;
    }
  }), r2.__H = void 0, t2 && e.__e(t2, r2.__v));
};
var k = "function" == typeof requestAnimationFrame;
function w(n2) {
  var t2, r2 = function() {
    clearTimeout(u2), k && cancelAnimationFrame(t2), setTimeout(n2);
  }, u2 = setTimeout(r2, 100);
  k && (t2 = requestAnimationFrame(r2));
}
function z(n2) {
  var t2 = r$2, u2 = n2.__c;
  "function" == typeof u2 && (n2.__c = void 0, u2()), r$2 = t2;
}
function B(n2) {
  var t2 = r$2;
  n2.__c = n2.__(), r$2 = t2;
}
function C(n2, t2) {
  return !n2 || n2.length !== t2.length || t2.some(function(t3, r2) {
    return t3 !== n2[r2];
  });
}
function D(n2, t2) {
  return "function" == typeof t2 ? t2(n2) : t2;
}
function r$1(e2) {
  var t2, f2, n2 = "";
  if ("string" == typeof e2 || "number" == typeof e2)
    n2 += e2;
  else if ("object" == typeof e2)
    if (Array.isArray(e2)) {
      var o2 = e2.length;
      for (t2 = 0; t2 < o2; t2++)
        e2[t2] && (f2 = r$1(e2[t2])) && (n2 && (n2 += " "), n2 += f2);
    } else
      for (f2 in e2)
        e2[f2] && (n2 && (n2 += " "), n2 += f2);
  return n2;
}
function clsx() {
  for (var e2, t2, f2 = 0, n2 = "", o2 = arguments.length; f2 < o2; f2++)
    (e2 = arguments[f2]) && (t2 = r$1(e2)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
function PopupMenuItem(props) {
  const {
    entry,
    selected,
    onMouseEnter,
    onMouseLeave,
    onAction
  } = props;
  return m$1`
    <li
      class=${clsx("entry", { selected })}
      data-id=${entry.id}
      title=${entry.title || entry.label}
      tabIndex="0"
      onClick=${onAction}
      onFocus=${onMouseEnter}
      onBlur=${onMouseLeave}
      onMouseEnter=${onMouseEnter}
      onMouseLeave=${onMouseLeave}
      onDragStart=${(event2) => onAction(event2, entry, "dragstart")}
      aria-role="button"
      draggable=${true}
    >
      <div class="djs-popup-entry-content">
        <span
          class=${clsx("djs-popup-entry-name", entry.className)}
        >
          ${entry.imageUrl && m$1`<img class="djs-popup-entry-icon" src=${entry.imageUrl} alt="" />` || entry.imageHtml && m$1`<div class="djs-popup-entry-icon" dangerouslySetInnerHTML=${{ __html: entry.imageHtml }} />`}

          ${entry.label ? m$1`
            <span class="djs-popup-label">
              ${entry.label}
            </span>
          ` : null}
        </span>
        ${entry.description && m$1`
          <span
            class="djs-popup-entry-description"
            title=${entry.description}
          >
            ${entry.description}
          </span>
        `}
      </div>
      ${entry.documentationRef && m$1`
        <div class="djs-popup-entry-docs">
          <a
            href="${entry.documentationRef}"
            onClick=${(event2) => event2.stopPropagation()}
            title="Open element documentation"
            target="_blank"
            rel="noopener"
          >
            <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M10.6368 10.6375V5.91761H11.9995V10.6382C11.9995 10.9973 11.8623 11.3141 11.5878 11.5885C11.3134 11.863 10.9966 12.0002 10.6375 12.0002H1.36266C0.982345 12.0002 0.660159 11.8681 0.396102 11.6041C0.132044 11.34 1.52588e-05 11.0178 1.52588e-05 10.6375V1.36267C1.52588e-05 0.98236 0.132044 0.660173 0.396102 0.396116C0.660159 0.132058 0.982345 2.95639e-05 1.36266 2.95639e-05H5.91624V1.36267H1.36266V10.6375H10.6368ZM12 0H7.2794L7.27873 1.36197H9.68701L3.06507 7.98391L4.01541 8.93425L10.6373 2.31231V4.72059H12V0Z" fill="#818798"/>
            </svg>
          </a>
        </div>
      `}
    </li>
  `;
}
function PopupMenuList(props) {
  const {
    selectedEntry,
    setSelectedEntry,
    entries,
    ...restProps
  } = props;
  const resultsRef = F();
  const groups = q(() => groupEntries(entries), [entries]);
  A(() => {
    const containerEl = resultsRef.current;
    if (!containerEl)
      return;
    const selectedEl = containerEl.querySelector(".selected");
    if (selectedEl) {
      scrollIntoView(selectedEl);
    }
  }, [selectedEntry]);
  return m$1`
    <div class="djs-popup-results" ref=${resultsRef}>
      ${groups.map((group) => m$1`
        ${group.name && m$1`
          <div key=${group.id} class="entry-header" title=${group.name}>
            ${group.name}
          </div>
        `}
        <ul class="djs-popup-group" data-group=${group.id}>
          ${group.entries.map((entry) => m$1`
            <${PopupMenuItem}
              key=${entry.id}
              entry=${entry}
              selected=${entry === selectedEntry}
              onMouseEnter=${() => setSelectedEntry(entry)}
              onMouseLeave=${() => setSelectedEntry(null)}
              ...${restProps}
            />
          `)}
        </ul>
      `)}
    </div>
  `;
}
function groupEntries(entries) {
  const groups = [];
  const getGroup = (group) => groups.find((elem) => group.id === elem.id);
  const containsGroup = (group) => !!getGroup(group);
  const formatGroup = (group) => typeof group === "string" ? { id: group } : group;
  entries.forEach((entry) => {
    const group = entry.group ? formatGroup(entry.group) : { id: "default" };
    if (!containsGroup(group)) {
      groups.push({ ...group, entries: [entry] });
    } else {
      getGroup(group).entries.push(entry);
    }
  });
  return groups;
}
function scrollIntoView(el) {
  if (typeof el.scrollIntoViewIfNeeded === "function") {
    el.scrollIntoViewIfNeeded();
  } else {
    el.scrollIntoView({
      scrollMode: "if-needed",
      block: "nearest"
    });
  }
}
function PopupMenuComponent(props) {
  const {
    onClose,
    onSelect,
    className,
    headerEntries,
    position,
    title,
    width,
    scale,
    search,
    emptyPlaceholder,
    entries: originalEntries,
    onOpened,
    onClosed
  } = props;
  const searchable = q(() => {
    if (!isDefined$1(search)) {
      return false;
    }
    return originalEntries.length > 5;
  }, [search, originalEntries]);
  const [value, setValue] = p("");
  const filterEntries = x((originalEntries2, value2) => {
    if (!searchable) {
      return originalEntries2;
    }
    const filter2 = (entry) => {
      if (!value2) {
        return (entry.rank || 0) >= 0;
      }
      if (entry.searchable === false) {
        return false;
      }
      const searchableFields = [
        entry.description || "",
        entry.label || "",
        entry.search || ""
      ].map((string) => string.toLowerCase());
      return value2.toLowerCase().split(/\s/g).every((word) => searchableFields.some((field) => field.includes(word)));
    };
    return originalEntries2.filter(filter2);
  }, [searchable]);
  const [entries, setEntries] = p(filterEntries(originalEntries, value));
  const [selectedEntry, setSelectedEntry] = p(entries[0]);
  const updateEntries = x((newEntries) => {
    if (!selectedEntry || !newEntries.includes(selectedEntry)) {
      setSelectedEntry(newEntries[0]);
    }
    setEntries(newEntries);
  }, [selectedEntry, setEntries, setSelectedEntry]);
  _(() => {
    updateEntries(filterEntries(originalEntries, value));
  }, [value, originalEntries]);
  const keyboardSelect = x((direction) => {
    const idx = entries.indexOf(selectedEntry);
    let nextIdx = idx + direction;
    if (nextIdx < 0) {
      nextIdx = entries.length - 1;
    }
    if (nextIdx >= entries.length) {
      nextIdx = 0;
    }
    setSelectedEntry(entries[nextIdx]);
  }, [entries, selectedEntry, setSelectedEntry]);
  const handleKeyDown = x((event2) => {
    if (event2.key === "Enter" && selectedEntry) {
      return onSelect(event2, selectedEntry);
    }
    if (event2.key === "ArrowUp") {
      keyboardSelect(-1);
      return event2.preventDefault();
    }
    if (event2.key === "ArrowDown") {
      keyboardSelect(1);
      return event2.preventDefault();
    }
  }, [onSelect, selectedEntry, keyboardSelect]);
  const handleKey = x((event2) => {
    if (matches(event2.target, "input")) {
      setValue(() => event2.target.value);
    }
  }, [setValue]);
  _(() => {
    onOpened();
    return () => {
      onClosed();
    };
  }, []);
  const displayHeader = q(() => title || headerEntries.length > 0, [title, headerEntries]);
  return m$1`
    <${PopupMenuWrapper}
      onClose=${onClose}
      onKeyup=${handleKey}
      onKeydown=${handleKeyDown}
      className=${className}
      position=${position}
      width=${width}
      scale=${scale}
    >
      ${displayHeader && m$1`
        <div class="djs-popup-header">
          <h3 class="djs-popup-title" title=${title}>${title}</h3>
          ${headerEntries.map((entry) => m$1`
            <${entry.action ? "button" : "span"}
              class=${getHeaderClasses(entry, entry === selectedEntry)}
              onClick=${(event2) => onSelect(event2, entry)}
              title=${entry.title || entry.label}
              data-id=${entry.id}
              onMouseEnter=${() => setSelectedEntry(entry)}
              onMouseLeave=${() => setSelectedEntry(null)}
              onFocus=${() => setSelectedEntry(entry)}
              onBlur=${() => setSelectedEntry(null)}
            >
            ${entry.imageUrl && m$1`<img class="djs-popup-entry-icon" src=${entry.imageUrl} alt="" />` || entry.imageHtml && m$1`<div class="djs-popup-entry-icon" dangerouslySetInnerHTML=${{ __html: entry.imageHtml }} />`}

              ${entry.label ? m$1`
                <span class="djs-popup-label">${entry.label}</span>
              ` : null}
            </${entry.action ? "button" : "span"}>
          `)}
        </div>
      `}
      ${originalEntries.length > 0 && m$1`
        <div class="djs-popup-body">

          ${searchable && m$1`
          <div class="djs-popup-search">
            <svg class="djs-popup-search-icon" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M9.0325 8.5H9.625L13.3675 12.25L12.25 13.3675L8.5 9.625V9.0325L8.2975 8.8225C7.4425 9.5575 6.3325 10 5.125 10C2.4325 10 0.25 7.8175 0.25 5.125C0.25 2.4325 2.4325 0.25 5.125 0.25C7.8175 0.25 10 2.4325 10 5.125C10 6.3325 9.5575 7.4425 8.8225 8.2975L9.0325 8.5ZM1.75 5.125C1.75 6.9925 3.2575 8.5 5.125 8.5C6.9925 8.5 8.5 6.9925 8.5 5.125C8.5 3.2575 6.9925 1.75 5.125 1.75C3.2575 1.75 1.75 3.2575 1.75 5.125Z" fill="#22242A"/>
            </svg>
            <input type="text" aria-label="${title}" />
          </div>
          `}

          <${PopupMenuList}
            entries=${entries}
            selectedEntry=${selectedEntry}
            setSelectedEntry=${setSelectedEntry}
            onAction=${onSelect}
          />
        </div>
      `}
    ${emptyPlaceholder && entries.length === 0 && m$1`
      <div class="djs-popup-no-results">${isFunction$1(emptyPlaceholder) ? emptyPlaceholder(value) : emptyPlaceholder}</div>
    `}
    </${PopupMenuWrapper}>
  `;
}
function PopupMenuWrapper(props) {
  const {
    onClose,
    onKeydown,
    onKeyup,
    className,
    children,
    position: positionGetter
  } = props;
  const popupRef = F();
  A(() => {
    if (typeof positionGetter !== "function") {
      return;
    }
    const popupEl = popupRef.current;
    const position = positionGetter(popupEl);
    popupEl.style.left = `${position.x}px`;
    popupEl.style.top = `${position.y}px`;
  }, [popupRef.current, positionGetter]);
  A(() => {
    const popupEl = popupRef.current;
    if (!popupEl) {
      return;
    }
    const inputEl = popupEl.querySelector("input");
    (inputEl || popupEl).focus();
  }, []);
  _(() => {
    const handleKeyDown = (event2) => {
      if (event2.key === "Escape") {
        event2.preventDefault();
        return onClose();
      }
    };
    const handleClick = (event2) => {
      const popup = closest(event2.target, ".djs-popup", true);
      if (popup) {
        return;
      }
      return onClose();
    };
    document.documentElement.addEventListener("keydown", handleKeyDown);
    document.body.addEventListener("click", handleClick);
    return () => {
      document.documentElement.removeEventListener("keydown", handleKeyDown);
      document.body.removeEventListener("click", handleClick);
    };
  }, []);
  return m$1`
    <div
      class=${clsx("djs-popup", className)}
      style=${getPopupStyle(props)}
      onKeydown=${onKeydown}
      onKeyup=${onKeyup}
      ref=${popupRef}
      tabIndex="-1"
    >
      ${children}
    </div>
  `;
}
function getPopupStyle(props) {
  return {
    transform: `scale(${props.scale})`,
    width: `${props.width}px`,
    "transform-origin": "top left"
  };
}
function getHeaderClasses(entry, selected) {
  return clsx(
    "entry",
    entry.className,
    entry.active ? "active" : "",
    entry.disabled ? "disabled" : "",
    selected ? "selected" : ""
  );
}
var DATA_REF = "data-id";
var CLOSE_EVENTS = [
  "contextPad.close",
  "canvas.viewbox.changing",
  "commandStack.changed"
];
var DEFAULT_PRIORITY$1 = 1e3;
function PopupMenu(config2, eventBus, canvas) {
  this._eventBus = eventBus;
  this._canvas = canvas;
  this._current = null;
  var scale = isDefined$1(config2 && config2.scale) ? config2.scale : {
    min: 1,
    max: 1
  };
  this._config = {
    scale
  };
  eventBus.on("diagram.destroy", () => {
    this.close();
  });
  eventBus.on("element.changed", (event2) => {
    const element = this.isOpen() && this._current.target;
    if (event2.element === element) {
      this.refresh();
    }
  });
}
PopupMenu.$inject = [
  "config.popupMenu",
  "eventBus",
  "canvas"
];
PopupMenu.prototype._render = function() {
  const {
    position: _position,
    providerId: className,
    entries,
    headerEntries,
    emptyPlaceholder,
    options
  } = this._current;
  const entriesArray = Object.entries(entries).map(
    ([key, value]) => ({ id: key, ...value })
  );
  const headerEntriesArray = Object.entries(headerEntries).map(
    ([key, value]) => ({ id: key, ...value })
  );
  const position = _position && ((container) => this._ensureVisible(container, _position));
  const scale = this._updateScale(this._current.container);
  const onClose = (result) => this.close(result);
  const onSelect = (event2, entry, action) => this.trigger(event2, entry, action);
  B$1(
    m$1`
      <${PopupMenuComponent}
        onClose=${onClose}
        onSelect=${onSelect}
        position=${position}
        className=${className}
        entries=${entriesArray}
        headerEntries=${headerEntriesArray}
        emptyPlaceholder=${emptyPlaceholder}
        scale=${scale}
        onOpened=${this._onOpened.bind(this)}
        onClosed=${this._onClosed.bind(this)}
        ...${{ ...options }}
      />
    `,
    this._current.container
  );
};
PopupMenu.prototype.open = function(target, providerId, position, options) {
  if (!target) {
    throw new Error("target is missing");
  }
  if (!providerId) {
    throw new Error("providers for <" + providerId + "> not found");
  }
  if (!position) {
    throw new Error("position is missing");
  }
  if (this.isOpen()) {
    this.close();
  }
  const {
    entries,
    headerEntries,
    emptyPlaceholder
  } = this._getContext(target, providerId);
  this._current = {
    position,
    providerId,
    target,
    entries,
    headerEntries,
    emptyPlaceholder,
    container: this._createContainer({ provider: providerId }),
    options
  };
  this._emit("open");
  this._bindAutoClose();
  this._render();
};
PopupMenu.prototype.refresh = function() {
  if (!this.isOpen()) {
    return;
  }
  const {
    target,
    providerId
  } = this._current;
  const {
    entries,
    headerEntries,
    emptyPlaceholder
  } = this._getContext(target, providerId);
  this._current = {
    ...this._current,
    entries,
    headerEntries,
    emptyPlaceholder
  };
  this._emit("refresh");
  this._render();
};
PopupMenu.prototype._getContext = function(target, provider) {
  const providers = this._getProviders(provider);
  if (!providers || !providers.length) {
    throw new Error("provider for <" + provider + "> not found");
  }
  const entries = this._getEntries(target, providers);
  const headerEntries = this._getHeaderEntries(target, providers);
  const emptyPlaceholder = this._getEmptyPlaceholder(providers);
  return {
    entries,
    headerEntries,
    emptyPlaceholder,
    empty: !(Object.keys(entries).length || Object.keys(headerEntries).length)
  };
};
PopupMenu.prototype.close = function() {
  if (!this.isOpen()) {
    return;
  }
  this._emit("close");
  this.reset();
  this._current = null;
};
PopupMenu.prototype.reset = function() {
  const container = this._current.container;
  B$1(null, container);
  remove$1(container);
};
PopupMenu.prototype._emit = function(event2, payload) {
  this._eventBus.fire(`popupMenu.${event2}`, payload);
};
PopupMenu.prototype._onOpened = function() {
  this._emit("opened");
};
PopupMenu.prototype._onClosed = function() {
  this._emit("closed");
};
PopupMenu.prototype._createContainer = function(config2) {
  var canvas = this._canvas, parent = canvas.getContainer();
  const container = domify$1(`<div class="djs-popup-parent djs-scrollable" data-popup=${config2.provider}></div>`);
  parent.appendChild(container);
  return container;
};
PopupMenu.prototype._bindAutoClose = function() {
  this._eventBus.once(CLOSE_EVENTS, this.close, this);
};
PopupMenu.prototype._unbindAutoClose = function() {
  this._eventBus.off(CLOSE_EVENTS, this.close, this);
};
PopupMenu.prototype._updateScale = function() {
  var zoom2 = this._canvas.zoom();
  var scaleConfig = this._config.scale, minScale, maxScale, scale = zoom2;
  if (scaleConfig !== true) {
    if (scaleConfig === false) {
      minScale = 1;
      maxScale = 1;
    } else {
      minScale = scaleConfig.min;
      maxScale = scaleConfig.max;
    }
    if (isDefined$1(minScale) && zoom2 < minScale) {
      scale = minScale;
    }
    if (isDefined$1(maxScale) && zoom2 > maxScale) {
      scale = maxScale;
    }
  }
  return scale;
};
PopupMenu.prototype._ensureVisible = function(container, position) {
  var documentBounds = document.documentElement.getBoundingClientRect();
  var containerBounds = container.getBoundingClientRect();
  var overAxis = {}, left = position.x, top = position.y;
  if (position.x + containerBounds.width > documentBounds.width) {
    overAxis.x = true;
  }
  if (position.y + containerBounds.height > documentBounds.height) {
    overAxis.y = true;
  }
  if (overAxis.x && overAxis.y) {
    left = position.x - containerBounds.width;
    top = position.y - containerBounds.height;
  } else if (overAxis.x) {
    left = position.x - containerBounds.width;
    top = position.y;
  } else if (overAxis.y && position.y < containerBounds.height) {
    left = position.x;
    top = 10;
  } else if (overAxis.y) {
    left = position.x;
    top = position.y - containerBounds.height;
  }
  if (position.y < documentBounds.top) {
    top = position.y + containerBounds.height;
  }
  return {
    x: left,
    y: top
  };
};
PopupMenu.prototype.isEmpty = function(target, providerId) {
  if (!target) {
    throw new Error("target is missing");
  }
  if (!providerId) {
    throw new Error("provider ID is missing");
  }
  const providers = this._getProviders(providerId);
  if (!providers || !providers.length) {
    return true;
  }
  return this._getContext(target, providerId).empty;
};
PopupMenu.prototype.registerProvider = function(id, priority, provider) {
  if (!provider) {
    provider = priority;
    priority = DEFAULT_PRIORITY$1;
  }
  this._eventBus.on("popupMenu.getProviders." + id, priority, function(event2) {
    event2.providers.push(provider);
  });
};
PopupMenu.prototype._getProviders = function(id) {
  var event2 = this._eventBus.createEvent({
    type: "popupMenu.getProviders." + id,
    providers: []
  });
  this._eventBus.fire(event2);
  return event2.providers;
};
PopupMenu.prototype._getEntries = function(target, providers) {
  var entries = {};
  forEach$2(providers, function(provider) {
    if (!provider.getPopupMenuEntries) {
      forEach$2(provider.getEntries(target), function(entry) {
        var id = entry.id;
        if (!id) {
          throw new Error("entry ID is missing");
        }
        entries[id] = omit$1(entry, ["id"]);
      });
      return;
    }
    var entriesOrUpdater = provider.getPopupMenuEntries(target);
    if (isFunction$1(entriesOrUpdater)) {
      entries = entriesOrUpdater(entries);
    } else {
      forEach$2(entriesOrUpdater, function(entry, id) {
        entries[id] = entry;
      });
    }
  });
  return entries;
};
PopupMenu.prototype._getHeaderEntries = function(target, providers) {
  var entries = {};
  forEach$2(providers, function(provider) {
    if (!provider.getPopupMenuHeaderEntries) {
      if (!provider.getHeaderEntries) {
        return;
      }
      forEach$2(provider.getHeaderEntries(target), function(entry) {
        var id = entry.id;
        if (!id) {
          throw new Error("entry ID is missing");
        }
        entries[id] = omit$1(entry, ["id"]);
      });
      return;
    }
    var entriesOrUpdater = provider.getPopupMenuHeaderEntries(target);
    if (isFunction$1(entriesOrUpdater)) {
      entries = entriesOrUpdater(entries);
    } else {
      forEach$2(entriesOrUpdater, function(entry, id) {
        entries[id] = entry;
      });
    }
  });
  return entries;
};
PopupMenu.prototype._getEmptyPlaceholder = function(providers) {
  const provider = providers.find(
    (provider2) => isFunction$1(provider2.getEmptyPlaceholder)
  );
  return provider && provider.getEmptyPlaceholder();
};
PopupMenu.prototype.isOpen = function() {
  return !!this._current;
};
PopupMenu.prototype.trigger = function(event2, entry, action = "click") {
  event2.preventDefault();
  if (!entry) {
    let element = closest(event2.delegateTarget || event2.target, ".entry", true);
    let entryId = attr$1(element, DATA_REF);
    entry = { id: entryId, ...this._getEntry(entryId) };
  }
  const handler = entry.action;
  if (this._emit("trigger", { entry, event: event2 }) === false) {
    return;
  }
  if (isFunction$1(handler)) {
    if (action === "click") {
      return handler(event2, entry);
    }
  } else {
    if (handler[action]) {
      return handler[action](event2, entry);
    }
  }
};
PopupMenu.prototype._getEntry = function(entryId) {
  var entry = this._current.entries[entryId] || this._current.headerEntries[entryId];
  if (!entry) {
    throw new Error("entry not found");
  }
  return entry;
};
const PopupMenuModule$1 = {
  __init__: ["popupMenu"],
  popupMenu: ["type", PopupMenu]
};
var icons$1 = {
  align: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2000 2000">
              <line x1="200" y1="150" x2="200" y2="1850" style="stroke:currentColor;stroke-width:100;stroke-linecap:round;"/>
              <rect x="500" y="150" width="1300" height="700" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
              <rect x="500" y="1150" width="700" height="700" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
          </svg>`,
  bottom: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
            <line x1="150" y1="1650" x2="1650" y2="1650" style="stroke:currentColor;stroke-width:100;stroke-linecap:round;"/>
            <rect x="150" y="350" width="600" height="1300" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
            <rect x="1050" y="850" width="600" height="800" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
          </svg>`,
  center: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
            <line x1="900" y1="150" x2="900" y2="1650" style="stroke:currentColor;stroke-width:100;stroke-linecap:round;"/>
            <rect x="250" y="150" width="1300" height="600" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
            <rect x="500" y="1050" width="800" height="600" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
          </svg>`,
  left: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
            <line x1="100" y1="150" x2="100" y2="1650" style="stroke:currentColor;stroke-width:100;stroke-linecap:round;"/>
            <rect x="100" y="150" width="1300" height="600" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
            <rect x="100" y="1050" width="800" height="600" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
          </svg>`,
  right: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
            <line x1="1650" y1="150" x2="1650" y2="1650" style="stroke:currentColor;stroke-width:100;stroke-linecap:round;"/>
            <rect x="350" y="150" width="1300" height="600" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
            <rect x="850" y="1050" width="800" height="600" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
          </svg>`,
  top: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
            <line x1="150" y1="150" x2="1650" y2="150" style="stroke:currentColor;stroke-width:100;stroke-linecap:round;"/>
            <rect x="150" y="150" width="600" height="1300" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
            <rect x="1050" y="150" width="600" height="800" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
          </svg>`,
  middle: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
            <line x1="150" y1="900" x2="1650" y2="900" style="stroke:currentColor;stroke-width:100;stroke-linecap:round;"/>
            <rect x="150" y="250" width="600" height="1300" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
            <rect x="1050" y="500" width="600" height="800" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
          </svg>`
};
var LOW_PRIORITY$m = 900;
function AlignElementsContextPadProvider(contextPad, popupMenu, translate2, canvas) {
  contextPad.registerProvider(LOW_PRIORITY$m, this);
  this._contextPad = contextPad;
  this._popupMenu = popupMenu;
  this._translate = translate2;
  this._canvas = canvas;
}
AlignElementsContextPadProvider.$inject = [
  "contextPad",
  "popupMenu",
  "translate",
  "canvas"
];
AlignElementsContextPadProvider.prototype.getMultiElementContextPadEntries = function(elements) {
  var actions = {};
  if (this._isAllowed(elements)) {
    assign$2(actions, this._getEntries(elements));
  }
  return actions;
};
AlignElementsContextPadProvider.prototype._isAllowed = function(elements) {
  return !this._popupMenu.isEmpty(elements, "align-elements");
};
AlignElementsContextPadProvider.prototype._getEntries = function() {
  var self2 = this;
  return {
    "align-elements": {
      group: "align-elements",
      title: self2._translate("Align elements"),
      html: `<div class="entry">${icons$1["align"]}</div>`,
      action: {
        click: function(event2, target) {
          var position = self2._getMenuPosition(target);
          assign$2(position, {
            cursor: {
              x: event2.x,
              y: event2.y
            }
          });
          self2._popupMenu.open(target, "align-elements", position);
        }
      }
    }
  };
};
AlignElementsContextPadProvider.prototype._getMenuPosition = function(elements) {
  var Y_OFFSET = 5;
  var pad = this._contextPad.getPad(elements).html;
  var padRect = pad.getBoundingClientRect();
  var pos = {
    x: padRect.left,
    y: padRect.bottom + Y_OFFSET
  };
  return pos;
};
var ALIGNMENT_OPTIONS = [
  "left",
  "center",
  "right",
  "top",
  "middle",
  "bottom"
];
function AlignElementsMenuProvider(popupMenu, alignElements, translate2, rules2) {
  this._alignElements = alignElements;
  this._translate = translate2;
  this._popupMenu = popupMenu;
  this._rules = rules2;
  popupMenu.registerProvider("align-elements", this);
}
AlignElementsMenuProvider.$inject = [
  "popupMenu",
  "alignElements",
  "translate",
  "rules"
];
AlignElementsMenuProvider.prototype.getPopupMenuEntries = function(target) {
  var entries = {};
  if (this._isAllowed(target)) {
    assign$2(entries, this._getEntries(target));
  }
  return entries;
};
AlignElementsMenuProvider.prototype._isAllowed = function(target) {
  return this._rules.allowed("elements.align", { elements: target });
};
AlignElementsMenuProvider.prototype._getEntries = function(target) {
  var alignElements = this._alignElements, translate2 = this._translate, popupMenu = this._popupMenu;
  var entries = {};
  forEach$2(ALIGNMENT_OPTIONS, function(alignment) {
    entries["align-elements-" + alignment] = {
      group: "align",
      title: translate2("Align elements " + alignment),
      className: "bjs-align-elements-menu-entry",
      imageHtml: icons$1[alignment],
      action: function() {
        alignElements.trigger(target, alignment);
        popupMenu.close();
      }
    };
  });
  return entries;
};
function RuleProvider(eventBus) {
  CommandInterceptor.call(this, eventBus);
  this.init();
}
RuleProvider.$inject = ["eventBus"];
e$3(RuleProvider, CommandInterceptor);
RuleProvider.prototype.addRule = function(actions, priority, fn) {
  var self2 = this;
  if (typeof actions === "string") {
    actions = [actions];
  }
  actions.forEach(function(action) {
    self2.canExecute(action, priority, function(context, action2, event2) {
      return fn(context);
    }, true);
  });
};
RuleProvider.prototype.init = function() {
};
function BpmnAlignElements(eventBus) {
  RuleProvider.call(this, eventBus);
}
BpmnAlignElements.$inject = ["eventBus"];
e$3(BpmnAlignElements, RuleProvider);
BpmnAlignElements.prototype.init = function() {
  this.addRule("elements.align", function(context) {
    var elements = context.elements;
    var filteredElements = filter$1(elements, function(element) {
      return !(element.waypoints || element.host || element.labelTarget);
    });
    filteredElements = getParents$1(filteredElements);
    if (filteredElements.length < 2) {
      return false;
    }
    return filteredElements;
  });
};
const AlignElementsModule = {
  __depends__: [
    AlignElementsModule$1,
    ContextPadModule$1,
    PopupMenuModule$1
  ],
  __init__: [
    "alignElementsContextPadProvider",
    "alignElementsMenuProvider",
    "bpmnAlignElements"
  ],
  alignElementsContextPadProvider: ["type", AlignElementsContextPadProvider],
  alignElementsMenuProvider: ["type", AlignElementsMenuProvider],
  bpmnAlignElements: ["type", BpmnAlignElements]
};
var PLACEMENT_DETECTION_PAD = 10;
var DEFAULT_DISTANCE = 50;
var DEFAULT_MAX_DISTANCE = 250;
function findFreePosition(source2, element, position, getNextPosition) {
  var connectedAtPosition;
  while (connectedAtPosition = getConnectedAtPosition(source2, position, element)) {
    position = getNextPosition(element, position, connectedAtPosition);
  }
  return position;
}
function generateGetNextPosition(nextPositionDirection) {
  return function(element, previousPosition, connectedAtPosition) {
    var nextPosition = {
      x: previousPosition.x,
      y: previousPosition.y
    };
    ["x", "y"].forEach(function(axis) {
      var nextPositionDirectionForAxis = nextPositionDirection[axis];
      if (!nextPositionDirectionForAxis) {
        return;
      }
      var dimension = axis === "x" ? "width" : "height";
      var margin = nextPositionDirectionForAxis.margin, minDistance = nextPositionDirectionForAxis.minDistance;
      if (margin < 0) {
        nextPosition[axis] = Math.min(
          connectedAtPosition[axis] + margin - element[dimension] / 2,
          previousPosition[axis] - minDistance + margin
        );
      } else {
        nextPosition[axis] = Math.max(
          connectedAtPosition[axis] + connectedAtPosition[dimension] + margin + element[dimension] / 2,
          previousPosition[axis] + minDistance + margin
        );
      }
    });
    return nextPosition;
  };
}
function getConnectedAtPosition(source2, position, element) {
  var bounds = {
    x: position.x - element.width / 2,
    y: position.y - element.height / 2,
    width: element.width,
    height: element.height
  };
  var closure = getAutoPlaceClosure(source2);
  return find$1(closure, function(target) {
    if (target === element) {
      return false;
    }
    var orientation = getOrientation(target, bounds, PLACEMENT_DETECTION_PAD);
    return orientation === "intersect";
  });
}
function getConnectedDistance(source2, hints) {
  if (!hints) {
    hints = {};
  }
  function getDefaultWeight(connection) {
    return connection.source === source2 ? 1 : -1;
  }
  var defaultDistance = hints.defaultDistance || DEFAULT_DISTANCE, direction = hints.direction || "e", filter2 = hints.filter, getWeight = hints.getWeight || getDefaultWeight, maxDistance = hints.maxDistance || DEFAULT_MAX_DISTANCE, reference = hints.reference || "start";
  if (!filter2) {
    filter2 = noneFilter;
  }
  function getDistance2(a2, b2) {
    if (direction === "n") {
      if (reference === "start") {
        return asTRBL(a2).top - asTRBL(b2).bottom;
      } else if (reference === "center") {
        return asTRBL(a2).top - getMid(b2).y;
      } else {
        return asTRBL(a2).top - asTRBL(b2).top;
      }
    } else if (direction === "w") {
      if (reference === "start") {
        return asTRBL(a2).left - asTRBL(b2).right;
      } else if (reference === "center") {
        return asTRBL(a2).left - getMid(b2).x;
      } else {
        return asTRBL(a2).left - asTRBL(b2).left;
      }
    } else if (direction === "s") {
      if (reference === "start") {
        return asTRBL(b2).top - asTRBL(a2).bottom;
      } else if (reference === "center") {
        return getMid(b2).y - asTRBL(a2).bottom;
      } else {
        return asTRBL(b2).bottom - asTRBL(a2).bottom;
      }
    } else {
      if (reference === "start") {
        return asTRBL(b2).left - asTRBL(a2).right;
      } else if (reference === "center") {
        return getMid(b2).x - asTRBL(a2).right;
      } else {
        return asTRBL(b2).right - asTRBL(a2).right;
      }
    }
  }
  var sourcesDistances = source2.incoming.filter(filter2).map(function(connection) {
    var weight = getWeight(connection);
    var distance2 = weight < 0 ? getDistance2(connection.source, source2) : getDistance2(source2, connection.source);
    return {
      id: connection.source.id,
      distance: distance2,
      weight
    };
  });
  var targetsDistances = source2.outgoing.filter(filter2).map(function(connection) {
    var weight = getWeight(connection);
    var distance2 = weight > 0 ? getDistance2(source2, connection.target) : getDistance2(connection.target, source2);
    return {
      id: connection.target.id,
      distance: distance2,
      weight
    };
  });
  var distances = sourcesDistances.concat(targetsDistances).reduce(function(accumulator, currentValue) {
    accumulator[currentValue.id + "__weight_" + currentValue.weight] = currentValue;
    return accumulator;
  }, {});
  var distancesGrouped = reduce$1(distances, function(accumulator, currentValue) {
    var distance2 = currentValue.distance, weight = currentValue.weight;
    if (distance2 < 0 || distance2 > maxDistance) {
      return accumulator;
    }
    if (!accumulator[String(distance2)]) {
      accumulator[String(distance2)] = 0;
    }
    accumulator[String(distance2)] += 1 * weight;
    if (!accumulator.distance || accumulator[accumulator.distance] < accumulator[String(distance2)]) {
      accumulator.distance = distance2;
    }
    return accumulator;
  }, {});
  return distancesGrouped.distance || defaultDistance;
}
function getAutoPlaceClosure(source2) {
  var allConnected = getConnected(source2);
  if (source2.host) {
    allConnected = allConnected.concat(getConnected(source2.host));
  }
  if (source2.attachers) {
    allConnected = allConnected.concat(source2.attachers.reduce(function(shapes, attacher) {
      return shapes.concat(getConnected(attacher));
    }, []));
  }
  return allConnected;
}
function getConnected(element) {
  return getTargets(element).concat(getSources(element));
}
function getSources(shape) {
  return shape.incoming.map(function(connection) {
    return connection.source;
  });
}
function getTargets(shape) {
  return shape.outgoing.map(function(connection) {
    return connection.target;
  });
}
function noneFilter() {
  return true;
}
var LOW_PRIORITY$l = 100;
function AutoPlace$1(eventBus, modeling, canvas) {
  eventBus.on("autoPlace", LOW_PRIORITY$l, function(context) {
    var shape = context.shape, source2 = context.source;
    return getNewShapePosition$1(source2, shape);
  });
  eventBus.on("autoPlace.end", function(event2) {
    canvas.scrollToElement(event2.shape);
  });
  this.append = function(source2, shape, hints) {
    eventBus.fire("autoPlace.start", {
      source: source2,
      shape
    });
    var position = eventBus.fire("autoPlace", {
      source: source2,
      shape
    });
    var newShape = modeling.appendShape(source2, shape, position, source2.parent, hints);
    eventBus.fire("autoPlace.end", {
      source: source2,
      shape: newShape
    });
    return newShape;
  };
}
AutoPlace$1.$inject = [
  "eventBus",
  "modeling",
  "canvas"
];
function getNewShapePosition$1(source2, element, hints) {
  if (!hints) {
    hints = {};
  }
  var distance2 = hints.defaultDistance || DEFAULT_DISTANCE;
  var sourceMid = getMid(source2), sourceTrbl = asTRBL(source2);
  return {
    x: sourceTrbl.right + distance2 + element.width / 2,
    y: sourceMid.y
  };
}
function AutoPlaceSelectionBehavior(eventBus, selection) {
  eventBus.on("autoPlace.end", 500, function(e2) {
    selection.select(e2.shape);
  });
}
AutoPlaceSelectionBehavior.$inject = [
  "eventBus",
  "selection"
];
const AutoPlaceModule$1 = {
  __init__: ["autoPlaceSelectionBehavior"],
  autoPlace: ["type", AutoPlace$1],
  autoPlaceSelectionBehavior: ["type", AutoPlaceSelectionBehavior]
};
function getParent(element, anyType) {
  if (isString$1(anyType)) {
    anyType = [anyType];
  }
  while (element = element.parent) {
    if (isAny$7(element, anyType)) {
      return element;
    }
  }
  return null;
}
function isDirectionHorizontal(element) {
  var types2 = ["bpmn:Participant", "bpmn:Lane"];
  var parent = getParent(element, types2);
  if (parent) {
    return isHorizontal$3(parent);
  } else if (isAny$7(element, types2)) {
    return isHorizontal$3(element);
  }
  return true;
}
function getNewShapePosition(source2, element) {
  if (is$g(element, "bpmn:TextAnnotation")) {
    return getTextAnnotationPosition(source2, element);
  }
  if (isAny$7(element, ["bpmn:DataObjectReference", "bpmn:DataStoreReference"])) {
    return getDataElementPosition(source2, element);
  }
  if (is$g(element, "bpmn:FlowNode")) {
    return getFlowNodePosition(source2, element);
  }
}
function getFlowNodePosition(source2, element) {
  var sourceTrbl = asTRBL(source2);
  var sourceMid = getMid(source2);
  var placeHorizontally = isDirectionHorizontal(source2);
  var placement = placeHorizontally ? {
    directionHint: "e",
    minDistance: 80,
    baseOrientation: "left",
    boundaryOrientation: "top",
    start: "top",
    end: "bottom"
  } : {
    directionHint: "s",
    minDistance: 90,
    baseOrientation: "top",
    boundaryOrientation: "left",
    start: "left",
    end: "right"
  };
  var connectedDistance = getConnectedDistance(source2, {
    filter: function(connection) {
      return is$g(connection, "bpmn:SequenceFlow");
    },
    direction: placement.directionHint
  });
  var margin = 30, minDistance = placement.minDistance, orientation = placement.baseOrientation;
  if (is$g(source2, "bpmn:BoundaryEvent")) {
    orientation = getOrientation(source2, source2.host, -25);
    if (orientation.indexOf(placement.boundaryOrientation) !== -1) {
      margin *= -1;
    }
  }
  var position = placeHorizontally ? {
    x: sourceTrbl.right + connectedDistance + element.width / 2,
    y: sourceMid.y + getDistance$2(orientation, minDistance, placement)
  } : {
    x: sourceMid.x + getDistance$2(orientation, minDistance, placement),
    y: sourceTrbl.bottom + connectedDistance + element.height / 2
  };
  var nextPosition = {
    margin,
    minDistance
  };
  var nextPositionDirection = placeHorizontally ? {
    y: nextPosition
  } : {
    x: nextPosition
  };
  return findFreePosition(source2, element, position, generateGetNextPosition(nextPositionDirection));
}
function getDistance$2(orientation, minDistance, placement) {
  if (orientation.includes(placement.start)) {
    return -1 * minDistance;
  } else if (orientation.includes(placement.end)) {
    return minDistance;
  } else {
    return 0;
  }
}
function getTextAnnotationPosition(source2, element) {
  var sourceTrbl = asTRBL(source2);
  var placeHorizontally = isDirectionHorizontal(source2);
  var position = placeHorizontally ? {
    x: sourceTrbl.right + element.width / 2,
    y: sourceTrbl.top - 50 - element.height / 2
  } : {
    x: sourceTrbl.right + 50 + element.width / 2,
    y: sourceTrbl.bottom + element.height / 2
  };
  if (isConnection(source2)) {
    position = getMid(source2);
    if (placeHorizontally) {
      position.x += 100;
      position.y -= 50;
    } else {
      position.x += 100;
      position.y += 50;
    }
  }
  var nextPosition = {
    margin: placeHorizontally ? -30 : 30,
    minDistance: 20
  };
  var nextPositionDirection = placeHorizontally ? {
    y: nextPosition
  } : {
    x: nextPosition
  };
  return findFreePosition(source2, element, position, generateGetNextPosition(nextPositionDirection));
}
function getDataElementPosition(source2, element) {
  var sourceTrbl = asTRBL(source2);
  var placeHorizontally = isDirectionHorizontal(source2);
  var position = placeHorizontally ? {
    x: sourceTrbl.right - 10 + element.width / 2,
    y: sourceTrbl.bottom + 40 + element.width / 2
  } : {
    x: sourceTrbl.left - 40 - element.width / 2,
    y: sourceTrbl.bottom - 10 + element.height / 2
  };
  var nextPosition = {
    margin: 30,
    minDistance: 30
  };
  var nextPositionDirection = placeHorizontally ? {
    x: nextPosition
  } : {
    y: nextPosition
  };
  return findFreePosition(source2, element, position, generateGetNextPosition(nextPositionDirection));
}
function AutoPlace(eventBus) {
  eventBus.on("autoPlace", function(context) {
    var shape = context.shape, source2 = context.source;
    return getNewShapePosition(source2, shape);
  });
}
AutoPlace.$inject = ["eventBus"];
const AutoPlaceModule = {
  __depends__: [AutoPlaceModule$1],
  __init__: ["bpmnAutoPlace"],
  bpmnAutoPlace: ["type", AutoPlace]
};
function AutoResize(eventBus, elementRegistry, modeling, rules2) {
  CommandInterceptor.call(this, eventBus);
  this._elementRegistry = elementRegistry;
  this._modeling = modeling;
  this._rules = rules2;
  var self2 = this;
  this.postExecuted(["shape.create"], function(event2) {
    var context = event2.context, hints = context.hints || {}, shape = context.shape, parent = context.parent || context.newParent;
    if (hints.autoResize === false) {
      return;
    }
    self2._expand([shape], parent);
  });
  this.postExecuted(["elements.move"], function(event2) {
    var context = event2.context, elements = flatten$2(values$1(context.closure.topLevel)), hints = context.hints;
    var autoResize = hints ? hints.autoResize : true;
    if (autoResize === false) {
      return;
    }
    var expandings = groupBy$1(elements, function(element) {
      return element.parent.id;
    });
    forEach$2(expandings, function(elements2, parentId) {
      if (isArray$3(autoResize)) {
        elements2 = elements2.filter(function(element) {
          return find$1(autoResize, matchPattern$1({ id: element.id }));
        });
      }
      self2._expand(elements2, parentId);
    });
  });
  this.postExecuted(["shape.toggleCollapse"], function(event2) {
    var context = event2.context, hints = context.hints, shape = context.shape;
    if (hints && hints.autoResize === false) {
      return;
    }
    if (shape.collapsed) {
      return;
    }
    self2._expand(shape.children || [], shape);
  });
  this.postExecuted(["shape.resize"], function(event2) {
    var context = event2.context, hints = context.hints, shape = context.shape, parent = shape.parent;
    if (hints && hints.autoResize === false) {
      return;
    }
    if (parent) {
      self2._expand([shape], parent);
    }
  });
}
AutoResize.$inject = [
  "eventBus",
  "elementRegistry",
  "modeling",
  "rules"
];
e$3(AutoResize, CommandInterceptor);
AutoResize.prototype._getOptimalBounds = function(elements, target) {
  var offset = this.getOffset(target), padding = this.getPadding(target);
  var elementsTrbl = asTRBL(getBBox(elements)), targetTrbl = asTRBL(target);
  var newTrbl = {};
  if (elementsTrbl.top - targetTrbl.top < padding.top) {
    newTrbl.top = elementsTrbl.top - offset.top;
  }
  if (elementsTrbl.left - targetTrbl.left < padding.left) {
    newTrbl.left = elementsTrbl.left - offset.left;
  }
  if (targetTrbl.right - elementsTrbl.right < padding.right) {
    newTrbl.right = elementsTrbl.right + offset.right;
  }
  if (targetTrbl.bottom - elementsTrbl.bottom < padding.bottom) {
    newTrbl.bottom = elementsTrbl.bottom + offset.bottom;
  }
  return asBounds(assign$2({}, targetTrbl, newTrbl));
};
AutoResize.prototype._expand = function(elements, target) {
  if (typeof target === "string") {
    target = this._elementRegistry.get(target);
  }
  var allowed = this._rules.allowed("element.autoResize", {
    elements,
    target
  });
  if (!allowed) {
    return;
  }
  var newBounds = this._getOptimalBounds(elements, target);
  if (!boundsChanged$1(newBounds, target)) {
    return;
  }
  var resizeDirections = getResizeDirections(pick$1(target, ["x", "y", "width", "height"]), newBounds);
  this.resize(target, newBounds, {
    autoResize: resizeDirections
  });
  var parent = target.parent;
  if (parent) {
    this._expand([target], parent);
  }
};
AutoResize.prototype.getOffset = function(shape) {
  return { top: 60, bottom: 60, left: 100, right: 100 };
};
AutoResize.prototype.getPadding = function(shape) {
  return { top: 2, bottom: 2, left: 15, right: 15 };
};
AutoResize.prototype.resize = function(shape, newBounds, hints) {
  this._modeling.resizeShape(shape, newBounds, null, hints);
};
function boundsChanged$1(newBounds, oldBounds) {
  return newBounds.x !== oldBounds.x || newBounds.y !== oldBounds.y || newBounds.width !== oldBounds.width || newBounds.height !== oldBounds.height;
}
function getResizeDirections(oldBounds, newBounds) {
  var directions2 = "";
  oldBounds = asTRBL(oldBounds);
  newBounds = asTRBL(newBounds);
  if (oldBounds.top > newBounds.top) {
    directions2 = directions2.concat("n");
  }
  if (oldBounds.right < newBounds.right) {
    directions2 = directions2.concat("w");
  }
  if (oldBounds.bottom < newBounds.bottom) {
    directions2 = directions2.concat("s");
  }
  if (oldBounds.left > newBounds.left) {
    directions2 = directions2.concat("e");
  }
  return directions2;
}
function BpmnAutoResize(injector) {
  injector.invoke(AutoResize, this);
}
BpmnAutoResize.$inject = [
  "injector"
];
e$3(BpmnAutoResize, AutoResize);
BpmnAutoResize.prototype.resize = function(target, newBounds, hints) {
  if (is$g(target, "bpmn:Participant")) {
    this._modeling.resizeLane(target, newBounds, null, hints);
  } else {
    this._modeling.resizeShape(target, newBounds, null, hints);
  }
};
function AutoResizeProvider(eventBus) {
  RuleProvider.call(this, eventBus);
  var self2 = this;
  this.addRule("element.autoResize", function(context) {
    return self2.canResize(context.elements, context.target);
  });
}
AutoResizeProvider.$inject = ["eventBus"];
e$3(AutoResizeProvider, RuleProvider);
AutoResizeProvider.prototype.canResize = function(elements, target) {
  return false;
};
function BpmnAutoResizeProvider(eventBus, modeling) {
  AutoResizeProvider.call(this, eventBus);
  this._modeling = modeling;
}
e$3(BpmnAutoResizeProvider, AutoResizeProvider);
BpmnAutoResizeProvider.$inject = [
  "eventBus",
  "modeling"
];
BpmnAutoResizeProvider.prototype.canResize = function(elements, target) {
  if (is$g(target.di, "bpmndi:BPMNPlane")) {
    return false;
  }
  if (!is$g(target, "bpmn:Participant") && !is$g(target, "bpmn:Lane") && !is$g(target, "bpmn:SubProcess")) {
    return false;
  }
  var canResize2 = true;
  forEach$2(elements, function(element) {
    if (is$g(element, "bpmn:Lane") || isLabel(element)) {
      canResize2 = false;
      return;
    }
  });
  return canResize2;
};
const AutoResizeModule = {
  __init__: [
    "bpmnAutoResize",
    "bpmnAutoResizeProvider"
  ],
  bpmnAutoResize: ["type", BpmnAutoResize],
  bpmnAutoResizeProvider: ["type", BpmnAutoResizeProvider]
};
var HIGH_PRIORITY$j = 1500;
function HoverFix(elementRegistry, eventBus, injector) {
  var self2 = this;
  var dragging = injector.get("dragging", false);
  function ensureHover(event2) {
    if (event2.hover) {
      return;
    }
    var originalEvent = event2.originalEvent;
    var gfx = self2._findTargetGfx(originalEvent);
    var element = gfx && elementRegistry.get(gfx);
    if (gfx && element) {
      event2.stopPropagation();
      dragging.hover({ element, gfx });
      dragging.move(originalEvent);
    }
  }
  if (dragging) {
    eventBus.on("drag.start", function(event2) {
      eventBus.once("drag.move", HIGH_PRIORITY$j, function(event3) {
        ensureHover(event3);
      });
    });
  }
  (function() {
    var hoverGfx;
    var hover;
    eventBus.on("element.hover", function(event2) {
      hoverGfx = event2.gfx;
      hover = event2.element;
    });
    eventBus.on("element.hover", HIGH_PRIORITY$j, function(event2) {
      if (hover) {
        eventBus.fire("element.out", {
          element: hover,
          gfx: hoverGfx
        });
      }
    });
    eventBus.on("element.out", function() {
      hoverGfx = null;
      hover = null;
    });
  })();
  this._findTargetGfx = function(event2) {
    var position, target;
    if (!(event2 instanceof MouseEvent)) {
      return;
    }
    position = toPoint(event2);
    target = document.elementFromPoint(position.x, position.y);
    return getGfx(target);
  };
}
HoverFix.$inject = [
  "elementRegistry",
  "eventBus",
  "injector"
];
function getGfx(target) {
  return closest(target, "svg, .djs-element", true);
}
const HoverFixModule = {
  __init__: [
    "hoverFix"
  ],
  hoverFix: ["type", HoverFix]
};
var round$b = Math.round;
var DRAG_ACTIVE_CLS = "djs-drag-active";
function preventDefault$1(event2) {
  event2.preventDefault();
}
function isTouchEvent(event2) {
  return typeof TouchEvent !== "undefined" && event2 instanceof TouchEvent;
}
function getLength(point) {
  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
}
function Dragging(eventBus, canvas, selection, elementRegistry) {
  var defaultOptions = {
    threshold: 5,
    trapClick: true
  };
  var context;
  function toLocalPoint(globalPosition) {
    var viewbox = canvas.viewbox();
    var clientRect = canvas._container.getBoundingClientRect();
    return {
      x: viewbox.x + (globalPosition.x - clientRect.left) / viewbox.scale,
      y: viewbox.y + (globalPosition.y - clientRect.top) / viewbox.scale
    };
  }
  function fire(type, dragContext) {
    dragContext = dragContext || context;
    var event2 = eventBus.createEvent(
      assign$2(
        {},
        dragContext.payload,
        dragContext.data,
        { isTouch: dragContext.isTouch }
      )
    );
    if (eventBus.fire("drag." + type, event2) === false) {
      return false;
    }
    return eventBus.fire(dragContext.prefix + "." + type, event2);
  }
  function restoreSelection(previousSelection) {
    var existingSelection = previousSelection.filter(function(element) {
      return elementRegistry.get(element.id);
    });
    existingSelection.length && selection.select(existingSelection);
  }
  function move2(event2, activate) {
    var payload = context.payload, displacement = context.displacement;
    var globalStart = context.globalStart, globalCurrent = toPoint(event2), globalDelta = delta(globalCurrent, globalStart);
    var localStart = context.localStart, localCurrent = toLocalPoint(globalCurrent), localDelta = delta(localCurrent, localStart);
    if (!context.active && (activate || getLength(globalDelta) > context.threshold)) {
      assign$2(payload, {
        x: round$b(localStart.x + displacement.x),
        y: round$b(localStart.y + displacement.y),
        dx: 0,
        dy: 0
      }, { originalEvent: event2 });
      if (false === fire("start")) {
        return cancel();
      }
      context.active = true;
      if (!context.keepSelection) {
        payload.previousSelection = selection.get();
        selection.select(null);
      }
      if (context.cursor) {
        set$1(context.cursor);
      }
      canvas.addMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);
    }
    stopPropagation$1(event2);
    if (context.active) {
      assign$2(payload, {
        x: round$b(localCurrent.x + displacement.x),
        y: round$b(localCurrent.y + displacement.y),
        dx: round$b(localDelta.x),
        dy: round$b(localDelta.y)
      }, { originalEvent: event2 });
      fire("move");
    }
  }
  function end(event2) {
    var previousContext, returnValue = true;
    if (context.active) {
      if (event2) {
        context.payload.originalEvent = event2;
        stopPropagation$1(event2);
      }
      returnValue = fire("end");
    }
    if (returnValue === false) {
      fire("rejected");
    }
    previousContext = cleanup(returnValue !== true);
    fire("ended", previousContext);
  }
  function checkCancel(event2) {
    if (isKey("Escape", event2)) {
      preventDefault$1(event2);
      cancel();
    }
  }
  function trapClickAndEnd(event2) {
    var untrap;
    if (context.active) {
      untrap = install$1(eventBus);
      setTimeout(untrap, 400);
      preventDefault$1(event2);
    }
    end(event2);
  }
  function trapTouch(event2) {
    move2(event2);
  }
  function hover(event2) {
    var payload = context.payload;
    payload.hoverGfx = event2.gfx;
    payload.hover = event2.element;
    fire("hover");
  }
  function out(event2) {
    fire("out");
    var payload = context.payload;
    payload.hoverGfx = null;
    payload.hover = null;
  }
  function cancel(restore) {
    var previousContext;
    if (!context) {
      return;
    }
    var wasActive = context.active;
    if (wasActive) {
      fire("cancel");
    }
    previousContext = cleanup(restore);
    if (wasActive) {
      fire("canceled", previousContext);
    }
  }
  function cleanup(restore) {
    var previousContext, endDrag;
    fire("cleanup");
    unset();
    if (context.trapClick) {
      endDrag = trapClickAndEnd;
    } else {
      endDrag = end;
    }
    event.unbind(document, "mousemove", move2);
    event.unbind(document, "dragstart", preventDefault$1);
    event.unbind(document, "selectstart", preventDefault$1);
    event.unbind(document, "mousedown", endDrag, true);
    event.unbind(document, "mouseup", endDrag, true);
    event.unbind(document, "keyup", checkCancel);
    event.unbind(document, "touchstart", trapTouch, true);
    event.unbind(document, "touchcancel", cancel, true);
    event.unbind(document, "touchmove", move2, true);
    event.unbind(document, "touchend", end, true);
    eventBus.off("element.hover", hover);
    eventBus.off("element.out", out);
    canvas.removeMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);
    var previousSelection = context.payload.previousSelection;
    if (restore !== false && previousSelection && !selection.get().length) {
      restoreSelection(previousSelection);
    }
    previousContext = context;
    context = null;
    return previousContext;
  }
  function init(event$1, relativeTo, prefix2, options) {
    if (context) {
      cancel(false);
    }
    if (typeof relativeTo === "string") {
      options = prefix2;
      prefix2 = relativeTo;
      relativeTo = null;
    }
    options = assign$2({}, defaultOptions, options || {});
    var data = options.data || {}, originalEvent, globalStart, localStart, endDrag, isTouch;
    if (options.trapClick) {
      endDrag = trapClickAndEnd;
    } else {
      endDrag = end;
    }
    if (event$1) {
      originalEvent = getOriginal$1(event$1) || event$1;
      globalStart = toPoint(event$1);
      stopPropagation$1(event$1);
      if (originalEvent.type === "dragstart") {
        preventDefault$1(originalEvent);
      }
    } else {
      originalEvent = null;
      globalStart = { x: 0, y: 0 };
    }
    localStart = toLocalPoint(globalStart);
    if (!relativeTo) {
      relativeTo = localStart;
    }
    isTouch = isTouchEvent(originalEvent);
    context = assign$2({
      prefix: prefix2,
      data,
      payload: {},
      globalStart,
      displacement: delta(relativeTo, localStart),
      localStart,
      isTouch
    }, options);
    if (!options.manual) {
      if (isTouch) {
        event.bind(document, "touchstart", trapTouch, true);
        event.bind(document, "touchcancel", cancel, true);
        event.bind(document, "touchmove", move2, true);
        event.bind(document, "touchend", end, true);
      } else {
        event.bind(document, "mousemove", move2);
        event.bind(document, "dragstart", preventDefault$1);
        event.bind(document, "selectstart", preventDefault$1);
        event.bind(document, "mousedown", endDrag, true);
        event.bind(document, "mouseup", endDrag, true);
      }
      event.bind(document, "keyup", checkCancel);
      eventBus.on("element.hover", hover);
      eventBus.on("element.out", out);
    }
    fire("init");
    if (options.autoActivate) {
      move2(event$1, true);
    }
  }
  eventBus.on("diagram.destroy", cancel);
  this.init = init;
  this.move = move2;
  this.hover = hover;
  this.out = out;
  this.end = end;
  this.cancel = cancel;
  this.context = function() {
    return context;
  };
  this.setOptions = function(options) {
    assign$2(defaultOptions, options);
  };
}
Dragging.$inject = [
  "eventBus",
  "canvas",
  "selection",
  "elementRegistry"
];
const DraggingModule = {
  __depends__: [
    HoverFixModule,
    SelectionModule
  ],
  dragging: ["type", Dragging]
};
function AutoScroll(config2, eventBus, canvas) {
  this._canvas = canvas;
  this._opts = assign$2({
    scrollThresholdIn: [20, 20, 20, 20],
    scrollThresholdOut: [0, 0, 0, 0],
    scrollRepeatTimeout: 15,
    scrollStep: 10
  }, config2);
  var self2 = this;
  eventBus.on("drag.move", function(e2) {
    var point = self2._toBorderPoint(e2);
    self2.startScroll(point);
  });
  eventBus.on(["drag.cleanup"], function() {
    self2.stopScroll();
  });
}
AutoScroll.$inject = [
  "config.autoScroll",
  "eventBus",
  "canvas"
];
AutoScroll.prototype.startScroll = function(point) {
  var canvas = this._canvas;
  var opts = this._opts;
  var self2 = this;
  var clientRect = canvas.getContainer().getBoundingClientRect();
  var diff = [
    point.x,
    point.y,
    clientRect.width - point.x,
    clientRect.height - point.y
  ];
  this.stopScroll();
  var dx = 0, dy = 0;
  for (var i2 = 0; i2 < 4; i2++) {
    if (between(diff[i2], opts.scrollThresholdOut[i2], opts.scrollThresholdIn[i2])) {
      if (i2 === 0) {
        dx = opts.scrollStep;
      } else if (i2 == 1) {
        dy = opts.scrollStep;
      } else if (i2 == 2) {
        dx = -opts.scrollStep;
      } else if (i2 == 3) {
        dy = -opts.scrollStep;
      }
    }
  }
  if (dx !== 0 || dy !== 0) {
    canvas.scroll({ dx, dy });
    this._scrolling = setTimeout(function() {
      self2.startScroll(point);
    }, opts.scrollRepeatTimeout);
  }
};
function between(val, start, end) {
  if (start < val && val < end) {
    return true;
  }
  return false;
}
AutoScroll.prototype.stopScroll = function() {
  clearTimeout(this._scrolling);
};
AutoScroll.prototype.setOptions = function(options) {
  this._opts = assign$2({}, this._opts, options);
};
AutoScroll.prototype._toBorderPoint = function(event2) {
  var clientRect = this._canvas._container.getBoundingClientRect();
  var globalPosition = toPoint(event2.originalEvent);
  return {
    x: globalPosition.x - clientRect.left,
    y: globalPosition.y - clientRect.top
  };
};
const AutoScrollModule = {
  __depends__: [
    DraggingModule
  ],
  __init__: ["autoScroll"],
  autoScroll: ["type", AutoScroll]
};
function Rules(injector) {
  this._commandStack = injector.get("commandStack", false);
}
Rules.$inject = ["injector"];
Rules.prototype.allowed = function(action, context) {
  var allowed = true;
  var commandStack = this._commandStack;
  if (commandStack) {
    allowed = commandStack.canExecute(action, context);
  }
  return allowed === void 0 ? true : allowed;
};
const RulesModule$1 = {
  __init__: ["rules"],
  rules: ["type", Rules]
};
var round$a = Math.round, max$6 = Math.max;
function circlePath(center2, r2) {
  var x2 = center2.x, y2 = center2.y;
  return [
    ["M", x2, y2],
    ["m", 0, -r2],
    ["a", r2, r2, 0, 1, 1, 0, 2 * r2],
    ["a", r2, r2, 0, 1, 1, 0, -2 * r2],
    ["z"]
  ];
}
function linePath(points) {
  var segments = [];
  points.forEach(function(p2, idx) {
    segments.push([idx === 0 ? "M" : "L", p2.x, p2.y]);
  });
  return segments;
}
var INTERSECTION_THRESHOLD$1 = 10;
function getBendpointIntersection(waypoints, reference) {
  var i2, w2;
  for (i2 = 0; w2 = waypoints[i2]; i2++) {
    if (pointDistance(w2, reference) <= INTERSECTION_THRESHOLD$1) {
      return {
        point: waypoints[i2],
        bendpoint: true,
        index: i2
      };
    }
  }
  return null;
}
function getPathIntersection(waypoints, reference) {
  var intersections = findPathIntersections(circlePath(reference, INTERSECTION_THRESHOLD$1), linePath(waypoints));
  var a2 = intersections[0], b2 = intersections[intersections.length - 1], idx;
  if (!a2) {
    return null;
  }
  if (a2 !== b2) {
    if (a2.segment2 !== b2.segment2) {
      idx = max$6(a2.segment2, b2.segment2) - 1;
      return {
        point: waypoints[idx],
        bendpoint: true,
        index: idx
      };
    }
    return {
      point: {
        x: round$a(a2.x + b2.x) / 2,
        y: round$a(a2.y + b2.y) / 2
      },
      index: a2.segment2
    };
  }
  return {
    point: {
      x: round$a(a2.x),
      y: round$a(a2.y)
    },
    index: a2.segment2
  };
}
function getApproxIntersection(waypoints, reference) {
  return getBendpointIntersection(waypoints, reference) || getPathIntersection(waypoints, reference);
}
function vectorLength(vector) {
  return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));
}
function getAngle(line) {
  return Math.atan((line[1].y - line[0].y) / (line[1].x - line[0].x));
}
function rotateVector(vector, angle) {
  return !angle ? vector : {
    x: Math.cos(angle) * vector.x - Math.sin(angle) * vector.y,
    y: Math.sin(angle) * vector.x + Math.cos(angle) * vector.y
  };
}
function solveLambaSystem(a2, b2, c2) {
  var system = [
    { n: a2[0] - c2[0], lambda: b2[0] },
    { n: a2[1] - c2[1], lambda: b2[1] }
  ];
  var n2 = system[0].n * b2[0] + system[1].n * b2[1], l2 = system[0].lambda * b2[0] + system[1].lambda * b2[1];
  return -n2 / l2;
}
function perpendicularFoot(point, line) {
  var a2 = line[0], b2 = line[1];
  var bd = { x: b2.x - a2.x, y: b2.y - a2.y };
  var r2 = solveLambaSystem([a2.x, a2.y], [bd.x, bd.y], [point.x, point.y]);
  return { x: a2.x + r2 * bd.x, y: a2.y + r2 * bd.y };
}
function getDistancePointLine(point, line) {
  var pfPoint = perpendicularFoot(point, line);
  var connectionVector = {
    x: pfPoint.x - point.x,
    y: pfPoint.y - point.y
  };
  return vectorLength(connectionVector);
}
function getDistancePointPoint(point1, point2) {
  return vectorLength({
    x: point1.x - point2.x,
    y: point1.y - point2.y
  });
}
var BENDPOINT_CLS = "djs-bendpoint";
var SEGMENT_DRAGGER_CLS = "djs-segment-dragger";
function toCanvasCoordinates(canvas, event2) {
  var position = toPoint(event2), clientRect = canvas._container.getBoundingClientRect(), offset;
  offset = {
    x: clientRect.left,
    y: clientRect.top
  };
  var viewbox = canvas.viewbox();
  return {
    x: viewbox.x + (position.x - offset.x) / viewbox.scale,
    y: viewbox.y + (position.y - offset.y) / viewbox.scale
  };
}
function getConnectionIntersection(canvas, waypoints, event2) {
  var localPosition = toCanvasCoordinates(canvas, event2), intersection2 = getApproxIntersection(waypoints, localPosition);
  return intersection2;
}
function addBendpoint(parentGfx, cls) {
  var groupGfx = create$1("g");
  classes(groupGfx).add(BENDPOINT_CLS);
  append(parentGfx, groupGfx);
  var visual = create$1("circle");
  attr(visual, {
    cx: 0,
    cy: 0,
    r: 4
  });
  classes(visual).add("djs-visual");
  append(groupGfx, visual);
  var hit = create$1("circle");
  attr(hit, {
    cx: 0,
    cy: 0,
    r: 10
  });
  classes(hit).add("djs-hit");
  append(groupGfx, hit);
  if (cls) {
    classes(groupGfx).add(cls);
  }
  return groupGfx;
}
function createParallelDragger(parentGfx, segmentStart, segmentEnd, alignment) {
  var draggerGfx = create$1("g");
  append(parentGfx, draggerGfx);
  var width = 18, height = 6, padding = 11, hitWidth = calculateHitWidth(segmentStart, segmentEnd, alignment), hitHeight = height + padding;
  var visual = create$1("rect");
  attr(visual, {
    x: -width / 2,
    y: -height / 2,
    width,
    height
  });
  classes(visual).add("djs-visual");
  append(draggerGfx, visual);
  var hit = create$1("rect");
  attr(hit, {
    x: -hitWidth / 2,
    y: -hitHeight / 2,
    width: hitWidth,
    height: hitHeight
  });
  classes(hit).add("djs-hit");
  append(draggerGfx, hit);
  rotate(draggerGfx, alignment === "v" ? 90 : 0);
  return draggerGfx;
}
function addSegmentDragger(parentGfx, segmentStart, segmentEnd) {
  var groupGfx = create$1("g"), mid2 = getMidPoint(segmentStart, segmentEnd), alignment = pointsAligned(segmentStart, segmentEnd);
  append(parentGfx, groupGfx);
  createParallelDragger(groupGfx, segmentStart, segmentEnd, alignment);
  classes(groupGfx).add(SEGMENT_DRAGGER_CLS);
  classes(groupGfx).add(alignment === "h" ? "horizontal" : "vertical");
  translate$2(groupGfx, mid2.x, mid2.y);
  return groupGfx;
}
function calculateSegmentMoveRegion(segmentLength) {
  return Math.abs(Math.round(segmentLength * 2 / 3));
}
function getClosestPointOnConnection(position, connection) {
  var segment = getClosestSegment(position, connection);
  return perpendicularFoot(position, segment);
}
function calculateHitWidth(segmentStart, segmentEnd, alignment) {
  var segmentLengthXAxis = segmentEnd.x - segmentStart.x, segmentLengthYAxis = segmentEnd.y - segmentStart.y;
  return alignment === "h" ? calculateSegmentMoveRegion(segmentLengthXAxis) : calculateSegmentMoveRegion(segmentLengthYAxis);
}
function getClosestSegment(position, connection) {
  var waypoints = connection.waypoints;
  var minDistance = Infinity, segmentIndex;
  for (var i2 = 0; i2 < waypoints.length - 1; i2++) {
    var start = waypoints[i2], end = waypoints[i2 + 1], distance2 = getDistancePointLine(position, [start, end]);
    if (distance2 < minDistance) {
      minDistance = distance2;
      segmentIndex = i2;
    }
  }
  return [waypoints[segmentIndex], waypoints[segmentIndex + 1]];
}
function Bendpoints(eventBus, canvas, interactionEvents, bendpointMove, connectionSegmentMove) {
  function isIntersectionMiddle(intersection2, waypoints, treshold) {
    var idx = intersection2.index, p2 = intersection2.point, p0, p1, mid2, aligned, xDelta, yDelta;
    if (idx <= 0 || intersection2.bendpoint) {
      return false;
    }
    p0 = waypoints[idx - 1];
    p1 = waypoints[idx];
    mid2 = getMidPoint(p0, p1), aligned = pointsAligned(p0, p1);
    xDelta = Math.abs(p2.x - mid2.x);
    yDelta = Math.abs(p2.y - mid2.y);
    return aligned && xDelta <= treshold && yDelta <= treshold;
  }
  function calculateIntersectionThreshold(connection, intersection2) {
    var waypoints = connection.waypoints, relevantSegment, alignment, segmentLength, threshold;
    if (intersection2.index <= 0 || intersection2.bendpoint) {
      return null;
    }
    relevantSegment = {
      start: waypoints[intersection2.index - 1],
      end: waypoints[intersection2.index]
    };
    alignment = pointsAligned(relevantSegment.start, relevantSegment.end);
    if (!alignment) {
      return null;
    }
    if (alignment === "h") {
      segmentLength = relevantSegment.end.x - relevantSegment.start.x;
    } else {
      segmentLength = relevantSegment.end.y - relevantSegment.start.y;
    }
    threshold = calculateSegmentMoveRegion(segmentLength) / 2;
    return threshold;
  }
  function activateBendpointMove(event2, connection) {
    var waypoints = connection.waypoints, intersection2 = getConnectionIntersection(canvas, waypoints, event2), threshold;
    if (!intersection2) {
      return;
    }
    threshold = calculateIntersectionThreshold(connection, intersection2);
    if (isIntersectionMiddle(intersection2, waypoints, threshold)) {
      connectionSegmentMove.start(event2, connection, intersection2.index);
    } else {
      bendpointMove.start(event2, connection, intersection2.index, !intersection2.bendpoint);
    }
    return true;
  }
  function bindInteractionEvents(node2, eventName, element) {
    event.bind(node2, eventName, function(event2) {
      interactionEvents.triggerMouseEvent(eventName, event2, element);
      event2.stopPropagation();
    });
  }
  function getBendpointsContainer(element, create2) {
    var layer = canvas.getLayer("overlays"), gfx = query('.djs-bendpoints[data-element-id="' + escapeCSS(element.id) + '"]', layer);
    if (!gfx && create2) {
      gfx = create$1("g");
      attr(gfx, { "data-element-id": element.id });
      classes(gfx).add("djs-bendpoints");
      append(layer, gfx);
      bindInteractionEvents(gfx, "mousedown", element);
      bindInteractionEvents(gfx, "click", element);
      bindInteractionEvents(gfx, "dblclick", element);
    }
    return gfx;
  }
  function getSegmentDragger(idx, parentGfx) {
    return query(
      '.djs-segment-dragger[data-segment-idx="' + idx + '"]',
      parentGfx
    );
  }
  function createBendpoints(gfx, connection) {
    connection.waypoints.forEach(function(p2, idx) {
      var bendpoint = addBendpoint(gfx);
      append(gfx, bendpoint);
      translate$2(bendpoint, p2.x, p2.y);
    });
    addBendpoint(gfx, "floating");
  }
  function createSegmentDraggers(gfx, connection) {
    var waypoints = connection.waypoints;
    var segmentStart, segmentEnd, segmentDraggerGfx;
    for (var i2 = 1; i2 < waypoints.length; i2++) {
      segmentStart = waypoints[i2 - 1];
      segmentEnd = waypoints[i2];
      if (pointsAligned(segmentStart, segmentEnd)) {
        segmentDraggerGfx = addSegmentDragger(gfx, segmentStart, segmentEnd);
        attr(segmentDraggerGfx, { "data-segment-idx": i2 });
        bindInteractionEvents(segmentDraggerGfx, "mousemove", connection);
      }
    }
  }
  function clearBendpoints(gfx) {
    forEach$2(all("." + BENDPOINT_CLS, gfx), function(node2) {
      remove(node2);
    });
  }
  function clearSegmentDraggers(gfx) {
    forEach$2(all("." + SEGMENT_DRAGGER_CLS, gfx), function(node2) {
      remove(node2);
    });
  }
  function addHandles(connection) {
    var gfx = getBendpointsContainer(connection);
    if (!gfx) {
      gfx = getBendpointsContainer(connection, true);
      createBendpoints(gfx, connection);
      createSegmentDraggers(gfx, connection);
    }
    return gfx;
  }
  function updateHandles(connection) {
    var gfx = getBendpointsContainer(connection);
    if (gfx) {
      clearSegmentDraggers(gfx);
      clearBendpoints(gfx);
      createSegmentDraggers(gfx, connection);
      createBendpoints(gfx, connection);
    }
  }
  function updateFloatingBendpointPosition(parentGfx, intersection2) {
    var floating = query(".floating", parentGfx), point = intersection2.point;
    if (!floating) {
      return;
    }
    translate$2(floating, point.x, point.y);
  }
  function updateSegmentDraggerPosition(parentGfx, intersection2, waypoints) {
    var draggerGfx = getSegmentDragger(intersection2.index, parentGfx), segmentStart = waypoints[intersection2.index - 1], segmentEnd = waypoints[intersection2.index], point = intersection2.point, mid2 = getMidPoint(segmentStart, segmentEnd), alignment = pointsAligned(segmentStart, segmentEnd), draggerVisual, relativePosition;
    if (!draggerGfx) {
      return;
    }
    draggerVisual = getDraggerVisual(draggerGfx);
    relativePosition = {
      x: point.x - mid2.x,
      y: point.y - mid2.y
    };
    if (alignment === "v") {
      relativePosition = {
        x: relativePosition.y,
        y: relativePosition.x
      };
    }
    translate$2(draggerVisual, relativePosition.x, relativePosition.y);
  }
  eventBus.on("connection.changed", function(event2) {
    updateHandles(event2.element);
  });
  eventBus.on("connection.remove", function(event2) {
    var gfx = getBendpointsContainer(event2.element);
    if (gfx) {
      remove(gfx);
    }
  });
  eventBus.on("element.marker.update", function(event2) {
    var element = event2.element, bendpointsGfx;
    if (!element.waypoints) {
      return;
    }
    bendpointsGfx = addHandles(element);
    if (event2.add) {
      classes(bendpointsGfx).add(event2.marker);
    } else {
      classes(bendpointsGfx).remove(event2.marker);
    }
  });
  eventBus.on("element.mousemove", function(event2) {
    var element = event2.element, waypoints = element.waypoints, bendpointsGfx, intersection2;
    if (waypoints) {
      bendpointsGfx = getBendpointsContainer(element, true);
      intersection2 = getConnectionIntersection(canvas, waypoints, event2.originalEvent);
      if (!intersection2) {
        return;
      }
      updateFloatingBendpointPosition(bendpointsGfx, intersection2);
      if (!intersection2.bendpoint) {
        updateSegmentDraggerPosition(bendpointsGfx, intersection2, waypoints);
      }
    }
  });
  eventBus.on("element.mousedown", function(event2) {
    if (!isPrimaryButton(event2)) {
      return;
    }
    var originalEvent = event2.originalEvent, element = event2.element;
    if (!element.waypoints) {
      return;
    }
    return activateBendpointMove(originalEvent, element);
  });
  eventBus.on("selection.changed", function(event2) {
    var newSelection = event2.newSelection, primary = newSelection[0];
    if (primary && primary.waypoints) {
      addHandles(primary);
    }
  });
  eventBus.on("element.hover", function(event2) {
    var element = event2.element;
    if (element.waypoints) {
      addHandles(element);
      interactionEvents.registerEvent(event2.gfx, "mousemove", "element.mousemove");
    }
  });
  eventBus.on("element.out", function(event2) {
    interactionEvents.unregisterEvent(event2.gfx, "mousemove", "element.mousemove");
  });
  eventBus.on("element.updateId", function(context) {
    var element = context.element, newId = context.newId;
    if (element.waypoints) {
      var bendpointContainer = getBendpointsContainer(element);
      if (bendpointContainer) {
        attr(bendpointContainer, { "data-element-id": newId });
      }
    }
  });
  this.addHandles = addHandles;
  this.updateHandles = updateHandles;
  this.getBendpointsContainer = getBendpointsContainer;
  this.getSegmentDragger = getSegmentDragger;
}
Bendpoints.$inject = [
  "eventBus",
  "canvas",
  "interactionEvents",
  "bendpointMove",
  "connectionSegmentMove"
];
function getDraggerVisual(draggerGfx) {
  return query(".djs-visual", draggerGfx);
}
var round$9 = Math.round;
var RECONNECT_START$1 = "reconnectStart", RECONNECT_END$1 = "reconnectEnd", UPDATE_WAYPOINTS$1 = "updateWaypoints";
function BendpointMove(injector, eventBus, canvas, dragging, rules2, modeling) {
  this._injector = injector;
  this.start = function(event2, connection, bendpointIndex, insert) {
    var gfx = canvas.getGraphics(connection), source2 = connection.source, target = connection.target, waypoints = connection.waypoints, type;
    if (!insert && bendpointIndex === 0) {
      type = RECONNECT_START$1;
    } else if (!insert && bendpointIndex === waypoints.length - 1) {
      type = RECONNECT_END$1;
    } else {
      type = UPDATE_WAYPOINTS$1;
    }
    var command = type === UPDATE_WAYPOINTS$1 ? "connection.updateWaypoints" : "connection.reconnect";
    var allowed = rules2.allowed(command, {
      connection,
      source: source2,
      target
    });
    if (allowed === false) {
      allowed = rules2.allowed(command, {
        connection,
        source: target,
        target: source2
      });
    }
    if (allowed === false) {
      return;
    }
    dragging.init(event2, "bendpoint.move", {
      data: {
        connection,
        connectionGfx: gfx,
        context: {
          allowed,
          bendpointIndex,
          connection,
          source: source2,
          target,
          insert,
          type
        }
      }
    });
  };
  eventBus.on("bendpoint.move.hover", function(event2) {
    var context = event2.context, connection = context.connection, source2 = connection.source, target = connection.target, hover = event2.hover, type = context.type;
    context.hover = hover;
    var allowed;
    if (!hover) {
      return;
    }
    var command = type === UPDATE_WAYPOINTS$1 ? "connection.updateWaypoints" : "connection.reconnect";
    allowed = context.allowed = rules2.allowed(command, {
      connection,
      source: type === RECONNECT_START$1 ? hover : source2,
      target: type === RECONNECT_END$1 ? hover : target
    });
    if (allowed) {
      context.source = type === RECONNECT_START$1 ? hover : source2;
      context.target = type === RECONNECT_END$1 ? hover : target;
      return;
    }
    if (allowed === false) {
      allowed = context.allowed = rules2.allowed(command, {
        connection,
        source: type === RECONNECT_END$1 ? hover : target,
        target: type === RECONNECT_START$1 ? hover : source2
      });
    }
    if (allowed) {
      context.source = type === RECONNECT_END$1 ? hover : target;
      context.target = type === RECONNECT_START$1 ? hover : source2;
    }
  });
  eventBus.on(["bendpoint.move.out", "bendpoint.move.cleanup"], function(event2) {
    var context = event2.context, type = context.type;
    context.hover = null;
    context.source = null;
    context.target = null;
    if (type !== UPDATE_WAYPOINTS$1) {
      context.allowed = false;
    }
  });
  eventBus.on("bendpoint.move.end", function(event2) {
    var context = event2.context, allowed = context.allowed, bendpointIndex = context.bendpointIndex, connection = context.connection, insert = context.insert, newWaypoints = connection.waypoints.slice(), source2 = context.source, target = context.target, type = context.type, hints = context.hints || {};
    var docking = {
      x: round$9(event2.x),
      y: round$9(event2.y)
    };
    if (!allowed) {
      return false;
    }
    if (type === UPDATE_WAYPOINTS$1) {
      if (insert) {
        newWaypoints.splice(bendpointIndex, 0, docking);
      } else {
        newWaypoints[bendpointIndex] = docking;
      }
      hints.bendpointMove = {
        insert,
        bendpointIndex
      };
      newWaypoints = this.cropWaypoints(connection, newWaypoints);
      modeling.updateWaypoints(connection, filterRedundantWaypoints(newWaypoints), hints);
    } else {
      if (type === RECONNECT_START$1) {
        hints.docking = "source";
        if (isReverse$2(context)) {
          hints.docking = "target";
          hints.newWaypoints = newWaypoints.reverse();
        }
      } else if (type === RECONNECT_END$1) {
        hints.docking = "target";
        if (isReverse$2(context)) {
          hints.docking = "source";
          hints.newWaypoints = newWaypoints.reverse();
        }
      }
      modeling.reconnect(connection, source2, target, docking, hints);
    }
  }, this);
}
BendpointMove.$inject = [
  "injector",
  "eventBus",
  "canvas",
  "dragging",
  "rules",
  "modeling"
];
BendpointMove.prototype.cropWaypoints = function(connection, newWaypoints) {
  var connectionDocking = this._injector.get("connectionDocking", false);
  if (!connectionDocking) {
    return newWaypoints;
  }
  var waypoints = connection.waypoints;
  connection.waypoints = newWaypoints;
  connection.waypoints = connectionDocking.getCroppedWaypoints(connection);
  newWaypoints = connection.waypoints;
  connection.waypoints = waypoints;
  return newWaypoints;
};
function isReverse$2(context) {
  var hover = context.hover, source2 = context.source, target = context.target, type = context.type;
  if (type === RECONNECT_START$1) {
    return hover && target && hover === target && source2 !== target;
  }
  if (type === RECONNECT_END$1) {
    return hover && source2 && hover === source2 && source2 !== target;
  }
}
var RECONNECT_START = "reconnectStart", RECONNECT_END = "reconnectEnd", UPDATE_WAYPOINTS = "updateWaypoints";
var MARKER_OK$4 = "connect-ok", MARKER_NOT_OK$4 = "connect-not-ok", MARKER_CONNECT_HOVER$1 = "connect-hover", MARKER_CONNECT_UPDATING$1 = "djs-updating", MARKER_DRAGGER = "djs-dragging";
var HIGH_PRIORITY$i = 1100;
function BendpointMovePreview(bendpointMove, injector, eventBus, canvas) {
  this._injector = injector;
  var connectionPreview = injector.get("connectionPreview", false);
  eventBus.on("bendpoint.move.start", function(event2) {
    var context = event2.context, bendpointIndex = context.bendpointIndex, connection = context.connection, insert = context.insert, waypoints = connection.waypoints, newWaypoints = waypoints.slice();
    context.waypoints = waypoints;
    if (insert) {
      newWaypoints.splice(bendpointIndex, 0, { x: event2.x, y: event2.y });
    }
    connection.waypoints = newWaypoints;
    var draggerGfx = context.draggerGfx = addBendpoint(canvas.getLayer("overlays"));
    classes(draggerGfx).add("djs-dragging");
    canvas.addMarker(connection, MARKER_DRAGGER);
    canvas.addMarker(connection, MARKER_CONNECT_UPDATING$1);
  });
  eventBus.on("bendpoint.move.hover", function(event2) {
    var context = event2.context, allowed = context.allowed, hover = context.hover, type = context.type;
    if (hover) {
      canvas.addMarker(hover, MARKER_CONNECT_HOVER$1);
      if (type === UPDATE_WAYPOINTS) {
        return;
      }
      if (allowed) {
        canvas.removeMarker(hover, MARKER_NOT_OK$4);
        canvas.addMarker(hover, MARKER_OK$4);
      } else if (allowed === false) {
        canvas.removeMarker(hover, MARKER_OK$4);
        canvas.addMarker(hover, MARKER_NOT_OK$4);
      }
    }
  });
  eventBus.on([
    "bendpoint.move.out",
    "bendpoint.move.cleanup"
  ], HIGH_PRIORITY$i, function(event2) {
    var context = event2.context, hover = context.hover, target = context.target;
    if (hover) {
      canvas.removeMarker(hover, MARKER_CONNECT_HOVER$1);
      canvas.removeMarker(hover, target ? MARKER_OK$4 : MARKER_NOT_OK$4);
    }
  });
  eventBus.on("bendpoint.move.move", function(event2) {
    var context = event2.context, allowed = context.allowed, bendpointIndex = context.bendpointIndex, draggerGfx = context.draggerGfx, hover = context.hover, type = context.type, connection = context.connection, source2 = connection.source, target = connection.target, newWaypoints = connection.waypoints.slice(), bendpoint = { x: event2.x, y: event2.y }, hints = context.hints || {}, drawPreviewHints = {};
    if (connectionPreview) {
      if (hints.connectionStart) {
        drawPreviewHints.connectionStart = hints.connectionStart;
      }
      if (hints.connectionEnd) {
        drawPreviewHints.connectionEnd = hints.connectionEnd;
      }
      if (type === RECONNECT_START) {
        if (isReverse$2(context)) {
          drawPreviewHints.connectionEnd = drawPreviewHints.connectionEnd || bendpoint;
          drawPreviewHints.source = target;
          drawPreviewHints.target = hover || source2;
          newWaypoints = newWaypoints.reverse();
        } else {
          drawPreviewHints.connectionStart = drawPreviewHints.connectionStart || bendpoint;
          drawPreviewHints.source = hover || source2;
          drawPreviewHints.target = target;
        }
      } else if (type === RECONNECT_END) {
        if (isReverse$2(context)) {
          drawPreviewHints.connectionStart = drawPreviewHints.connectionStart || bendpoint;
          drawPreviewHints.source = hover || target;
          drawPreviewHints.target = source2;
          newWaypoints = newWaypoints.reverse();
        } else {
          drawPreviewHints.connectionEnd = drawPreviewHints.connectionEnd || bendpoint;
          drawPreviewHints.source = source2;
          drawPreviewHints.target = hover || target;
        }
      } else {
        drawPreviewHints.noCropping = true;
        drawPreviewHints.noLayout = true;
        newWaypoints[bendpointIndex] = bendpoint;
      }
      if (type === UPDATE_WAYPOINTS) {
        newWaypoints = bendpointMove.cropWaypoints(connection, newWaypoints);
      }
      drawPreviewHints.waypoints = newWaypoints;
      connectionPreview.drawPreview(context, allowed, drawPreviewHints);
    }
    translate$2(draggerGfx, event2.x, event2.y);
  }, this);
  eventBus.on([
    "bendpoint.move.end",
    "bendpoint.move.cancel"
  ], HIGH_PRIORITY$i, function(event2) {
    var context = event2.context, connection = context.connection, draggerGfx = context.draggerGfx, hover = context.hover, target = context.target, waypoints = context.waypoints;
    connection.waypoints = waypoints;
    remove(draggerGfx);
    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING$1);
    canvas.removeMarker(connection, MARKER_DRAGGER);
    if (hover) {
      canvas.removeMarker(hover, MARKER_OK$4);
      canvas.removeMarker(hover, target ? MARKER_OK$4 : MARKER_NOT_OK$4);
    }
    if (connectionPreview) {
      connectionPreview.cleanUp(context);
    }
  });
}
BendpointMovePreview.$inject = [
  "bendpointMove",
  "injector",
  "eventBus",
  "canvas"
];
var MARKER_CONNECT_HOVER = "connect-hover", MARKER_CONNECT_UPDATING = "djs-updating";
function axisAdd(point, axis, delta2) {
  return axisSet(point, axis, point[axis] + delta2);
}
function axisSet(point, axis, value) {
  return {
    x: axis === "x" ? value : point.x,
    y: axis === "y" ? value : point.y
  };
}
function axisFenced(position, segmentStart, segmentEnd, axis) {
  var maxValue = Math.max(segmentStart[axis], segmentEnd[axis]), minValue = Math.min(segmentStart[axis], segmentEnd[axis]);
  var padding = 20;
  var fencedValue = Math.min(Math.max(minValue + padding, position[axis]), maxValue - padding);
  return axisSet(segmentStart, axis, fencedValue);
}
function flipAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getDocking$2(point, referenceElement, moveAxis) {
  var referenceMid, inverseAxis;
  if (point.original) {
    return point.original;
  } else {
    referenceMid = getMid(referenceElement);
    inverseAxis = flipAxis(moveAxis);
    return axisSet(point, inverseAxis, referenceMid[inverseAxis]);
  }
}
function ConnectionSegmentMove(injector, eventBus, canvas, dragging, graphicsFactory, modeling) {
  var connectionDocking = injector.get("connectionDocking", false);
  this.start = function(event2, connection, idx) {
    var context, gfx = canvas.getGraphics(connection), segmentStartIndex = idx - 1, segmentEndIndex = idx, waypoints = connection.waypoints, segmentStart = waypoints[segmentStartIndex], segmentEnd = waypoints[segmentEndIndex], intersection2 = getConnectionIntersection(canvas, waypoints, event2), direction, axis, dragPosition;
    direction = pointsAligned(segmentStart, segmentEnd);
    if (!direction) {
      return;
    }
    axis = direction === "v" ? "x" : "y";
    if (segmentStartIndex === 0) {
      segmentStart = getDocking$2(segmentStart, connection.source, axis);
    }
    if (segmentEndIndex === waypoints.length - 1) {
      segmentEnd = getDocking$2(segmentEnd, connection.target, axis);
    }
    if (intersection2) {
      dragPosition = intersection2.point;
    } else {
      dragPosition = {
        x: (segmentStart.x + segmentEnd.x) / 2,
        y: (segmentStart.y + segmentEnd.y) / 2
      };
    }
    context = {
      connection,
      segmentStartIndex,
      segmentEndIndex,
      segmentStart,
      segmentEnd,
      axis,
      dragPosition
    };
    dragging.init(event2, dragPosition, "connectionSegment.move", {
      cursor: axis === "x" ? "resize-ew" : "resize-ns",
      data: {
        connection,
        connectionGfx: gfx,
        context
      }
    });
  };
  function cropConnection(connection, newWaypoints) {
    if (!connectionDocking) {
      return newWaypoints;
    }
    var oldWaypoints = connection.waypoints, croppedWaypoints;
    connection.waypoints = newWaypoints;
    croppedWaypoints = connectionDocking.getCroppedWaypoints(connection);
    connection.waypoints = oldWaypoints;
    return croppedWaypoints;
  }
  function redrawConnection(data) {
    graphicsFactory.update("connection", data.connection, data.connectionGfx);
  }
  function updateDragger(context, segmentOffset, event2) {
    var newWaypoints = context.newWaypoints, segmentStartIndex = context.segmentStartIndex + segmentOffset, segmentStart = newWaypoints[segmentStartIndex], segmentEndIndex = context.segmentEndIndex + segmentOffset, segmentEnd = newWaypoints[segmentEndIndex], axis = flipAxis(context.axis);
    var draggerPosition = axisFenced(event2, segmentStart, segmentEnd, axis);
    translate$2(context.draggerGfx, draggerPosition.x, draggerPosition.y);
  }
  function filterRedundantWaypoints2(waypoints, segmentStartIndex) {
    var segmentOffset = 0;
    var filteredWaypoints = waypoints.filter(function(r2, idx) {
      if (pointsOnLine(waypoints[idx - 1], waypoints[idx + 1], r2)) {
        segmentOffset = idx <= segmentStartIndex ? segmentOffset - 1 : segmentOffset;
        return false;
      }
      return true;
    });
    return {
      waypoints: filteredWaypoints,
      segmentOffset
    };
  }
  eventBus.on("connectionSegment.move.start", function(event2) {
    var context = event2.context, connection = event2.connection, layer = canvas.getLayer("overlays");
    context.originalWaypoints = connection.waypoints.slice();
    context.draggerGfx = addSegmentDragger(layer, context.segmentStart, context.segmentEnd);
    classes(context.draggerGfx).add("djs-dragging");
    canvas.addMarker(connection, MARKER_CONNECT_UPDATING);
  });
  eventBus.on("connectionSegment.move.move", function(event2) {
    var context = event2.context, connection = context.connection, segmentStartIndex = context.segmentStartIndex, segmentEndIndex = context.segmentEndIndex, segmentStart = context.segmentStart, segmentEnd = context.segmentEnd, axis = context.axis;
    var newWaypoints = context.originalWaypoints.slice(), newSegmentStart = axisAdd(segmentStart, axis, event2["d" + axis]), newSegmentEnd = axisAdd(segmentEnd, axis, event2["d" + axis]);
    var waypointCount = newWaypoints.length, segmentOffset = 0;
    newWaypoints[segmentStartIndex] = newSegmentStart;
    newWaypoints[segmentEndIndex] = newSegmentEnd;
    var sourceToSegmentOrientation, targetToSegmentOrientation;
    if (segmentStartIndex < 2) {
      sourceToSegmentOrientation = getOrientation(connection.source, newSegmentStart);
      if (segmentStartIndex === 1) {
        if (sourceToSegmentOrientation === "intersect") {
          newWaypoints.shift();
          newWaypoints[0] = newSegmentStart;
          segmentOffset--;
        }
      } else {
        if (sourceToSegmentOrientation !== "intersect") {
          newWaypoints.unshift(segmentStart);
          segmentOffset++;
        }
      }
    }
    if (segmentEndIndex > waypointCount - 3) {
      targetToSegmentOrientation = getOrientation(connection.target, newSegmentEnd);
      if (segmentEndIndex === waypointCount - 2) {
        if (targetToSegmentOrientation === "intersect") {
          newWaypoints.pop();
          newWaypoints[newWaypoints.length - 1] = newSegmentEnd;
        }
      } else {
        if (targetToSegmentOrientation !== "intersect") {
          newWaypoints.push(segmentEnd);
        }
      }
    }
    context.newWaypoints = connection.waypoints = cropConnection(connection, newWaypoints);
    updateDragger(context, segmentOffset, event2);
    context.newSegmentStartIndex = segmentStartIndex + segmentOffset;
    redrawConnection(event2);
  });
  eventBus.on("connectionSegment.move.hover", function(event2) {
    event2.context.hover = event2.hover;
    canvas.addMarker(event2.hover, MARKER_CONNECT_HOVER);
  });
  eventBus.on([
    "connectionSegment.move.out",
    "connectionSegment.move.cleanup"
  ], function(event2) {
    var hover = event2.context.hover;
    if (hover) {
      canvas.removeMarker(hover, MARKER_CONNECT_HOVER);
    }
  });
  eventBus.on("connectionSegment.move.cleanup", function(event2) {
    var context = event2.context, connection = context.connection;
    if (context.draggerGfx) {
      remove(context.draggerGfx);
    }
    canvas.removeMarker(connection, MARKER_CONNECT_UPDATING);
  });
  eventBus.on([
    "connectionSegment.move.cancel",
    "connectionSegment.move.end"
  ], function(event2) {
    var context = event2.context, connection = context.connection;
    connection.waypoints = context.originalWaypoints;
    redrawConnection(event2);
  });
  eventBus.on("connectionSegment.move.end", function(event2) {
    var context = event2.context, connection = context.connection, newWaypoints = context.newWaypoints, newSegmentStartIndex = context.newSegmentStartIndex;
    newWaypoints = newWaypoints.map(function(p2) {
      return {
        original: p2.original,
        x: Math.round(p2.x),
        y: Math.round(p2.y)
      };
    });
    var filtered = filterRedundantWaypoints2(newWaypoints, newSegmentStartIndex);
    var filteredWaypoints = filtered.waypoints, croppedWaypoints = cropConnection(connection, filteredWaypoints), segmentOffset = filtered.segmentOffset;
    var hints = {
      segmentMove: {
        segmentStartIndex: context.segmentStartIndex,
        newSegmentStartIndex: newSegmentStartIndex + segmentOffset
      }
    };
    modeling.updateWaypoints(connection, croppedWaypoints, hints);
  });
}
ConnectionSegmentMove.$inject = [
  "injector",
  "eventBus",
  "canvas",
  "dragging",
  "graphicsFactory",
  "modeling"
];
var abs$6 = Math.abs, round$8 = Math.round;
function snapTo(value, values2, tolerance) {
  tolerance = tolerance === void 0 ? 10 : tolerance;
  var idx, snapValue;
  for (idx = 0; idx < values2.length; idx++) {
    snapValue = values2[idx];
    if (abs$6(snapValue - value) <= tolerance) {
      return snapValue;
    }
  }
}
function topLeft(bounds) {
  return {
    x: bounds.x,
    y: bounds.y
  };
}
function bottomRight(bounds) {
  return {
    x: bounds.x + bounds.width,
    y: bounds.y + bounds.height
  };
}
function mid$2(bounds, defaultValue) {
  if (!bounds || isNaN(bounds.x) || isNaN(bounds.y)) {
    return defaultValue;
  }
  return {
    x: round$8(bounds.x + bounds.width / 2),
    y: round$8(bounds.y + bounds.height / 2)
  };
}
function isSnapped(event2, axis) {
  var snapped = event2.snapped;
  if (!snapped) {
    return false;
  }
  if (typeof axis === "string") {
    return snapped[axis];
  }
  return snapped.x && snapped.y;
}
function setSnapped(event2, axis, value) {
  if (typeof axis !== "string") {
    throw new Error("axis must be in [x, y]");
  }
  if (typeof value !== "number" && value !== false) {
    throw new Error("value must be Number or false");
  }
  var delta2, previousValue = event2[axis];
  var snapped = event2.snapped = event2.snapped || {};
  if (value === false) {
    snapped[axis] = false;
  } else {
    snapped[axis] = true;
    delta2 = value - previousValue;
    event2[axis] += delta2;
    event2["d" + axis] += delta2;
  }
  return previousValue;
}
function getChildren(parent) {
  return parent.children || [];
}
var abs$5 = Math.abs, round$7 = Math.round;
var TOLERANCE = 10;
function BendpointSnapping(eventBus) {
  function snapTo2(values2, value) {
    if (isArray$3(values2)) {
      var i2 = values2.length;
      while (i2--)
        if (abs$5(values2[i2] - value) <= TOLERANCE) {
          return values2[i2];
        }
    } else {
      values2 = +values2;
      var rem = value % values2;
      if (rem < TOLERANCE) {
        return value - rem;
      }
      if (rem > values2 - TOLERANCE) {
        return value - rem + values2;
      }
    }
    return value;
  }
  function getSnapPoint(element, event2) {
    if (element.waypoints) {
      return getClosestPointOnConnection(event2, element);
    }
    if (element.width) {
      return {
        x: round$7(element.width / 2 + element.x),
        y: round$7(element.height / 2 + element.y)
      };
    }
  }
  function getConnectionSegmentSnaps(event2) {
    var context = event2.context, snapPoints = context.snapPoints, connection = context.connection, waypoints = connection.waypoints, segmentStart = context.segmentStart, segmentStartIndex = context.segmentStartIndex, segmentEnd = context.segmentEnd, segmentEndIndex = context.segmentEndIndex, axis = context.axis;
    if (snapPoints) {
      return snapPoints;
    }
    var referenceWaypoints = [
      waypoints[segmentStartIndex - 1],
      segmentStart,
      segmentEnd,
      waypoints[segmentEndIndex + 1]
    ];
    if (segmentStartIndex < 2) {
      referenceWaypoints.unshift(getSnapPoint(connection.source, event2));
    }
    if (segmentEndIndex > waypoints.length - 3) {
      referenceWaypoints.unshift(getSnapPoint(connection.target, event2));
    }
    context.snapPoints = snapPoints = { horizontal: [], vertical: [] };
    forEach$2(referenceWaypoints, function(p2) {
      if (p2) {
        p2 = p2.original || p2;
        if (axis === "y") {
          snapPoints.horizontal.push(p2.y);
        }
        if (axis === "x") {
          snapPoints.vertical.push(p2.x);
        }
      }
    });
    return snapPoints;
  }
  eventBus.on("connectionSegment.move.move", 1500, function(event2) {
    var snapPoints = getConnectionSegmentSnaps(event2), x2 = event2.x, y2 = event2.y, sx, sy;
    if (!snapPoints) {
      return;
    }
    sx = snapTo2(snapPoints.vertical, x2);
    sy = snapTo2(snapPoints.horizontal, y2);
    var cx = x2 - sx, cy = y2 - sy;
    assign$2(event2, {
      dx: event2.dx - cx,
      dy: event2.dy - cy,
      x: sx,
      y: sy
    });
    if (cx || snapPoints.vertical.indexOf(x2) !== -1) {
      setSnapped(event2, "x", sx);
    }
    if (cy || snapPoints.horizontal.indexOf(y2) !== -1) {
      setSnapped(event2, "y", sy);
    }
  });
  function getBendpointSnaps(context) {
    var snapPoints = context.snapPoints, waypoints = context.connection.waypoints, bendpointIndex = context.bendpointIndex;
    if (snapPoints) {
      return snapPoints;
    }
    var referenceWaypoints = [waypoints[bendpointIndex - 1], waypoints[bendpointIndex + 1]];
    context.snapPoints = snapPoints = { horizontal: [], vertical: [] };
    forEach$2(referenceWaypoints, function(p2) {
      if (p2) {
        p2 = p2.original || p2;
        snapPoints.horizontal.push(p2.y);
        snapPoints.vertical.push(p2.x);
      }
    });
    return snapPoints;
  }
  eventBus.on([
    "connect.hover",
    "connect.move",
    "connect.end"
  ], 1500, function(event2) {
    var context = event2.context, hover = context.hover, hoverMid = hover && getSnapPoint(hover, event2);
    if (!isConnection(hover) || !hoverMid || !hoverMid.x || !hoverMid.y) {
      return;
    }
    setSnapped(event2, "x", hoverMid.x);
    setSnapped(event2, "y", hoverMid.y);
  });
  eventBus.on(["bendpoint.move.move", "bendpoint.move.end"], 1500, function(event2) {
    var context = event2.context, snapPoints = getBendpointSnaps(context), hover = context.hover, hoverMid = hover && getSnapPoint(hover, event2), x2 = event2.x, y2 = event2.y, sx, sy;
    if (!snapPoints) {
      return;
    }
    sx = snapTo2(hoverMid ? snapPoints.vertical.concat([hoverMid.x]) : snapPoints.vertical, x2);
    sy = snapTo2(hoverMid ? snapPoints.horizontal.concat([hoverMid.y]) : snapPoints.horizontal, y2);
    var cx = x2 - sx, cy = y2 - sy;
    assign$2(event2, {
      dx: event2.dx - cx,
      dy: event2.dy - cy,
      x: event2.x - cx,
      y: event2.y - cy
    });
    if (cx || snapPoints.vertical.indexOf(x2) !== -1) {
      setSnapped(event2, "x", sx);
    }
    if (cy || snapPoints.horizontal.indexOf(y2) !== -1) {
      setSnapped(event2, "y", sy);
    }
  });
}
BendpointSnapping.$inject = ["eventBus"];
const BendpointsModule = {
  __depends__: [
    DraggingModule,
    RulesModule$1
  ],
  __init__: ["bendpoints", "bendpointSnapping", "bendpointMovePreview"],
  bendpoints: ["type", Bendpoints],
  bendpointMove: ["type", BendpointMove],
  bendpointMovePreview: ["type", BendpointMovePreview],
  connectionSegmentMove: ["type", ConnectionSegmentMove],
  bendpointSnapping: ["type", BendpointSnapping]
};
function Connect(eventBus, dragging, modeling, rules2) {
  function canConnect2(source2, target) {
    return rules2.allowed("connection.create", {
      source: source2,
      target
    });
  }
  function canConnectReverse(source2, target) {
    return canConnect2(target, source2);
  }
  eventBus.on("connect.hover", function(event2) {
    var context = event2.context, start = context.start, hover = event2.hover, canExecute;
    context.hover = hover;
    canExecute = context.canExecute = canConnect2(start, hover);
    if (isNil$1(canExecute)) {
      return;
    }
    if (canExecute !== false) {
      context.source = start;
      context.target = hover;
      return;
    }
    canExecute = context.canExecute = canConnectReverse(start, hover);
    if (isNil$1(canExecute)) {
      return;
    }
    if (canExecute !== false) {
      context.source = hover;
      context.target = start;
    }
  });
  eventBus.on(["connect.out", "connect.cleanup"], function(event2) {
    var context = event2.context;
    context.hover = null;
    context.source = null;
    context.target = null;
    context.canExecute = false;
  });
  eventBus.on("connect.end", function(event2) {
    var context = event2.context, canExecute = context.canExecute, connectionStart = context.connectionStart, connectionEnd = {
      x: event2.x,
      y: event2.y
    }, source2 = context.source, target = context.target;
    if (!canExecute) {
      return false;
    }
    var attrs = null, hints = {
      connectionStart: isReverse$1(context) ? connectionEnd : connectionStart,
      connectionEnd: isReverse$1(context) ? connectionStart : connectionEnd
    };
    if (isObject$1(canExecute)) {
      attrs = canExecute;
    }
    context.connection = modeling.connect(source2, target, attrs, hints);
  });
  this.start = function(event2, start, connectionStart, autoActivate) {
    if (!isObject$1(connectionStart)) {
      autoActivate = connectionStart;
      connectionStart = getMid(start);
    }
    dragging.init(event2, "connect", {
      autoActivate,
      data: {
        shape: start,
        context: {
          start,
          connectionStart
        }
      }
    });
  };
}
Connect.$inject = [
  "eventBus",
  "dragging",
  "modeling",
  "rules"
];
function isReverse$1(context) {
  var hover = context.hover, source2 = context.source, target = context.target;
  return hover && source2 && hover === source2 && source2 !== target;
}
var HIGH_PRIORITY$h = 1100, LOW_PRIORITY$k = 900;
var MARKER_OK$3 = "connect-ok", MARKER_NOT_OK$3 = "connect-not-ok";
function ConnectPreview(injector, eventBus, canvas) {
  var connectionPreview = injector.get("connectionPreview", false);
  connectionPreview && eventBus.on("connect.move", function(event2) {
    var context = event2.context, canConnect2 = context.canExecute, hover = context.hover, source2 = context.source, start = context.start, startPosition = context.startPosition, target = context.target, connectionStart = context.connectionStart || startPosition, connectionEnd = context.connectionEnd || {
      x: event2.x,
      y: event2.y
    }, previewStart = connectionStart, previewEnd = connectionEnd;
    if (isReverse$1(context)) {
      previewStart = connectionEnd;
      previewEnd = connectionStart;
    }
    connectionPreview.drawPreview(context, canConnect2, {
      source: source2 || start,
      target: target || hover,
      connectionStart: previewStart,
      connectionEnd: previewEnd
    });
  });
  eventBus.on("connect.hover", LOW_PRIORITY$k, function(event2) {
    var context = event2.context, hover = event2.hover, canExecute = context.canExecute;
    if (canExecute === null) {
      return;
    }
    canvas.addMarker(hover, canExecute ? MARKER_OK$3 : MARKER_NOT_OK$3);
  });
  eventBus.on([
    "connect.out",
    "connect.cleanup"
  ], HIGH_PRIORITY$h, function(event2) {
    var hover = event2.hover;
    if (hover) {
      canvas.removeMarker(hover, MARKER_OK$3);
      canvas.removeMarker(hover, MARKER_NOT_OK$3);
    }
  });
  connectionPreview && eventBus.on("connect.cleanup", function(event2) {
    connectionPreview.cleanUp(event2.context);
  });
}
ConnectPreview.$inject = [
  "injector",
  "eventBus",
  "canvas"
];
const ConnectModule = {
  __depends__: [
    SelectionModule,
    RulesModule$1,
    DraggingModule
  ],
  __init__: [
    "connectPreview"
  ],
  connect: ["type", Connect],
  connectPreview: ["type", ConnectPreview]
};
var MARKER_CONNECTION_PREVIEW = "djs-dragger";
function ConnectionPreview(injector, canvas, graphicsFactory, elementFactory) {
  this._canvas = canvas;
  this._graphicsFactory = graphicsFactory;
  this._elementFactory = elementFactory;
  this._connectionDocking = injector.get("connectionDocking", false);
  this._layouter = injector.get("layouter", false);
}
ConnectionPreview.$inject = [
  "injector",
  "canvas",
  "graphicsFactory",
  "elementFactory"
];
ConnectionPreview.prototype.drawPreview = function(context, canConnect2, hints) {
  hints = hints || {};
  var connectionPreviewGfx = context.connectionPreviewGfx, getConnection = context.getConnection, source2 = hints.source, target = hints.target, waypoints = hints.waypoints, connectionStart = hints.connectionStart, connectionEnd = hints.connectionEnd, noLayout = hints.noLayout, noCropping = hints.noCropping, noNoop = hints.noNoop, connection;
  var self2 = this;
  if (!connectionPreviewGfx) {
    connectionPreviewGfx = context.connectionPreviewGfx = this.createConnectionPreviewGfx();
  }
  clear(connectionPreviewGfx);
  if (!getConnection) {
    getConnection = context.getConnection = cacheReturnValues(function(canConnect3, source3, target2) {
      return self2.getConnection(canConnect3, source3, target2);
    });
  }
  if (canConnect2) {
    connection = getConnection(canConnect2, source2, target);
  }
  if (!connection) {
    !noNoop && this.drawNoopPreview(connectionPreviewGfx, hints);
    return;
  }
  connection.waypoints = waypoints || [];
  if (this._layouter && !noLayout) {
    connection.waypoints = this._layouter.layoutConnection(connection, {
      source: source2,
      target,
      connectionStart,
      connectionEnd,
      waypoints: hints.waypoints || connection.waypoints
    });
  }
  if (!connection.waypoints || !connection.waypoints.length) {
    connection.waypoints = [
      source2 ? getMid(source2) : connectionStart,
      target ? getMid(target) : connectionEnd
    ];
  }
  if (this._connectionDocking && (source2 || target) && !noCropping) {
    connection.waypoints = this._connectionDocking.getCroppedWaypoints(connection, source2, target);
  }
  this._graphicsFactory.drawConnection(connectionPreviewGfx, connection, {
    stroke: "var(--element-dragger-color)"
  });
};
ConnectionPreview.prototype.drawNoopPreview = function(connectionPreviewGfx, hints) {
  var source2 = hints.source, target = hints.target, start = hints.connectionStart || getMid(source2), end = hints.connectionEnd || getMid(target);
  var waypoints = this.cropWaypoints(start, end, source2, target);
  var connection = this.createNoopConnection(waypoints[0], waypoints[1]);
  append(connectionPreviewGfx, connection);
};
ConnectionPreview.prototype.cropWaypoints = function(start, end, source2, target) {
  var graphicsFactory = this._graphicsFactory, sourcePath = source2 && graphicsFactory.getShapePath(source2), targetPath = target && graphicsFactory.getShapePath(target), connectionPath = graphicsFactory.getConnectionPath({ waypoints: [start, end] });
  start = source2 && getElementLineIntersection(sourcePath, connectionPath, true) || start;
  end = target && getElementLineIntersection(targetPath, connectionPath, false) || end;
  return [start, end];
};
ConnectionPreview.prototype.cleanUp = function(context) {
  if (context && context.connectionPreviewGfx) {
    remove(context.connectionPreviewGfx);
  }
};
ConnectionPreview.prototype.getConnection = function(canConnect2) {
  var attrs = ensureConnectionAttrs(canConnect2);
  return this._elementFactory.createConnection(attrs);
};
ConnectionPreview.prototype.createConnectionPreviewGfx = function() {
  var gfx = create$1("g");
  attr(gfx, {
    pointerEvents: "none"
  });
  classes(gfx).add(MARKER_CONNECTION_PREVIEW);
  append(this._canvas.getActiveLayer(), gfx);
  return gfx;
};
ConnectionPreview.prototype.createNoopConnection = function(start, end) {
  return createLine([start, end], {
    "stroke": "#333",
    "strokeDasharray": [1],
    "strokeWidth": 2,
    "pointer-events": "none"
  });
};
function cacheReturnValues(fn) {
  var returnValues = {};
  return function(firstArgument) {
    var key = JSON.stringify(firstArgument);
    var returnValue = returnValues[key];
    if (!returnValue) {
      returnValue = returnValues[key] = fn.apply(null, arguments);
    }
    return returnValue;
  };
}
function ensureConnectionAttrs(canConnect2) {
  if (isObject$1(canConnect2)) {
    return canConnect2;
  } else {
    return {};
  }
}
const ConnectionPreviewModule = {
  __init__: ["connectionPreview"],
  connectionPreview: ["type", ConnectionPreview]
};
function getVisual(gfx) {
  return gfx.childNodes[0];
}
var MARKER_TYPES = [
  "marker-start",
  "marker-mid",
  "marker-end"
];
var NODES_CAN_HAVE_MARKER = [
  "circle",
  "ellipse",
  "line",
  "path",
  "polygon",
  "polyline",
  "path",
  "rect"
];
function PreviewSupport(elementRegistry, eventBus, canvas, styles) {
  this._elementRegistry = elementRegistry;
  this._canvas = canvas;
  this._styles = styles;
  this._clonedMarkers = {};
  var self2 = this;
  eventBus.on("drag.cleanup", function() {
    self2.cleanUp();
  });
}
PreviewSupport.$inject = [
  "elementRegistry",
  "eventBus",
  "canvas",
  "styles"
];
PreviewSupport.prototype.cleanUp = function() {
  var self2 = this;
  forEach$2(self2._clonedMarkers, function(clonedMarker) {
    remove(clonedMarker);
  });
  self2._clonedMarkers = {};
};
PreviewSupport.prototype.getGfx = function(element) {
  return this._elementRegistry.getGraphics(element);
};
PreviewSupport.prototype.addDragger = function(element, group, gfx, className = "djs-dragger") {
  gfx = gfx || this.getGfx(element);
  var dragger = clone$1(gfx);
  var bbox = gfx.getBoundingClientRect();
  this._cloneMarkers(getVisual(dragger), className);
  attr(dragger, this._styles.cls(className, [], {
    x: bbox.top,
    y: bbox.left
  }));
  append(group, dragger);
  attr(dragger, "data-preview-support-element-id", element.id);
  return dragger;
};
PreviewSupport.prototype.addFrame = function(shape, group) {
  var frame = create$1("rect", {
    class: "djs-resize-overlay",
    width: shape.width,
    height: shape.height,
    x: shape.x,
    y: shape.y
  });
  append(group, frame);
  attr(frame, "data-preview-support-element-id", shape.id);
  return frame;
};
PreviewSupport.prototype._cloneMarkers = function(gfx, className = "djs-dragger") {
  var self2 = this;
  if (gfx.childNodes) {
    for (var i2 = 0; i2 < gfx.childNodes.length; i2++) {
      self2._cloneMarkers(gfx.childNodes[i2], className);
    }
  }
  if (!canHaveMarker(gfx)) {
    return;
  }
  MARKER_TYPES.forEach(function(markerType) {
    if (attr(gfx, markerType)) {
      var marker = getMarker(gfx, markerType, self2._canvas.getContainer());
      self2._cloneMarker(gfx, marker, markerType, className);
    }
  });
};
PreviewSupport.prototype._cloneMarker = function(gfx, marker, markerType, className = "djs-dragger") {
  var markerId = marker.id + "-" + className;
  var clonedMarker = this._clonedMarkers[markerId];
  if (!clonedMarker) {
    clonedMarker = clone$1(marker);
    var clonedMarkerId = markerId + "-clone";
    clonedMarker.id = clonedMarkerId;
    classes(clonedMarker).add(className);
    this._clonedMarkers[markerId] = clonedMarker;
    var defs = query("defs", this._canvas._svg);
    if (!defs) {
      defs = create$1("defs");
      append(this._canvas._svg, defs);
    }
    append(defs, clonedMarker);
  }
  var reference = idToReference(this._clonedMarkers[markerId].id);
  attr(gfx, markerType, reference);
};
function getMarker(node2, markerType, parentNode) {
  var id = referenceToId(attr(node2, markerType));
  return query("marker#" + id, parentNode || document);
}
function referenceToId(reference) {
  return reference.match(/url\(['"]?#([^'"]*)['"]?\)/)[1];
}
function idToReference(id) {
  return "url(#" + id + ")";
}
function canHaveMarker(node2) {
  return NODES_CAN_HAVE_MARKER.indexOf(node2.nodeName) !== -1;
}
const PreviewSupportModule = {
  __init__: ["previewSupport"],
  previewSupport: ["type", PreviewSupport]
};
const LAYER_NAME = "complex-preview";
class ComplexPreview {
  constructor(canvas, graphicsFactory, previewSupport) {
    this._canvas = canvas;
    this._graphicsFactory = graphicsFactory;
    this._previewSupport = previewSupport;
    this._markers = [];
  }
  /**
   * Create complex preview.
   *
   * @param {CreateOptions} options
   */
  create(options) {
    this.cleanUp();
    const {
      created = [],
      moved = [],
      removed = [],
      resized = []
    } = options;
    const layer = this._canvas.getLayer(LAYER_NAME);
    created.filter((element) => !isHidden$2(element)).forEach((element) => {
      let gfx;
      if (isConnection(element)) {
        gfx = this._graphicsFactory._createContainer("connection", create$1("g"));
        this._graphicsFactory.drawConnection(getVisual(gfx), element);
      } else {
        gfx = this._graphicsFactory._createContainer("shape", create$1("g"));
        this._graphicsFactory.drawShape(getVisual(gfx), element);
        translate$2(gfx, element.x, element.y);
      }
      this._previewSupport.addDragger(element, layer, gfx);
    });
    moved.forEach(({ element, delta: delta2 }) => {
      this._previewSupport.addDragger(element, layer, void 0, "djs-dragging");
      this._canvas.addMarker(element, "djs-element-hidden");
      this._markers.push([element, "djs-element-hidden"]);
      const dragger = this._previewSupport.addDragger(element, layer);
      if (isConnection(element)) {
        translate$2(dragger, delta2.x, delta2.y);
      } else {
        translate$2(dragger, element.x + delta2.x, element.y + delta2.y);
      }
    });
    removed.forEach((element) => {
      this._previewSupport.addDragger(element, layer, void 0, "djs-dragging");
      this._canvas.addMarker(element, "djs-element-hidden");
      this._markers.push([element, "djs-element-hidden"]);
    });
    resized.forEach(({ shape, bounds }) => {
      this._canvas.addMarker(shape, "djs-hidden");
      this._markers.push([shape, "djs-hidden"]);
      this._previewSupport.addDragger(shape, layer, void 0, "djs-dragging");
      const gfx = this._graphicsFactory._createContainer("shape", create$1("g"));
      this._graphicsFactory.drawShape(getVisual(gfx), shape, {
        width: bounds.width,
        height: bounds.height
      });
      translate$2(gfx, bounds.x, bounds.y);
      this._previewSupport.addDragger(shape, layer, gfx);
    });
  }
  cleanUp() {
    clear(this._canvas.getLayer(LAYER_NAME));
    this._markers.forEach(([element, marker]) => this._canvas.removeMarker(element, marker));
    this._markers = [];
    this._previewSupport.cleanUp();
  }
  show() {
    this._canvas.showLayer(LAYER_NAME);
  }
  hide() {
    this._canvas.hideLayer(LAYER_NAME);
  }
}
ComplexPreview.$inject = [
  "canvas",
  "graphicsFactory",
  "previewSupport"
];
function isHidden$2(element) {
  return element.hidden;
}
const ComplexPreviewModule = {
  __depends__: [PreviewSupportModule],
  __init__: ["complexPreview"],
  complexPreview: ["type", ComplexPreview]
};
var ALIGNMENTS = [
  "top",
  "bottom",
  "left",
  "right"
];
var ELEMENT_LABEL_DISTANCE = 10;
function AdaptiveLabelPositioningBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.postExecuted([
    "connection.create",
    "connection.layout",
    "connection.updateWaypoints"
  ], function(event2) {
    var context = event2.context, connection = context.connection, source2 = connection.source, target = connection.target, hints = context.hints || {};
    if (hints.createElementsBehavior !== false) {
      checkLabelAdjustment(source2);
      checkLabelAdjustment(target);
    }
  });
  this.postExecuted([
    "label.create"
  ], function(event2) {
    var context = event2.context, shape = context.shape, hints = context.hints || {};
    if (hints.createElementsBehavior !== false) {
      checkLabelAdjustment(shape.labelTarget);
    }
  });
  this.postExecuted([
    "elements.create"
  ], function(event2) {
    var context = event2.context, elements = context.elements, hints = context.hints || {};
    if (hints.createElementsBehavior !== false) {
      elements.forEach(function(element) {
        checkLabelAdjustment(element);
      });
    }
  });
  function checkLabelAdjustment(element) {
    if (!hasExternalLabel(element)) {
      return;
    }
    var optimalPosition = getOptimalPosition(element);
    if (!optimalPosition) {
      return;
    }
    adjustLabelPosition(element, optimalPosition);
  }
  function adjustLabelPosition(element, orientation) {
    var elementMid = getMid(element), label = element.label, labelMid = getMid(label);
    if (!label.parent) {
      return;
    }
    var elementTrbl = asTRBL(element);
    var newLabelMid;
    switch (orientation) {
      case "top":
        newLabelMid = {
          x: elementMid.x,
          y: elementTrbl.top - ELEMENT_LABEL_DISTANCE - label.height / 2
        };
        break;
      case "left":
        newLabelMid = {
          x: elementTrbl.left - ELEMENT_LABEL_DISTANCE - label.width / 2,
          y: elementMid.y
        };
        break;
      case "bottom":
        newLabelMid = {
          x: elementMid.x,
          y: elementTrbl.bottom + ELEMENT_LABEL_DISTANCE + label.height / 2
        };
        break;
      case "right":
        newLabelMid = {
          x: elementTrbl.right + ELEMENT_LABEL_DISTANCE + label.width / 2,
          y: elementMid.y
        };
        break;
    }
    var delta$1 = delta(newLabelMid, labelMid);
    modeling.moveShape(label, delta$1);
  }
}
e$3(AdaptiveLabelPositioningBehavior, CommandInterceptor);
AdaptiveLabelPositioningBehavior.$inject = [
  "eventBus",
  "modeling"
];
function getTakenHostAlignments(element) {
  var hostElement = element.host, elementMid = getMid(element), hostOrientation = getOrientation(elementMid, hostElement);
  var freeAlignments;
  if (hostOrientation.indexOf("-") >= 0) {
    freeAlignments = hostOrientation.split("-");
  } else {
    freeAlignments = [hostOrientation];
  }
  var takenAlignments = ALIGNMENTS.filter(function(alignment) {
    return freeAlignments.indexOf(alignment) === -1;
  });
  return takenAlignments;
}
function getTakenConnectionAlignments(element) {
  var elementMid = getMid(element);
  var takenAlignments = [].concat(
    element.incoming.map(function(c2) {
      return c2.waypoints[c2.waypoints.length - 2];
    }),
    element.outgoing.map(function(c2) {
      return c2.waypoints[1];
    })
  ).map(function(point) {
    return getApproximateOrientation(elementMid, point);
  });
  return takenAlignments;
}
function getOptimalPosition(element) {
  var labelMid = getMid(element.label);
  var elementMid = getMid(element);
  var labelOrientation = getApproximateOrientation(elementMid, labelMid);
  if (!isAligned(labelOrientation)) {
    return;
  }
  var takenAlignments = getTakenConnectionAlignments(element);
  if (element.host) {
    var takenHostAlignments = getTakenHostAlignments(element);
    takenAlignments = takenAlignments.concat(takenHostAlignments);
  }
  var freeAlignments = ALIGNMENTS.filter(function(alignment) {
    return takenAlignments.indexOf(alignment) === -1;
  });
  if (freeAlignments.indexOf(labelOrientation) !== -1) {
    return;
  }
  return freeAlignments[0];
}
function getApproximateOrientation(p0, p1) {
  return getOrientation(p1, p0, 5);
}
function isAligned(orientation) {
  return ALIGNMENTS.indexOf(orientation) !== -1;
}
function AppendBehavior(eventBus) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("shape.append", function(context) {
    var source2 = context.source, shape = context.shape;
    if (!context.position) {
      if (is$g(shape, "bpmn:TextAnnotation")) {
        context.position = {
          x: source2.x + source2.width / 2 + 75,
          y: source2.y - 50 - shape.height / 2
        };
      } else {
        context.position = {
          x: source2.x + source2.width + 80 + shape.width / 2,
          y: source2.y + source2.height / 2
        };
      }
    }
  }, true);
}
e$3(AppendBehavior, CommandInterceptor);
AppendBehavior.$inject = [
  "eventBus"
];
function AssociationBehavior(injector, modeling) {
  injector.invoke(CommandInterceptor, this);
  this.postExecute("shape.move", function(context) {
    var newParent = context.newParent, shape = context.shape;
    var associations2 = filter$1(shape.incoming.concat(shape.outgoing), function(connection) {
      return is$g(connection, "bpmn:Association");
    });
    forEach$2(associations2, function(association) {
      modeling.moveConnection(association, { x: 0, y: 0 }, newParent);
    });
  }, true);
}
e$3(AssociationBehavior, CommandInterceptor);
AssociationBehavior.$inject = [
  "injector",
  "modeling"
];
var LOW_PRIORITY$j = 500;
function AttachEventBehavior(bpmnReplace, injector) {
  injector.invoke(CommandInterceptor, this);
  this._bpmnReplace = bpmnReplace;
  var self2 = this;
  this.postExecuted("elements.create", LOW_PRIORITY$j, function(context) {
    var elements = context.elements;
    elements = elements.filter(function(shape) {
      var host = shape.host;
      return shouldReplace$1(shape, host);
    });
    if (elements.length !== 1) {
      return;
    }
    elements.map(function(element) {
      return elements.indexOf(element);
    }).forEach(function(index2) {
      var host = elements[index2];
      context.elements[index2] = self2._replaceShape(elements[index2], host);
    });
  }, true);
  this.preExecute("elements.move", LOW_PRIORITY$j, function(context) {
    var shapes = context.shapes, host = context.newHost;
    if (shapes.length !== 1) {
      return;
    }
    var shape = shapes[0];
    if (shouldReplace$1(shape, host)) {
      context.shapes = [self2._replaceShape(shape, host)];
    }
  }, true);
}
AttachEventBehavior.$inject = [
  "bpmnReplace",
  "injector"
];
e$3(AttachEventBehavior, CommandInterceptor);
AttachEventBehavior.prototype._replaceShape = function(shape, host) {
  var eventDefinition = getEventDefinition$2(shape);
  var boundaryEvent = {
    type: "bpmn:BoundaryEvent",
    host
  };
  if (eventDefinition) {
    boundaryEvent.eventDefinitionType = eventDefinition.$type;
  }
  return this._bpmnReplace.replaceElement(shape, boundaryEvent, { layoutConnection: false });
};
function getEventDefinition$2(element) {
  var businessObject = getBusinessObject(element), eventDefinitions = businessObject.eventDefinitions;
  return eventDefinitions && eventDefinitions[0];
}
function shouldReplace$1(shape, host) {
  return !isLabel(shape) && isAny$7(shape, ["bpmn:IntermediateThrowEvent", "bpmn:IntermediateCatchEvent"]) && !!host;
}
function BoundaryEventBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  function getBoundaryEvents(element) {
    return filter$1(element.attachers, function(attacher) {
      return is$g(attacher, "bpmn:BoundaryEvent");
    });
  }
  this.postExecute("connection.create", function(event2) {
    var source2 = event2.context.source, target = event2.context.target, boundaryEvents = getBoundaryEvents(target);
    if (is$g(source2, "bpmn:EventBasedGateway") && is$g(target, "bpmn:ReceiveTask") && boundaryEvents.length > 0) {
      modeling.removeElements(boundaryEvents);
    }
  });
  this.postExecute("connection.reconnect", function(event2) {
    var oldSource = event2.context.oldSource, newSource = event2.context.newSource;
    if (is$g(oldSource, "bpmn:Gateway") && is$g(newSource, "bpmn:EventBasedGateway")) {
      forEach$2(newSource.outgoing, function(connection) {
        var target = connection.target, attachedboundaryEvents = getBoundaryEvents(target);
        if (is$g(target, "bpmn:ReceiveTask") && attachedboundaryEvents.length > 0) {
          modeling.removeElements(attachedboundaryEvents);
        }
      });
    }
  });
}
BoundaryEventBehavior.$inject = [
  "eventBus",
  "modeling"
];
e$3(BoundaryEventBehavior, CommandInterceptor);
function CompensateBoundaryEventBehavior(eventBus, modeling, bpmnRules) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("shape.replace", handleReplacement, true);
  this.postExecuted("shape.replace", handleReplacementPostExecuted, true);
  this.preExecute("connection.create", handleNewConnection, true);
  this.postExecuted("connection.delete", handleConnectionRemoval, true);
  this.postExecuted("connection.reconnect", handleReconnection, true);
  this.postExecuted("element.updateProperties", handlePropertiesUpdate, true);
  function handleConnectionRemoval(context) {
    const source2 = context.source, target = context.target;
    if (isCompensationBoundaryEvent(source2) && isForCompensation$1(target)) {
      removeIsForCompensationProperty(target);
    }
  }
  function handleNewConnection(context) {
    const connection = context.connection, source2 = context.source, target = context.target;
    if (isCompensationBoundaryEvent(source2) && isForCompensationAllowed(target)) {
      addIsForCompensationProperty(target);
      removeExistingAssociations(source2, [connection]);
    }
  }
  function handleReconnection(context) {
    const newTarget = context.newTarget, oldSource = context.oldSource, oldTarget = context.oldTarget;
    if (oldTarget !== newTarget) {
      const source2 = oldSource;
      if (isForCompensation$1(oldTarget)) {
        removeIsForCompensationProperty(oldTarget);
      }
      if (isCompensationBoundaryEvent(source2) && isForCompensationAllowed(newTarget)) {
        addIsForCompensationProperty(newTarget);
      }
    }
  }
  function handlePropertiesUpdate(context) {
    const { element } = context;
    if (isForCompensation$1(element)) {
      removeDisallowedConnections(element);
      removeAttachments(element);
    } else if (isForCompensationAllowed(element)) {
      removeIncomingCompensationAssociations(element);
    }
  }
  function handleReplacement(context) {
    const {
      newData,
      oldShape
    } = context;
    if (isCompensationBoundaryEvent(context.oldShape) && newData.eventDefinitionType !== "bpmn:CompensateEventDefinition" || newData.type !== "bpmn:BoundaryEvent") {
      const targetConnection = oldShape.outgoing.find(
        ({ target }) => isForCompensation$1(target)
      );
      if (targetConnection && targetConnection.target) {
        context._connectionTarget = targetConnection.target;
      }
    } else if (!isCompensationBoundaryEvent(context.oldShape) && newData.eventDefinitionType === "bpmn:CompensateEventDefinition" && newData.type === "bpmn:BoundaryEvent") {
      const targetConnection = oldShape.outgoing.find(
        ({ target }) => isForCompensationAllowed(target)
      );
      if (targetConnection && targetConnection.target) {
        context._connectionTarget = targetConnection.target;
      }
      removeOutgoingSequenceFlows(oldShape);
    }
  }
  function handleReplacementPostExecuted(context) {
    const { _connectionTarget: target, newShape } = context;
    if (target) {
      modeling.connect(newShape, target);
    }
  }
  function addIsForCompensationProperty(target) {
    modeling.updateProperties(target, { isForCompensation: true });
  }
  function removeIsForCompensationProperty(target) {
    modeling.updateProperties(target, { isForCompensation: void 0 });
  }
  function removeDisallowedConnections(element) {
    for (const connection of element.incoming) {
      if (!bpmnRules.canConnect(connection.source, element)) {
        modeling.removeConnection(connection);
      }
    }
    for (const connection of element.outgoing) {
      if (!bpmnRules.canConnect(element, connection.target)) {
        modeling.removeConnection(connection);
      }
    }
  }
  function removeExistingAssociations(boundaryEvent, ignoredAssociations) {
    const associations2 = boundaryEvent.outgoing.filter((connection) => is$g(connection, "bpmn:Association"));
    const associationsToRemove = associations2.filter((association) => {
      return isForCompensation$1(association.target) && !ignoredAssociations.includes(association);
    });
    associationsToRemove.forEach((association) => modeling.removeConnection(association));
  }
  function removeAttachments(element) {
    const attachments = element.attachers.slice();
    if (!attachments.length) {
      return;
    }
    modeling.removeElements(attachments);
  }
  function removeIncomingCompensationAssociations(element) {
    const compensationAssociations = element.incoming.filter(
      (connection) => isCompensationBoundaryEvent(connection.source)
    );
    modeling.removeElements(compensationAssociations);
  }
  function removeOutgoingSequenceFlows(element) {
    const sequenceFlows = element.outgoing.filter(
      (connection) => is$g(connection, "bpmn:SequenceFlow")
    );
    modeling.removeElements(sequenceFlows);
  }
}
e$3(CompensateBoundaryEventBehavior, CommandInterceptor);
CompensateBoundaryEventBehavior.$inject = [
  "eventBus",
  "modeling",
  "bpmnRules"
];
function isForCompensation$1(element) {
  const bo = getBusinessObject(element);
  return bo && bo.get("isForCompensation");
}
function isCompensationBoundaryEvent(element) {
  return element && is$g(element, "bpmn:BoundaryEvent") && hasEventDefinition$2(element, "bpmn:CompensateEventDefinition");
}
function isForCompensationAllowed(element) {
  return element && is$g(element, "bpmn:Activity") && !isEventSubProcess(element);
}
function CreateBehavior(injector) {
  injector.invoke(CommandInterceptor, this);
  this.preExecute("shape.create", 1500, function(event2) {
    var context = event2.context, parent = context.parent, shape = context.shape;
    if (is$g(parent, "bpmn:Lane") && !is$g(shape, "bpmn:Lane")) {
      context.parent = getParent(parent, "bpmn:Participant");
    }
  });
}
CreateBehavior.$inject = ["injector"];
e$3(CreateBehavior, CommandInterceptor);
function CreateDataObjectBehavior(eventBus, bpmnFactory) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("shape.create", function(event2) {
    var context = event2.context, shape = context.shape;
    if (is$g(shape, "bpmn:DataObjectReference") && shape.type !== "label") {
      var dataObject = bpmnFactory.create("bpmn:DataObject");
      shape.businessObject.dataObjectRef = dataObject;
    }
  });
}
CreateDataObjectBehavior.$inject = [
  "eventBus",
  "bpmnFactory"
];
e$3(CreateDataObjectBehavior, CommandInterceptor);
var HORIZONTAL_PARTICIPANT_PADDING = 20, VERTICAL_PARTICIPANT_PADDING = 20;
var PARTICIPANT_BORDER_WIDTH = 30;
var HIGH_PRIORITY$g = 2e3;
function CreateParticipantBehavior(canvas, eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  eventBus.on([
    "create.start",
    "shape.move.start"
  ], HIGH_PRIORITY$g, function(event2) {
    var context = event2.context, shape = context.shape, rootElement = canvas.getRootElement();
    if (!is$g(shape, "bpmn:Participant") || !is$g(rootElement, "bpmn:Process") || !rootElement.children.length) {
      return;
    }
    var children = rootElement.children.filter(function(element) {
      return !is$g(element, "bpmn:Group") && !isLabel(element) && !isConnection(element);
    });
    if (!children.length) {
      return;
    }
    var childrenBBox = getBBox(children);
    var participantBounds = getParticipantBounds(shape, childrenBBox);
    assign$2(shape, participantBounds);
    context.createConstraints = getParticipantCreateConstraints(shape, childrenBBox);
  });
  eventBus.on("create.start", HIGH_PRIORITY$g, function(event2) {
    var context = event2.context, shape = context.shape, rootElement = canvas.getRootElement(), rootElementGfx = canvas.getGraphics(rootElement);
    function ensureHoveringProcess(event3) {
      event3.element = rootElement;
      event3.gfx = rootElementGfx;
    }
    if (is$g(shape, "bpmn:Participant") && is$g(rootElement, "bpmn:Process")) {
      eventBus.on("element.hover", HIGH_PRIORITY$g, ensureHoveringProcess);
      eventBus.once("create.cleanup", function() {
        eventBus.off("element.hover", ensureHoveringProcess);
      });
    }
  });
  function getOrCreateCollaboration() {
    var rootElement = canvas.getRootElement();
    if (is$g(rootElement, "bpmn:Collaboration")) {
      return rootElement;
    }
    return modeling.makeCollaboration();
  }
  this.preExecute("elements.create", HIGH_PRIORITY$g, function(context) {
    var elements = context.elements, parent = context.parent, participant = findParticipant(elements), hints;
    if (participant && is$g(parent, "bpmn:Process")) {
      context.parent = getOrCreateCollaboration();
      hints = context.hints = context.hints || {};
      hints.participant = participant;
      hints.process = parent;
      hints.processRef = getBusinessObject(participant).get("processRef");
    }
  }, true);
  this.preExecute("shape.create", function(context) {
    var parent = context.parent, shape = context.shape;
    if (is$g(shape, "bpmn:Participant") && is$g(parent, "bpmn:Process")) {
      context.parent = getOrCreateCollaboration();
      context.process = parent;
      context.processRef = getBusinessObject(shape).get("processRef");
    }
  }, true);
  this.execute("shape.create", function(context) {
    var hints = context.hints || {}, process = context.process || hints.process, shape = context.shape, participant = hints.participant;
    if (process && (!participant || shape === participant)) {
      getBusinessObject(shape).set("processRef", getBusinessObject(process));
    }
  }, true);
  this.revert("shape.create", function(context) {
    var hints = context.hints || {}, process = context.process || hints.process, processRef = context.processRef || hints.processRef, shape = context.shape, participant = hints.participant;
    if (process && (!participant || shape === participant)) {
      getBusinessObject(shape).set("processRef", processRef);
    }
  }, true);
  this.postExecute("shape.create", function(context) {
    var hints = context.hints || {}, process = context.process || context.hints.process, shape = context.shape, participant = hints.participant;
    if (process) {
      var children = process.children.slice();
      if (!participant) {
        modeling.moveElements(children, { x: 0, y: 0 }, shape);
      } else if (shape === participant) {
        modeling.moveElements(children, { x: 0, y: 0 }, participant);
      }
    }
  }, true);
}
CreateParticipantBehavior.$inject = [
  "canvas",
  "eventBus",
  "modeling"
];
e$3(CreateParticipantBehavior, CommandInterceptor);
function getParticipantBounds(shape, childrenBBox) {
  childrenBBox = {
    width: childrenBBox.width + HORIZONTAL_PARTICIPANT_PADDING * 2 + PARTICIPANT_BORDER_WIDTH,
    height: childrenBBox.height + VERTICAL_PARTICIPANT_PADDING * 2
  };
  var width = Math.max(shape.width, childrenBBox.width), height = Math.max(shape.height, childrenBBox.height);
  return {
    x: -width / 2,
    y: -height / 2,
    width,
    height
  };
}
function getParticipantCreateConstraints(shape, childrenBBox) {
  childrenBBox = asTRBL(childrenBBox);
  return {
    bottom: childrenBBox.top + shape.height / 2 - VERTICAL_PARTICIPANT_PADDING,
    left: childrenBBox.right - shape.width / 2 + HORIZONTAL_PARTICIPANT_PADDING,
    top: childrenBBox.bottom - shape.height / 2 + VERTICAL_PARTICIPANT_PADDING,
    right: childrenBBox.left + shape.width / 2 - HORIZONTAL_PARTICIPANT_PADDING - PARTICIPANT_BORDER_WIDTH
  };
}
function findParticipant(elements) {
  return find$1(elements, function(element) {
    return is$g(element, "bpmn:Participant");
  });
}
var TARGET_REF_PLACEHOLDER_NAME = "__targetRef_placeholder";
function DataInputAssociationBehavior(eventBus, bpmnFactory) {
  CommandInterceptor.call(this, eventBus);
  this.executed([
    "connection.create",
    "connection.delete",
    "connection.move",
    "connection.reconnect"
  ], ifDataInputAssociation(fixTargetRef));
  this.reverted([
    "connection.create",
    "connection.delete",
    "connection.move",
    "connection.reconnect"
  ], ifDataInputAssociation(fixTargetRef));
  function usesTargetRef(element, targetRef, removedConnection) {
    var inputAssociations = element.get("dataInputAssociations");
    return find$1(inputAssociations, function(association) {
      return association !== removedConnection && association.targetRef === targetRef;
    });
  }
  function getTargetRef(element, create2) {
    var properties = element.get("properties");
    var targetRefProp = find$1(properties, function(p2) {
      return p2.name === TARGET_REF_PLACEHOLDER_NAME;
    });
    if (!targetRefProp && create2) {
      targetRefProp = bpmnFactory.create("bpmn:Property", {
        name: TARGET_REF_PLACEHOLDER_NAME
      });
      add$1(properties, targetRefProp);
    }
    return targetRefProp;
  }
  function cleanupTargetRef(element, connection) {
    var targetRefProp = getTargetRef(element);
    if (!targetRefProp) {
      return;
    }
    if (!usesTargetRef(element, targetRefProp, connection)) {
      remove$2(element.get("properties"), targetRefProp);
    }
  }
  function fixTargetRef(event2) {
    var context = event2.context, connection = context.connection, connectionBo = connection.businessObject, target = connection.target, targetBo = target && target.businessObject, newTarget = context.newTarget, newTargetBo = newTarget && newTarget.businessObject, oldTarget = context.oldTarget || context.target, oldTargetBo = oldTarget && oldTarget.businessObject;
    var dataAssociation = connection.businessObject, targetRefProp;
    if (oldTargetBo && oldTargetBo !== targetBo) {
      cleanupTargetRef(oldTargetBo, connectionBo);
    }
    if (newTargetBo && newTargetBo !== targetBo) {
      cleanupTargetRef(newTargetBo, connectionBo);
    }
    if (targetBo) {
      targetRefProp = getTargetRef(targetBo, true);
      dataAssociation.targetRef = targetRefProp;
    } else {
      dataAssociation.targetRef = null;
    }
  }
}
DataInputAssociationBehavior.$inject = [
  "eventBus",
  "bpmnFactory"
];
e$3(DataInputAssociationBehavior, CommandInterceptor);
function ifDataInputAssociation(fn) {
  return function(event2) {
    var context = event2.context, connection = context.connection;
    if (is$g(connection, "bpmn:DataInputAssociation")) {
      return fn(event2);
    }
  };
}
function UpdateSemanticParentHandler(bpmnUpdater) {
  this._bpmnUpdater = bpmnUpdater;
}
UpdateSemanticParentHandler.$inject = ["bpmnUpdater"];
UpdateSemanticParentHandler.prototype.execute = function(context) {
  var dataStoreBo = context.dataStoreBo, dataStoreDi = context.dataStoreDi, newSemanticParent = context.newSemanticParent, newDiParent = context.newDiParent;
  context.oldSemanticParent = dataStoreBo.$parent;
  context.oldDiParent = dataStoreDi.$parent;
  this._bpmnUpdater.updateSemanticParent(dataStoreBo, newSemanticParent);
  this._bpmnUpdater.updateDiParent(dataStoreDi, newDiParent);
  return [];
};
UpdateSemanticParentHandler.prototype.revert = function(context) {
  var dataStoreBo = context.dataStoreBo, dataStoreDi = context.dataStoreDi, oldSemanticParent = context.oldSemanticParent, oldDiParent = context.oldDiParent;
  this._bpmnUpdater.updateSemanticParent(dataStoreBo, oldSemanticParent);
  this._bpmnUpdater.updateDiParent(dataStoreDi, oldDiParent);
  return [];
};
function DataStoreBehavior(canvas, commandStack, elementRegistry, eventBus) {
  CommandInterceptor.call(this, eventBus);
  commandStack.registerHandler("dataStore.updateContainment", UpdateSemanticParentHandler);
  function getFirstParticipantWithProcessRef() {
    return elementRegistry.filter(function(element) {
      return is$g(element, "bpmn:Participant") && getBusinessObject(element).processRef;
    })[0];
  }
  function getDataStores(element) {
    return element.children.filter(function(child) {
      return is$g(child, "bpmn:DataStoreReference") && !child.labelTarget;
    });
  }
  function updateDataStoreParent(dataStore, newDataStoreParent) {
    var dataStoreBo = dataStore.businessObject || dataStore;
    newDataStoreParent = newDataStoreParent || getFirstParticipantWithProcessRef();
    if (newDataStoreParent) {
      var newDataStoreParentBo = newDataStoreParent.businessObject || newDataStoreParent;
      commandStack.execute("dataStore.updateContainment", {
        dataStoreBo,
        dataStoreDi: getDi(dataStore),
        newSemanticParent: newDataStoreParentBo.processRef || newDataStoreParentBo,
        newDiParent: getDi(newDataStoreParent)
      });
    }
  }
  this.preExecute("shape.create", function(event2) {
    var context = event2.context, shape = context.shape;
    if (is$g(shape, "bpmn:DataStoreReference") && shape.type !== "label") {
      if (!context.hints) {
        context.hints = {};
      }
      context.hints.autoResize = false;
    }
  });
  this.preExecute("elements.move", function(event2) {
    var context = event2.context, shapes = context.shapes;
    var dataStoreReferences = shapes.filter(function(shape) {
      return is$g(shape, "bpmn:DataStoreReference");
    });
    if (dataStoreReferences.length) {
      if (!context.hints) {
        context.hints = {};
      }
      context.hints.autoResize = shapes.filter(function(shape) {
        return !is$g(shape, "bpmn:DataStoreReference");
      });
    }
  });
  this.postExecute("shape.create", function(event2) {
    var context = event2.context, shape = context.shape, parent = shape.parent;
    if (is$g(shape, "bpmn:DataStoreReference") && shape.type !== "label" && is$g(parent, "bpmn:Collaboration")) {
      updateDataStoreParent(shape);
    }
  });
  this.postExecute("shape.move", function(event2) {
    var context = event2.context, shape = context.shape, oldParent = context.oldParent, parent = shape.parent;
    if (is$g(oldParent, "bpmn:Collaboration")) {
      return;
    }
    if (is$g(shape, "bpmn:DataStoreReference") && shape.type !== "label" && is$g(parent, "bpmn:Collaboration")) {
      var participant = is$g(oldParent, "bpmn:Participant") ? oldParent : getAncestor(oldParent, "bpmn:Participant");
      updateDataStoreParent(shape, participant);
    }
  });
  this.postExecute("shape.delete", function(event2) {
    var context = event2.context, shape = context.shape, rootElement = canvas.getRootElement();
    if (isAny$7(shape, ["bpmn:Participant", "bpmn:SubProcess"]) && is$g(rootElement, "bpmn:Collaboration")) {
      getDataStores(rootElement).filter(function(dataStore) {
        return isDescendant(dataStore, shape);
      }).forEach(function(dataStore) {
        updateDataStoreParent(dataStore);
      });
    }
  });
  this.postExecute("canvas.updateRoot", function(event2) {
    var context = event2.context, oldRoot = context.oldRoot, newRoot = context.newRoot;
    var dataStores = getDataStores(oldRoot);
    dataStores.forEach(function(dataStore) {
      if (is$g(newRoot, "bpmn:Process")) {
        updateDataStoreParent(dataStore, newRoot);
      }
    });
  });
}
DataStoreBehavior.$inject = [
  "canvas",
  "commandStack",
  "elementRegistry",
  "eventBus"
];
e$3(DataStoreBehavior, CommandInterceptor);
function isDescendant(descendant, ancestor) {
  var descendantBo = descendant.businessObject || descendant, ancestorBo = ancestor.businessObject || ancestor;
  while (descendantBo.$parent) {
    if (descendantBo.$parent === ancestorBo.processRef || ancestorBo) {
      return true;
    }
    descendantBo = descendantBo.$parent;
  }
  return false;
}
function getAncestor(element, type) {
  while (element.parent) {
    if (is$g(element.parent, type)) {
      return element.parent;
    }
    element = element.parent;
  }
}
var max$5 = Math.max, min$3 = Math.min;
var DEFAULT_CHILD_BOX_PADDING = 20;
function substractTRBL(trblA, trblB) {
  return {
    top: trblA.top - trblB.top,
    right: trblA.right - trblB.right,
    bottom: trblA.bottom - trblB.bottom,
    left: trblA.left - trblB.left
  };
}
function resizeBounds$1(bounds, direction, delta2) {
  var dx = delta2.x, dy = delta2.y;
  var newBounds = {
    x: bounds.x,
    y: bounds.y,
    width: bounds.width,
    height: bounds.height
  };
  if (direction.indexOf("n") !== -1) {
    newBounds.y = bounds.y + dy;
    newBounds.height = bounds.height - dy;
  } else if (direction.indexOf("s") !== -1) {
    newBounds.height = bounds.height + dy;
  }
  if (direction.indexOf("e") !== -1) {
    newBounds.width = bounds.width + dx;
  } else if (direction.indexOf("w") !== -1) {
    newBounds.x = bounds.x + dx;
    newBounds.width = bounds.width - dx;
  }
  return newBounds;
}
function resizeTRBL(bounds, resize) {
  return {
    x: bounds.x + (resize.left || 0),
    y: bounds.y + (resize.top || 0),
    width: bounds.width - (resize.left || 0) + (resize.right || 0),
    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)
  };
}
function applyConstraints(attr2, trbl, resizeConstraints) {
  var value = trbl[attr2], minValue = resizeConstraints.min && resizeConstraints.min[attr2], maxValue = resizeConstraints.max && resizeConstraints.max[attr2];
  if (isNumber$1(minValue)) {
    value = (/top|left/.test(attr2) ? min$3 : max$5)(value, minValue);
  }
  if (isNumber$1(maxValue)) {
    value = (/top|left/.test(attr2) ? max$5 : min$3)(value, maxValue);
  }
  return value;
}
function ensureConstraints$2(currentBounds, resizeConstraints) {
  if (!resizeConstraints) {
    return currentBounds;
  }
  var currentTrbl = asTRBL(currentBounds);
  return asBounds({
    top: applyConstraints("top", currentTrbl, resizeConstraints),
    right: applyConstraints("right", currentTrbl, resizeConstraints),
    bottom: applyConstraints("bottom", currentTrbl, resizeConstraints),
    left: applyConstraints("left", currentTrbl, resizeConstraints)
  });
}
function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {
  var currentBox = asTRBL(currentBounds);
  var minBox = {
    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,
    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,
    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,
    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right
  };
  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;
  var combinedBox = {
    top: min$3(minBox.top, childrenBox.top),
    left: min$3(minBox.left, childrenBox.left),
    bottom: max$5(minBox.bottom, childrenBox.bottom),
    right: max$5(minBox.right, childrenBox.right)
  };
  return asBounds(combinedBox);
}
function asPadding(mayBePadding, defaultValue) {
  if (typeof mayBePadding !== "undefined") {
    return mayBePadding;
  } else {
    return DEFAULT_CHILD_BOX_PADDING;
  }
}
function addPadding$1(bbox, padding) {
  var left, right, top, bottom;
  if (typeof padding === "object") {
    left = asPadding(padding.left);
    right = asPadding(padding.right);
    top = asPadding(padding.top);
    bottom = asPadding(padding.bottom);
  } else {
    left = right = top = bottom = asPadding(padding);
  }
  return {
    x: bbox.x - left,
    y: bbox.y - top,
    width: bbox.width + left + right,
    height: bbox.height + top + bottom
  };
}
function isBBoxChild(element) {
  if (element.waypoints) {
    return false;
  }
  if (element.type === "label") {
    return false;
  }
  return true;
}
function computeChildrenBBox(shapeOrChildren, padding) {
  var elements;
  if (shapeOrChildren.length === void 0) {
    elements = filter$1(shapeOrChildren.children, isBBoxChild);
  } else {
    elements = shapeOrChildren;
  }
  if (elements.length) {
    return addPadding$1(getBBox(elements), padding);
  }
}
var abs$4 = Math.abs;
function getTRBLResize(oldBounds, newBounds) {
  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));
}
var LANE_PARENTS = [
  "bpmn:Participant",
  "bpmn:Process",
  "bpmn:SubProcess"
];
var LANE_INDENTATION = 30;
function collectLanes(shape, collectedShapes) {
  collectedShapes = collectedShapes || [];
  shape.children.filter(function(s2) {
    if (is$g(s2, "bpmn:Lane")) {
      collectLanes(s2, collectedShapes);
      collectedShapes.push(s2);
    }
  });
  return collectedShapes;
}
function getChildLanes(shape) {
  return shape.children.filter(function(c2) {
    return is$g(c2, "bpmn:Lane");
  });
}
function getLanesRoot(shape) {
  return getParent(shape, LANE_PARENTS) || shape;
}
function computeLanesResize(shape, newBounds) {
  var rootElement = getLanesRoot(shape);
  var initialShapes = is$g(rootElement, "bpmn:Process") ? [] : [rootElement];
  var allLanes = collectLanes(rootElement, initialShapes), shapeTrbl = asTRBL(shape), shapeNewTrbl = asTRBL(newBounds), trblResize = getTRBLResize(shape, newBounds), resizeNeeded = [];
  var isHorizontalLane = isHorizontal$3(shape);
  allLanes.forEach(function(other2) {
    if (other2 === shape) {
      return;
    }
    var topResize = isHorizontalLane ? 0 : trblResize.top, rightResize = isHorizontalLane ? trblResize.right : 0, bottomResize = isHorizontalLane ? 0 : trblResize.bottom, leftResize = isHorizontalLane ? trblResize.left : 0;
    var otherTrbl = asTRBL(other2);
    if (trblResize.top) {
      if (abs$4(otherTrbl.bottom - shapeTrbl.top) < 10) {
        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;
      }
      if (abs$4(otherTrbl.top - shapeTrbl.top) < 5) {
        topResize = shapeNewTrbl.top - otherTrbl.top;
      }
    }
    if (trblResize.left) {
      if (abs$4(otherTrbl.right - shapeTrbl.left) < 10) {
        rightResize = shapeNewTrbl.left - otherTrbl.right;
      }
      if (abs$4(otherTrbl.left - shapeTrbl.left) < 5) {
        leftResize = shapeNewTrbl.left - otherTrbl.left;
      }
    }
    if (trblResize.bottom) {
      if (abs$4(otherTrbl.top - shapeTrbl.bottom) < 10) {
        topResize = shapeNewTrbl.bottom - otherTrbl.top;
      }
      if (abs$4(otherTrbl.bottom - shapeTrbl.bottom) < 5) {
        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;
      }
    }
    if (trblResize.right) {
      if (abs$4(otherTrbl.left - shapeTrbl.right) < 10) {
        leftResize = shapeNewTrbl.right - otherTrbl.left;
      }
      if (abs$4(otherTrbl.right - shapeTrbl.right) < 5) {
        rightResize = shapeNewTrbl.right - otherTrbl.right;
      }
    }
    if (topResize || rightResize || bottomResize || leftResize) {
      resizeNeeded.push({
        shape: other2,
        newBounds: resizeTRBL(other2, {
          top: topResize,
          right: rightResize,
          bottom: bottomResize,
          left: leftResize
        })
      });
    }
  });
  return resizeNeeded;
}
var LOW_PRIORITY$i = 500;
function DeleteLaneBehavior(eventBus, spaceTool) {
  CommandInterceptor.call(this, eventBus);
  function compensateLaneDelete(shape, oldParent) {
    var isHorizontalLane = isHorizontal$3(shape);
    var siblings = getChildLanes(oldParent);
    var topAffected = [];
    var bottomAffected = [];
    var leftAffected = [];
    var rightAffected = [];
    eachElement(siblings, function(element) {
      if (isHorizontalLane) {
        if (element.y > shape.y) {
          bottomAffected.push(element);
        } else {
          topAffected.push(element);
        }
      } else {
        if (element.x > shape.x) {
          rightAffected.push(element);
        } else {
          leftAffected.push(element);
        }
      }
      return element.children;
    });
    if (!siblings.length) {
      return;
    }
    var offset;
    if (isHorizontalLane) {
      if (bottomAffected.length && topAffected.length) {
        offset = shape.height / 2;
      } else {
        offset = shape.height;
      }
    } else {
      if (rightAffected.length && leftAffected.length) {
        offset = shape.width / 2;
      } else {
        offset = shape.width;
      }
    }
    var topAdjustments, bottomAdjustments, leftAdjustments, rightAdjustments;
    if (topAffected.length) {
      topAdjustments = spaceTool.calculateAdjustments(
        topAffected,
        "y",
        offset,
        shape.y - 10
      );
      spaceTool.makeSpace(
        topAdjustments.movingShapes,
        topAdjustments.resizingShapes,
        { x: 0, y: offset },
        "s"
      );
    }
    if (bottomAffected.length) {
      bottomAdjustments = spaceTool.calculateAdjustments(
        bottomAffected,
        "y",
        -offset,
        shape.y + shape.height + 10
      );
      spaceTool.makeSpace(
        bottomAdjustments.movingShapes,
        bottomAdjustments.resizingShapes,
        { x: 0, y: -offset },
        "n"
      );
    }
    if (leftAffected.length) {
      leftAdjustments = spaceTool.calculateAdjustments(
        leftAffected,
        "x",
        offset,
        shape.x - 10
      );
      spaceTool.makeSpace(
        leftAdjustments.movingShapes,
        leftAdjustments.resizingShapes,
        { x: offset, y: 0 },
        "e"
      );
    }
    if (rightAffected.length) {
      rightAdjustments = spaceTool.calculateAdjustments(
        rightAffected,
        "x",
        -offset,
        shape.x + shape.width + 10
      );
      spaceTool.makeSpace(
        rightAdjustments.movingShapes,
        rightAdjustments.resizingShapes,
        { x: -offset, y: 0 },
        "w"
      );
    }
  }
  this.postExecuted("shape.delete", LOW_PRIORITY$i, function(event2) {
    var context = event2.context, hints = context.hints, shape = context.shape, oldParent = context.oldParent;
    if (!is$g(shape, "bpmn:Lane")) {
      return;
    }
    if (hints && hints.nested) {
      return;
    }
    compensateLaneDelete(shape, oldParent);
  });
}
DeleteLaneBehavior.$inject = [
  "eventBus",
  "spaceTool"
];
e$3(DeleteLaneBehavior, CommandInterceptor);
var LOW_PRIORITY$h = 500;
function DetachEventBehavior(bpmnReplace, injector) {
  injector.invoke(CommandInterceptor, this);
  this._bpmnReplace = bpmnReplace;
  var self2 = this;
  this.postExecuted("elements.create", LOW_PRIORITY$h, function(context) {
    var elements = context.elements;
    elements.filter(function(shape) {
      var host = shape.host;
      return shouldReplace(shape, host);
    }).map(function(shape) {
      return elements.indexOf(shape);
    }).forEach(function(index2) {
      context.elements[index2] = self2._replaceShape(elements[index2]);
    });
  }, true);
  this.preExecute("elements.move", LOW_PRIORITY$h, function(context) {
    var shapes = context.shapes, newHost = context.newHost;
    shapes.forEach(function(shape, index2) {
      var host = shape.host;
      if (shouldReplace(shape, includes$7(shapes, host) ? host : newHost)) {
        shapes[index2] = self2._replaceShape(shape);
      }
    });
  }, true);
}
DetachEventBehavior.$inject = [
  "bpmnReplace",
  "injector"
];
e$3(DetachEventBehavior, CommandInterceptor);
DetachEventBehavior.prototype._replaceShape = function(shape) {
  var eventDefinition = getEventDefinition$1(shape), intermediateEvent;
  if (eventDefinition) {
    intermediateEvent = {
      type: "bpmn:IntermediateCatchEvent",
      eventDefinitionType: eventDefinition.$type
    };
  } else {
    intermediateEvent = {
      type: "bpmn:IntermediateThrowEvent"
    };
  }
  return this._bpmnReplace.replaceElement(shape, intermediateEvent, { layoutConnection: false });
};
function getEventDefinition$1(element) {
  var businessObject = getBusinessObject(element), eventDefinitions = businessObject.eventDefinitions;
  return eventDefinitions && eventDefinitions[0];
}
function shouldReplace(shape, host) {
  return !isLabel(shape) && is$g(shape, "bpmn:BoundaryEvent") && !host;
}
function includes$7(array, item) {
  return array.indexOf(item) !== -1;
}
function DropOnFlowBehavior(eventBus, bpmnRules, modeling) {
  CommandInterceptor.call(this, eventBus);
  function insertShape(shape, targetFlow, positionOrBounds) {
    var waypoints = targetFlow.waypoints, waypointsBefore, waypointsAfter, dockingPoint, source2, target, incomingConnection, outgoingConnection, oldOutgoing = shape.outgoing.slice(), oldIncoming = shape.incoming.slice();
    var mid2;
    if (isNumber$1(positionOrBounds.width)) {
      mid2 = getMid(positionOrBounds);
    } else {
      mid2 = positionOrBounds;
    }
    var intersection2 = getApproxIntersection(waypoints, mid2);
    if (intersection2) {
      waypointsBefore = waypoints.slice(0, intersection2.index);
      waypointsAfter = waypoints.slice(intersection2.index + (intersection2.bendpoint ? 1 : 0));
      if (!waypointsBefore.length || !waypointsAfter.length) {
        return;
      }
      dockingPoint = intersection2.bendpoint ? waypoints[intersection2.index] : mid2;
      if (waypointsBefore.length === 1 || !isPointInsideBBox(shape, waypointsBefore[waypointsBefore.length - 1])) {
        waypointsBefore.push(copy(dockingPoint));
      }
      if (waypointsAfter.length === 1 || !isPointInsideBBox(shape, waypointsAfter[0])) {
        waypointsAfter.unshift(copy(dockingPoint));
      }
    }
    source2 = targetFlow.source;
    target = targetFlow.target;
    if (bpmnRules.canConnect(source2, shape, targetFlow)) {
      modeling.reconnectEnd(targetFlow, shape, waypointsBefore || mid2);
      incomingConnection = targetFlow;
    }
    if (bpmnRules.canConnect(shape, target, targetFlow)) {
      if (!incomingConnection) {
        modeling.reconnectStart(targetFlow, shape, waypointsAfter || mid2);
        outgoingConnection = targetFlow;
      } else {
        outgoingConnection = modeling.connect(
          shape,
          target,
          { type: targetFlow.type, waypoints: waypointsAfter }
        );
      }
    }
    var duplicateConnections = [].concat(
      incomingConnection && filter$1(oldIncoming, function(connection) {
        return connection.source === incomingConnection.source;
      }) || [],
      outgoingConnection && filter$1(oldOutgoing, function(connection) {
        return connection.target === outgoingConnection.target;
      }) || []
    );
    if (duplicateConnections.length) {
      modeling.removeElements(duplicateConnections);
    }
  }
  this.preExecute("elements.move", function(context) {
    var newParent = context.newParent, shapes = context.shapes, delta2 = context.delta, shape = shapes[0];
    if (!shape || !newParent) {
      return;
    }
    if (newParent && newParent.waypoints) {
      context.newParent = newParent = newParent.parent;
    }
    var shapeMid = getMid(shape);
    var newShapeMid = {
      x: shapeMid.x + delta2.x,
      y: shapeMid.y + delta2.y
    };
    var connection = find$1(newParent.children, function(element) {
      var canInsert2 = bpmnRules.canInsert(shapes, element);
      return canInsert2 && getApproxIntersection(element.waypoints, newShapeMid);
    });
    if (connection) {
      context.targetFlow = connection;
      context.position = newShapeMid;
    }
  }, true);
  this.postExecuted("elements.move", function(context) {
    var shapes = context.shapes, targetFlow = context.targetFlow, position = context.position;
    if (targetFlow) {
      insertShape(shapes[0], targetFlow, position);
    }
  }, true);
  this.preExecute("shape.create", function(context) {
    var parent = context.parent, shape = context.shape;
    if (bpmnRules.canInsert(shape, parent)) {
      context.targetFlow = parent;
      context.parent = parent.parent;
    }
  }, true);
  this.postExecuted("shape.create", function(context) {
    var shape = context.shape, targetFlow = context.targetFlow, positionOrBounds = context.position;
    if (targetFlow) {
      insertShape(shape, targetFlow, positionOrBounds);
    }
  }, true);
}
e$3(DropOnFlowBehavior, CommandInterceptor);
DropOnFlowBehavior.$inject = [
  "eventBus",
  "bpmnRules",
  "modeling"
];
function isPointInsideBBox(bbox, point) {
  var x2 = point.x, y2 = point.y;
  return x2 >= bbox.x && x2 <= bbox.x + bbox.width && y2 >= bbox.y && y2 <= bbox.y + bbox.height;
}
function copy(obj) {
  return assign$2({}, obj);
}
function EventBasedGatewayBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.preExecuted("connection.create", function(event2) {
    var context = event2.context, connection = context.connection, source2 = context.source, target = context.target, hints = context.hints;
    if (hints && hints.createElementsBehavior === false) {
      return;
    }
    if (!isSequenceFlow(connection)) {
      return;
    }
    var sequenceFlows = [];
    if (is$g(source2, "bpmn:EventBasedGateway")) {
      sequenceFlows = target.incoming.filter(
        (flow) => flow !== connection && isSequenceFlow(flow)
      );
    } else {
      sequenceFlows = target.incoming.filter(
        (flow) => flow !== connection && isSequenceFlow(flow) && is$g(flow.source, "bpmn:EventBasedGateway")
      );
    }
    sequenceFlows.forEach(function(sequenceFlow) {
      modeling.removeConnection(sequenceFlow);
    });
  });
  this.preExecuted("shape.replace", function(event2) {
    var context = event2.context, newShape = context.newShape;
    if (!is$g(newShape, "bpmn:EventBasedGateway")) {
      return;
    }
    var targets = newShape.outgoing.filter(isSequenceFlow).reduce(function(targets2, sequenceFlow) {
      if (!targets2.includes(sequenceFlow.target)) {
        return targets2.concat(sequenceFlow.target);
      }
      return targets2;
    }, []);
    targets.forEach(function(target) {
      target.incoming.filter(isSequenceFlow).forEach(function(sequenceFlow) {
        const sequenceFlowsFromNewShape = target.incoming.filter(isSequenceFlow).filter(function(sequenceFlow2) {
          return sequenceFlow2.source === newShape;
        });
        if (sequenceFlow.source !== newShape || sequenceFlowsFromNewShape.length > 1) {
          modeling.removeConnection(sequenceFlow);
        }
      });
    });
  });
}
EventBasedGatewayBehavior.$inject = [
  "eventBus",
  "modeling"
];
e$3(EventBasedGatewayBehavior, CommandInterceptor);
function isSequenceFlow(connection) {
  return is$g(connection, "bpmn:SequenceFlow");
}
var HIGH_PRIORITY$f = 1500;
var HIGHEST_PRIORITY = 2e3;
function FixHoverBehavior(elementRegistry, eventBus, canvas) {
  eventBus.on([
    "create.hover",
    "create.move",
    "create.out",
    "create.end",
    "shape.move.hover",
    "shape.move.move",
    "shape.move.out",
    "shape.move.end"
  ], HIGH_PRIORITY$f, function(event2) {
    var context = event2.context, shape = context.shape || event2.shape, hover = event2.hover;
    if (is$g(hover, "bpmn:Lane") && !isAny$7(shape, ["bpmn:Lane", "bpmn:Participant"])) {
      event2.hover = getLanesRoot(hover);
      event2.hoverGfx = elementRegistry.getGraphics(event2.hover);
    }
    var rootElement = canvas.getRootElement();
    if (hover !== rootElement && (shape.labelTarget || isAny$7(shape, ["bpmn:Group", "bpmn:TextAnnotation"]))) {
      event2.hover = rootElement;
      event2.hoverGfx = elementRegistry.getGraphics(event2.hover);
    }
  });
  eventBus.on([
    "connect.hover",
    "connect.out",
    "connect.end",
    "connect.cleanup",
    "global-connect.hover",
    "global-connect.out",
    "global-connect.end",
    "global-connect.cleanup"
  ], HIGH_PRIORITY$f, function(event2) {
    var hover = event2.hover;
    if (is$g(hover, "bpmn:Lane")) {
      event2.hover = getLanesRoot(hover) || hover;
      event2.hoverGfx = elementRegistry.getGraphics(event2.hover);
    }
  });
  eventBus.on([
    "bendpoint.move.hover"
  ], HIGH_PRIORITY$f, function(event2) {
    var context = event2.context, hover = event2.hover, type = context.type;
    if (is$g(hover, "bpmn:Lane") && /reconnect/.test(type)) {
      event2.hover = getLanesRoot(hover) || hover;
      event2.hoverGfx = elementRegistry.getGraphics(event2.hover);
    }
  });
  eventBus.on([
    "connect.start"
  ], HIGH_PRIORITY$f, function(event2) {
    var context = event2.context, start = context.start;
    if (is$g(start, "bpmn:Lane")) {
      context.start = getLanesRoot(start) || start;
    }
  });
  eventBus.on("shape.move.start", HIGHEST_PRIORITY, function(event2) {
    var shape = event2.shape;
    if (is$g(shape, "bpmn:Lane")) {
      event2.shape = getLanesRoot(shape) || shape;
    }
  });
  eventBus.on("spaceTool.move", HIGHEST_PRIORITY, function(event2) {
    var hover = event2.hover;
    if (hover && is$g(hover, "bpmn:Lane")) {
      event2.hover = getLanesRoot(hover);
    }
  });
}
FixHoverBehavior.$inject = [
  "elementRegistry",
  "eventBus",
  "canvas"
];
function createCategory(bpmnFactory) {
  return bpmnFactory.create("bpmn:Category");
}
function createCategoryValue(bpmnFactory) {
  return bpmnFactory.create("bpmn:CategoryValue");
}
function linkCategoryValue(categoryValue, category, definitions) {
  add$1(category.get("categoryValue"), categoryValue);
  categoryValue.$parent = category;
  add$1(definitions.get("rootElements"), category);
  category.$parent = definitions;
  return categoryValue;
}
function unlinkCategoryValue(categoryValue) {
  var category = categoryValue.$parent;
  if (category) {
    remove$2(category.get("categoryValue"), categoryValue);
    categoryValue.$parent = null;
  }
  return categoryValue;
}
function unlinkCategory(category) {
  var definitions = category.$parent;
  if (definitions) {
    remove$2(definitions.get("rootElements"), category);
    category.$parent = null;
  }
  return category;
}
var LOWER_PRIORITY$1 = 770;
function GroupBehavior(bpmnFactory, bpmnjs, elementRegistry, eventBus, injector, moddleCopy) {
  injector.invoke(CommandInterceptor, this);
  function getGroupElements() {
    return elementRegistry.filter(function(e2) {
      return is$g(e2, "bpmn:Group");
    });
  }
  function isReferencedCategory(elements, category) {
    return elements.some(function(element) {
      var businessObject = getBusinessObject(element);
      var _category = businessObject.categoryValueRef && businessObject.categoryValueRef.$parent;
      return _category === category;
    });
  }
  function isReferencedCategoryValue(elements, categoryValue) {
    return elements.some(function(element) {
      var businessObject = getBusinessObject(element);
      return businessObject.categoryValueRef === categoryValue;
    });
  }
  function removeCategoryValue(categoryValue, category, businessObject) {
    var groups = getGroupElements().filter(function(element) {
      return element.businessObject !== businessObject;
    });
    if (category && !isReferencedCategory(groups, category)) {
      unlinkCategory(category);
    }
    if (categoryValue && !isReferencedCategoryValue(groups, categoryValue)) {
      unlinkCategoryValue(categoryValue);
    }
  }
  function addCategoryValue(categoryValue, category) {
    return linkCategoryValue(categoryValue, category, bpmnjs.getDefinitions());
  }
  function setCategoryValue(element, context) {
    var businessObject = getBusinessObject(element), categoryValue = businessObject.categoryValueRef;
    if (!categoryValue) {
      categoryValue = businessObject.categoryValueRef = context.categoryValue = context.categoryValue || createCategoryValue(bpmnFactory);
    }
    var category = categoryValue.$parent;
    if (!category) {
      category = categoryValue.$parent = context.category = context.category || createCategory(bpmnFactory);
    }
    addCategoryValue(categoryValue, category, bpmnjs.getDefinitions());
  }
  function unsetCategoryValue(element, context) {
    var category = context.category, categoryValue = context.categoryValue, businessObject = getBusinessObject(element);
    if (categoryValue) {
      businessObject.categoryValueRef = null;
      removeCategoryValue(categoryValue, category, businessObject);
    } else {
      removeCategoryValue(null, businessObject.categoryValueRef.$parent, businessObject);
    }
  }
  this.execute("label.create", function(event2) {
    var context = event2.context, labelTarget = context.labelTarget;
    if (!is$g(labelTarget, "bpmn:Group")) {
      return;
    }
    setCategoryValue(labelTarget, context);
  });
  this.revert("label.create", function(event2) {
    var context = event2.context, labelTarget = context.labelTarget;
    if (!is$g(labelTarget, "bpmn:Group")) {
      return;
    }
    unsetCategoryValue(labelTarget, context);
  });
  this.execute("shape.delete", function(event2) {
    var context = event2.context, shape = context.shape, businessObject = getBusinessObject(shape);
    if (!is$g(shape, "bpmn:Group") || shape.labelTarget) {
      return;
    }
    var categoryValue = context.categoryValue = businessObject.categoryValueRef, category;
    if (categoryValue) {
      category = context.category = categoryValue.$parent;
      removeCategoryValue(categoryValue, category, businessObject);
      businessObject.categoryValueRef = null;
    }
  });
  this.reverted("shape.delete", function(event2) {
    var context = event2.context, shape = context.shape;
    if (!is$g(shape, "bpmn:Group") || shape.labelTarget) {
      return;
    }
    var category = context.category, categoryValue = context.categoryValue, businessObject = getBusinessObject(shape);
    if (categoryValue) {
      businessObject.categoryValueRef = categoryValue;
      addCategoryValue(categoryValue, category);
    }
  });
  this.execute("shape.create", function(event2) {
    var context = event2.context, shape = context.shape;
    if (!is$g(shape, "bpmn:Group") || shape.labelTarget) {
      return;
    }
    if (getBusinessObject(shape).categoryValueRef) {
      setCategoryValue(shape, context);
    }
  });
  this.reverted("shape.create", function(event2) {
    var context = event2.context, shape = context.shape;
    if (!is$g(shape, "bpmn:Group") || shape.labelTarget) {
      return;
    }
    if (getBusinessObject(shape).categoryValueRef) {
      unsetCategoryValue(shape, context);
    }
  });
  function copy2(bo, clone2) {
    var targetBo = bpmnFactory.create(bo.$type);
    return moddleCopy.copyElement(bo, targetBo, null, clone2);
  }
  eventBus.on("copyPaste.copyElement", LOWER_PRIORITY$1, function(context) {
    var descriptor = context.descriptor, element = context.element;
    if (!is$g(element, "bpmn:Group") || element.labelTarget) {
      return;
    }
    var groupBo = getBusinessObject(element);
    if (groupBo.categoryValueRef) {
      var categoryValue = groupBo.categoryValueRef;
      descriptor.categoryValue = copy2(categoryValue, true);
      if (categoryValue.$parent) {
        descriptor.category = copy2(categoryValue.$parent, true);
      }
    }
  });
  eventBus.on("copyPaste.pasteElement", LOWER_PRIORITY$1, function(context) {
    var descriptor = context.descriptor, businessObject = descriptor.businessObject, categoryValue = descriptor.categoryValue, category = descriptor.category;
    if (categoryValue) {
      categoryValue = businessObject.categoryValueRef = copy2(categoryValue);
    }
    if (category) {
      categoryValue.$parent = copy2(category);
    }
    delete descriptor.category;
    delete descriptor.categoryValue;
  });
}
GroupBehavior.$inject = [
  "bpmnFactory",
  "bpmnjs",
  "elementRegistry",
  "eventBus",
  "injector",
  "moddleCopy"
];
e$3(GroupBehavior, CommandInterceptor);
function lineIntersect(l1s, l1e, l2s, l2e) {
  var denominator, a2, b2, c2, numerator;
  denominator = (l2e.y - l2s.y) * (l1e.x - l1s.x) - (l2e.x - l2s.x) * (l1e.y - l1s.y);
  if (denominator == 0) {
    return null;
  }
  a2 = l1s.y - l2s.y;
  b2 = l1s.x - l2s.x;
  numerator = (l2e.x - l2s.x) * a2 - (l2e.y - l2s.y) * b2;
  c2 = numerator / denominator;
  return {
    x: Math.round(l1s.x + c2 * (l1e.x - l1s.x)),
    y: Math.round(l1s.y + c2 * (l1e.y - l1s.y))
  };
}
function ImportDockingFix(eventBus) {
  function adjustDocking(startPoint, nextPoint, elementMid) {
    var elementTop = {
      x: elementMid.x,
      y: elementMid.y - 50
    };
    var elementLeft = {
      x: elementMid.x - 50,
      y: elementMid.y
    };
    var verticalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementTop), horizontalIntersect = lineIntersect(startPoint, nextPoint, elementMid, elementLeft);
    var centerIntersect;
    if (verticalIntersect && horizontalIntersect) {
      if (getDistance$1(verticalIntersect, elementMid) > getDistance$1(horizontalIntersect, elementMid)) {
        centerIntersect = horizontalIntersect;
      } else {
        centerIntersect = verticalIntersect;
      }
    } else {
      centerIntersect = verticalIntersect || horizontalIntersect;
    }
    startPoint.original = centerIntersect;
  }
  function fixDockings(connection) {
    var waypoints = connection.waypoints;
    adjustDocking(
      waypoints[0],
      waypoints[1],
      getMid(connection.source)
    );
    adjustDocking(
      waypoints[waypoints.length - 1],
      waypoints[waypoints.length - 2],
      getMid(connection.target)
    );
  }
  eventBus.on("bpmnElement.added", function(e2) {
    var element = e2.element;
    if (element.waypoints) {
      fixDockings(element);
    }
  });
}
ImportDockingFix.$inject = [
  "eventBus"
];
function getDistance$1(p1, p2) {
  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
}
function IsHorizontalFix(eventBus) {
  CommandInterceptor.call(this, eventBus);
  var elementTypesToUpdate = [
    "bpmn:Participant",
    "bpmn:Lane"
  ];
  this.executed(["shape.move", "shape.create", "shape.resize"], function(event2) {
    var shape = event2.context.shape, bo = getBusinessObject(shape), di = getDi(shape);
    if (isAny$7(bo, elementTypesToUpdate)) {
      var isHorizontal2 = di.get("isHorizontal");
      if (isHorizontal2 === void 0) {
        isHorizontal2 = true;
      }
      di.set("isHorizontal", isHorizontal2);
    }
  });
}
IsHorizontalFix.$inject = ["eventBus"];
e$3(IsHorizontalFix, CommandInterceptor);
var sqrt = Math.sqrt, min$2 = Math.min, max$4 = Math.max, abs$3 = Math.abs;
function sq(n2) {
  return Math.pow(n2, 2);
}
function getDistance(p1, p2) {
  return sqrt(sq(p1.x - p2.x) + sq(p1.y - p2.y));
}
function getAttachment(point, line) {
  var idx = 0, segmentStart, segmentEnd, segmentStartDistance, segmentEndDistance, attachmentPosition, minDistance, intersections, attachment, attachmentDistance, closestAttachmentDistance, closestAttachment;
  for (idx = 0; idx < line.length - 1; idx++) {
    segmentStart = line[idx];
    segmentEnd = line[idx + 1];
    if (pointsEqual(segmentStart, segmentEnd)) {
      intersections = [segmentStart];
    } else {
      segmentStartDistance = getDistance(point, segmentStart);
      segmentEndDistance = getDistance(point, segmentEnd);
      minDistance = min$2(segmentStartDistance, segmentEndDistance);
      intersections = getCircleSegmentIntersections(segmentStart, segmentEnd, point, minDistance);
    }
    if (intersections.length < 1) {
      throw new Error("expected between [1, 2] circle -> line intersections");
    }
    if (intersections.length === 1) {
      attachment = {
        type: "bendpoint",
        position: intersections[0],
        segmentIndex: idx,
        bendpointIndex: pointsEqual(segmentStart, intersections[0]) ? idx : idx + 1
      };
    }
    if (intersections.length === 2) {
      attachmentPosition = mid$1(intersections[0], intersections[1]);
      attachment = {
        type: "segment",
        position: attachmentPosition,
        segmentIndex: idx,
        relativeLocation: getDistance(segmentStart, attachmentPosition) / getDistance(segmentStart, segmentEnd)
      };
    }
    attachmentDistance = getDistance(attachment.position, point);
    if (!closestAttachment || closestAttachmentDistance > attachmentDistance) {
      closestAttachment = attachment;
      closestAttachmentDistance = attachmentDistance;
    }
  }
  return closestAttachment;
}
function getCircleSegmentIntersections(s1, s2, cc, cr) {
  var baX = s2.x - s1.x;
  var baY = s2.y - s1.y;
  var caX = cc.x - s1.x;
  var caY = cc.y - s1.y;
  var a2 = baX * baX + baY * baY;
  var bBy2 = baX * caX + baY * caY;
  var c2 = caX * caX + caY * caY - cr * cr;
  var pBy2 = bBy2 / a2;
  var q2 = c2 / a2;
  var disc = pBy2 * pBy2 - q2;
  if (disc < 0 && disc > -1e-6) {
    disc = 0;
  }
  if (disc < 0) {
    return [];
  }
  var tmpSqrt = sqrt(disc);
  var abScalingFactor1 = -pBy2 + tmpSqrt;
  var abScalingFactor2 = -pBy2 - tmpSqrt;
  var i1 = {
    x: s1.x - baX * abScalingFactor1,
    y: s1.y - baY * abScalingFactor1
  };
  if (disc === 0) {
    return [i1];
  }
  var i2 = {
    x: s1.x - baX * abScalingFactor2,
    y: s1.y - baY * abScalingFactor2
  };
  return [i1, i2].filter(function(p2) {
    return isPointInSegment(p2, s1, s2);
  });
}
function isPointInSegment(p2, segmentStart, segmentEnd) {
  return fenced(p2.x, segmentStart.x, segmentEnd.x) && fenced(p2.y, segmentStart.y, segmentEnd.y);
}
function fenced(n2, rangeStart, rangeEnd) {
  return n2 >= min$2(rangeStart, rangeEnd) - EQUAL_THRESHOLD && n2 <= max$4(rangeStart, rangeEnd) + EQUAL_THRESHOLD;
}
function mid$1(p1, p2) {
  return {
    x: (p1.x + p2.x) / 2,
    y: (p1.y + p2.y) / 2
  };
}
var EQUAL_THRESHOLD = 0.1;
function pointsEqual(p1, p2) {
  return abs$3(p1.x - p2.x) <= EQUAL_THRESHOLD && abs$3(p1.y - p2.y) <= EQUAL_THRESHOLD;
}
function findNewLineStartIndex(oldWaypoints, newWaypoints, attachment, hints) {
  var index2 = attachment.segmentIndex;
  var offset = newWaypoints.length - oldWaypoints.length;
  if (hints.segmentMove) {
    var oldSegmentStartIndex = hints.segmentMove.segmentStartIndex, newSegmentStartIndex = hints.segmentMove.newSegmentStartIndex;
    if (index2 === oldSegmentStartIndex) {
      return newSegmentStartIndex;
    }
    if (index2 >= newSegmentStartIndex) {
      return index2 + offset < newSegmentStartIndex ? newSegmentStartIndex : index2 + offset;
    }
    return index2;
  }
  if (hints.bendpointMove) {
    var insert = hints.bendpointMove.insert, bendpointIndex = hints.bendpointMove.bendpointIndex, newIndex;
    if (offset === 0) {
      return index2;
    }
    if (index2 >= bendpointIndex) {
      newIndex = insert ? index2 + 1 : index2 - 1;
    }
    if (index2 < bendpointIndex) {
      newIndex = index2;
      if (insert && attachment.type !== "bendpoint" && bendpointIndex - 1 === index2) {
        var rel = relativePositionMidWaypoint(newWaypoints, bendpointIndex);
        if (rel < attachment.relativeLocation) {
          newIndex++;
        }
      }
    }
    return newIndex;
  }
  if (offset === 0) {
    return index2;
  }
  if (hints.connectionStart && index2 === 0) {
    return 0;
  }
  if (hints.connectionEnd && index2 === oldWaypoints.length - 2) {
    return newWaypoints.length - 2;
  }
  return Math.floor((newWaypoints.length - 2) / 2);
}
function getAnchorPointAdjustment(position, newWaypoints, oldWaypoints, hints) {
  var dx = 0, dy = 0;
  var oldPosition = {
    point: position,
    delta: { x: 0, y: 0 }
  };
  var attachment = getAttachment(position, oldWaypoints), oldLabelLineIndex = attachment.segmentIndex, newLabelLineIndex = findNewLineStartIndex(oldWaypoints, newWaypoints, attachment, hints);
  if (newLabelLineIndex < 0 || newLabelLineIndex > newWaypoints.length - 2 || newLabelLineIndex === null) {
    return oldPosition;
  }
  var oldLabelLine = getLine(oldWaypoints, oldLabelLineIndex), newLabelLine = getLine(newWaypoints, newLabelLineIndex), oldFoot = attachment.position;
  var relativeFootPosition = getRelativeFootPosition(oldLabelLine, oldFoot), angleDelta = getAngleDelta(oldLabelLine, newLabelLine);
  if (attachment.type === "bendpoint") {
    var offset = newWaypoints.length - oldWaypoints.length, oldBendpointIndex = attachment.bendpointIndex, oldBendpoint = oldWaypoints[oldBendpointIndex];
    if (newWaypoints.indexOf(oldBendpoint) !== -1) {
      return oldPosition;
    }
    if (offset === 0) {
      var newBendpoint = newWaypoints[oldBendpointIndex];
      dx = newBendpoint.x - attachment.position.x, dy = newBendpoint.y - attachment.position.y;
      return {
        delta: {
          x: dx,
          y: dy
        },
        point: {
          x: position.x + dx,
          y: position.y + dy
        }
      };
    }
    if (offset < 0 && oldBendpointIndex !== 0 && oldBendpointIndex < oldWaypoints.length - 1) {
      relativeFootPosition = relativePositionMidWaypoint(oldWaypoints, oldBendpointIndex);
    }
  }
  var newFoot = {
    x: (newLabelLine[1].x - newLabelLine[0].x) * relativeFootPosition + newLabelLine[0].x,
    y: (newLabelLine[1].y - newLabelLine[0].y) * relativeFootPosition + newLabelLine[0].y
  };
  var newLabelVector = rotateVector({
    x: position.x - oldFoot.x,
    y: position.y - oldFoot.y
  }, angleDelta);
  dx = newFoot.x + newLabelVector.x - position.x;
  dy = newFoot.y + newLabelVector.y - position.y;
  return {
    point: roundPoint(newFoot),
    delta: roundPoint({
      x: dx,
      y: dy
    })
  };
}
function relativePositionMidWaypoint(waypoints, idx) {
  var distanceSegment1 = getDistancePointPoint(waypoints[idx - 1], waypoints[idx]), distanceSegment2 = getDistancePointPoint(waypoints[idx], waypoints[idx + 1]);
  var relativePosition = distanceSegment1 / (distanceSegment1 + distanceSegment2);
  return relativePosition;
}
function getAngleDelta(l1, l2) {
  var a1 = getAngle(l1), a2 = getAngle(l2);
  return a2 - a1;
}
function getLine(waypoints, idx) {
  return [waypoints[idx], waypoints[idx + 1]];
}
function getRelativeFootPosition(line, foot) {
  var length2 = getDistancePointPoint(line[0], line[1]), lengthToFoot = getDistancePointPoint(line[0], foot);
  return length2 === 0 ? 0 : lengthToFoot / length2;
}
function getLabelAdjustment(label, newWaypoints, oldWaypoints, hints) {
  var labelPosition = getMid(label);
  return getAnchorPointAdjustment(labelPosition, newWaypoints, oldWaypoints, hints).delta;
}
function getNewAttachPoint(point, oldBounds, newBounds) {
  var oldCenter = center(oldBounds), newCenter = center(newBounds), oldDelta = delta(point, oldCenter);
  var newDelta = {
    x: oldDelta.x * (newBounds.width / oldBounds.width),
    y: oldDelta.y * (newBounds.height / oldBounds.height)
  };
  return roundPoint({
    x: newCenter.x + newDelta.x,
    y: newCenter.y + newDelta.y
  });
}
function getNewAttachShapeDelta(shape, oldBounds, newBounds) {
  var shapeCenter = center(shape), oldCenter = center(oldBounds), newCenter = center(newBounds), shapeDelta = delta(shape, shapeCenter), oldCenterDelta = delta(shapeCenter, oldCenter), stickyPositionDelta = getStickyPositionDelta(shapeCenter, oldBounds, newBounds);
  if (stickyPositionDelta) {
    return stickyPositionDelta;
  }
  var newCenterDelta = {
    x: oldCenterDelta.x * (newBounds.width / oldBounds.width),
    y: oldCenterDelta.y * (newBounds.height / oldBounds.height)
  };
  var newShapeCenter = {
    x: newCenter.x + newCenterDelta.x,
    y: newCenter.y + newCenterDelta.y
  };
  return roundPoint({
    x: newShapeCenter.x + shapeDelta.x - shape.x,
    y: newShapeCenter.y + shapeDelta.y - shape.y
  });
}
function getStickyPositionDelta(oldShapeCenter, oldBounds, newBounds) {
  var oldTRBL = asTRBL(oldBounds), newTRBL = asTRBL(newBounds);
  if (isMoved(oldTRBL, newTRBL)) {
    return null;
  }
  var oldOrientation = getOrientation(oldBounds, oldShapeCenter), stickyPositionDelta, newShapeCenter, newOrientation;
  if (oldOrientation === "top") {
    stickyPositionDelta = {
      x: 0,
      y: newTRBL.bottom - oldTRBL.bottom
    };
  } else if (oldOrientation === "bottom") {
    stickyPositionDelta = {
      x: 0,
      y: newTRBL.top - oldTRBL.top
    };
  } else if (oldOrientation === "right") {
    stickyPositionDelta = {
      x: newTRBL.left - oldTRBL.left,
      y: 0
    };
  } else if (oldOrientation === "left") {
    stickyPositionDelta = {
      x: newTRBL.right - oldTRBL.right,
      y: 0
    };
  } else {
    return null;
  }
  newShapeCenter = {
    x: oldShapeCenter.x + stickyPositionDelta.x,
    y: oldShapeCenter.y + stickyPositionDelta.y
  };
  newOrientation = getOrientation(newBounds, newShapeCenter);
  if (newOrientation !== oldOrientation) {
    return null;
  }
  return stickyPositionDelta;
}
function isMoved(oldTRBL, newTRBL) {
  return isHorizontallyMoved(oldTRBL, newTRBL) || isVerticallyMoved(oldTRBL, newTRBL);
}
function isHorizontallyMoved(oldTRBL, newTRBL) {
  return oldTRBL.right !== newTRBL.right && oldTRBL.left !== newTRBL.left;
}
function isVerticallyMoved(oldTRBL, newTRBL) {
  return oldTRBL.top !== newTRBL.top && oldTRBL.bottom !== newTRBL.bottom;
}
var NAME_PROPERTY = "name";
var TEXT_PROPERTY = "text";
function LabelBehavior(eventBus, modeling, bpmnFactory, textRenderer) {
  CommandInterceptor.call(this, eventBus);
  this.postExecute("element.updateProperties", onPropertyUpdate);
  this.postExecute("element.updateModdleProperties", (e2) => {
    const elementBo = getBusinessObject(e2.context.element);
    if (elementBo === e2.context.moddleElement) {
      onPropertyUpdate(e2);
    }
  });
  function onPropertyUpdate(e2) {
    var context = e2.context, element = context.element, properties = context.properties;
    if (NAME_PROPERTY in properties) {
      modeling.updateLabel(element, properties[NAME_PROPERTY]);
    }
    if (TEXT_PROPERTY in properties && is$g(element, "bpmn:TextAnnotation")) {
      var newBounds = textRenderer.getTextAnnotationBounds(
        {
          x: element.x,
          y: element.y,
          width: element.width,
          height: element.height
        },
        properties[TEXT_PROPERTY] || ""
      );
      modeling.updateLabel(element, properties.text, newBounds);
    }
  }
  this.postExecute(["shape.create", "connection.create"], function(e2) {
    var context = e2.context, hints = context.hints || {};
    if (hints.createElementsBehavior === false) {
      return;
    }
    var element = context.shape || context.connection;
    if (isLabel(element) || !isLabelExternal(element)) {
      return;
    }
    if (!getLabel(element)) {
      return;
    }
    modeling.updateLabel(element, getLabel(element));
  });
  this.postExecute("shape.delete", function(event2) {
    var context = event2.context, labelTarget = context.labelTarget, hints = context.hints || {};
    if (labelTarget && hints.unsetLabel !== false) {
      modeling.updateLabel(labelTarget, null, null, { removeShape: false });
    }
  });
  function getVisibleLabelAdjustment(event2) {
    var context = event2.context, connection = context.connection, label = connection.label, hints = assign$2({}, context.hints), newWaypoints = context.newWaypoints || connection.waypoints, oldWaypoints = context.oldWaypoints;
    if (typeof hints.startChanged === "undefined") {
      hints.startChanged = !!hints.connectionStart;
    }
    if (typeof hints.endChanged === "undefined") {
      hints.endChanged = !!hints.connectionEnd;
    }
    return getLabelAdjustment(label, newWaypoints, oldWaypoints, hints);
  }
  this.postExecute([
    "connection.layout",
    "connection.updateWaypoints"
  ], function(event2) {
    var context = event2.context, hints = context.hints || {};
    if (hints.labelBehavior === false) {
      return;
    }
    var connection = context.connection, label = connection.label, labelAdjustment;
    if (!label || !label.parent) {
      return;
    }
    labelAdjustment = getVisibleLabelAdjustment(event2);
    modeling.moveShape(label, labelAdjustment);
  });
  this.postExecute(["shape.replace"], function(event2) {
    var context = event2.context, newShape = context.newShape, oldShape = context.oldShape;
    var businessObject = getBusinessObject(newShape);
    if (businessObject && isLabelExternal(businessObject) && oldShape.label && newShape.label) {
      newShape.label.x = oldShape.label.x;
      newShape.label.y = oldShape.label.y;
    }
  });
  this.postExecute("shape.resize", function(event2) {
    var context = event2.context, shape = context.shape, newBounds = context.newBounds, oldBounds = context.oldBounds;
    if (hasExternalLabel(shape)) {
      var label = shape.label, labelMid = getMid(label), edges = asEdges(oldBounds);
      var referencePoint = getReferencePoint$1(labelMid, edges);
      var delta2 = getReferencePointDelta(referencePoint, oldBounds, newBounds);
      modeling.moveShape(label, delta2);
    }
  });
}
e$3(LabelBehavior, CommandInterceptor);
LabelBehavior.$inject = [
  "eventBus",
  "modeling",
  "bpmnFactory",
  "textRenderer"
];
function getReferencePointDelta(referencePoint, oldBounds, newBounds) {
  var newReferencePoint = getNewAttachPoint(referencePoint, oldBounds, newBounds);
  return roundPoint(delta(newReferencePoint, referencePoint));
}
function getReferencePoint$1(point, lines) {
  if (!lines.length) {
    return;
  }
  var nearestLine = getNearestLine(point, lines);
  return perpendicularFoot(point, nearestLine);
}
function asEdges(bounds) {
  return [
    [
      // top
      {
        x: bounds.x,
        y: bounds.y
      },
      {
        x: bounds.x + (bounds.width || 0),
        y: bounds.y
      }
    ],
    [
      // right
      {
        x: bounds.x + (bounds.width || 0),
        y: bounds.y
      },
      {
        x: bounds.x + (bounds.width || 0),
        y: bounds.y + (bounds.height || 0)
      }
    ],
    [
      // bottom
      {
        x: bounds.x,
        y: bounds.y + (bounds.height || 0)
      },
      {
        x: bounds.x + (bounds.width || 0),
        y: bounds.y + (bounds.height || 0)
      }
    ],
    [
      // left
      {
        x: bounds.x,
        y: bounds.y
      },
      {
        x: bounds.x,
        y: bounds.y + (bounds.height || 0)
      }
    ]
  ];
}
function getNearestLine(point, lines) {
  var distances = lines.map(function(l2) {
    return {
      line: l2,
      distance: getDistancePointLine(point, l2)
    };
  });
  var sorted = sortBy$1(distances, "distance");
  return sorted[0].line;
}
function getConnectionAdjustment(position, newWaypoints, oldWaypoints, hints) {
  return getAnchorPointAdjustment(position, newWaypoints, oldWaypoints, hints).point;
}
function LayoutConnectionBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  function getnewAnchorPoint(event2, point) {
    var context = event2.context, connection = context.connection, hints = assign$2({}, context.hints), newWaypoints = context.newWaypoints || connection.waypoints, oldWaypoints = context.oldWaypoints;
    if (typeof hints.startChanged === "undefined") {
      hints.startChanged = !!hints.connectionStart;
    }
    if (typeof hints.endChanged === "undefined") {
      hints.endChanged = !!hints.connectionEnd;
    }
    return getConnectionAdjustment(point, newWaypoints, oldWaypoints, hints);
  }
  this.postExecute([
    "connection.layout",
    "connection.updateWaypoints"
  ], function(event2) {
    var context = event2.context;
    var connection = context.connection, outgoing = connection.outgoing, incoming = connection.incoming;
    incoming.forEach(function(connection2) {
      var endPoint = connection2.waypoints[connection2.waypoints.length - 1];
      var newEndpoint = getnewAnchorPoint(event2, endPoint);
      var newWaypoints = [].concat(connection2.waypoints.slice(0, -1), [newEndpoint]);
      modeling.updateWaypoints(connection2, newWaypoints);
    });
    outgoing.forEach(function(connection2) {
      var startpoint = connection2.waypoints[0];
      var newStartpoint = getnewAnchorPoint(event2, startpoint);
      var newWaypoints = [].concat([newStartpoint], connection2.waypoints.slice(1));
      modeling.updateWaypoints(connection2, newWaypoints);
    });
  });
  this.postExecute([
    "connection.move"
  ], function(event2) {
    var context = event2.context;
    var connection = context.connection, outgoing = connection.outgoing, incoming = connection.incoming, delta2 = context.delta;
    incoming.forEach(function(connection2) {
      var endPoint = connection2.waypoints[connection2.waypoints.length - 1];
      var newEndpoint = {
        x: endPoint.x + delta2.x,
        y: endPoint.y + delta2.y
      };
      var newWaypoints = [].concat(connection2.waypoints.slice(0, -1), [newEndpoint]);
      modeling.updateWaypoints(connection2, newWaypoints);
    });
    outgoing.forEach(function(connection2) {
      var startpoint = connection2.waypoints[0];
      var newStartpoint = {
        x: startpoint.x + delta2.x,
        y: startpoint.y + delta2.y
      };
      var newWaypoints = [].concat([newStartpoint], connection2.waypoints.slice(1));
      modeling.updateWaypoints(connection2, newWaypoints);
    });
  });
}
e$3(LayoutConnectionBehavior, CommandInterceptor);
LayoutConnectionBehavior.$inject = [
  "eventBus",
  "modeling"
];
function getResizedSourceAnchor(connection, shape, oldBounds) {
  var waypoints = safeGetWaypoints(connection), waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape), oldAnchor = waypoints[0];
  if (waypointsInsideNewBounds.length) {
    return waypointsInsideNewBounds[waypointsInsideNewBounds.length - 1];
  }
  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);
}
function getResizedTargetAnchor(connection, shape, oldBounds) {
  var waypoints = safeGetWaypoints(connection), waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape), oldAnchor = waypoints[waypoints.length - 1];
  if (waypointsInsideNewBounds.length) {
    return waypointsInsideNewBounds[0];
  }
  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);
}
function getMovedSourceAnchor(connection, source2, moveDelta) {
  var waypoints = safeGetWaypoints(connection), oldBounds = subtract(source2, moveDelta), oldAnchor = waypoints[0];
  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, source2);
}
function getMovedTargetAnchor(connection, target, moveDelta) {
  var waypoints = safeGetWaypoints(connection), oldBounds = subtract(target, moveDelta), oldAnchor = waypoints[waypoints.length - 1];
  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, target);
}
function subtract(bounds, delta2) {
  return {
    x: bounds.x - delta2.x,
    y: bounds.y - delta2.y,
    width: bounds.width,
    height: bounds.height
  };
}
function safeGetWaypoints(connection) {
  var waypoints = connection.waypoints;
  if (!waypoints.length) {
    throw new Error("connection#" + connection.id + ": no waypoints");
  }
  return waypoints;
}
function getWaypointsInsideBounds(waypoints, bounds) {
  var originalWaypoints = map$2(waypoints, getOriginal);
  return filter$1(originalWaypoints, function(waypoint) {
    return isInsideBounds(waypoint, bounds);
  });
}
function isInsideBounds(point, bounds) {
  return getOrientation(bounds, point, 1) === "intersect";
}
function getOriginal(point) {
  return point.original || point;
}
function MessageFlowBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.postExecute("shape.replace", function(context) {
    var oldShape = context.oldShape, newShape = context.newShape;
    if (!isParticipantCollapse(oldShape, newShape)) {
      return;
    }
    var messageFlows = getMessageFlows(oldShape);
    messageFlows.incoming.forEach(function(incoming) {
      var anchor = getResizedTargetAnchor(incoming, newShape, oldShape);
      modeling.reconnectEnd(incoming, newShape, anchor);
    });
    messageFlows.outgoing.forEach(function(outgoing) {
      var anchor = getResizedSourceAnchor(outgoing, newShape, oldShape);
      modeling.reconnectStart(outgoing, newShape, anchor);
    });
  }, true);
}
MessageFlowBehavior.$inject = ["eventBus", "modeling"];
e$3(MessageFlowBehavior, CommandInterceptor);
function isParticipantCollapse(oldShape, newShape) {
  return is$g(oldShape, "bpmn:Participant") && isExpanded(oldShape) && is$g(newShape, "bpmn:Participant") && !isExpanded(newShape);
}
function getMessageFlows(parent) {
  var elements = selfAndAllChildren([parent], false);
  var incoming = [], outgoing = [];
  elements.forEach(function(element) {
    if (element === parent) {
      return;
    }
    element.incoming.forEach(function(connection) {
      if (is$g(connection, "bpmn:MessageFlow")) {
        incoming.push(connection);
      }
    });
    element.outgoing.forEach(function(connection) {
      if (is$g(connection, "bpmn:MessageFlow")) {
        outgoing.push(connection);
      }
    });
  }, []);
  return {
    incoming,
    outgoing
  };
}
const NON_INTERRUPTING_EVENT_TYPES = [
  "bpmn:MessageEventDefinition",
  "bpmn:TimerEventDefinition",
  "bpmn:EscalationEventDefinition",
  "bpmn:ConditionalEventDefinition",
  "bpmn:SignalEventDefinition"
];
function canBeNonInterrupting(shape) {
  const businessObject = getBusinessObject(shape);
  if (!is$g(businessObject, "bpmn:BoundaryEvent") && !(is$g(businessObject, "bpmn:StartEvent") && isEventSubProcess(businessObject.$parent))) {
    return false;
  }
  const eventDefinitions = businessObject.get("eventDefinitions");
  if (!eventDefinitions || !eventDefinitions.length) {
    return false;
  }
  return NON_INTERRUPTING_EVENT_TYPES.some((event2) => is$g(eventDefinitions[0], event2));
}
function getInterruptingProperty(shape) {
  return is$g(shape, "bpmn:BoundaryEvent") ? "cancelActivity" : "isInterrupting";
}
function NonInterruptingBehavior(injector, modeling) {
  injector.invoke(CommandInterceptor, this);
  this.postExecuted("shape.replace", function(event2) {
    const oldShape = event2.context.oldShape;
    const newShape = event2.context.newShape;
    const hints = event2.context.hints;
    if (!canBeNonInterrupting(newShape)) {
      return;
    }
    const property = getInterruptingProperty(newShape);
    const isExplicitChange = hints.targetElement && hints.targetElement[property] !== void 0;
    if (isExplicitChange) {
      return;
    }
    const isOldInterrupting = getBusinessObject(oldShape).get(property);
    const isNewInterruptingDefault = getBusinessObject(newShape).get(property);
    if (isOldInterrupting === isNewInterruptingDefault) {
      return;
    }
    modeling.updateProperties(newShape, {
      [property]: isOldInterrupting
    });
  });
}
NonInterruptingBehavior.$inject = ["injector", "modeling"];
e$3(NonInterruptingBehavior, CommandInterceptor);
function RemoveEmbeddedLabelBoundsBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("shape.resize", function(context) {
    var shape = context.shape;
    var di = getDi(shape), label = di && di.get("label"), bounds = label && label.get("bounds");
    if (bounds) {
      modeling.updateModdleProperties(shape, label, {
        bounds: void 0
      });
    }
  }, true);
}
e$3(RemoveEmbeddedLabelBoundsBehavior, CommandInterceptor);
RemoveEmbeddedLabelBoundsBehavior.$inject = [
  "eventBus",
  "modeling"
];
function RemoveElementBehavior(eventBus, bpmnRules, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("shape.delete", function(e2) {
    var shape = e2.context.shape;
    if (shape.incoming.length !== 1 || shape.outgoing.length !== 1) {
      return;
    }
    var inConnection = shape.incoming[0], outConnection = shape.outgoing[0];
    if (!is$g(inConnection, "bpmn:SequenceFlow") || !is$g(outConnection, "bpmn:SequenceFlow")) {
      return;
    }
    if (bpmnRules.canConnect(inConnection.source, outConnection.target, inConnection)) {
      var newWaypoints = getNewWaypoints(inConnection.waypoints, outConnection.waypoints);
      modeling.reconnectEnd(inConnection, outConnection.target, newWaypoints);
    }
  });
}
e$3(RemoveElementBehavior, CommandInterceptor);
RemoveElementBehavior.$inject = [
  "eventBus",
  "bpmnRules",
  "modeling"
];
function getDocking$1(point) {
  return point.original || point;
}
function getNewWaypoints(inWaypoints, outWaypoints) {
  var intersection2 = lineIntersect(
    getDocking$1(inWaypoints[inWaypoints.length - 2]),
    getDocking$1(inWaypoints[inWaypoints.length - 1]),
    getDocking$1(outWaypoints[1]),
    getDocking$1(outWaypoints[0])
  );
  if (intersection2) {
    return [].concat(
      inWaypoints.slice(0, inWaypoints.length - 1),
      [intersection2],
      outWaypoints.slice(1)
    );
  } else {
    return [
      getDocking$1(inWaypoints[0]),
      getDocking$1(outWaypoints[outWaypoints.length - 1])
    ];
  }
}
function RemoveParticipantBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("shape.delete", function(context) {
    var shape = context.shape, parent = shape.parent;
    if (is$g(shape, "bpmn:Participant")) {
      context.collaborationRoot = parent;
    }
  }, true);
  this.postExecute("shape.delete", function(context) {
    var collaborationRoot = context.collaborationRoot;
    if (collaborationRoot && !collaborationRoot.businessObject.participants.length) {
      modeling.makeProcess();
    }
  }, true);
}
RemoveParticipantBehavior.$inject = ["eventBus", "modeling"];
e$3(RemoveParticipantBehavior, CommandInterceptor);
function ReplaceConnectionBehavior(eventBus, modeling, bpmnRules, injector) {
  CommandInterceptor.call(this, eventBus);
  var dragging = injector.get("dragging", false);
  function fixConnection(connection) {
    var source2 = connection.source, target = connection.target, parent = connection.parent;
    if (!parent) {
      return;
    }
    var replacementType, remove2;
    if (is$g(connection, "bpmn:SequenceFlow")) {
      if (!bpmnRules.canConnectSequenceFlow(source2, target)) {
        remove2 = true;
      }
      if (bpmnRules.canConnectMessageFlow(source2, target)) {
        replacementType = "bpmn:MessageFlow";
      }
    }
    if (is$g(connection, "bpmn:MessageFlow")) {
      if (!bpmnRules.canConnectMessageFlow(source2, target)) {
        remove2 = true;
      }
      if (bpmnRules.canConnectSequenceFlow(source2, target)) {
        replacementType = "bpmn:SequenceFlow";
      }
    }
    if (remove2) {
      modeling.removeConnection(connection);
    }
    if (replacementType) {
      modeling.connect(source2, target, {
        type: replacementType,
        waypoints: connection.waypoints.slice()
      });
    }
  }
  function replaceReconnectedConnection(event2) {
    var context = event2.context, connection = context.connection, source2 = context.newSource || connection.source, target = context.newTarget || connection.target, allowed, replacement;
    allowed = bpmnRules.canConnect(source2, target);
    if (!allowed || allowed.type === connection.type) {
      return;
    }
    replacement = modeling.connect(source2, target, {
      type: allowed.type,
      associationDirection: allowed.associationDirection,
      waypoints: connection.waypoints.slice()
    });
    if (connection.parent) {
      modeling.removeConnection(connection);
    }
    context.connection = replacement;
    if (dragging) {
      cleanDraggingSelection(connection, replacement);
    }
  }
  function cleanDraggingSelection(oldConnection, newConnection) {
    var context = dragging.context(), previousSelection = context && context.payload.previousSelection, index2;
    if (!previousSelection || !previousSelection.length) {
      return;
    }
    index2 = previousSelection.indexOf(oldConnection);
    if (index2 === -1) {
      return;
    }
    previousSelection.splice(index2, 1, newConnection);
  }
  this.postExecuted("elements.move", function(context) {
    var closure = context.closure, allConnections = closure.allConnections;
    forEach$2(allConnections, fixConnection);
  }, true);
  this.preExecute("connection.reconnect", replaceReconnectedConnection);
  this.postExecuted("element.updateProperties", function(event2) {
    var context = event2.context, properties = context.properties, element = context.element, businessObject = element.businessObject, connection;
    if (properties.default) {
      connection = find$1(
        element.outgoing,
        matchPattern$1({ id: element.businessObject.default.id })
      );
      if (connection) {
        modeling.updateProperties(connection, { conditionExpression: void 0 });
      }
    }
    if (properties.conditionExpression && businessObject.sourceRef.default === businessObject) {
      modeling.updateProperties(element.source, { default: void 0 });
    }
  });
}
e$3(ReplaceConnectionBehavior, CommandInterceptor);
ReplaceConnectionBehavior.$inject = [
  "eventBus",
  "modeling",
  "bpmnRules",
  "injector"
];
function ReplaceElementBehaviour(bpmnReplace, bpmnRules, elementRegistry, injector, modeling, selection) {
  injector.invoke(CommandInterceptor, this);
  this._bpmnReplace = bpmnReplace;
  this._elementRegistry = elementRegistry;
  this._selection = selection;
  this.postExecuted(["elements.create"], 500, function(event2) {
    var context = event2.context, target = context.parent, elements = context.elements;
    var elementReplacements = reduce$1(elements, function(replacements, element) {
      var canReplace2 = bpmnRules.canReplace([element], element.host || element.parent || target);
      return canReplace2 ? replacements.concat(canReplace2.replacements) : replacements;
    }, []);
    if (elementReplacements.length) {
      this._replaceElements(elements, elementReplacements);
    }
  }, this);
  this.postExecuted(["elements.move"], 500, function(event2) {
    var context = event2.context, target = context.newParent, newHost = context.newHost, elements = [];
    forEach$2(context.closure.topLevel, function(topLevelElements) {
      if (isEventSubProcess(topLevelElements)) {
        elements = elements.concat(topLevelElements.children);
      } else {
        elements = elements.concat(topLevelElements);
      }
    });
    if (elements.length === 1 && newHost) {
      target = newHost;
    }
    var canReplace2 = bpmnRules.canReplace(elements, target);
    if (canReplace2) {
      this._replaceElements(elements, canReplace2.replacements, newHost);
    }
  }, this);
  this.postExecute(["shape.replace"], 1500, function(e2) {
    var context = e2.context, oldShape = context.oldShape, newShape = context.newShape, attachers = oldShape.attachers, canReplace2;
    if (attachers && attachers.length) {
      canReplace2 = bpmnRules.canReplace(attachers, newShape);
      this._replaceElements(attachers, canReplace2.replacements);
    }
  }, this);
  this.postExecuted(["shape.replace"], 1500, function(e2) {
    var context = e2.context, oldShape = context.oldShape, newShape = context.newShape;
    modeling.unclaimId(oldShape.businessObject.id, oldShape.businessObject);
    modeling.updateProperties(newShape, { id: oldShape.id });
  });
}
e$3(ReplaceElementBehaviour, CommandInterceptor);
ReplaceElementBehaviour.prototype._replaceElements = function(elements, newElements) {
  var elementRegistry = this._elementRegistry, bpmnReplace = this._bpmnReplace, selection = this._selection;
  forEach$2(newElements, function(replacement) {
    var newElement = {
      type: replacement.newElementType
    };
    var oldElement = elementRegistry.get(replacement.oldElementId);
    var idx = elements.indexOf(oldElement);
    elements[idx] = bpmnReplace.replaceElement(oldElement, newElement, { select: false });
  });
  if (newElements) {
    selection.select(elements);
  }
};
ReplaceElementBehaviour.$inject = [
  "bpmnReplace",
  "bpmnRules",
  "elementRegistry",
  "injector",
  "modeling",
  "selection"
];
var HIGH_PRIORITY$e = 1500;
var GROUP_MIN_DIMENSIONS = { width: 140, height: 120 };
var LANE_MIN_DIMENSIONS = { width: 300, height: 60 };
var VERTICAL_LANE_MIN_DIMENSIONS = { width: 60, height: 300 };
var PARTICIPANT_MIN_DIMENSIONS = { width: 300, height: 150 };
var VERTICAL_PARTICIPANT_MIN_DIMENSIONS = { width: 150, height: 300 };
var SUB_PROCESS_MIN_DIMENSIONS = { width: 140, height: 120 };
var TEXT_ANNOTATION_MIN_DIMENSIONS = { width: 50, height: 30 };
function ResizeBehavior$1(eventBus) {
  eventBus.on("resize.start", HIGH_PRIORITY$e, function(event2) {
    var context = event2.context, shape = context.shape, direction = context.direction, balanced = context.balanced;
    if (is$g(shape, "bpmn:Lane") || is$g(shape, "bpmn:Participant")) {
      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);
    }
    if (is$g(shape, "bpmn:SubProcess") && isExpanded(shape)) {
      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;
    }
    if (is$g(shape, "bpmn:TextAnnotation")) {
      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;
    }
  });
}
ResizeBehavior$1.$inject = ["eventBus"];
var abs$2 = Math.abs, min$1 = Math.min, max$3 = Math.max;
function addToTrbl(trbl, attr2, value, choice) {
  var current = trbl[attr2];
  trbl[attr2] = current === void 0 ? value : choice(value, current);
}
function addMin(trbl, attr2, value) {
  return addToTrbl(trbl, attr2, value, min$1);
}
function addMax(trbl, attr2, value) {
  return addToTrbl(trbl, attr2, value, max$3);
}
var LANE_PADDING = { top: 20, left: 50, right: 20, bottom: 20 }, VERTICAL_LANE_PADDING = { top: 50, left: 20, right: 20, bottom: 20 };
function getParticipantResizeConstraints(laneShape, resizeDirection, balanced) {
  var lanesRoot = getLanesRoot(laneShape);
  var isFirst = true, isLast = true;
  var allLanes = collectLanes(lanesRoot, [lanesRoot]);
  var laneTrbl = asTRBL(laneShape);
  var maxTrbl = {}, minTrbl = {};
  var isHorizontalLane = isHorizontal$3(laneShape);
  var minDimensions = isHorizontalLane ? LANE_MIN_DIMENSIONS : VERTICAL_LANE_MIN_DIMENSIONS;
  if (/n/.test(resizeDirection)) {
    minTrbl.top = laneTrbl.bottom - minDimensions.height;
  } else if (/e/.test(resizeDirection)) {
    minTrbl.right = laneTrbl.left + minDimensions.width;
  } else if (/s/.test(resizeDirection)) {
    minTrbl.bottom = laneTrbl.top + minDimensions.height;
  } else if (/w/.test(resizeDirection)) {
    minTrbl.left = laneTrbl.right - minDimensions.width;
  }
  allLanes.forEach(function(other2) {
    var otherTrbl = asTRBL(other2);
    if (/n/.test(resizeDirection)) {
      if (isHorizontalLane && otherTrbl.top < laneTrbl.top - 10) {
        isFirst = false;
      }
      if (balanced && abs$2(laneTrbl.top - otherTrbl.bottom) < 10) {
        addMax(maxTrbl, "top", otherTrbl.top + minDimensions.height);
      }
      if (abs$2(laneTrbl.top - otherTrbl.top) < 5) {
        addMin(minTrbl, "top", otherTrbl.bottom - minDimensions.height);
      }
    }
    if (/e/.test(resizeDirection)) {
      if (!isHorizontalLane && otherTrbl.right > laneTrbl.right + 10) {
        isLast = false;
      }
      if (balanced && abs$2(laneTrbl.right - otherTrbl.left) < 10) {
        addMin(maxTrbl, "right", otherTrbl.right - minDimensions.width);
      }
      if (abs$2(laneTrbl.right - otherTrbl.right) < 5) {
        addMax(minTrbl, "right", otherTrbl.left + minDimensions.width);
      }
    }
    if (/s/.test(resizeDirection)) {
      if (isHorizontalLane && otherTrbl.bottom > laneTrbl.bottom + 10) {
        isLast = false;
      }
      if (balanced && abs$2(laneTrbl.bottom - otherTrbl.top) < 10) {
        addMin(maxTrbl, "bottom", otherTrbl.bottom - minDimensions.height);
      }
      if (abs$2(laneTrbl.bottom - otherTrbl.bottom) < 5) {
        addMax(minTrbl, "bottom", otherTrbl.top + minDimensions.height);
      }
    }
    if (/w/.test(resizeDirection)) {
      if (!isHorizontalLane && otherTrbl.left < laneTrbl.left - 10) {
        isFirst = false;
      }
      if (balanced && abs$2(laneTrbl.left - otherTrbl.right) < 10) {
        addMax(maxTrbl, "left", otherTrbl.left + minDimensions.width);
      }
      if (abs$2(laneTrbl.left - otherTrbl.left) < 5) {
        addMin(minTrbl, "left", otherTrbl.right - minDimensions.width);
      }
    }
  });
  var flowElements = lanesRoot.children.filter(function(s2) {
    return !s2.hidden && !s2.waypoints && (is$g(s2, "bpmn:FlowElement") || is$g(s2, "bpmn:Artifact"));
  });
  var padding = isHorizontalLane ? LANE_PADDING : VERTICAL_LANE_PADDING;
  flowElements.forEach(function(flowElement) {
    var flowElementTrbl = asTRBL(flowElement);
    if (isFirst && /n/.test(resizeDirection)) {
      addMin(minTrbl, "top", flowElementTrbl.top - padding.top);
    }
    if (isLast && /e/.test(resizeDirection)) {
      addMax(minTrbl, "right", flowElementTrbl.right + padding.right);
    }
    if (isLast && /s/.test(resizeDirection)) {
      addMax(minTrbl, "bottom", flowElementTrbl.bottom + padding.bottom);
    }
    if (isFirst && /w/.test(resizeDirection)) {
      addMin(minTrbl, "left", flowElementTrbl.left - padding.left);
    }
  });
  return {
    min: minTrbl,
    max: maxTrbl
  };
}
var SLIGHTLY_HIGHER_PRIORITY = 1001;
function ResizeLaneBehavior(eventBus, modeling) {
  eventBus.on("resize.start", SLIGHTLY_HIGHER_PRIORITY + 500, function(event2) {
    var context = event2.context, shape = context.shape;
    if (is$g(shape, "bpmn:Lane") || is$g(shape, "bpmn:Participant")) {
      context.balanced = !hasPrimaryModifier(event2);
    }
  });
  eventBus.on("resize.end", SLIGHTLY_HIGHER_PRIORITY, function(event2) {
    var context = event2.context, shape = context.shape, canExecute = context.canExecute, newBounds = context.newBounds;
    if (is$g(shape, "bpmn:Lane") || is$g(shape, "bpmn:Participant")) {
      if (canExecute) {
        newBounds = roundBounds(newBounds);
        modeling.resizeLane(shape, newBounds, context.balanced);
      }
      return false;
    }
  });
}
ResizeLaneBehavior.$inject = [
  "eventBus",
  "modeling"
];
var LOW_PRIORITY$g = 500;
function RootElementReferenceBehavior(bpmnjs, eventBus, injector, moddleCopy, bpmnFactory) {
  injector.invoke(CommandInterceptor, this);
  function canHaveRootElementReference(element) {
    return isAny$7(element, ["bpmn:ReceiveTask", "bpmn:SendTask"]) || hasAnyEventDefinition(element, [
      "bpmn:ErrorEventDefinition",
      "bpmn:EscalationEventDefinition",
      "bpmn:MessageEventDefinition",
      "bpmn:SignalEventDefinition"
    ]);
  }
  function hasRootElement(rootElement) {
    var definitions = bpmnjs.getDefinitions(), rootElements = definitions.get("rootElements");
    return !!find$1(rootElements, matchPattern$1({ id: rootElement.id }));
  }
  function getRootElementReferencePropertyName(eventDefinition) {
    if (is$g(eventDefinition, "bpmn:ErrorEventDefinition")) {
      return "errorRef";
    } else if (is$g(eventDefinition, "bpmn:EscalationEventDefinition")) {
      return "escalationRef";
    } else if (is$g(eventDefinition, "bpmn:MessageEventDefinition")) {
      return "messageRef";
    } else if (is$g(eventDefinition, "bpmn:SignalEventDefinition")) {
      return "signalRef";
    }
  }
  function getRootElement2(businessObject) {
    if (isAny$7(businessObject, ["bpmn:ReceiveTask", "bpmn:SendTask"])) {
      return businessObject.get("messageRef");
    }
    var eventDefinitions = businessObject.get("eventDefinitions"), eventDefinition = eventDefinitions[0];
    return eventDefinition.get(getRootElementReferencePropertyName(eventDefinition));
  }
  function setRootElement(businessObject, rootElement) {
    if (isAny$7(businessObject, ["bpmn:ReceiveTask", "bpmn:SendTask"])) {
      return businessObject.set("messageRef", rootElement);
    }
    var eventDefinitions = businessObject.get("eventDefinitions"), eventDefinition = eventDefinitions[0];
    return eventDefinition.set(getRootElementReferencePropertyName(eventDefinition), rootElement);
  }
  this.executed([
    "shape.create",
    "element.updateProperties",
    "element.updateModdleProperties"
  ], function(context) {
    var shape = context.shape || context.element;
    if (!canHaveRootElementReference(shape)) {
      return;
    }
    var businessObject = getBusinessObject(shape), rootElement = getRootElement2(businessObject), rootElements;
    if (rootElement && !hasRootElement(rootElement)) {
      rootElements = bpmnjs.getDefinitions().get("rootElements");
      add$1(rootElements, rootElement);
      context.addedRootElement = rootElement;
    }
  }, true);
  this.reverted([
    "shape.create",
    "element.updateProperties",
    "element.updateModdleProperties"
  ], function(context) {
    var addedRootElement = context.addedRootElement;
    if (!addedRootElement) {
      return;
    }
    var rootElements = bpmnjs.getDefinitions().get("rootElements");
    remove$2(rootElements, addedRootElement);
  }, true);
  eventBus.on("copyPaste.copyElement", function(context) {
    var descriptor = context.descriptor, element = context.element;
    if (element.labelTarget || !canHaveRootElementReference(element)) {
      return;
    }
    var businessObject = getBusinessObject(element), rootElement = getRootElement2(businessObject);
    if (rootElement) {
      descriptor.referencedRootElement = rootElement;
    }
  });
  eventBus.on("copyPaste.pasteElement", LOW_PRIORITY$g, function(context) {
    var descriptor = context.descriptor, businessObject = descriptor.businessObject, referencedRootElement = descriptor.referencedRootElement;
    if (!referencedRootElement) {
      return;
    }
    if (!hasRootElement(referencedRootElement)) {
      referencedRootElement = moddleCopy.copyElement(
        referencedRootElement,
        bpmnFactory.create(referencedRootElement.$type)
      );
    }
    setRootElement(businessObject, referencedRootElement);
    delete descriptor.referencedRootElement;
  });
}
RootElementReferenceBehavior.$inject = [
  "bpmnjs",
  "eventBus",
  "injector",
  "moddleCopy",
  "bpmnFactory"
];
e$3(RootElementReferenceBehavior, CommandInterceptor);
function hasAnyEventDefinition(element, types2) {
  if (!isArray$3(types2)) {
    types2 = [types2];
  }
  return some$1(types2, function(type) {
    return hasEventDefinition$2(element, type);
  });
}
var max$2 = Math.max;
function SpaceToolBehavior$1(eventBus) {
  eventBus.on("spaceTool.getMinDimensions", function(context) {
    var shapes = context.shapes, axis = context.axis, start = context.start, minDimensions = {};
    forEach$2(shapes, function(shape) {
      var id = shape.id;
      if (is$g(shape, "bpmn:Participant")) {
        minDimensions[id] = getParticipantMinDimensions(shape, axis, start);
      }
      if (is$g(shape, "bpmn:Lane")) {
        minDimensions[id] = isHorizontal$3(shape) ? LANE_MIN_DIMENSIONS : VERTICAL_LANE_MIN_DIMENSIONS;
      }
      if (is$g(shape, "bpmn:SubProcess") && isExpanded(shape)) {
        minDimensions[id] = SUB_PROCESS_MIN_DIMENSIONS;
      }
      if (is$g(shape, "bpmn:TextAnnotation")) {
        minDimensions[id] = TEXT_ANNOTATION_MIN_DIMENSIONS;
      }
      if (is$g(shape, "bpmn:Group")) {
        minDimensions[id] = GROUP_MIN_DIMENSIONS;
      }
    });
    return minDimensions;
  });
}
SpaceToolBehavior$1.$inject = ["eventBus"];
function isHorizontalAxis(axis) {
  return axis === "x";
}
function getParticipantMinDimensions(participant, axis, start) {
  var isHorizontalLane = isHorizontal$3(participant);
  if (!hasChildLanes(participant)) {
    return isHorizontalLane ? PARTICIPANT_MIN_DIMENSIONS : VERTICAL_PARTICIPANT_MIN_DIMENSIONS;
  }
  var isHorizontalResize = isHorizontalAxis(axis);
  var minDimensions = {};
  if (isHorizontalResize) {
    if (isHorizontalLane) {
      minDimensions = PARTICIPANT_MIN_DIMENSIONS;
    } else {
      minDimensions = {
        width: getParticipantMinWidth(participant, start, isHorizontalResize),
        height: VERTICAL_PARTICIPANT_MIN_DIMENSIONS.height
      };
    }
  } else {
    if (isHorizontalLane) {
      minDimensions = {
        width: PARTICIPANT_MIN_DIMENSIONS.width,
        height: getParticipantMinHeight(participant, start, isHorizontalResize)
      };
    } else {
      minDimensions = VERTICAL_PARTICIPANT_MIN_DIMENSIONS;
    }
  }
  return minDimensions;
}
function getParticipantMinHeight(participant, start, isHorizontalResize) {
  var lanesMinHeight;
  lanesMinHeight = getLanesMinHeight(participant, start, isHorizontalResize);
  return max$2(PARTICIPANT_MIN_DIMENSIONS.height, lanesMinHeight);
}
function getParticipantMinWidth(participant, start, isHorizontalResize) {
  var lanesMinWidth;
  lanesMinWidth = getLanesMinWidth(participant, start, isHorizontalResize);
  return max$2(VERTICAL_PARTICIPANT_MIN_DIMENSIONS.width, lanesMinWidth);
}
function hasChildLanes(element) {
  return !!getChildLanes(element).length;
}
function getLanesMinHeight(participant, resizeStart, isHorizontalResize) {
  var lanes = getChildLanes(participant), resizedLane;
  resizedLane = findResizedLane(lanes, resizeStart, isHorizontalResize);
  return participant.height - resizedLane.height + LANE_MIN_DIMENSIONS.height;
}
function getLanesMinWidth(participant, resizeStart, isHorizontalResize) {
  var lanes = getChildLanes(participant), resizedLane;
  resizedLane = findResizedLane(lanes, resizeStart, isHorizontalResize);
  return participant.width - resizedLane.width + VERTICAL_LANE_MIN_DIMENSIONS.width;
}
function findResizedLane(lanes, resizeStart, isHorizontalResize) {
  var i2, lane, childLanes;
  for (i2 = 0; i2 < lanes.length; i2++) {
    lane = lanes[i2];
    if (!isHorizontalResize && resizeStart >= lane.y && resizeStart <= lane.y + lane.height || isHorizontalResize && resizeStart >= lane.x && resizeStart <= lane.x + lane.width) {
      childLanes = getChildLanes(lane);
      if (childLanes.length) {
        return findResizedLane(childLanes, resizeStart, isHorizontalResize);
      }
      return lane;
    }
  }
}
var LOW_PRIORITY$f = 400;
var HIGH_PRIORITY$d = 600;
var DEFAULT_POSITION = {
  x: 180,
  y: 160
};
function SubProcessPlaneBehavior(canvas, eventBus, modeling, elementFactory, bpmnFactory, bpmnjs, elementRegistry) {
  CommandInterceptor.call(this, eventBus);
  this._canvas = canvas;
  this._eventBus = eventBus;
  this._modeling = modeling;
  this._elementFactory = elementFactory;
  this._bpmnFactory = bpmnFactory;
  this._bpmnjs = bpmnjs;
  this._elementRegistry = elementRegistry;
  var self2 = this;
  function isCollapsedSubProcess2(element) {
    return is$g(element, "bpmn:SubProcess") && !isExpanded(element);
  }
  function createRoot2(context) {
    var shape = context.shape, rootElement = context.newRootElement;
    var businessObject = getBusinessObject(shape);
    rootElement = self2._addDiagram(rootElement || businessObject);
    context.newRootElement = canvas.addRootElement(rootElement);
  }
  function removeRoot(context) {
    var shape = context.shape;
    var businessObject = getBusinessObject(shape);
    self2._removeDiagram(businessObject);
    var rootElement = context.newRootElement = elementRegistry.get(getPlaneIdFromShape(businessObject));
    canvas.removeRootElement(rootElement);
  }
  this.executed("shape.create", function(context) {
    var shape = context.shape;
    if (!isCollapsedSubProcess2(shape)) {
      return;
    }
    createRoot2(context);
  }, true);
  this.postExecuted("shape.create", function(context) {
    var shape = context.shape, rootElement = context.newRootElement;
    if (!rootElement || !shape.children) {
      return;
    }
    self2._showRecursively(shape.children);
    self2._moveChildrenToShape(shape, rootElement);
  }, true);
  this.reverted("shape.create", function(context) {
    var shape = context.shape;
    if (!isCollapsedSubProcess2(shape)) {
      return;
    }
    removeRoot(context);
  }, true);
  this.preExecuted("shape.delete", function(context) {
    var shape = context.shape;
    if (!isCollapsedSubProcess2(shape)) {
      return;
    }
    var attachedRoot = elementRegistry.get(getPlaneIdFromShape(shape));
    if (!attachedRoot) {
      return;
    }
    modeling.removeElements(attachedRoot.children.slice());
  }, true);
  this.executed("shape.delete", function(context) {
    var shape = context.shape;
    if (!isCollapsedSubProcess2(shape)) {
      return;
    }
    removeRoot(context);
  }, true);
  this.reverted("shape.delete", function(context) {
    var shape = context.shape;
    if (!isCollapsedSubProcess2(shape)) {
      return;
    }
    createRoot2(context);
  }, true);
  this.preExecuted("shape.replace", function(context) {
    var oldShape = context.oldShape;
    var newShape = context.newShape;
    if (!isCollapsedSubProcess2(oldShape) || !isCollapsedSubProcess2(newShape)) {
      return;
    }
    context.oldRoot = canvas.removeRootElement(getPlaneIdFromShape(oldShape));
  }, true);
  this.postExecuted("shape.replace", function(context) {
    var newShape = context.newShape, source2 = context.oldRoot, target = canvas.findRoot(getPlaneIdFromShape(newShape));
    if (!source2 || !target) {
      return;
    }
    var elements = source2.children;
    modeling.moveElements(elements, { x: 0, y: 0 }, target);
  }, true);
  this.executed("element.updateProperties", function(context) {
    var shape = context.element;
    if (!is$g(shape, "bpmn:SubProcess")) {
      return;
    }
    var properties = context.properties;
    var oldProperties = context.oldProperties;
    var oldId = oldProperties.id, newId = properties.id;
    if (oldId === newId) {
      return;
    }
    if (isPlane(shape)) {
      elementRegistry.updateId(shape, toPlaneId(newId));
      elementRegistry.updateId(oldId, newId);
      return;
    }
    var planeElement = elementRegistry.get(toPlaneId(oldId));
    if (!planeElement) {
      return;
    }
    elementRegistry.updateId(toPlaneId(oldId), toPlaneId(newId));
  }, true);
  this.reverted("element.updateProperties", function(context) {
    var shape = context.element;
    if (!is$g(shape, "bpmn:SubProcess")) {
      return;
    }
    var properties = context.properties;
    var oldProperties = context.oldProperties;
    var oldId = oldProperties.id, newId = properties.id;
    if (oldId === newId) {
      return;
    }
    if (isPlane(shape)) {
      elementRegistry.updateId(shape, toPlaneId(oldId));
      elementRegistry.updateId(newId, oldId);
      return;
    }
    var planeElement = elementRegistry.get(toPlaneId(newId));
    if (!planeElement) {
      return;
    }
    elementRegistry.updateId(planeElement, toPlaneId(oldId));
  }, true);
  eventBus.on("element.changed", function(context) {
    var element = context.element;
    if (!isPlane(element)) {
      return;
    }
    var plane = element;
    var primaryShape = elementRegistry.get(getShapeIdFromPlane(plane));
    if (!primaryShape || primaryShape === plane) {
      return;
    }
    eventBus.fire("element.changed", { element: primaryShape });
  });
  this.executed("shape.toggleCollapse", LOW_PRIORITY$f, function(context) {
    var shape = context.shape;
    if (!is$g(shape, "bpmn:SubProcess")) {
      return;
    }
    if (!isExpanded(shape)) {
      createRoot2(context);
      self2._showRecursively(shape.children);
    } else {
      removeRoot(context);
    }
  }, true);
  this.reverted("shape.toggleCollapse", LOW_PRIORITY$f, function(context) {
    var shape = context.shape;
    if (!is$g(shape, "bpmn:SubProcess")) {
      return;
    }
    if (!isExpanded(shape)) {
      createRoot2(context);
      self2._showRecursively(shape.children);
    } else {
      removeRoot(context);
    }
  }, true);
  this.postExecuted("shape.toggleCollapse", HIGH_PRIORITY$d, function(context) {
    var shape = context.shape;
    if (!is$g(shape, "bpmn:SubProcess")) {
      return;
    }
    var rootElement = context.newRootElement;
    if (!rootElement) {
      return;
    }
    if (!isExpanded(shape)) {
      self2._moveChildrenToShape(shape, rootElement);
    } else {
      self2._moveChildrenToShape(rootElement, shape);
    }
  }, true);
  eventBus.on("copyPaste.createTree", function(context) {
    var element = context.element, children = context.children;
    if (!isCollapsedSubProcess2(element)) {
      return;
    }
    var id = getPlaneIdFromShape(element);
    var parent = elementRegistry.get(id);
    if (parent) {
      children.push.apply(children, parent.children);
    }
  });
  eventBus.on("copyPaste.copyElement", function(context) {
    var descriptor = context.descriptor, element = context.element, elements = context.elements;
    var parent = element.parent;
    var isPlane2 = is$g(getDi(parent), "bpmndi:BPMNPlane");
    if (!isPlane2) {
      return;
    }
    var parentId = getShapeIdFromPlane(parent);
    var referencedShape = find$1(elements, function(element2) {
      return element2.id === parentId;
    });
    if (!referencedShape) {
      return;
    }
    descriptor.parent = referencedShape.id;
  });
  eventBus.on("copyPaste.pasteElement", function(context) {
    var descriptor = context.descriptor;
    if (!descriptor.parent) {
      return;
    }
    if (isCollapsedSubProcess2(descriptor.parent) || descriptor.parent.hidden) {
      descriptor.hidden = true;
    }
  });
}
e$3(SubProcessPlaneBehavior, CommandInterceptor);
SubProcessPlaneBehavior.prototype._moveChildrenToShape = function(source2, target) {
  var modeling = this._modeling;
  var children = source2.children;
  var offset;
  if (!children) {
    return;
  }
  children = children.concat(children.reduce(function(labels, child) {
    if (child.label && child.label.parent !== source2) {
      return labels.concat(child.label);
    }
    return labels;
  }, []));
  var visibleChildren = children.filter(function(child) {
    return !child.hidden;
  });
  if (!visibleChildren.length) {
    modeling.moveElements(children, { x: 0, y: 0 }, target, { autoResize: false });
    return;
  }
  var childrenBounds = getBBox(visibleChildren);
  if (!target.x) {
    offset = {
      x: DEFAULT_POSITION.x - childrenBounds.x,
      y: DEFAULT_POSITION.y - childrenBounds.y
    };
  } else {
    var targetMid = getMid(target);
    var childrenMid = getMid(childrenBounds);
    offset = {
      x: targetMid.x - childrenMid.x,
      y: targetMid.y - childrenMid.y
    };
  }
  modeling.moveElements(children, offset, target, { autoResize: false });
};
SubProcessPlaneBehavior.prototype._showRecursively = function(elements, hidden) {
  var self2 = this;
  var result = [];
  elements.forEach(function(element) {
    element.hidden = !!hidden;
    result = result.concat(element);
    if (element.children) {
      result = result.concat(
        self2._showRecursively(element.children, element.collapsed || hidden)
      );
    }
  });
  return result;
};
SubProcessPlaneBehavior.prototype._addDiagram = function(planeElement) {
  var bpmnjs = this._bpmnjs;
  var diagrams = bpmnjs.getDefinitions().diagrams;
  if (!planeElement.businessObject) {
    planeElement = this._createNewDiagram(planeElement);
  }
  diagrams.push(planeElement.di.$parent);
  return planeElement;
};
SubProcessPlaneBehavior.prototype._createNewDiagram = function(bpmnElement) {
  var bpmnFactory = this._bpmnFactory, elementFactory = this._elementFactory;
  var diPlane = bpmnFactory.create("bpmndi:BPMNPlane", {
    bpmnElement
  });
  var diDiagram = bpmnFactory.create("bpmndi:BPMNDiagram", {
    plane: diPlane
  });
  diPlane.$parent = diDiagram;
  var planeElement = elementFactory.createRoot({
    id: getPlaneIdFromShape(bpmnElement),
    type: bpmnElement.$type,
    di: diPlane,
    businessObject: bpmnElement,
    collapsed: true
  });
  return planeElement;
};
SubProcessPlaneBehavior.prototype._removeDiagram = function(rootElement) {
  var bpmnjs = this._bpmnjs;
  var diagrams = bpmnjs.getDefinitions().diagrams;
  var removedDiagram = find$1(diagrams, function(diagram) {
    return diagram.plane.bpmnElement.id === rootElement.id;
  });
  diagrams.splice(diagrams.indexOf(removedDiagram), 1);
  return removedDiagram;
};
SubProcessPlaneBehavior.$inject = [
  "canvas",
  "eventBus",
  "modeling",
  "elementFactory",
  "bpmnFactory",
  "bpmnjs",
  "elementRegistry"
];
function SubProcessStartEventBehavior(injector, modeling) {
  injector.invoke(CommandInterceptor, this);
  this.postExecuted("shape.replace", function(event2) {
    var oldShape = event2.context.oldShape, newShape = event2.context.newShape;
    if (!is$g(newShape, "bpmn:SubProcess") || !(is$g(oldShape, "bpmn:Task") || is$g(oldShape, "bpmn:CallActivity")) || !isExpanded(newShape)) {
      return;
    }
    var position = getStartEventPosition(newShape);
    modeling.createShape({ type: "bpmn:StartEvent" }, position, newShape);
  });
}
SubProcessStartEventBehavior.$inject = [
  "injector",
  "modeling"
];
e$3(SubProcessStartEventBehavior, CommandInterceptor);
function getStartEventPosition(shape) {
  return {
    x: shape.x + shape.width / 6,
    y: shape.y + shape.height / 2
  };
}
function TextAnnotationBehavior(eventBus) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("connection.create", function(context) {
    const { target } = context;
    if (!is$g(target, "bpmn:TextAnnotation")) {
      return;
    }
    context.parent = target.parent;
  }, true);
  this.preExecute(["shape.create", "shape.resize", "elements.move"], function(context) {
    const shapes = context.shapes || [context.shape];
    if (shapes.length === 1 && is$g(shapes[0], "bpmn:TextAnnotation")) {
      context.hints = context.hints || {};
      context.hints.autoResize = false;
    }
  }, true);
}
e$3(TextAnnotationBehavior, CommandInterceptor);
TextAnnotationBehavior.$inject = [
  "eventBus"
];
function ToggleCollapseConnectionBehaviour(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.postExecuted("shape.toggleCollapse", 1500, function(context) {
    var shape = context.shape;
    if (isExpanded(shape)) {
      return;
    }
    var allChildren = selfAndAllChildren(shape);
    allChildren.forEach(function(child) {
      var incomingConnections = child.incoming.slice(), outgoingConnections = child.outgoing.slice();
      forEach$2(incomingConnections, function(c2) {
        handleConnection(c2, true);
      });
      forEach$2(outgoingConnections, function(c2) {
        handleConnection(c2, false);
      });
    });
    function handleConnection(c2, incoming) {
      if (allChildren.indexOf(c2.source) !== -1 && allChildren.indexOf(c2.target) !== -1) {
        return;
      }
      if (incoming) {
        modeling.reconnectEnd(c2, shape, getMid(shape));
      } else {
        modeling.reconnectStart(c2, shape, getMid(shape));
      }
    }
  }, true);
}
e$3(ToggleCollapseConnectionBehaviour, CommandInterceptor);
ToggleCollapseConnectionBehaviour.$inject = [
  "eventBus",
  "modeling"
];
var LOW_PRIORITY$e = 500;
function ToggleElementCollapseBehaviour(eventBus, elementFactory, modeling) {
  CommandInterceptor.call(this, eventBus);
  function hideEmptyLabels(children) {
    if (children.length) {
      children.forEach(function(child) {
        if (child.type === "label" && !child.businessObject.name) {
          child.hidden = true;
        }
      });
    }
  }
  function expandedBounds(shape, defaultSize) {
    var children = shape.children, newBounds = defaultSize, visibleElements, visibleBBox;
    visibleElements = filterVisible(children).concat([shape]);
    visibleBBox = computeChildrenBBox(visibleElements);
    if (visibleBBox) {
      newBounds.width = Math.max(visibleBBox.width, newBounds.width);
      newBounds.height = Math.max(visibleBBox.height, newBounds.height);
      newBounds.x = visibleBBox.x + (visibleBBox.width - newBounds.width) / 2;
      newBounds.y = visibleBBox.y + (visibleBBox.height - newBounds.height) / 2;
    } else {
      newBounds.x = shape.x + (shape.width - newBounds.width) / 2;
      newBounds.y = shape.y + (shape.height - newBounds.height) / 2;
    }
    return newBounds;
  }
  function collapsedBounds(shape, defaultSize) {
    return {
      x: shape.x + (shape.width - defaultSize.width) / 2,
      y: shape.y + (shape.height - defaultSize.height) / 2,
      width: defaultSize.width,
      height: defaultSize.height
    };
  }
  this.executed(["shape.toggleCollapse"], LOW_PRIORITY$e, function(e2) {
    var context = e2.context, shape = context.shape;
    if (!is$g(shape, "bpmn:SubProcess")) {
      return;
    }
    if (!shape.collapsed) {
      hideEmptyLabels(shape.children);
      getDi(shape).isExpanded = true;
    } else {
      getDi(shape).isExpanded = false;
    }
  });
  this.reverted(["shape.toggleCollapse"], LOW_PRIORITY$e, function(e2) {
    var context = e2.context;
    var shape = context.shape;
    if (!shape.collapsed) {
      getDi(shape).isExpanded = true;
    } else {
      getDi(shape).isExpanded = false;
    }
  });
  this.postExecuted(["shape.toggleCollapse"], LOW_PRIORITY$e, function(e2) {
    var shape = e2.context.shape, defaultSize = elementFactory.getDefaultSize(shape), newBounds;
    if (shape.collapsed) {
      newBounds = collapsedBounds(shape, defaultSize);
    } else {
      newBounds = expandedBounds(shape, defaultSize);
    }
    modeling.resizeShape(shape, newBounds, null, {
      autoResize: shape.collapsed ? false : "nwse"
    });
  });
}
e$3(ToggleElementCollapseBehaviour, CommandInterceptor);
ToggleElementCollapseBehaviour.$inject = [
  "eventBus",
  "elementFactory",
  "modeling"
];
function filterVisible(elements) {
  return elements.filter(function(e2) {
    return !e2.hidden;
  });
}
function UnclaimIdBehavior(canvas, injector, moddle, modeling) {
  injector.invoke(CommandInterceptor, this);
  this.preExecute("shape.delete", function(event2) {
    var context = event2.context, shape = context.shape, shapeBo = shape.businessObject;
    if (isLabel(shape)) {
      return;
    }
    if (is$g(shape, "bpmn:Participant") && isExpanded(shape)) {
      moddle.ids.unclaim(shapeBo.processRef.id);
    }
    modeling.unclaimId(shapeBo.id, shapeBo);
  });
  this.preExecute("connection.delete", function(event2) {
    var context = event2.context, connection = context.connection, connectionBo = connection.businessObject;
    modeling.unclaimId(connectionBo.id, connectionBo);
  });
  this.preExecute("canvas.updateRoot", function() {
    var rootElement = canvas.getRootElement(), rootElementBo = rootElement.businessObject;
    if (is$g(rootElement, "bpmn:Collaboration")) {
      moddle.ids.unclaim(rootElementBo.id);
    }
  });
}
e$3(UnclaimIdBehavior, CommandInterceptor);
UnclaimIdBehavior.$inject = ["canvas", "injector", "moddle", "modeling"];
function DeleteSequenceFlowBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  this.preExecute("connection.delete", function(event2) {
    var context = event2.context, connection = context.connection, source2 = connection.source;
    if (isDefaultFlow$3(connection, source2)) {
      modeling.updateProperties(source2, {
        "default": null
      });
    }
  });
}
e$3(DeleteSequenceFlowBehavior, CommandInterceptor);
DeleteSequenceFlowBehavior.$inject = [
  "eventBus",
  "modeling"
];
function isDefaultFlow$3(connection, source2) {
  if (!is$g(connection, "bpmn:SequenceFlow")) {
    return false;
  }
  var sourceBo = getBusinessObject(source2), sequenceFlow = getBusinessObject(connection);
  return sourceBo.get("default") === sequenceFlow;
}
var LOW_PRIORITY$d = 500, HIGH_PRIORITY$c = 5e3;
function UpdateFlowNodeRefsBehavior(eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  var context;
  function initContext() {
    context = context || new UpdateContext();
    context.enter();
    return context;
  }
  function getContext() {
    if (!context) {
      throw new Error("out of bounds release");
    }
    return context;
  }
  function releaseContext() {
    if (!context) {
      throw new Error("out of bounds release");
    }
    var triggerUpdate = context.leave();
    if (triggerUpdate) {
      modeling.updateLaneRefs(context.flowNodes, context.lanes);
      context = null;
    }
    return triggerUpdate;
  }
  var laneRefUpdateEvents = [
    "spaceTool",
    "lane.add",
    "lane.resize",
    "lane.split",
    "elements.create",
    "elements.delete",
    "elements.move",
    "shape.create",
    "shape.delete",
    "shape.move",
    "shape.resize"
  ];
  this.preExecute(laneRefUpdateEvents, HIGH_PRIORITY$c, function(event2) {
    initContext();
  });
  this.postExecuted(laneRefUpdateEvents, LOW_PRIORITY$d, function(event2) {
    releaseContext();
  });
  this.preExecute([
    "shape.create",
    "shape.move",
    "shape.delete",
    "shape.resize"
  ], function(event2) {
    var context2 = event2.context, shape = context2.shape;
    var updateContext = getContext();
    if (shape.labelTarget) {
      return;
    }
    if (is$g(shape, "bpmn:Lane")) {
      updateContext.addLane(shape);
    }
    if (is$g(shape, "bpmn:FlowNode")) {
      updateContext.addFlowNode(shape);
    }
  });
}
UpdateFlowNodeRefsBehavior.$inject = [
  "eventBus",
  "modeling"
];
e$3(UpdateFlowNodeRefsBehavior, CommandInterceptor);
function UpdateContext() {
  this.flowNodes = [];
  this.lanes = [];
  this.counter = 0;
  this.addLane = function(lane) {
    this.lanes.push(lane);
  };
  this.addFlowNode = function(flowNode) {
    this.flowNodes.push(flowNode);
  };
  this.enter = function() {
    this.counter++;
  };
  this.leave = function() {
    this.counter--;
    return !this.counter;
  };
}
const BehaviorModule = {
  __init__: [
    "adaptiveLabelPositioningBehavior",
    "appendBehavior",
    "associationBehavior",
    "attachEventBehavior",
    "boundaryEventBehavior",
    "compensateBoundaryEventBehaviour",
    "createBehavior",
    "createDataObjectBehavior",
    "createParticipantBehavior",
    "dataInputAssociationBehavior",
    "dataStoreBehavior",
    "deleteLaneBehavior",
    "detachEventBehavior",
    "dropOnFlowBehavior",
    "eventBasedGatewayBehavior",
    "fixHoverBehavior",
    "groupBehavior",
    "importDockingFix",
    "isHorizontalFix",
    "labelBehavior",
    "layoutConnectionBehavior",
    "messageFlowBehavior",
    "nonInterruptingBehavior",
    "removeElementBehavior",
    "removeEmbeddedLabelBoundsBehavior",
    "removeParticipantBehavior",
    "replaceConnectionBehavior",
    "replaceElementBehaviour",
    "resizeBehavior",
    "resizeLaneBehavior",
    "rootElementReferenceBehavior",
    "spaceToolBehavior",
    "subProcessPlaneBehavior",
    "subProcessStartEventBehavior",
    "textAnnotationBehavior",
    "toggleCollapseConnectionBehaviour",
    "toggleElementCollapseBehaviour",
    "unclaimIdBehavior",
    "updateFlowNodeRefsBehavior",
    "unsetDefaultFlowBehavior"
  ],
  adaptiveLabelPositioningBehavior: ["type", AdaptiveLabelPositioningBehavior],
  appendBehavior: ["type", AppendBehavior],
  associationBehavior: ["type", AssociationBehavior],
  attachEventBehavior: ["type", AttachEventBehavior],
  boundaryEventBehavior: ["type", BoundaryEventBehavior],
  compensateBoundaryEventBehaviour: ["type", CompensateBoundaryEventBehavior],
  createBehavior: ["type", CreateBehavior],
  createDataObjectBehavior: ["type", CreateDataObjectBehavior],
  createParticipantBehavior: ["type", CreateParticipantBehavior],
  dataInputAssociationBehavior: ["type", DataInputAssociationBehavior],
  dataStoreBehavior: ["type", DataStoreBehavior],
  deleteLaneBehavior: ["type", DeleteLaneBehavior],
  detachEventBehavior: ["type", DetachEventBehavior],
  dropOnFlowBehavior: ["type", DropOnFlowBehavior],
  eventBasedGatewayBehavior: ["type", EventBasedGatewayBehavior],
  fixHoverBehavior: ["type", FixHoverBehavior],
  groupBehavior: ["type", GroupBehavior],
  importDockingFix: ["type", ImportDockingFix],
  isHorizontalFix: ["type", IsHorizontalFix],
  labelBehavior: ["type", LabelBehavior],
  layoutConnectionBehavior: ["type", LayoutConnectionBehavior],
  messageFlowBehavior: ["type", MessageFlowBehavior],
  nonInterruptingBehavior: ["type", NonInterruptingBehavior],
  removeElementBehavior: ["type", RemoveElementBehavior],
  removeEmbeddedLabelBoundsBehavior: ["type", RemoveEmbeddedLabelBoundsBehavior],
  removeParticipantBehavior: ["type", RemoveParticipantBehavior],
  replaceConnectionBehavior: ["type", ReplaceConnectionBehavior],
  replaceElementBehaviour: ["type", ReplaceElementBehaviour],
  resizeBehavior: ["type", ResizeBehavior$1],
  resizeLaneBehavior: ["type", ResizeLaneBehavior],
  rootElementReferenceBehavior: ["type", RootElementReferenceBehavior],
  spaceToolBehavior: ["type", SpaceToolBehavior$1],
  subProcessPlaneBehavior: ["type", SubProcessPlaneBehavior],
  subProcessStartEventBehavior: ["type", SubProcessStartEventBehavior],
  textAnnotationBehavior: ["type", TextAnnotationBehavior],
  toggleCollapseConnectionBehaviour: ["type", ToggleCollapseConnectionBehaviour],
  toggleElementCollapseBehaviour: ["type", ToggleElementCollapseBehaviour],
  unclaimIdBehavior: ["type", UnclaimIdBehavior],
  unsetDefaultFlowBehavior: ["type", DeleteSequenceFlowBehavior],
  updateFlowNodeRefsBehavior: ["type", UpdateFlowNodeRefsBehavior]
};
function getBoundaryAttachment(position, targetBounds) {
  var orientation = getOrientation(position, targetBounds, -15);
  if (orientation !== "intersect") {
    return orientation;
  } else {
    return null;
  }
}
function BpmnRules(eventBus) {
  RuleProvider.call(this, eventBus);
}
e$3(BpmnRules, RuleProvider);
BpmnRules.$inject = ["eventBus"];
BpmnRules.prototype.init = function() {
  this.addRule("connection.start", function(context) {
    var source2 = context.source;
    return canStartConnection(source2);
  });
  this.addRule("connection.create", function(context) {
    var source2 = context.source, target = context.target, hints = context.hints || {}, targetParent = hints.targetParent, targetAttach = hints.targetAttach;
    if (targetAttach) {
      return false;
    }
    if (targetParent) {
      target.parent = targetParent;
    }
    try {
      return canConnect(source2, target);
    } finally {
      if (targetParent) {
        target.parent = null;
      }
    }
  });
  this.addRule("connection.reconnect", function(context) {
    var connection = context.connection, source2 = context.source, target = context.target;
    return canConnect(source2, target, connection);
  });
  this.addRule("connection.updateWaypoints", function(context) {
    return {
      type: context.connection.type
    };
  });
  this.addRule("shape.resize", function(context) {
    var shape = context.shape, newBounds = context.newBounds;
    return canResize(shape, newBounds);
  });
  this.addRule("elements.create", function(context) {
    var elements = context.elements, position = context.position, target = context.target;
    if (isConnection(target) && !canInsert(elements, target)) {
      return false;
    }
    return every$1(elements, function(element) {
      if (isConnection(element)) {
        return canConnect(element.source, element.target, element);
      }
      if (element.host) {
        return canAttach(element, element.host, null, position);
      }
      return canCreate(element, target, null);
    });
  });
  this.addRule("elements.move", function(context) {
    var target = context.target, shapes = context.shapes, position = context.position;
    return canAttach(shapes, target, null, position) || canReplace(shapes, target, position) || canMove(shapes, target) || canInsert(shapes, target);
  });
  this.addRule("shape.create", function(context) {
    return canCreate(
      context.shape,
      context.target,
      context.source,
      context.position
    );
  });
  this.addRule("shape.attach", function(context) {
    return canAttach(
      context.shape,
      context.target,
      null,
      context.position
    );
  });
  this.addRule("element.copy", function(context) {
    var element = context.element, elements = context.elements;
    return canCopy(elements, element);
  });
};
BpmnRules.prototype.canConnectMessageFlow = canConnectMessageFlow;
BpmnRules.prototype.canConnectSequenceFlow = canConnectSequenceFlow;
BpmnRules.prototype.canConnectDataAssociation = canConnectDataAssociation;
BpmnRules.prototype.canConnectAssociation = canConnectAssociation;
BpmnRules.prototype.canConnectCompensationAssociation = canConnectCompensationAssociation;
BpmnRules.prototype.canMove = canMove;
BpmnRules.prototype.canAttach = canAttach;
BpmnRules.prototype.canReplace = canReplace;
BpmnRules.prototype.canDrop = canDrop;
BpmnRules.prototype.canInsert = canInsert;
BpmnRules.prototype.canCreate = canCreate;
BpmnRules.prototype.canConnect = canConnect;
BpmnRules.prototype.canResize = canResize;
BpmnRules.prototype.canCopy = canCopy;
function canStartConnection(element) {
  if (nonExistingOrLabel(element)) {
    return null;
  }
  return isAny$7(element, [
    "bpmn:FlowNode",
    "bpmn:InteractionNode",
    "bpmn:DataObjectReference",
    "bpmn:DataStoreReference",
    "bpmn:Group",
    "bpmn:TextAnnotation"
  ]);
}
function nonExistingOrLabel(element) {
  return !element || isLabel(element);
}
function isSame$1(a2, b2) {
  return a2 === b2;
}
function getOrganizationalParent(element) {
  do {
    if (is$g(element, "bpmn:Process")) {
      return getBusinessObject(element);
    }
    if (is$g(element, "bpmn:Participant")) {
      return getBusinessObject(element).processRef || getBusinessObject(element);
    }
  } while (element = element.parent);
}
function isTextAnnotation(element) {
  return is$g(element, "bpmn:TextAnnotation");
}
function isGroup(element) {
  return is$g(element, "bpmn:Group") && !element.labelTarget;
}
function isCompensationBoundary$1(element) {
  return is$g(element, "bpmn:BoundaryEvent") && hasEventDefinition$1(element, "bpmn:CompensateEventDefinition");
}
function isForCompensation(element) {
  return getBusinessObject(element).isForCompensation;
}
function isSameOrganization(a2, b2) {
  var parentA = getOrganizationalParent(a2), parentB = getOrganizationalParent(b2);
  return parentA === parentB;
}
function isMessageFlowSource(element) {
  return is$g(element, "bpmn:InteractionNode") && !is$g(element, "bpmn:BoundaryEvent") && (!is$g(element, "bpmn:Event") || is$g(element, "bpmn:ThrowEvent") && hasEventDefinitionOrNone(element, "bpmn:MessageEventDefinition"));
}
function isMessageFlowTarget(element) {
  return is$g(element, "bpmn:InteractionNode") && !isForCompensation(element) && (!is$g(element, "bpmn:Event") || is$g(element, "bpmn:CatchEvent") && hasEventDefinitionOrNone(element, "bpmn:MessageEventDefinition")) && !(is$g(element, "bpmn:BoundaryEvent") && !hasEventDefinition$1(element, "bpmn:MessageEventDefinition"));
}
function getScopeParent(element) {
  var parent = element;
  while (parent = parent.parent) {
    if (is$g(parent, "bpmn:FlowElementsContainer")) {
      return getBusinessObject(parent);
    }
    if (is$g(parent, "bpmn:Participant")) {
      return getBusinessObject(parent).processRef;
    }
  }
  return null;
}
function isSameScope(a2, b2) {
  var scopeParentA = getScopeParent(a2), scopeParentB = getScopeParent(b2);
  return scopeParentA === scopeParentB;
}
function hasEventDefinition$1(element, eventDefinition) {
  var businessObject = getBusinessObject(element);
  return !!find$1(businessObject.eventDefinitions || [], function(definition) {
    return is$g(definition, eventDefinition);
  });
}
function hasEventDefinitionOrNone(element, eventDefinition) {
  var businessObject = getBusinessObject(element);
  return (businessObject.eventDefinitions || []).every(function(definition) {
    return is$g(definition, eventDefinition);
  });
}
function isSequenceFlowSource(element) {
  return is$g(element, "bpmn:FlowNode") && !is$g(element, "bpmn:EndEvent") && !isEventSubProcess(element) && !(is$g(element, "bpmn:IntermediateThrowEvent") && hasEventDefinition$1(element, "bpmn:LinkEventDefinition")) && !isCompensationBoundary$1(element) && !isForCompensation(element);
}
function isSequenceFlowTarget(element) {
  return is$g(element, "bpmn:FlowNode") && !is$g(element, "bpmn:StartEvent") && !is$g(element, "bpmn:BoundaryEvent") && !isEventSubProcess(element) && !(is$g(element, "bpmn:IntermediateCatchEvent") && hasEventDefinition$1(element, "bpmn:LinkEventDefinition")) && !isForCompensation(element);
}
function isEventBasedTarget(element) {
  return is$g(element, "bpmn:ReceiveTask") || is$g(element, "bpmn:IntermediateCatchEvent") && (hasEventDefinition$1(element, "bpmn:MessageEventDefinition") || hasEventDefinition$1(element, "bpmn:TimerEventDefinition") || hasEventDefinition$1(element, "bpmn:ConditionalEventDefinition") || hasEventDefinition$1(element, "bpmn:SignalEventDefinition"));
}
function getParents(element) {
  var parents = [];
  while (element) {
    element = element.parent;
    if (element) {
      parents.push(element);
    }
  }
  return parents;
}
function isParent(possibleParent, element) {
  var allParents = getParents(element);
  return allParents.indexOf(possibleParent) !== -1;
}
function canConnect(source2, target, connection) {
  if (nonExistingOrLabel(source2) || nonExistingOrLabel(target)) {
    return null;
  }
  if (!is$g(connection, "bpmn:DataAssociation")) {
    if (canConnectMessageFlow(source2, target)) {
      return { type: "bpmn:MessageFlow" };
    }
    if (canConnectSequenceFlow(source2, target)) {
      return { type: "bpmn:SequenceFlow" };
    }
  }
  var connectDataAssociation = canConnectDataAssociation(source2, target);
  if (connectDataAssociation) {
    return connectDataAssociation;
  }
  if (canConnectCompensationAssociation(source2, target)) {
    return {
      type: "bpmn:Association",
      associationDirection: "One"
    };
  }
  if (canConnectAssociation(source2, target)) {
    return {
      type: "bpmn:Association",
      associationDirection: "None"
    };
  }
  return false;
}
function canDrop(element, target) {
  if (isLabel(element) || isGroup(element)) {
    return true;
  }
  if (is$g(target, "bpmn:Participant") && !isExpanded(target)) {
    return false;
  }
  if (is$g(element, "bpmn:Participant")) {
    return is$g(target, "bpmn:Process") || is$g(target, "bpmn:Collaboration");
  }
  if (isAny$7(element, ["bpmn:DataInput", "bpmn:DataOutput"])) {
    if (element.parent) {
      return target === element.parent;
    }
  }
  if (is$g(element, "bpmn:Lane")) {
    return is$g(target, "bpmn:Participant") || is$g(target, "bpmn:Lane");
  }
  if (is$g(element, "bpmn:BoundaryEvent") && !isDroppableBoundaryEvent(element)) {
    return false;
  }
  if (is$g(element, "bpmn:FlowElement") && !is$g(element, "bpmn:DataStoreReference")) {
    if (is$g(target, "bpmn:FlowElementsContainer")) {
      return isExpanded(target);
    }
    return isAny$7(target, ["bpmn:Participant", "bpmn:Lane"]);
  }
  if (is$g(element, "bpmn:DataStoreReference") && is$g(target, "bpmn:Collaboration")) {
    return some$1(getBusinessObject(target).get("participants"), function(participant) {
      return !!participant.get("processRef");
    });
  }
  if (isAny$7(element, ["bpmn:Artifact", "bpmn:DataAssociation", "bpmn:DataStoreReference"])) {
    return isAny$7(target, [
      "bpmn:Collaboration",
      "bpmn:Lane",
      "bpmn:Participant",
      "bpmn:Process",
      "bpmn:SubProcess"
    ]);
  }
  if (is$g(element, "bpmn:MessageFlow")) {
    return is$g(target, "bpmn:Collaboration") || element.source.parent == target || element.target.parent == target;
  }
  return false;
}
function isDroppableBoundaryEvent(event2) {
  return getBusinessObject(event2).cancelActivity && (hasNoEventDefinition(event2) || hasCommonBoundaryIntermediateEventDefinition(event2));
}
function isBoundaryEvent(element) {
  return !isLabel(element) && is$g(element, "bpmn:BoundaryEvent");
}
function isLane(element) {
  return is$g(element, "bpmn:Lane");
}
function isBoundaryCandidate(element) {
  if (isBoundaryEvent(element)) {
    return true;
  }
  if (is$g(element, "bpmn:IntermediateThrowEvent") && hasNoEventDefinition(element)) {
    return true;
  }
  return is$g(element, "bpmn:IntermediateCatchEvent") && hasCommonBoundaryIntermediateEventDefinition(element);
}
function hasNoEventDefinition(element) {
  var businessObject = getBusinessObject(element);
  return businessObject && !(businessObject.eventDefinitions && businessObject.eventDefinitions.length);
}
function hasCommonBoundaryIntermediateEventDefinition(element) {
  return hasOneOfEventDefinitions(element, [
    "bpmn:MessageEventDefinition",
    "bpmn:TimerEventDefinition",
    "bpmn:SignalEventDefinition",
    "bpmn:ConditionalEventDefinition"
  ]);
}
function hasOneOfEventDefinitions(element, eventDefinitions) {
  return eventDefinitions.some(function(definition) {
    return hasEventDefinition$1(element, definition);
  });
}
function isReceiveTaskAfterEventBasedGateway(element) {
  return is$g(element, "bpmn:ReceiveTask") && find$1(element.incoming, function(incoming) {
    return is$g(incoming.source, "bpmn:EventBasedGateway");
  });
}
function canAttach(elements, target, source2, position) {
  if (!Array.isArray(elements)) {
    elements = [elements];
  }
  if (elements.length !== 1) {
    return false;
  }
  var element = elements[0];
  if (isLabel(element)) {
    return false;
  }
  if (!isBoundaryCandidate(element)) {
    return false;
  }
  if (isEventSubProcess(target)) {
    return false;
  }
  if (!is$g(target, "bpmn:Activity") || isForCompensation(target)) {
    return false;
  }
  if (position && !getBoundaryAttachment(position, target)) {
    return false;
  }
  if (isReceiveTaskAfterEventBasedGateway(target)) {
    return false;
  }
  return "attach";
}
function canReplace(elements, target, position) {
  if (!target) {
    return false;
  }
  var canExecute = {
    replacements: []
  };
  forEach$2(elements, function(element) {
    if (!isEventSubProcess(target)) {
      if (is$g(element, "bpmn:StartEvent") && element.type !== "label" && canDrop(element, target)) {
        if (!isInterrupting(element)) {
          canExecute.replacements.push({
            oldElementId: element.id,
            newElementType: "bpmn:StartEvent"
          });
        }
        if (hasErrorEventDefinition(element) || hasEscalationEventDefinition(element) || hasCompensateEventDefinition(element)) {
          canExecute.replacements.push({
            oldElementId: element.id,
            newElementType: "bpmn:StartEvent"
          });
        }
        if (hasOneOfEventDefinitions(
          element,
          [
            "bpmn:MessageEventDefinition",
            "bpmn:TimerEventDefinition",
            "bpmn:SignalEventDefinition",
            "bpmn:ConditionalEventDefinition"
          ]
        ) && is$g(target, "bpmn:SubProcess")) {
          canExecute.replacements.push({
            oldElementId: element.id,
            newElementType: "bpmn:StartEvent"
          });
        }
      }
    }
    if (!is$g(target, "bpmn:Transaction")) {
      if (hasEventDefinition$1(element, "bpmn:CancelEventDefinition") && element.type !== "label") {
        if (is$g(element, "bpmn:EndEvent") && canDrop(element, target)) {
          canExecute.replacements.push({
            oldElementId: element.id,
            newElementType: "bpmn:EndEvent"
          });
        }
        if (is$g(element, "bpmn:BoundaryEvent") && canAttach(element, target, null, position)) {
          canExecute.replacements.push({
            oldElementId: element.id,
            newElementType: "bpmn:BoundaryEvent"
          });
        }
      }
    }
  });
  return canExecute.replacements.length ? canExecute : false;
}
function canMove(elements, target) {
  if (some$1(elements, isLane)) {
    return false;
  }
  if (!target) {
    return true;
  }
  return elements.every(function(element) {
    return canDrop(element, target);
  });
}
function canCreate(shape, target, source2, position) {
  if (!target) {
    return false;
  }
  if (isLabel(shape) || isGroup(shape)) {
    return true;
  }
  if (isSame$1(source2, target)) {
    return false;
  }
  if (source2 && isParent(source2, target)) {
    return false;
  }
  return canDrop(shape, target) || canInsert(shape, target);
}
function canResize(shape, newBounds) {
  if (is$g(shape, "bpmn:SubProcess")) {
    return isExpanded(shape) && (!newBounds || newBounds.width >= 100 && newBounds.height >= 80);
  }
  if (is$g(shape, "bpmn:Lane")) {
    return true;
  }
  if (is$g(shape, "bpmn:Participant")) {
    return true;
  }
  if (isTextAnnotation(shape)) {
    return true;
  }
  if (isGroup(shape)) {
    return true;
  }
  return false;
}
function isOneTextAnnotation(source2, target) {
  var sourceTextAnnotation = isTextAnnotation(source2), targetTextAnnotation = isTextAnnotation(target);
  return (sourceTextAnnotation || targetTextAnnotation) && sourceTextAnnotation !== targetTextAnnotation;
}
function canConnectAssociation(source2, target) {
  if (isParent(target, source2) || isParent(source2, target)) {
    return false;
  }
  if (isOneTextAnnotation(source2, target)) {
    return true;
  }
  return !!canConnectDataAssociation(source2, target);
}
function canConnectCompensationAssociation(source2, target) {
  return isSameScope(source2, target) && isCompensationBoundary$1(source2) && is$g(target, "bpmn:Activity") && !isHostOfElement(target, source2) && !isEventSubProcess(target);
}
function canConnectMessageFlow(source2, target) {
  if (getRootElement(source2) && !getRootElement(target)) {
    return false;
  }
  return isMessageFlowSource(source2) && isMessageFlowTarget(target) && !isSameOrganization(source2, target);
}
function canConnectSequenceFlow(source2, target) {
  return isSequenceFlowSource(source2) && isSequenceFlowTarget(target) && isSameScope(source2, target) && !(is$g(source2, "bpmn:EventBasedGateway") && !isEventBasedTarget(target));
}
function canConnectDataAssociation(source2, target) {
  if (isAny$7(source2, ["bpmn:DataObjectReference", "bpmn:DataStoreReference"]) && isAny$7(target, ["bpmn:Activity", "bpmn:ThrowEvent"])) {
    return { type: "bpmn:DataInputAssociation" };
  }
  if (isAny$7(target, ["bpmn:DataObjectReference", "bpmn:DataStoreReference"]) && isAny$7(source2, ["bpmn:Activity", "bpmn:CatchEvent"])) {
    return { type: "bpmn:DataOutputAssociation" };
  }
  return false;
}
function canInsert(shape, connection, position) {
  if (!connection) {
    return false;
  }
  if (Array.isArray(shape)) {
    if (shape.length !== 1) {
      return false;
    }
    shape = shape[0];
  }
  if (connection.source === shape || connection.target === shape) {
    return false;
  }
  return isAny$7(connection, ["bpmn:SequenceFlow", "bpmn:MessageFlow"]) && !isLabel(connection) && is$g(shape, "bpmn:FlowNode") && !is$g(shape, "bpmn:BoundaryEvent") && canDrop(shape, connection.parent);
}
function includes$6(elements, element) {
  return elements && element && elements.indexOf(element) !== -1;
}
function canCopy(elements, element) {
  if (isLabel(element)) {
    return true;
  }
  if (is$g(element, "bpmn:Lane") && !includes$6(elements, element.parent)) {
    return false;
  }
  return true;
}
function getRootElement(element) {
  return getParent(element, "bpmn:Process") || getParent(element, "bpmn:Collaboration");
}
function isHostOfElement(potentialHost, element) {
  return potentialHost.attachers.includes(element);
}
const RulesModule = {
  __depends__: [
    RulesModule$1
  ],
  __init__: ["bpmnRules"],
  bpmnRules: ["type", BpmnRules]
};
var HIGH_PRIORITY$b = 2e3;
function BpmnDiOrdering(eventBus, canvas) {
  eventBus.on("saveXML.start", HIGH_PRIORITY$b, orderDi);
  function orderDi() {
    var rootElements = canvas.getRootElements();
    forEach$2(rootElements, function(root) {
      var rootDi = getDi(root), elements, diElements;
      elements = selfAndAllChildren([root], false);
      elements = filter$1(elements, function(element) {
        return element !== root && !element.labelTarget;
      });
      diElements = map$2(elements, getDi);
      rootDi.set("planeElement", diElements);
    });
  }
}
BpmnDiOrdering.$inject = ["eventBus", "canvas"];
const DiOrderingModule = {
  __init__: [
    "bpmnDiOrdering"
  ],
  bpmnDiOrdering: ["type", BpmnDiOrdering]
};
function OrderingProvider(eventBus) {
  CommandInterceptor.call(this, eventBus);
  var self2 = this;
  this.preExecute(["shape.create", "connection.create"], function(event2) {
    var context = event2.context, element = context.shape || context.connection, parent = context.parent;
    var ordering = self2.getOrdering(element, parent);
    if (ordering) {
      if (ordering.parent !== void 0) {
        context.parent = ordering.parent;
      }
      context.parentIndex = ordering.index;
    }
  });
  this.preExecute(["shape.move", "connection.move"], function(event2) {
    var context = event2.context, element = context.shape || context.connection, parent = context.newParent || element.parent;
    var ordering = self2.getOrdering(element, parent);
    if (ordering) {
      if (ordering.parent !== void 0) {
        context.newParent = ordering.parent;
      }
      context.newParentIndex = ordering.index;
    }
  });
}
OrderingProvider.prototype.getOrdering = function(element, newParent) {
  return null;
};
e$3(OrderingProvider, CommandInterceptor);
function BpmnOrderingProvider(eventBus, canvas) {
  OrderingProvider.call(this, eventBus);
  var orders = [
    { type: "bpmn:SubProcess", order: { level: 6 } },
    // handle SequenceFlow(s) like message flows and render them always on top
    {
      type: "bpmn:SequenceFlow",
      order: {
        level: 9,
        containers: [
          "bpmn:Participant",
          "bpmn:FlowElementsContainer"
        ]
      }
    },
    // handle DataAssociation(s) like message flows and render them always on top
    {
      type: "bpmn:DataAssociation",
      order: {
        level: 9,
        containers: [
          "bpmn:Collaboration",
          "bpmn:FlowElementsContainer"
        ]
      }
    },
    {
      type: "bpmn:TextAnnotation",
      order: {
        level: 9
      }
    },
    {
      type: "bpmn:MessageFlow",
      order: {
        level: 9,
        containers: ["bpmn:Collaboration"]
      }
    },
    {
      type: "bpmn:Association",
      order: {
        level: 6,
        containers: [
          "bpmn:Participant",
          "bpmn:FlowElementsContainer",
          "bpmn:Collaboration"
        ]
      }
    },
    { type: "bpmn:BoundaryEvent", order: { level: 8 } },
    {
      type: "bpmn:Group",
      order: {
        level: 10,
        containers: [
          "bpmn:Collaboration",
          "bpmn:FlowElementsContainer"
        ]
      }
    },
    { type: "bpmn:FlowElement", order: { level: 5 } },
    { type: "bpmn:Participant", order: { level: -2 } },
    { type: "bpmn:Lane", order: { level: -1 } }
  ];
  function computeOrder(element) {
    if (element.labelTarget) {
      return { level: 10 };
    }
    var entry = find$1(orders, function(o2) {
      return isAny$7(element, [o2.type]);
    });
    return entry && entry.order || { level: 1 };
  }
  function getOrder(element) {
    var order = element.order;
    if (!order) {
      element.order = order = computeOrder(element);
    }
    if (!order) {
      throw new Error(`no order for <${element.id}>`);
    }
    return order;
  }
  function findActualParent(element, newParent, containers) {
    var actualParent = newParent;
    while (actualParent) {
      if (isAny$7(actualParent, containers)) {
        break;
      }
      actualParent = actualParent.parent;
    }
    if (!actualParent) {
      throw new Error(`no parent for <${element.id}> in <${newParent && newParent.id}>`);
    }
    return actualParent;
  }
  this.getOrdering = function(element, newParent) {
    if (element.labelTarget || is$g(element, "bpmn:TextAnnotation")) {
      return {
        parent: canvas.findRoot(newParent) || canvas.getRootElement(),
        index: -1
      };
    }
    var elementOrder = getOrder(element);
    if (elementOrder.containers) {
      newParent = findActualParent(element, newParent, elementOrder.containers);
    }
    var currentIndex = newParent.children.indexOf(element);
    var insertIndex = findIndex$1(newParent.children, function(child) {
      if (!element.labelTarget && child.labelTarget) {
        return false;
      }
      return elementOrder.level < getOrder(child).level;
    });
    if (insertIndex !== -1) {
      if (currentIndex !== -1 && currentIndex < insertIndex) {
        insertIndex -= 1;
      }
    }
    return {
      index: insertIndex,
      parent: newParent
    };
  };
}
BpmnOrderingProvider.$inject = ["eventBus", "canvas"];
e$3(BpmnOrderingProvider, OrderingProvider);
const OrderingModule = {
  __init__: ["bpmnOrderingProvider"],
  bpmnOrderingProvider: ["type", BpmnOrderingProvider]
};
function Clipboard() {
}
Clipboard.prototype.get = function() {
  return this._data;
};
Clipboard.prototype.set = function(data) {
  this._data = data;
};
Clipboard.prototype.clear = function() {
  var data = this._data;
  delete this._data;
  return data;
};
Clipboard.prototype.isEmpty = function() {
  return !this._data;
};
const ClipboardModule = {
  clipboard: ["type", Clipboard]
};
var MARKER_OK$2 = "drop-ok", MARKER_NOT_OK$2 = "drop-not-ok", MARKER_ATTACH$2 = "attach-ok", MARKER_NEW_PARENT$1 = "new-parent";
var PREFIX = "create";
var HIGH_PRIORITY$a = 2e3;
function Create(canvas, dragging, eventBus, modeling, rules2) {
  function canCreate2(elements, target, position, source2, hints) {
    if (!target) {
      return false;
    }
    elements = filter$1(elements, function(element) {
      var labelTarget = element.labelTarget;
      return !element.parent && !(isLabel(element) && elements.indexOf(labelTarget) !== -1);
    });
    var shape = find$1(elements, function(element) {
      return !isConnection(element);
    });
    var attach = false, connect = false, create2 = false;
    if (isSingleShape(elements)) {
      attach = rules2.allowed("shape.attach", {
        position,
        shape,
        target
      });
    }
    if (!attach) {
      if (isSingleShape(elements)) {
        create2 = rules2.allowed("shape.create", {
          position,
          shape,
          source: source2,
          target
        });
      } else {
        create2 = rules2.allowed("elements.create", {
          elements,
          position,
          target
        });
      }
    }
    var connectionTarget = hints.connectionTarget;
    if (create2 || attach) {
      if (shape && source2) {
        connect = rules2.allowed("connection.create", {
          source: connectionTarget === source2 ? shape : source2,
          target: connectionTarget === source2 ? source2 : shape,
          hints: {
            targetParent: target,
            targetAttach: attach
          }
        });
      }
      return {
        attach,
        connect
      };
    }
    if (create2 === null || attach === null) {
      return null;
    }
    return false;
  }
  function setMarker(element, marker) {
    [MARKER_ATTACH$2, MARKER_OK$2, MARKER_NOT_OK$2, MARKER_NEW_PARENT$1].forEach(function(m2) {
      if (m2 === marker) {
        canvas.addMarker(element, m2);
      } else {
        canvas.removeMarker(element, m2);
      }
    });
  }
  eventBus.on(["create.move", "create.hover"], function(event2) {
    var context = event2.context, elements = context.elements, hover = event2.hover, source2 = context.source, hints = context.hints || {};
    if (!hover) {
      context.canExecute = false;
      context.target = null;
      return;
    }
    ensureConstraints$1(event2);
    var position = {
      x: event2.x,
      y: event2.y
    };
    var canExecute = context.canExecute = hover && canCreate2(elements, hover, position, source2, hints);
    if (hover && canExecute !== null) {
      context.target = hover;
      if (canExecute && canExecute.attach) {
        setMarker(hover, MARKER_ATTACH$2);
      } else {
        setMarker(hover, canExecute ? MARKER_NEW_PARENT$1 : MARKER_NOT_OK$2);
      }
    }
  });
  eventBus.on(["create.end", "create.out", "create.cleanup"], function(event2) {
    var hover = event2.hover;
    if (hover) {
      setMarker(hover, null);
    }
  });
  eventBus.on("create.end", function(event2) {
    var context = event2.context, source2 = context.source, shape = context.shape, elements = context.elements, target = context.target, canExecute = context.canExecute, attach = canExecute && canExecute.attach, connect = canExecute && canExecute.connect, hints = context.hints || {};
    if (canExecute === false || !target) {
      return false;
    }
    ensureConstraints$1(event2);
    var position = {
      x: event2.x,
      y: event2.y
    };
    if (connect) {
      shape = modeling.appendShape(source2, shape, position, target, {
        attach,
        connection: connect === true ? {} : connect,
        connectionTarget: hints.connectionTarget
      });
    } else {
      elements = modeling.createElements(elements, position, target, assign$2({}, hints, {
        attach
      }));
      shape = find$1(elements, function(element) {
        return !isConnection(element);
      });
    }
    assign$2(context, {
      elements,
      shape
    });
    assign$2(event2, {
      elements,
      shape
    });
  });
  function cancel() {
    var context = dragging.context();
    if (context && context.prefix === PREFIX) {
      dragging.cancel();
    }
  }
  eventBus.on("create.init", function() {
    eventBus.on("elements.changed", cancel);
    eventBus.once(["create.cancel", "create.end"], HIGH_PRIORITY$a, function() {
      eventBus.off("elements.changed", cancel);
    });
  });
  this.start = function(event2, elements, context) {
    if (!isArray$3(elements)) {
      elements = [elements];
    }
    var shape = find$1(elements, function(element) {
      return !isConnection(element);
    });
    if (!shape) {
      return;
    }
    context = assign$2({
      elements,
      hints: {},
      shape
    }, context || {});
    forEach$2(elements, function(element) {
      if (!isNumber$1(element.x)) {
        element.x = 0;
      }
      if (!isNumber$1(element.y)) {
        element.y = 0;
      }
    });
    var visibleElements = filter$1(elements, function(element) {
      return !element.hidden;
    });
    var bbox = getBBox(visibleElements);
    forEach$2(elements, function(element) {
      if (isConnection(element)) {
        element.waypoints = map$2(element.waypoints, function(waypoint) {
          return {
            x: waypoint.x - bbox.x - bbox.width / 2,
            y: waypoint.y - bbox.y - bbox.height / 2
          };
        });
      }
      assign$2(element, {
        x: element.x - bbox.x - bbox.width / 2,
        y: element.y - bbox.y - bbox.height / 2
      });
    });
    dragging.init(event2, PREFIX, {
      cursor: "grabbing",
      autoActivate: true,
      data: {
        shape,
        elements,
        context
      }
    });
  };
}
Create.$inject = [
  "canvas",
  "dragging",
  "eventBus",
  "modeling",
  "rules"
];
function ensureConstraints$1(event2) {
  var context = event2.context, createConstraints = context.createConstraints;
  if (!createConstraints) {
    return;
  }
  if (createConstraints.left) {
    event2.x = Math.max(event2.x, createConstraints.left);
  }
  if (createConstraints.right) {
    event2.x = Math.min(event2.x, createConstraints.right);
  }
  if (createConstraints.top) {
    event2.y = Math.max(event2.y, createConstraints.top);
  }
  if (createConstraints.bottom) {
    event2.y = Math.min(event2.y, createConstraints.bottom);
  }
}
function isSingleShape(elements) {
  return elements && elements.length === 1 && !isConnection(elements[0]);
}
var LOW_PRIORITY$c = 750;
function CreatePreview(canvas, eventBus, graphicsFactory, previewSupport, styles) {
  function createDragGroup(elements) {
    var dragGroup = create$1("g");
    attr(dragGroup, styles.cls("djs-drag-group", ["no-events"]));
    var childrenGfx = create$1("g");
    elements.forEach(function(element) {
      var gfx;
      if (element.hidden) {
        return;
      }
      if (element.waypoints) {
        gfx = graphicsFactory._createContainer("connection", childrenGfx);
        graphicsFactory.drawConnection(getVisual(gfx), element);
      } else {
        gfx = graphicsFactory._createContainer("shape", childrenGfx);
        graphicsFactory.drawShape(getVisual(gfx), element);
        translate$2(gfx, element.x, element.y);
      }
      previewSupport.addDragger(element, dragGroup, gfx);
    });
    return dragGroup;
  }
  eventBus.on("create.move", LOW_PRIORITY$c, function(event2) {
    var hover = event2.hover, context = event2.context, elements = context.elements, dragGroup = context.dragGroup;
    if (!dragGroup) {
      dragGroup = context.dragGroup = createDragGroup(elements);
    }
    var activeLayer;
    if (hover) {
      if (!dragGroup.parentNode) {
        activeLayer = canvas.getActiveLayer();
        append(activeLayer, dragGroup);
      }
      translate$2(dragGroup, event2.x, event2.y);
    } else {
      remove(dragGroup);
    }
  });
  eventBus.on("create.cleanup", function(event2) {
    var context = event2.context, dragGroup = context.dragGroup;
    if (dragGroup) {
      remove(dragGroup);
    }
  });
}
CreatePreview.$inject = [
  "canvas",
  "eventBus",
  "graphicsFactory",
  "previewSupport",
  "styles"
];
const CreateModule = {
  __depends__: [
    DraggingModule,
    PreviewSupportModule,
    RulesModule$1,
    SelectionModule
  ],
  __init__: [
    "create",
    "createPreview"
  ],
  create: ["type", Create],
  createPreview: ["type", CreatePreview]
};
function Mouse(eventBus) {
  var self2 = this;
  this._lastMoveEvent = null;
  function setLastMoveEvent(mousemoveEvent) {
    self2._lastMoveEvent = mousemoveEvent;
  }
  eventBus.on("canvas.init", function(context) {
    var svg = self2._svg = context.svg;
    svg.addEventListener("mousemove", setLastMoveEvent);
  });
  eventBus.on("canvas.destroy", function() {
    self2._lastMouseEvent = null;
    self2._svg.removeEventListener("mousemove", setLastMoveEvent);
  });
}
Mouse.$inject = ["eventBus"];
Mouse.prototype.getLastMoveEvent = function() {
  return this._lastMoveEvent || createMoveEvent(0, 0);
};
function createMoveEvent(x2, y2) {
  var event2 = document.createEvent("MouseEvent");
  var screenX = x2, screenY = y2, clientX = x2, clientY = y2;
  if (event2.initMouseEvent) {
    event2.initMouseEvent(
      "mousemove",
      true,
      true,
      window,
      0,
      screenX,
      screenY,
      clientX,
      clientY,
      false,
      false,
      false,
      false,
      0,
      null
    );
  }
  return event2;
}
const MouseModule = {
  __init__: ["mouse"],
  mouse: ["type", Mouse]
};
function CopyPaste(canvas, create2, clipboard, elementFactory, eventBus, modeling, mouse, rules2) {
  this._canvas = canvas;
  this._create = create2;
  this._clipboard = clipboard;
  this._elementFactory = elementFactory;
  this._eventBus = eventBus;
  this._modeling = modeling;
  this._mouse = mouse;
  this._rules = rules2;
  eventBus.on("copyPaste.copyElement", function(context) {
    var descriptor = context.descriptor, element = context.element, elements = context.elements;
    descriptor.priority = 1;
    descriptor.id = element.id;
    var parentCopied = find$1(elements, function(e2) {
      return e2 === element.parent;
    });
    if (parentCopied) {
      descriptor.parent = element.parent.id;
    }
    if (isAttacher$2(element)) {
      descriptor.priority = 2;
      descriptor.host = element.host.id;
    }
    if (isConnection(element)) {
      descriptor.priority = 3;
      descriptor.source = element.source.id;
      descriptor.target = element.target.id;
      descriptor.waypoints = copyWaypoints$1(element);
    }
    if (isLabel(element)) {
      descriptor.priority = 4;
      descriptor.labelTarget = element.labelTarget.id;
    }
    forEach$2(["x", "y", "width", "height"], function(property) {
      if (isNumber$1(element[property])) {
        descriptor[property] = element[property];
      }
    });
    descriptor.hidden = element.hidden;
    descriptor.collapsed = element.collapsed;
  });
  eventBus.on("copyPaste.pasteElements", function(context) {
    var hints = context.hints;
    assign$2(hints, {
      createElementsBehavior: false
    });
  });
}
CopyPaste.$inject = [
  "canvas",
  "create",
  "clipboard",
  "elementFactory",
  "eventBus",
  "modeling",
  "mouse",
  "rules"
];
CopyPaste.prototype.copy = function(elements) {
  var allowed, tree;
  if (!isArray$3(elements)) {
    elements = elements ? [elements] : [];
  }
  allowed = this._eventBus.fire("copyPaste.canCopyElements", {
    elements
  });
  if (allowed === false) {
    tree = {};
  } else {
    tree = this.createTree(isArray$3(allowed) ? allowed : elements);
  }
  this._clipboard.set(tree);
  this._eventBus.fire("copyPaste.elementsCopied", {
    elements,
    tree
  });
  return tree;
};
CopyPaste.prototype.paste = function(context) {
  var tree = this._clipboard.get();
  if (this._clipboard.isEmpty()) {
    return;
  }
  var hints = context && context.hints || {};
  this._eventBus.fire("copyPaste.pasteElements", {
    hints
  });
  var elements = this._createElements(tree);
  if (context && context.element && context.point) {
    return this._paste(elements, context.element, context.point, hints);
  }
  this._create.start(this._mouse.getLastMoveEvent(), elements, {
    hints: hints || {}
  });
};
CopyPaste.prototype._paste = function(elements, target, position, hints) {
  forEach$2(elements, function(element) {
    if (!isNumber$1(element.x)) {
      element.x = 0;
    }
    if (!isNumber$1(element.y)) {
      element.y = 0;
    }
  });
  var bbox = getBBox(elements);
  forEach$2(elements, function(element) {
    if (isConnection(element)) {
      element.waypoints = map$2(element.waypoints, function(waypoint) {
        return {
          x: waypoint.x - bbox.x - bbox.width / 2,
          y: waypoint.y - bbox.y - bbox.height / 2
        };
      });
    }
    assign$2(element, {
      x: element.x - bbox.x - bbox.width / 2,
      y: element.y - bbox.y - bbox.height / 2
    });
  });
  return this._modeling.createElements(elements, position, target, assign$2({}, hints));
};
CopyPaste.prototype._createElements = function(tree) {
  var self2 = this;
  var eventBus = this._eventBus;
  var cache2 = {};
  var elements = [];
  forEach$2(tree, function(branch, depth) {
    branch = sortBy$1(branch, "priority");
    forEach$2(branch, function(descriptor) {
      var attrs = assign$2({}, omit$1(descriptor, ["priority"]));
      if (cache2[descriptor.parent]) {
        attrs.parent = cache2[descriptor.parent];
      } else {
        delete attrs.parent;
      }
      eventBus.fire("copyPaste.pasteElement", {
        cache: cache2,
        descriptor: attrs
      });
      var element;
      if (isConnection(attrs)) {
        attrs.source = cache2[descriptor.source];
        attrs.target = cache2[descriptor.target];
        element = cache2[descriptor.id] = self2.createConnection(attrs);
        elements.push(element);
        return;
      }
      if (isLabel(attrs)) {
        attrs.labelTarget = cache2[attrs.labelTarget];
        element = cache2[descriptor.id] = self2.createLabel(attrs);
        elements.push(element);
        return;
      }
      if (attrs.host) {
        attrs.host = cache2[attrs.host];
      }
      element = cache2[descriptor.id] = self2.createShape(attrs);
      elements.push(element);
    });
  });
  return elements;
};
CopyPaste.prototype.createConnection = function(attrs) {
  var connection = this._elementFactory.createConnection(omit$1(attrs, ["id"]));
  return connection;
};
CopyPaste.prototype.createLabel = function(attrs) {
  var label = this._elementFactory.createLabel(omit$1(attrs, ["id"]));
  return label;
};
CopyPaste.prototype.createShape = function(attrs) {
  var shape = this._elementFactory.createShape(omit$1(attrs, ["id"]));
  return shape;
};
CopyPaste.prototype.hasRelations = function(element, elements) {
  var labelTarget, source2, target;
  if (isConnection(element)) {
    source2 = find$1(elements, matchPattern$1({ id: element.source.id }));
    target = find$1(elements, matchPattern$1({ id: element.target.id }));
    if (!source2 || !target) {
      return false;
    }
  }
  if (isLabel(element)) {
    labelTarget = find$1(elements, matchPattern$1({ id: element.labelTarget.id }));
    if (!labelTarget) {
      return false;
    }
  }
  return true;
};
CopyPaste.prototype.createTree = function(elements) {
  var rules2 = this._rules, self2 = this;
  var tree = {}, elementsData = [];
  var parents = getParents$1(elements);
  function canCopy2(element, elements2) {
    return rules2.allowed("element.copy", {
      element,
      elements: elements2
    });
  }
  function addElementData(element, depth) {
    var foundElementData = find$1(elementsData, function(elementsData2) {
      return element === elementsData2.element;
    });
    if (!foundElementData) {
      elementsData.push({
        element,
        depth
      });
      return;
    }
    if (foundElementData.depth < depth) {
      elementsData = removeElementData(foundElementData, elementsData);
      elementsData.push({
        element: foundElementData.element,
        depth
      });
    }
  }
  function removeElementData(elementData2, elementsData2) {
    var index2 = elementsData2.indexOf(elementData2);
    if (index2 !== -1) {
      elementsData2.splice(index2, 1);
    }
    return elementsData2;
  }
  eachElement(parents, function(element, _index, depth) {
    if (isLabel(element)) {
      return;
    }
    forEach$2(element.labels, function(label) {
      addElementData(label, depth);
    });
    function addRelatedElements(elements2) {
      elements2 && elements2.length && forEach$2(elements2, function(element2) {
        forEach$2(element2.labels, function(label) {
          addElementData(label, depth);
        });
        addElementData(element2, depth);
      });
    }
    forEach$2([element.attachers, element.incoming, element.outgoing], addRelatedElements);
    addElementData(element, depth);
    var children = [];
    if (element.children) {
      children = element.children.slice();
    }
    self2._eventBus.fire("copyPaste.createTree", {
      element,
      children
    });
    return children;
  });
  elements = map$2(elementsData, function(elementData2) {
    return elementData2.element;
  });
  elementsData = map$2(elementsData, function(elementData2) {
    elementData2.descriptor = {};
    self2._eventBus.fire("copyPaste.copyElement", {
      descriptor: elementData2.descriptor,
      element: elementData2.element,
      elements
    });
    return elementData2;
  });
  elementsData = sortBy$1(elementsData, function(elementData2) {
    return elementData2.descriptor.priority;
  });
  elements = map$2(elementsData, function(elementData2) {
    return elementData2.element;
  });
  forEach$2(elementsData, function(elementData2) {
    var depth = elementData2.depth;
    if (!self2.hasRelations(elementData2.element, elements)) {
      removeElement(elementData2.element, elements);
      return;
    }
    if (!canCopy2(elementData2.element, elements)) {
      removeElement(elementData2.element, elements);
      return;
    }
    if (!tree[depth]) {
      tree[depth] = [];
    }
    tree[depth].push(elementData2.descriptor);
  });
  return tree;
};
function isAttacher$2(element) {
  return !!element.host;
}
function copyWaypoints$1(element) {
  return map$2(element.waypoints, function(waypoint) {
    waypoint = copyWaypoint$1(waypoint);
    if (waypoint.original) {
      waypoint.original = copyWaypoint$1(waypoint.original);
    }
    return waypoint;
  });
}
function copyWaypoint$1(waypoint) {
  return assign$2({}, waypoint);
}
function removeElement(element, elements) {
  var index2 = elements.indexOf(element);
  if (index2 === -1) {
    return elements;
  }
  return elements.splice(index2, 1);
}
const CopyPasteModule$1 = {
  __depends__: [
    ClipboardModule,
    CreateModule,
    MouseModule,
    RulesModule$1
  ],
  __init__: ["copyPaste"],
  copyPaste: ["type", CopyPaste]
};
function copyProperties$1(source2, target, properties) {
  if (!isArray$3(properties)) {
    properties = [properties];
  }
  forEach$2(properties, function(property) {
    if (!isUndefined$2(source2[property])) {
      target[property] = source2[property];
    }
  });
}
var LOW_PRIORITY$b = 750;
function BpmnCopyPaste(bpmnFactory, eventBus, moddleCopy) {
  function copy2(bo, clone2) {
    var targetBo = bpmnFactory.create(bo.$type);
    return moddleCopy.copyElement(bo, targetBo, null, clone2);
  }
  eventBus.on("copyPaste.copyElement", LOW_PRIORITY$b, function(context) {
    var descriptor = context.descriptor, element = context.element, businessObject = getBusinessObject(element);
    if (isLabel(element)) {
      return descriptor;
    }
    var businessObjectCopy = descriptor.businessObject = copy2(businessObject, true);
    var diCopy = descriptor.di = copy2(getDi(element), true);
    diCopy.bpmnElement = businessObjectCopy;
    copyProperties$1(businessObjectCopy, descriptor, "name");
    copyProperties$1(diCopy, descriptor, "isExpanded");
    if (businessObject.default) {
      descriptor.default = businessObject.default.id;
    }
  });
  var referencesKey = "-bpmn-js-refs";
  function getReferences(cache2) {
    return cache2[referencesKey] = cache2[referencesKey] || {};
  }
  function setReferences(cache2, references) {
    cache2[referencesKey] = references;
  }
  function resolveReferences(descriptor, cache2, references) {
    var businessObject = getBusinessObject(descriptor);
    if (descriptor.default) {
      references[descriptor.default] = {
        element: businessObject,
        property: "default"
      };
    }
    if (descriptor.host) {
      getBusinessObject(descriptor).attachedToRef = getBusinessObject(cache2[descriptor.host]);
    }
    return omit$1(references, reduce$1(references, function(array, reference, key) {
      var element = reference.element, property = reference.property;
      if (key === descriptor.id) {
        element.set(property, businessObject);
        array.push(descriptor.id);
      }
      return array;
    }, []));
  }
  eventBus.on("copyPaste.pasteElement", function(context) {
    var cache2 = context.cache, descriptor = context.descriptor, businessObject = descriptor.businessObject, di = descriptor.di;
    if (isLabel(descriptor)) {
      descriptor.businessObject = getBusinessObject(cache2[descriptor.labelTarget]);
      descriptor.di = getDi(cache2[descriptor.labelTarget]);
      return;
    }
    businessObject = descriptor.businessObject = copy2(businessObject);
    di = descriptor.di = copy2(di);
    di.bpmnElement = businessObject;
    copyProperties$1(descriptor, businessObject, [
      "isExpanded",
      "name"
    ]);
    descriptor.type = businessObject.$type;
  });
  eventBus.on("copyPaste.copyElement", LOW_PRIORITY$b, function(context) {
    var descriptor = context.descriptor, element = context.element;
    if (!is$g(element, "bpmn:Participant")) {
      return;
    }
    var participantBo = getBusinessObject(element);
    if (participantBo.processRef) {
      descriptor.processRef = copy2(participantBo.processRef, true);
    }
  });
  eventBus.on("copyPaste.pasteElement", function(context) {
    var descriptor = context.descriptor, processRef = descriptor.processRef;
    if (processRef) {
      descriptor.processRef = copy2(processRef);
    }
  });
  eventBus.on("copyPaste.pasteElement", LOW_PRIORITY$b, function(context) {
    var cache2 = context.cache, descriptor = context.descriptor;
    setReferences(
      cache2,
      resolveReferences(descriptor, cache2, getReferences(cache2))
    );
  });
}
BpmnCopyPaste.$inject = [
  "bpmnFactory",
  "eventBus",
  "moddleCopy"
];
var DISALLOWED_PROPERTIES = [
  "artifacts",
  "dataInputAssociations",
  "dataOutputAssociations",
  "default",
  "flowElements",
  "lanes",
  "incoming",
  "outgoing",
  "categoryValue"
];
function ModdleCopy(eventBus, bpmnFactory, moddle) {
  this._bpmnFactory = bpmnFactory;
  this._eventBus = eventBus;
  this._moddle = moddle;
  eventBus.on("moddleCopy.canCopyProperties", function(context) {
    var propertyNames = context.propertyNames;
    if (!propertyNames || !propertyNames.length) {
      return;
    }
    return sortBy$1(propertyNames, function(propertyName) {
      return propertyName === "extensionElements";
    });
  });
  eventBus.on("moddleCopy.canCopyProperty", function(context) {
    var parent = context.parent, parentDescriptor = isObject$1(parent) && parent.$descriptor, propertyName = context.propertyName;
    if (propertyName && DISALLOWED_PROPERTIES.indexOf(propertyName) !== -1) {
      return false;
    }
    if (propertyName && parentDescriptor && !find$1(parentDescriptor.properties, matchPattern$1({ name: propertyName }))) {
      return false;
    }
  });
  eventBus.on("moddleCopy.canSetCopiedProperty", function(context) {
    var property = context.property;
    if (is$e(property, "bpmn:ExtensionElements") && (!property.values || !property.values.length)) {
      return false;
    }
  });
}
ModdleCopy.$inject = [
  "eventBus",
  "bpmnFactory",
  "moddle"
];
ModdleCopy.prototype.copyElement = function(sourceElement, targetElement, propertyNames, clone2 = false) {
  var self2 = this;
  if (propertyNames && !isArray$3(propertyNames)) {
    propertyNames = [propertyNames];
  }
  propertyNames = propertyNames || getPropertyNames(sourceElement.$descriptor);
  var canCopyProperties = this._eventBus.fire("moddleCopy.canCopyProperties", {
    propertyNames,
    sourceElement,
    targetElement,
    clone: clone2
  });
  if (canCopyProperties === false) {
    return targetElement;
  }
  if (isArray$3(canCopyProperties)) {
    propertyNames = canCopyProperties;
  }
  forEach$2(propertyNames, function(propertyName) {
    var sourceProperty;
    if (has$2(sourceElement, propertyName)) {
      sourceProperty = sourceElement.get(propertyName);
    }
    var copiedProperty = self2.copyProperty(sourceProperty, targetElement, propertyName, clone2);
    if (!isDefined$1(copiedProperty)) {
      return;
    }
    var canSetProperty = self2._eventBus.fire("moddleCopy.canSetCopiedProperty", {
      parent: targetElement,
      property: copiedProperty,
      propertyName
    });
    if (canSetProperty === false) {
      return;
    }
    targetElement.set(propertyName, copiedProperty);
  });
  return targetElement;
};
ModdleCopy.prototype.copyProperty = function(property, parent, propertyName, clone2 = false) {
  var self2 = this;
  var copiedProperty = this._eventBus.fire("moddleCopy.canCopyProperty", {
    parent,
    property,
    propertyName,
    clone: clone2
  });
  if (copiedProperty === false) {
    return;
  }
  if (copiedProperty) {
    if (isObject$1(copiedProperty) && copiedProperty.$type && !copiedProperty.$parent) {
      copiedProperty.$parent = parent;
    }
    return copiedProperty;
  }
  var propertyDescriptor = this._moddle.getPropertyDescriptor(parent, propertyName);
  if (propertyDescriptor.isReference) {
    return;
  }
  if (propertyDescriptor.isId) {
    return property && this._copyId(property, parent, clone2);
  }
  if (isArray$3(property)) {
    return reduce$1(property, function(childProperties, childProperty) {
      copiedProperty = self2.copyProperty(childProperty, parent, propertyName, clone2);
      if (copiedProperty) {
        return childProperties.concat(copiedProperty);
      }
      return childProperties;
    }, []);
  }
  if (isObject$1(property) && property.$type) {
    if (this._moddle.getElementDescriptor(property).isGeneric) {
      return;
    }
    copiedProperty = self2._bpmnFactory.create(property.$type);
    copiedProperty.$parent = parent;
    copiedProperty = self2.copyElement(property, copiedProperty, null, clone2);
    return copiedProperty;
  }
  return property;
};
ModdleCopy.prototype._copyId = function(id, element, clone2 = false) {
  if (clone2) {
    return id;
  }
  if (this._moddle.ids.assigned(id)) {
    return;
  } else {
    this._moddle.ids.claim(id, element);
    return id;
  }
};
function getPropertyNames(descriptor, keepDefaultProperties) {
  return reduce$1(descriptor.properties, function(properties, property) {
    if (keepDefaultProperties && property.default) {
      return properties;
    }
    return properties.concat(property.name);
  }, []);
}
function is$e(element, type) {
  return element && isFunction$1(element.$instanceOf) && element.$instanceOf(type);
}
const CopyPasteModule = {
  __depends__: [
    CopyPasteModule$1
  ],
  __init__: ["bpmnCopyPaste", "moddleCopy"],
  bpmnCopyPaste: ["type", BpmnCopyPaste],
  moddleCopy: ["type", ModdleCopy]
};
var round$6 = Math.round;
function Replace(modeling, eventBus) {
  this._modeling = modeling;
  this._eventBus = eventBus;
}
Replace.$inject = ["modeling", "eventBus"];
Replace.prototype.replaceElement = function(oldElement, attrs, hints) {
  if (oldElement.waypoints) {
    return null;
  }
  var modeling = this._modeling;
  var eventBus = this._eventBus;
  eventBus.fire("replace.start", {
    element: oldElement,
    attrs,
    hints
  });
  var width = attrs.width || oldElement.width, height = attrs.height || oldElement.height, x2 = attrs.x || oldElement.x, y2 = attrs.y || oldElement.y, centerX = round$6(x2 + width / 2), centerY = round$6(y2 + height / 2);
  var newElement = modeling.replaceShape(
    oldElement,
    assign$2(
      {},
      attrs,
      {
        x: centerX,
        y: centerY,
        width,
        height
      }
    ),
    hints
  );
  eventBus.fire("replace.end", {
    element: oldElement,
    newElement,
    hints
  });
  return newElement;
};
function ReplaceSelectionBehavior(selection, eventBus) {
  eventBus.on("replace.end", 500, function(event2) {
    const {
      newElement,
      hints = {}
    } = event2;
    if (hints.select === false) {
      return;
    }
    selection.select(newElement);
  });
}
ReplaceSelectionBehavior.$inject = ["selection", "eventBus"];
const ReplaceModule$1 = {
  __init__: ["replace", "replaceSelectionBehavior"],
  replaceSelectionBehavior: ["type", ReplaceSelectionBehavior],
  replace: ["type", Replace]
};
function copyProperties(source2, target, properties) {
  if (!isArray$3(properties)) {
    properties = [properties];
  }
  forEach$2(properties, function(property) {
    if (!isUndefined$2(source2[property])) {
      target[property] = source2[property];
    }
  });
}
var CUSTOM_PROPERTIES = [
  "cancelActivity",
  "instantiate",
  "eventGatewayType",
  "triggeredByEvent",
  "isInterrupting"
];
function shouldToggleCollapsed(element, targetElement) {
  var oldCollapsed = element && has$2(element, "collapsed") ? element.collapsed : !isExpanded(element);
  var targetCollapsed;
  if (targetElement && (has$2(targetElement, "collapsed") || has$2(targetElement, "isExpanded"))) {
    targetCollapsed = has$2(targetElement, "collapsed") ? targetElement.collapsed : !targetElement.isExpanded;
  } else {
    targetCollapsed = oldCollapsed;
  }
  if (oldCollapsed !== targetCollapsed) {
    return true;
  }
  return false;
}
function BpmnReplace(bpmnFactory, elementFactory, moddleCopy, modeling, replace, rules2) {
  function replaceElement(element, targetElement, hints) {
    hints = hints || {};
    var type = targetElement.type, oldBusinessObject = element.businessObject;
    if (isSubProcess(oldBusinessObject) && type === "bpmn:SubProcess") {
      if (shouldToggleCollapsed(element, targetElement)) {
        modeling.toggleCollapse(element);
        return element;
      }
    }
    var newBusinessObject = bpmnFactory.create(type);
    var newElement = {
      type,
      businessObject: newBusinessObject
    };
    newElement.di = {};
    if (type === "bpmn:ExclusiveGateway") {
      newElement.di.isMarkerVisible = true;
    }
    copyProperties(element.di, newElement.di, [
      "fill",
      "stroke",
      "background-color",
      "border-color",
      "color"
    ]);
    var elementProps = getPropertyNames(oldBusinessObject.$descriptor), newElementProps = getPropertyNames(newBusinessObject.$descriptor, true), copyProps = intersection(elementProps, newElementProps);
    assign$2(newBusinessObject, pick$1(targetElement, CUSTOM_PROPERTIES));
    var properties = filter$1(copyProps, function(propertyName) {
      if (propertyName === "eventDefinitions") {
        return hasEventDefinition(element, targetElement.eventDefinitionType);
      }
      if (propertyName === "loopCharacteristics") {
        return !isEventSubProcess(newBusinessObject);
      }
      if (has$2(newBusinessObject, propertyName)) {
        return false;
      }
      if (propertyName === "processRef" && targetElement.isExpanded === false) {
        return false;
      }
      if (propertyName === "triggeredByEvent") {
        return false;
      }
      if (propertyName === "isForCompensation") {
        return !isEventSubProcess(newBusinessObject);
      }
      return true;
    });
    newBusinessObject = moddleCopy.copyElement(
      oldBusinessObject,
      newBusinessObject,
      properties
    );
    if (targetElement.eventDefinitionType) {
      if (!hasEventDefinition(newBusinessObject, targetElement.eventDefinitionType)) {
        newElement.eventDefinitionType = targetElement.eventDefinitionType;
        newElement.eventDefinitionAttrs = targetElement.eventDefinitionAttrs;
      }
    }
    if (is$g(oldBusinessObject, "bpmn:Activity")) {
      if (isSubProcess(oldBusinessObject)) {
        newElement.isExpanded = isExpanded(element);
      } else if (targetElement && has$2(targetElement, "isExpanded")) {
        newElement.isExpanded = targetElement.isExpanded;
        var defaultSize = elementFactory.getDefaultSize(newBusinessObject, {
          isExpanded: newElement.isExpanded
        });
        newElement.width = defaultSize.width;
        newElement.height = defaultSize.height;
        newElement.x = element.x - (newElement.width - element.width) / 2;
        newElement.y = element.y - (newElement.height - element.height) / 2;
      }
      if (isExpanded(element) && !is$g(oldBusinessObject, "bpmn:Task") && newElement.isExpanded) {
        newElement.width = element.width;
        newElement.height = element.height;
      }
    }
    if (isSubProcess(oldBusinessObject) && !isSubProcess(newBusinessObject)) {
      hints.moveChildren = false;
    }
    if (is$g(oldBusinessObject, "bpmn:Participant")) {
      if (targetElement.isExpanded === true) {
        newBusinessObject.processRef = bpmnFactory.create("bpmn:Process");
      } else {
        hints.moveChildren = false;
      }
      newElement.width = element.width;
      newElement.height = elementFactory.getDefaultSize(newElement).height;
    }
    if (!rules2.allowed("shape.resize", { shape: newBusinessObject })) {
      newElement.height = elementFactory.getDefaultSize(newElement).height;
      newElement.width = elementFactory.getDefaultSize(newElement).width;
    }
    newBusinessObject.name = oldBusinessObject.name;
    if (isAny$7(oldBusinessObject, [
      "bpmn:ExclusiveGateway",
      "bpmn:InclusiveGateway",
      "bpmn:Activity"
    ]) && isAny$7(newBusinessObject, [
      "bpmn:ExclusiveGateway",
      "bpmn:InclusiveGateway",
      "bpmn:Activity"
    ])) {
      newBusinessObject.default = oldBusinessObject.default;
    }
    if (targetElement.host && !is$g(oldBusinessObject, "bpmn:BoundaryEvent") && is$g(newBusinessObject, "bpmn:BoundaryEvent")) {
      newElement.host = targetElement.host;
    }
    if (newElement.type === "bpmn:DataStoreReference" || newElement.type === "bpmn:DataObjectReference") {
      newElement.x = element.x + (element.width - newElement.width) / 2;
    }
    return replace.replaceElement(element, newElement, { ...hints, targetElement });
  }
  this.replaceElement = replaceElement;
}
BpmnReplace.$inject = [
  "bpmnFactory",
  "elementFactory",
  "moddleCopy",
  "modeling",
  "replace",
  "rules"
];
function isSubProcess(businessObject) {
  return is$g(businessObject, "bpmn:SubProcess");
}
function hasEventDefinition(element, type) {
  var businessObject = getBusinessObject(element);
  return type && businessObject.get("eventDefinitions").some(function(definition) {
    return is$g(definition, type);
  });
}
function intersection(a2, b2) {
  return a2.filter(function(item) {
    return b2.includes(item);
  });
}
const ReplaceModule = {
  __depends__: [
    CopyPasteModule,
    ReplaceModule$1,
    SelectionModule
  ],
  bpmnReplace: ["type", BpmnReplace]
};
var LOW_PRIORITY$a = 250;
function ToolManager(eventBus) {
  this._eventBus = eventBus;
  this._tools = [];
  this._active = null;
}
ToolManager.$inject = ["eventBus"];
ToolManager.prototype.registerTool = function(name2, events2) {
  var tools = this._tools;
  if (!events2) {
    throw new Error(`A tool has to be registered with it's "events"`);
  }
  tools.push(name2);
  this.bindEvents(name2, events2);
};
ToolManager.prototype.isActive = function(tool) {
  return tool && this._active === tool;
};
ToolManager.prototype.length = function(tool) {
  return this._tools.length;
};
ToolManager.prototype.setActive = function(tool) {
  var eventBus = this._eventBus;
  if (this._active !== tool) {
    this._active = tool;
    eventBus.fire("tool-manager.update", { tool });
  }
};
ToolManager.prototype.bindEvents = function(name2, events2) {
  var eventBus = this._eventBus;
  var eventsToRegister = [];
  eventBus.on(events2.tool + ".init", function(event2) {
    var context = event2.context;
    if (!context.reactivate && this.isActive(name2)) {
      this.setActive(null);
      return;
    }
    this.setActive(name2);
  }, this);
  forEach$2(events2, function(event2) {
    eventsToRegister.push(event2 + ".ended");
    eventsToRegister.push(event2 + ".canceled");
  });
  eventBus.on(eventsToRegister, LOW_PRIORITY$a, function(event2) {
    if (!this._active) {
      return;
    }
    if (isPaletteClick(event2)) {
      return;
    }
    this.setActive(null);
  }, this);
};
function isPaletteClick(event2) {
  var target = event2.originalEvent && event2.originalEvent.target;
  return target && closest(target, '.group[data-group="tools"]');
}
const ToolManagerModule = {
  __depends__: [
    DraggingModule
  ],
  __init__: ["toolManager"],
  toolManager: ["type", ToolManager]
};
function getDirection(axis, delta2) {
  if (axis === "x") {
    if (delta2 > 0) {
      return "e";
    }
    if (delta2 < 0) {
      return "w";
    }
  }
  if (axis === "y") {
    if (delta2 > 0) {
      return "s";
    }
    if (delta2 < 0) {
      return "n";
    }
  }
  return null;
}
function getWaypointsUpdatingConnections(movingShapes, resizingShapes) {
  var waypointsUpdatingConnections = [];
  forEach$2(movingShapes.concat(resizingShapes), function(shape) {
    var incoming = shape.incoming, outgoing = shape.outgoing;
    forEach$2(incoming.concat(outgoing), function(connection) {
      var source2 = connection.source, target = connection.target;
      if (includes$5(movingShapes, source2) || includes$5(movingShapes, target) || includes$5(resizingShapes, source2) || includes$5(resizingShapes, target)) {
        if (!includes$5(waypointsUpdatingConnections, connection)) {
          waypointsUpdatingConnections.push(connection);
        }
      }
    });
  });
  return waypointsUpdatingConnections;
}
function includes$5(array, item) {
  return array.indexOf(item) !== -1;
}
function resizeBounds(bounds, direction, delta2) {
  var x2 = bounds.x, y2 = bounds.y, width = bounds.width, height = bounds.height, dx = delta2.x, dy = delta2.y;
  switch (direction) {
    case "n":
      return {
        x: x2,
        y: y2 + dy,
        width,
        height: height - dy
      };
    case "s":
      return {
        x: x2,
        y: y2,
        width,
        height: height + dy
      };
    case "w":
      return {
        x: x2 + dx,
        y: y2,
        width: width - dx,
        height
      };
    case "e":
      return {
        x: x2,
        y: y2,
        width: width + dx,
        height
      };
    default:
      throw new Error("unknown direction: " + direction);
  }
}
var abs$1 = Math.abs, round$5 = Math.round;
var AXIS_TO_DIMENSION = {
  x: "width",
  y: "height"
};
var CURSOR_CROSSHAIR = "crosshair";
var DIRECTION_TO_TRBL = {
  n: "top",
  w: "left",
  s: "bottom",
  e: "right"
};
var HIGH_PRIORITY$9 = 1500;
var DIRECTION_TO_OPPOSITE = {
  n: "s",
  w: "e",
  s: "n",
  e: "w"
};
var PADDING = 20;
function SpaceTool(canvas, dragging, eventBus, modeling, rules2, toolManager, mouse) {
  this._canvas = canvas;
  this._dragging = dragging;
  this._eventBus = eventBus;
  this._modeling = modeling;
  this._rules = rules2;
  this._toolManager = toolManager;
  this._mouse = mouse;
  var self2 = this;
  toolManager.registerTool("space", {
    tool: "spaceTool.selection",
    dragging: "spaceTool"
  });
  eventBus.on("spaceTool.selection.end", function(event2) {
    eventBus.once("spaceTool.selection.ended", function() {
      self2.activateMakeSpace(event2.originalEvent);
    });
  });
  eventBus.on("spaceTool.move", HIGH_PRIORITY$9, function(event2) {
    var context = event2.context, initialized = context.initialized;
    if (!initialized) {
      initialized = context.initialized = self2.init(event2, context);
    }
    if (initialized) {
      ensureConstraints(event2);
    }
  });
  eventBus.on("spaceTool.end", function(event2) {
    var context = event2.context, axis = context.axis, direction = context.direction, movingShapes = context.movingShapes, resizingShapes = context.resizingShapes, start = context.start;
    if (!context.initialized) {
      return;
    }
    ensureConstraints(event2);
    var delta2 = {
      x: 0,
      y: 0
    };
    delta2[axis] = round$5(event2["d" + axis]);
    self2.makeSpace(movingShapes, resizingShapes, delta2, direction, start);
    eventBus.once("spaceTool.ended", function(event3) {
      self2.activateSelection(event3.originalEvent, true, true);
    });
  });
}
SpaceTool.$inject = [
  "canvas",
  "dragging",
  "eventBus",
  "modeling",
  "rules",
  "toolManager",
  "mouse"
];
SpaceTool.prototype.activateSelection = function(event2, autoActivate, reactivate) {
  this._dragging.init(event2, "spaceTool.selection", {
    autoActivate,
    cursor: CURSOR_CROSSHAIR,
    data: {
      context: {
        reactivate
      }
    },
    trapClick: false
  });
};
SpaceTool.prototype.activateMakeSpace = function(event2) {
  this._dragging.init(event2, "spaceTool", {
    autoActivate: true,
    cursor: CURSOR_CROSSHAIR,
    data: {
      context: {}
    }
  });
};
SpaceTool.prototype.makeSpace = function(movingShapes, resizingShapes, delta2, direction, start) {
  return this._modeling.createSpace(movingShapes, resizingShapes, delta2, direction, start);
};
SpaceTool.prototype.init = function(event2, context) {
  var axis = abs$1(event2.dx) > abs$1(event2.dy) ? "x" : "y", delta2 = event2["d" + axis], start = event2[axis] - delta2;
  if (abs$1(delta2) < 5) {
    return false;
  }
  if (delta2 < 0) {
    delta2 *= -1;
  }
  if (hasPrimaryModifier(event2)) {
    delta2 *= -1;
  }
  var direction = getDirection(axis, delta2);
  var root = this._canvas.getRootElement();
  if (!hasSecondaryModifier(event2) && event2.hover) {
    root = event2.hover;
  }
  var children = [
    ...selfAndAllChildren(root, true),
    ...root.attachers || []
  ];
  var elements = this.calculateAdjustments(children, axis, delta2, start);
  var minDimensions = this._eventBus.fire("spaceTool.getMinDimensions", {
    axis,
    direction,
    shapes: elements.resizingShapes,
    start
  });
  var spaceToolConstraints = getSpaceToolConstraints(elements, axis, direction, start, minDimensions);
  assign$2(
    context,
    elements,
    {
      axis,
      direction,
      spaceToolConstraints,
      start
    }
  );
  set$1("resize-" + (axis === "x" ? "ew" : "ns"));
  return true;
};
SpaceTool.prototype.calculateAdjustments = function(elements, axis, delta2, start) {
  var rules2 = this._rules;
  var movingShapes = [], resizingShapes = [];
  var attachers = [], connections = [];
  function moveShape(shape) {
    if (!movingShapes.includes(shape)) {
      movingShapes.push(shape);
    }
    var label = shape.label;
    if (label && !movingShapes.includes(label)) {
      movingShapes.push(label);
    }
  }
  function resizeShape(shape) {
    if (!resizingShapes.includes(shape)) {
      resizingShapes.push(shape);
    }
  }
  forEach$2(elements, function(element) {
    if (!element.parent || isLabel(element)) {
      return;
    }
    if (isConnection(element)) {
      connections.push(element);
      return;
    }
    var shapeStart = element[axis], shapeEnd = shapeStart + element[AXIS_TO_DIMENSION[axis]];
    if (isAttacher$1(element) && (delta2 > 0 && getMid(element)[axis] > start || delta2 < 0 && getMid(element)[axis] < start)) {
      attachers.push(element);
      return;
    }
    if (delta2 > 0 && shapeStart > start || delta2 < 0 && shapeEnd < start) {
      moveShape(element);
      return;
    }
    if (shapeStart < start && shapeEnd > start && rules2.allowed("shape.resize", { shape: element })) {
      resizeShape(element);
      return;
    }
  });
  forEach$2(movingShapes, function(shape) {
    var attachers2 = shape.attachers;
    if (attachers2) {
      forEach$2(attachers2, function(attacher) {
        moveShape(attacher);
      });
    }
  });
  var allShapes = movingShapes.concat(resizingShapes);
  forEach$2(attachers, function(attacher) {
    var host = attacher.host;
    if (includes$4(allShapes, host)) {
      moveShape(attacher);
    }
  });
  allShapes = movingShapes.concat(resizingShapes);
  forEach$2(connections, function(connection) {
    var source2 = connection.source, target = connection.target, label = connection.label;
    if (includes$4(allShapes, source2) && includes$4(allShapes, target) && label) {
      moveShape(label);
    }
  });
  return {
    movingShapes,
    resizingShapes
  };
};
SpaceTool.prototype.toggle = function() {
  if (this.isActive()) {
    return this._dragging.cancel();
  }
  var mouseEvent = this._mouse.getLastMoveEvent();
  this.activateSelection(mouseEvent, !!mouseEvent);
};
SpaceTool.prototype.isActive = function() {
  var context = this._dragging.context();
  if (context) {
    return /^spaceTool/.test(context.prefix);
  }
  return false;
};
function addPadding(trbl) {
  return {
    top: trbl.top - PADDING,
    right: trbl.right + PADDING,
    bottom: trbl.bottom + PADDING,
    left: trbl.left - PADDING
  };
}
function ensureConstraints(event2) {
  var context = event2.context, spaceToolConstraints = context.spaceToolConstraints;
  if (!spaceToolConstraints) {
    return;
  }
  var x2, y2;
  if (isNumber$1(spaceToolConstraints.left)) {
    x2 = Math.max(event2.x, spaceToolConstraints.left);
    event2.dx = event2.dx + x2 - event2.x;
    event2.x = x2;
  }
  if (isNumber$1(spaceToolConstraints.right)) {
    x2 = Math.min(event2.x, spaceToolConstraints.right);
    event2.dx = event2.dx + x2 - event2.x;
    event2.x = x2;
  }
  if (isNumber$1(spaceToolConstraints.top)) {
    y2 = Math.max(event2.y, spaceToolConstraints.top);
    event2.dy = event2.dy + y2 - event2.y;
    event2.y = y2;
  }
  if (isNumber$1(spaceToolConstraints.bottom)) {
    y2 = Math.min(event2.y, spaceToolConstraints.bottom);
    event2.dy = event2.dy + y2 - event2.y;
    event2.y = y2;
  }
}
function getSpaceToolConstraints(elements, axis, direction, start, minDimensions) {
  var movingShapes = elements.movingShapes, resizingShapes = elements.resizingShapes;
  if (!resizingShapes.length) {
    return;
  }
  var spaceToolConstraints = {}, min2, max2;
  forEach$2(resizingShapes, function(resizingShape) {
    var attachers = resizingShape.attachers, children = resizingShape.children;
    var resizingShapeBBox = asTRBL(resizingShape);
    var nonMovingResizingChildren = filter$1(children, function(child) {
      return !isConnection(child) && !isLabel(child) && !includes$4(movingShapes, child) && !includes$4(resizingShapes, child);
    });
    var movingChildren = filter$1(children, function(child) {
      return !isConnection(child) && !isLabel(child) && includes$4(movingShapes, child);
    });
    var minOrMax, nonMovingResizingChildrenBBox, movingChildrenBBox, movingAttachers = [], nonMovingAttachers = [], movingAttachersBBox, movingAttachersConstraint, nonMovingAttachersBBox, nonMovingAttachersConstraint;
    if (nonMovingResizingChildren.length) {
      nonMovingResizingChildrenBBox = addPadding(asTRBL(getBBox(nonMovingResizingChildren)));
      minOrMax = start - resizingShapeBBox[DIRECTION_TO_TRBL[direction]] + nonMovingResizingChildrenBBox[DIRECTION_TO_TRBL[direction]];
      if (direction === "n") {
        spaceToolConstraints.bottom = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "w") {
        spaceToolConstraints.right = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "s") {
        spaceToolConstraints.top = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      } else if (direction === "e") {
        spaceToolConstraints.left = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      }
    }
    if (movingChildren.length) {
      movingChildrenBBox = addPadding(asTRBL(getBBox(movingChildren)));
      minOrMax = start - movingChildrenBBox[DIRECTION_TO_TRBL[DIRECTION_TO_OPPOSITE[direction]]] + resizingShapeBBox[DIRECTION_TO_TRBL[DIRECTION_TO_OPPOSITE[direction]]];
      if (direction === "n") {
        spaceToolConstraints.bottom = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "w") {
        spaceToolConstraints.right = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "s") {
        spaceToolConstraints.top = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      } else if (direction === "e") {
        spaceToolConstraints.left = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      }
    }
    if (attachers && attachers.length) {
      attachers.forEach(function(attacher) {
        if (includes$4(movingShapes, attacher)) {
          movingAttachers.push(attacher);
        } else {
          nonMovingAttachers.push(attacher);
        }
      });
      if (movingAttachers.length) {
        movingAttachersBBox = asTRBL(getBBox(movingAttachers.map(getMid)));
        movingAttachersConstraint = resizingShapeBBox[DIRECTION_TO_TRBL[DIRECTION_TO_OPPOSITE[direction]]] - (movingAttachersBBox[DIRECTION_TO_TRBL[DIRECTION_TO_OPPOSITE[direction]]] - start);
      }
      if (nonMovingAttachers.length) {
        nonMovingAttachersBBox = asTRBL(getBBox(nonMovingAttachers.map(getMid)));
        nonMovingAttachersConstraint = nonMovingAttachersBBox[DIRECTION_TO_TRBL[direction]] - (resizingShapeBBox[DIRECTION_TO_TRBL[direction]] - start);
      }
      if (direction === "n") {
        minOrMax = Math.min(movingAttachersConstraint || Infinity, nonMovingAttachersConstraint || Infinity);
        spaceToolConstraints.bottom = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "w") {
        minOrMax = Math.min(movingAttachersConstraint || Infinity, nonMovingAttachersConstraint || Infinity);
        spaceToolConstraints.right = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "s") {
        minOrMax = Math.max(movingAttachersConstraint || -Infinity, nonMovingAttachersConstraint || -Infinity);
        spaceToolConstraints.top = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      } else if (direction === "e") {
        minOrMax = Math.max(movingAttachersConstraint || -Infinity, nonMovingAttachersConstraint || -Infinity);
        spaceToolConstraints.left = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      }
    }
    var resizingShapeMinDimensions = minDimensions && minDimensions[resizingShape.id];
    if (resizingShapeMinDimensions) {
      if (direction === "n") {
        minOrMax = start + resizingShape[AXIS_TO_DIMENSION[axis]] - resizingShapeMinDimensions[AXIS_TO_DIMENSION[axis]];
        spaceToolConstraints.bottom = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "w") {
        minOrMax = start + resizingShape[AXIS_TO_DIMENSION[axis]] - resizingShapeMinDimensions[AXIS_TO_DIMENSION[axis]];
        spaceToolConstraints.right = max2 = isNumber$1(max2) ? Math.min(max2, minOrMax) : minOrMax;
      } else if (direction === "s") {
        minOrMax = start - resizingShape[AXIS_TO_DIMENSION[axis]] + resizingShapeMinDimensions[AXIS_TO_DIMENSION[axis]];
        spaceToolConstraints.top = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      } else if (direction === "e") {
        minOrMax = start - resizingShape[AXIS_TO_DIMENSION[axis]] + resizingShapeMinDimensions[AXIS_TO_DIMENSION[axis]];
        spaceToolConstraints.left = min2 = isNumber$1(min2) ? Math.max(min2, minOrMax) : minOrMax;
      }
    }
  });
  return spaceToolConstraints;
}
function includes$4(array, item) {
  return array.indexOf(item) !== -1;
}
function isAttacher$1(element) {
  return !!element.host;
}
var MARKER_DRAGGING$1 = "djs-dragging", MARKER_RESIZING$1 = "djs-resizing";
var LOW_PRIORITY$9 = 250;
var max$1 = Math.max;
function SpaceToolPreview(eventBus, elementRegistry, canvas, styles, previewSupport) {
  function addPreviewGfx(collection, dragGroup) {
    forEach$2(collection, function(element) {
      previewSupport.addDragger(element, dragGroup);
      canvas.addMarker(element, MARKER_DRAGGING$1);
    });
  }
  eventBus.on("spaceTool.selection.start", function(event2) {
    var space = canvas.getLayer("space"), context = event2.context;
    var orientation = {
      x: "M 0,-10000 L 0,10000",
      y: "M -10000,0 L 10000,0"
    };
    var crosshairGroup = create$1("g");
    attr(crosshairGroup, styles.cls("djs-crosshair-group", ["no-events"]));
    append(space, crosshairGroup);
    var pathX = create$1("path");
    attr(pathX, "d", orientation.x);
    classes(pathX).add("djs-crosshair");
    append(crosshairGroup, pathX);
    var pathY = create$1("path");
    attr(pathY, "d", orientation.y);
    classes(pathY).add("djs-crosshair");
    append(crosshairGroup, pathY);
    context.crosshairGroup = crosshairGroup;
  });
  eventBus.on("spaceTool.selection.move", function(event2) {
    var crosshairGroup = event2.context.crosshairGroup;
    translate$2(crosshairGroup, event2.x, event2.y);
  });
  eventBus.on("spaceTool.selection.cleanup", function(event2) {
    var context = event2.context, crosshairGroup = context.crosshairGroup;
    if (crosshairGroup) {
      remove(crosshairGroup);
    }
  });
  eventBus.on("spaceTool.move", LOW_PRIORITY$9, function(event2) {
    var context = event2.context, line = context.line, axis = context.axis, movingShapes = context.movingShapes, resizingShapes = context.resizingShapes;
    if (!context.initialized) {
      return;
    }
    if (!context.dragGroup) {
      var spaceLayer = canvas.getLayer("space");
      line = create$1("path");
      attr(line, "d", "M0,0 L0,0");
      classes(line).add("djs-crosshair");
      append(spaceLayer, line);
      context.line = line;
      var dragGroup = create$1("g");
      attr(dragGroup, styles.cls("djs-drag-group", ["no-events"]));
      append(canvas.getActiveLayer(), dragGroup);
      addPreviewGfx(movingShapes, dragGroup);
      var movingConnections = context.movingConnections = elementRegistry.filter(function(element) {
        var sourceIsMoving = false;
        forEach$2(movingShapes, function(shape) {
          forEach$2(shape.outgoing, function(connection) {
            if (element === connection) {
              sourceIsMoving = true;
            }
          });
        });
        var targetIsMoving = false;
        forEach$2(movingShapes, function(shape) {
          forEach$2(shape.incoming, function(connection) {
            if (element === connection) {
              targetIsMoving = true;
            }
          });
        });
        var sourceIsResizing = false;
        forEach$2(resizingShapes, function(shape) {
          forEach$2(shape.outgoing, function(connection) {
            if (element === connection) {
              sourceIsResizing = true;
            }
          });
        });
        var targetIsResizing = false;
        forEach$2(resizingShapes, function(shape) {
          forEach$2(shape.incoming, function(connection) {
            if (element === connection) {
              targetIsResizing = true;
            }
          });
        });
        return isConnection(element) && (sourceIsMoving || sourceIsResizing) && (targetIsMoving || targetIsResizing);
      });
      addPreviewGfx(movingConnections, dragGroup);
      context.dragGroup = dragGroup;
    }
    if (!context.frameGroup) {
      var frameGroup = create$1("g");
      attr(frameGroup, styles.cls("djs-frame-group", ["no-events"]));
      append(canvas.getActiveLayer(), frameGroup);
      var frames = [];
      forEach$2(resizingShapes, function(shape) {
        var frame = previewSupport.addFrame(shape, frameGroup);
        var initialBounds = frame.getBBox();
        frames.push({
          element: frame,
          initialBounds
        });
        canvas.addMarker(shape, MARKER_RESIZING$1);
      });
      context.frameGroup = frameGroup;
      context.frames = frames;
    }
    var orientation = {
      x: "M" + event2.x + ", -10000 L" + event2.x + ", 10000",
      y: "M -10000, " + event2.y + " L 10000, " + event2.y
    };
    attr(line, { d: orientation[axis] });
    var opposite = { x: "y", y: "x" };
    var delta2 = { x: event2.dx, y: event2.dy };
    delta2[opposite[context.axis]] = 0;
    translate$2(context.dragGroup, delta2.x, delta2.y);
    forEach$2(context.frames, function(frame) {
      var element = frame.element, initialBounds = frame.initialBounds, width, height;
      if (context.direction === "e") {
        attr(element, {
          width: max$1(initialBounds.width + delta2.x, 5)
        });
      } else {
        width = max$1(initialBounds.width - delta2.x, 5);
        attr(element, {
          width,
          x: initialBounds.x + initialBounds.width - width
        });
      }
      if (context.direction === "s") {
        attr(element, {
          height: max$1(initialBounds.height + delta2.y, 5)
        });
      } else {
        height = max$1(initialBounds.height - delta2.y, 5);
        attr(element, {
          height,
          y: initialBounds.y + initialBounds.height - height
        });
      }
    });
  });
  eventBus.on("spaceTool.cleanup", function(event2) {
    var context = event2.context, movingShapes = context.movingShapes, movingConnections = context.movingConnections, resizingShapes = context.resizingShapes, line = context.line, dragGroup = context.dragGroup, frameGroup = context.frameGroup;
    forEach$2(movingShapes, function(shape) {
      canvas.removeMarker(shape, MARKER_DRAGGING$1);
    });
    forEach$2(movingConnections, function(connection) {
      canvas.removeMarker(connection, MARKER_DRAGGING$1);
    });
    if (dragGroup) {
      remove(line);
      remove(dragGroup);
    }
    forEach$2(resizingShapes, function(shape) {
      canvas.removeMarker(shape, MARKER_RESIZING$1);
    });
    if (frameGroup) {
      remove(frameGroup);
    }
  });
}
SpaceToolPreview.$inject = [
  "eventBus",
  "elementRegistry",
  "canvas",
  "styles",
  "previewSupport"
];
const SpaceToolModule$1 = {
  __init__: ["spaceToolPreview"],
  __depends__: [
    DraggingModule,
    RulesModule$1,
    ToolManagerModule,
    PreviewSupportModule,
    MouseModule
  ],
  spaceTool: ["type", SpaceTool],
  spaceToolPreview: ["type", SpaceToolPreview]
};
function BpmnSpaceTool(injector) {
  injector.invoke(SpaceTool, this);
}
BpmnSpaceTool.$inject = [
  "injector"
];
e$3(BpmnSpaceTool, SpaceTool);
BpmnSpaceTool.prototype.calculateAdjustments = function(elements, axis, delta2, start) {
  var adjustments = SpaceTool.prototype.calculateAdjustments.call(this, elements, axis, delta2, start);
  adjustments.resizingShapes = adjustments.resizingShapes.filter(function(shape) {
    if (is$g(shape, "bpmn:TextAnnotation")) {
      return false;
    }
    if (isCollapsedPool$1(shape)) {
      if (axis === "y" && isHorizontal$3(shape) || axis === "x" && !isHorizontal$3(shape)) {
        return false;
      }
    }
    return true;
  });
  return adjustments;
};
function isCollapsedPool$1(shape) {
  return is$g(shape, "bpmn:Participant") && !getBusinessObject(shape).processRef;
}
const SpaceToolModule = {
  __depends__: [SpaceToolModule$1],
  spaceTool: ["type", BpmnSpaceTool]
};
function CommandStack(eventBus, injector) {
  this._handlerMap = {};
  this._stack = [];
  this._stackIdx = -1;
  this._currentExecution = {
    actions: [],
    dirty: [],
    trigger: null
  };
  this._injector = injector;
  this._eventBus = eventBus;
  this._uid = 1;
  eventBus.on([
    "diagram.destroy",
    "diagram.clear"
  ], function() {
    this.clear(false);
  }, this);
}
CommandStack.$inject = ["eventBus", "injector"];
CommandStack.prototype.execute = function(command, context) {
  if (!command) {
    throw new Error("command required");
  }
  this._currentExecution.trigger = "execute";
  const action = { command, context };
  this._pushAction(action);
  this._internalExecute(action);
  this._popAction();
};
CommandStack.prototype.canExecute = function(command, context) {
  const action = { command, context };
  const handler = this._getHandler(command);
  let result = this._fire(command, "canExecute", action);
  if (result === void 0) {
    if (!handler) {
      return false;
    }
    if (handler.canExecute) {
      result = handler.canExecute(context);
    }
  }
  return result;
};
CommandStack.prototype.clear = function(emit) {
  this._stack.length = 0;
  this._stackIdx = -1;
  if (emit !== false) {
    this._fire("changed", { trigger: "clear" });
  }
};
CommandStack.prototype.undo = function() {
  let action = this._getUndoAction(), next;
  if (action) {
    this._currentExecution.trigger = "undo";
    this._pushAction(action);
    while (action) {
      this._internalUndo(action);
      next = this._getUndoAction();
      if (!next || next.id !== action.id) {
        break;
      }
      action = next;
    }
    this._popAction();
  }
};
CommandStack.prototype.redo = function() {
  let action = this._getRedoAction(), next;
  if (action) {
    this._currentExecution.trigger = "redo";
    this._pushAction(action);
    while (action) {
      this._internalExecute(action, true);
      next = this._getRedoAction();
      if (!next || next.id !== action.id) {
        break;
      }
      action = next;
    }
    this._popAction();
  }
};
CommandStack.prototype.register = function(command, handler) {
  this._setHandler(command, handler);
};
CommandStack.prototype.registerHandler = function(command, handlerCls) {
  if (!command || !handlerCls) {
    throw new Error("command and handlerCls must be defined");
  }
  const handler = this._injector.instantiate(handlerCls);
  this.register(command, handler);
};
CommandStack.prototype.canUndo = function() {
  return !!this._getUndoAction();
};
CommandStack.prototype.canRedo = function() {
  return !!this._getRedoAction();
};
CommandStack.prototype._getRedoAction = function() {
  return this._stack[this._stackIdx + 1];
};
CommandStack.prototype._getUndoAction = function() {
  return this._stack[this._stackIdx];
};
CommandStack.prototype._internalUndo = function(action) {
  const command = action.command, context = action.context;
  const handler = this._getHandler(command);
  this._atomicDo(() => {
    this._fire(command, "revert", action);
    if (handler.revert) {
      this._markDirty(handler.revert(context));
    }
    this._revertedAction(action);
    this._fire(command, "reverted", action);
  });
};
CommandStack.prototype._fire = function(command, qualifier, event2) {
  if (arguments.length < 3) {
    event2 = qualifier;
    qualifier = null;
  }
  const names = qualifier ? [command + "." + qualifier, qualifier] : [command];
  let result;
  event2 = this._eventBus.createEvent(event2);
  for (const name2 of names) {
    result = this._eventBus.fire("commandStack." + name2, event2);
    if (event2.cancelBubble) {
      break;
    }
  }
  return result;
};
CommandStack.prototype._createId = function() {
  return this._uid++;
};
CommandStack.prototype._atomicDo = function(fn) {
  const execution = this._currentExecution;
  execution.atomic = true;
  try {
    fn();
  } finally {
    execution.atomic = false;
  }
};
CommandStack.prototype._internalExecute = function(action, redo) {
  const command = action.command, context = action.context;
  const handler = this._getHandler(command);
  if (!handler) {
    throw new Error("no command handler registered for <" + command + ">");
  }
  this._pushAction(action);
  if (!redo) {
    this._fire(command, "preExecute", action);
    if (handler.preExecute) {
      handler.preExecute(context);
    }
    this._fire(command, "preExecuted", action);
  }
  this._atomicDo(() => {
    this._fire(command, "execute", action);
    if (handler.execute) {
      this._markDirty(handler.execute(context));
    }
    this._executedAction(action, redo);
    this._fire(command, "executed", action);
  });
  if (!redo) {
    this._fire(command, "postExecute", action);
    if (handler.postExecute) {
      handler.postExecute(context);
    }
    this._fire(command, "postExecuted", action);
  }
  this._popAction();
};
CommandStack.prototype._pushAction = function(action) {
  const execution = this._currentExecution, actions = execution.actions;
  const baseAction = actions[0];
  if (execution.atomic) {
    throw new Error("illegal invocation in <execute> or <revert> phase (action: " + action.command + ")");
  }
  if (!action.id) {
    action.id = baseAction && baseAction.id || this._createId();
  }
  actions.push(action);
};
CommandStack.prototype._popAction = function() {
  const execution = this._currentExecution, trigger = execution.trigger, actions = execution.actions, dirty = execution.dirty;
  actions.pop();
  if (!actions.length) {
    this._eventBus.fire("elements.changed", { elements: uniqueBy$1("id", dirty.reverse()) });
    dirty.length = 0;
    this._fire("changed", { trigger });
    execution.trigger = null;
  }
};
CommandStack.prototype._markDirty = function(elements) {
  const execution = this._currentExecution;
  if (!elements) {
    return;
  }
  elements = isArray$3(elements) ? elements : [elements];
  execution.dirty = execution.dirty.concat(elements);
};
CommandStack.prototype._executedAction = function(action, redo) {
  const stackIdx = ++this._stackIdx;
  if (!redo) {
    this._stack.splice(stackIdx, this._stack.length, action);
  }
};
CommandStack.prototype._revertedAction = function(action) {
  this._stackIdx--;
};
CommandStack.prototype._getHandler = function(command) {
  return this._handlerMap[command];
};
CommandStack.prototype._setHandler = function(command, handler) {
  if (!command || !handler) {
    throw new Error("command and handler required");
  }
  if (this._handlerMap[command]) {
    throw new Error("overriding handler for command <" + command + ">");
  }
  this._handlerMap[command] = handler;
};
const CommandModule = {
  commandStack: ["type", CommandStack]
};
function saveClear(collection, removeFn) {
  if (typeof removeFn !== "function") {
    throw new Error("removeFn iterator must be a function");
  }
  if (!collection) {
    return;
  }
  var e2;
  while (e2 = collection[0]) {
    removeFn(e2);
  }
  return collection;
}
var LOW_PRIORITY$8 = 250, HIGH_PRIORITY$8 = 1400;
function LabelSupport(injector, eventBus, modeling) {
  CommandInterceptor.call(this, eventBus);
  var movePreview = injector.get("movePreview", false);
  eventBus.on("shape.move.start", HIGH_PRIORITY$8, function(e2) {
    var context = e2.context, shapes = context.shapes, validatedShapes = context.validatedShapes;
    context.shapes = removeLabels(shapes);
    context.validatedShapes = removeLabels(validatedShapes);
  });
  movePreview && eventBus.on("shape.move.start", LOW_PRIORITY$8, function(e2) {
    var context = e2.context, shapes = context.shapes;
    var labels = [];
    forEach$2(shapes, function(element) {
      forEach$2(element.labels, function(label) {
        if (!label.hidden && context.shapes.indexOf(label) === -1) {
          labels.push(label);
        }
        if (element.labelTarget) {
          labels.push(element);
        }
      });
    });
    forEach$2(labels, function(label) {
      movePreview.makeDraggable(context, label, true);
    });
  });
  this.preExecuted("elements.move", HIGH_PRIORITY$8, function(e2) {
    var context = e2.context, closure = context.closure, enclosedElements = closure.enclosedElements;
    var enclosedLabels = [];
    forEach$2(enclosedElements, function(element) {
      forEach$2(element.labels, function(label) {
        if (!enclosedElements[label.id]) {
          enclosedLabels.push(label);
        }
      });
    });
    closure.addAll(enclosedLabels);
  });
  this.preExecute([
    "connection.delete",
    "shape.delete"
  ], function(e2) {
    var context = e2.context, element = context.connection || context.shape;
    saveClear(element.labels, function(label) {
      modeling.removeShape(label, { nested: true });
    });
  });
  this.execute("shape.delete", function(e2) {
    var context = e2.context, shape = context.shape, labelTarget = shape.labelTarget;
    if (labelTarget) {
      context.labelTargetIndex = indexOf(labelTarget.labels, shape);
      context.labelTarget = labelTarget;
      shape.labelTarget = null;
    }
  });
  this.revert("shape.delete", function(e2) {
    var context = e2.context, shape = context.shape, labelTarget = context.labelTarget, labelTargetIndex = context.labelTargetIndex;
    if (labelTarget) {
      add$1(labelTarget.labels, shape, labelTargetIndex);
      shape.labelTarget = labelTarget;
    }
  });
}
e$3(LabelSupport, CommandInterceptor);
LabelSupport.$inject = [
  "injector",
  "eventBus",
  "modeling"
];
function removeLabels(elements) {
  return filter$1(elements, function(element) {
    return elements.indexOf(element.labelTarget) === -1;
  });
}
const LabelSupportModule = {
  __init__: ["labelSupport"],
  labelSupport: ["type", LabelSupport]
};
var LOW_PRIORITY$7 = 251, HIGH_PRIORITY$7 = 1401;
var MARKER_ATTACH$1 = "attach-ok";
function AttachSupport(injector, eventBus, canvas, rules2, modeling) {
  CommandInterceptor.call(this, eventBus);
  var movePreview = injector.get("movePreview", false);
  eventBus.on("shape.move.start", HIGH_PRIORITY$7, function(e2) {
    var context = e2.context, shapes = context.shapes, validatedShapes = context.validatedShapes;
    context.shapes = addAttached(shapes);
    context.validatedShapes = removeAttached(validatedShapes);
  });
  movePreview && eventBus.on("shape.move.start", LOW_PRIORITY$7, function(e2) {
    var context = e2.context, shapes = context.shapes, attachers = getAttachers(shapes);
    forEach$2(attachers, function(attacher) {
      movePreview.makeDraggable(context, attacher, true);
      forEach$2(attacher.labels, function(label) {
        movePreview.makeDraggable(context, label, true);
      });
    });
  });
  movePreview && eventBus.on("shape.move.start", function(event2) {
    var context = event2.context, shapes = context.shapes;
    if (shapes.length !== 1) {
      return;
    }
    var shape = shapes[0];
    var host = shape.host;
    if (host) {
      canvas.addMarker(host, MARKER_ATTACH$1);
      eventBus.once([
        "shape.move.out",
        "shape.move.cleanup"
      ], function() {
        canvas.removeMarker(host, MARKER_ATTACH$1);
      });
    }
  });
  this.preExecuted("elements.move", HIGH_PRIORITY$7, function(e2) {
    var context = e2.context, closure = context.closure, shapes = context.shapes, attachers = getAttachers(shapes);
    forEach$2(attachers, function(attacher) {
      closure.add(attacher, closure.topLevel[attacher.host.id]);
    });
  });
  this.postExecuted("elements.move", function(e2) {
    var context = e2.context, shapes = context.shapes, newHost = context.newHost, attachers;
    if (newHost && shapes.length !== 1) {
      return;
    }
    if (newHost) {
      attachers = shapes;
    } else {
      attachers = filter$1(shapes, function(shape) {
        var host = shape.host;
        return isAttacher(shape) && !includes$3(shapes, host);
      });
    }
    forEach$2(attachers, function(attacher) {
      modeling.updateAttachment(attacher, newHost);
    });
  });
  this.postExecuted("elements.move", function(e2) {
    var shapes = e2.context.shapes;
    forEach$2(shapes, function(shape) {
      forEach$2(shape.attachers, function(attacher) {
        forEach$2(attacher.outgoing.slice(), function(connection) {
          var allowed = rules2.allowed("connection.reconnect", {
            connection,
            source: connection.source,
            target: connection.target
          });
          if (!allowed) {
            modeling.removeConnection(connection);
          }
        });
        forEach$2(attacher.incoming.slice(), function(connection) {
          var allowed = rules2.allowed("connection.reconnect", {
            connection,
            source: connection.source,
            target: connection.target
          });
          if (!allowed) {
            modeling.removeConnection(connection);
          }
        });
      });
    });
  });
  this.postExecute("shape.create", function(e2) {
    var context = e2.context, shape = context.shape, host = context.host;
    if (host) {
      modeling.updateAttachment(shape, host);
    }
  });
  this.postExecute("shape.replace", function(e2) {
    var context = e2.context, oldShape = context.oldShape, newShape = context.newShape;
    saveClear(oldShape.attachers, function(attacher) {
      var allowed = rules2.allowed("elements.move", {
        target: newShape,
        shapes: [attacher]
      });
      if (allowed === "attach") {
        modeling.updateAttachment(attacher, newShape);
      } else {
        modeling.removeShape(attacher);
      }
    });
    if (newShape.attachers.length) {
      forEach$2(newShape.attachers, function(attacher) {
        var delta2 = getNewAttachShapeDelta(attacher, oldShape, newShape);
        modeling.moveShape(attacher, delta2, attacher.parent);
      });
    }
  });
  this.postExecute("shape.resize", function(event2) {
    var context = event2.context, shape = context.shape, oldBounds = context.oldBounds, newBounds = context.newBounds, attachers = shape.attachers, hints = context.hints || {};
    if (hints.attachSupport === false) {
      return;
    }
    forEach$2(attachers, function(attacher) {
      var delta2 = getNewAttachShapeDelta(attacher, oldBounds, newBounds);
      modeling.moveShape(attacher, delta2, attacher.parent);
      forEach$2(attacher.labels, function(label) {
        modeling.moveShape(label, delta2, label.parent);
      });
    });
  });
  this.preExecute("shape.delete", function(event2) {
    var shape = event2.context.shape;
    saveClear(shape.attachers, function(attacher) {
      modeling.removeShape(attacher);
    });
    if (shape.host) {
      modeling.updateAttachment(shape, null);
    }
  });
}
e$3(AttachSupport, CommandInterceptor);
AttachSupport.$inject = [
  "injector",
  "eventBus",
  "canvas",
  "rules",
  "modeling"
];
function getAttachers(shapes) {
  return flatten$2(map$2(shapes, function(s2) {
    return s2.attachers || [];
  }));
}
function addAttached(elements) {
  var attachers = getAttachers(elements);
  return unionBy$1("id", elements, attachers);
}
function removeAttached(elements) {
  var ids2 = groupBy$1(elements, "id");
  return filter$1(elements, function(element) {
    while (element) {
      if (element.host && ids2[element.host.id]) {
        return false;
      }
      element = element.parent;
    }
    return true;
  });
}
function isAttacher(shape) {
  return !!shape.host;
}
function includes$3(array, item) {
  return array.indexOf(item) !== -1;
}
const AttachSupportModule = {
  __depends__: [
    RulesModule$1
  ],
  __init__: ["attachSupport"],
  attachSupport: ["type", AttachSupport]
};
function BpmnFactory(moddle) {
  this._model = moddle;
}
BpmnFactory.$inject = ["moddle"];
BpmnFactory.prototype._needsId = function(element) {
  return isAny$7(element, [
    "bpmn:RootElement",
    "bpmn:FlowElement",
    "bpmn:MessageFlow",
    "bpmn:DataAssociation",
    "bpmn:Artifact",
    "bpmn:Participant",
    "bpmn:Lane",
    "bpmn:LaneSet",
    "bpmn:Process",
    "bpmn:Collaboration",
    "bpmndi:BPMNShape",
    "bpmndi:BPMNEdge",
    "bpmndi:BPMNDiagram",
    "bpmndi:BPMNPlane",
    "bpmn:Property",
    "bpmn:CategoryValue"
  ]);
};
BpmnFactory.prototype._ensureId = function(element) {
  if (element.id) {
    this._model.ids.claim(element.id, element);
    return;
  }
  var prefix2;
  if (is$g(element, "bpmn:Activity")) {
    prefix2 = "Activity";
  } else if (is$g(element, "bpmn:Event")) {
    prefix2 = "Event";
  } else if (is$g(element, "bpmn:Gateway")) {
    prefix2 = "Gateway";
  } else if (isAny$7(element, ["bpmn:SequenceFlow", "bpmn:MessageFlow"])) {
    prefix2 = "Flow";
  } else {
    prefix2 = (element.$type || "").replace(/^[^:]*:/g, "");
  }
  prefix2 += "_";
  if (!element.id && this._needsId(element)) {
    element.id = this._model.ids.nextPrefixed(prefix2, element);
  }
};
BpmnFactory.prototype.create = function(type, attrs) {
  var element = this._model.create(type, attrs || {});
  this._ensureId(element);
  return element;
};
BpmnFactory.prototype.createDiLabel = function() {
  return this.create("bpmndi:BPMNLabel", {
    bounds: this.createDiBounds()
  });
};
BpmnFactory.prototype.createDiShape = function(semantic, attrs) {
  return this.create("bpmndi:BPMNShape", assign$2({
    bpmnElement: semantic,
    bounds: this.createDiBounds()
  }, attrs));
};
BpmnFactory.prototype.createDiBounds = function(bounds) {
  return this.create("dc:Bounds", bounds);
};
BpmnFactory.prototype.createDiWaypoints = function(waypoints) {
  var self2 = this;
  return map$2(waypoints, function(pos) {
    return self2.createDiWaypoint(pos);
  });
};
BpmnFactory.prototype.createDiWaypoint = function(point) {
  return this.create("dc:Point", pick$1(point, ["x", "y"]));
};
BpmnFactory.prototype.createDiEdge = function(semantic, attrs) {
  return this.create("bpmndi:BPMNEdge", assign$2({
    bpmnElement: semantic,
    waypoint: this.createDiWaypoints([])
  }, attrs));
};
BpmnFactory.prototype.createDiPlane = function(semantic, attrs) {
  return this.create("bpmndi:BPMNPlane", assign$2({
    bpmnElement: semantic
  }, attrs));
};
function BpmnUpdater(eventBus, bpmnFactory, connectionDocking) {
  CommandInterceptor.call(this, eventBus);
  this._bpmnFactory = bpmnFactory;
  var self2 = this;
  function cropConnection(e2) {
    var context = e2.context, hints = context.hints || {}, connection;
    if (!context.cropped && hints.createElementsBehavior !== false) {
      connection = context.connection;
      connection.waypoints = connectionDocking.getCroppedWaypoints(connection);
      context.cropped = true;
    }
  }
  this.executed([
    "connection.layout",
    "connection.create"
  ], cropConnection);
  this.reverted(["connection.layout"], function(e2) {
    delete e2.context.cropped;
  });
  function updateParent(e2) {
    var context = e2.context;
    self2.updateParent(context.shape || context.connection, context.oldParent);
  }
  function reverseUpdateParent(e2) {
    var context = e2.context;
    var element = context.shape || context.connection, oldParent = context.parent || context.newParent;
    self2.updateParent(element, oldParent);
  }
  this.executed([
    "shape.move",
    "shape.create",
    "shape.delete",
    "connection.create",
    "connection.move",
    "connection.delete"
  ], ifBpmn(updateParent));
  this.reverted([
    "shape.move",
    "shape.create",
    "shape.delete",
    "connection.create",
    "connection.move",
    "connection.delete"
  ], ifBpmn(reverseUpdateParent));
  function updateRoot(event2) {
    var context = event2.context, oldRoot = context.oldRoot, children = oldRoot.children;
    forEach$2(children, function(child) {
      if (is$g(child, "bpmn:BaseElement")) {
        self2.updateParent(child);
      }
    });
  }
  this.executed(["canvas.updateRoot"], updateRoot);
  this.reverted(["canvas.updateRoot"], updateRoot);
  function updateBounds(e2) {
    var shape = e2.context.shape;
    if (!is$g(shape, "bpmn:BaseElement")) {
      return;
    }
    self2.updateBounds(shape);
  }
  this.executed(["shape.move", "shape.create", "shape.resize"], ifBpmn(function(event2) {
    if (event2.context.shape.type === "label") {
      return;
    }
    updateBounds(event2);
  }));
  this.reverted(["shape.move", "shape.create", "shape.resize"], ifBpmn(function(event2) {
    if (event2.context.shape.type === "label") {
      return;
    }
    updateBounds(event2);
  }));
  eventBus.on("shape.changed", function(event2) {
    if (event2.element.type === "label") {
      updateBounds({ context: { shape: event2.element } });
    }
  });
  function updateConnection(e2) {
    self2.updateConnection(e2.context);
  }
  this.executed([
    "connection.create",
    "connection.move",
    "connection.delete",
    "connection.reconnect"
  ], ifBpmn(updateConnection));
  this.reverted([
    "connection.create",
    "connection.move",
    "connection.delete",
    "connection.reconnect"
  ], ifBpmn(updateConnection));
  function updateConnectionWaypoints(e2) {
    self2.updateConnectionWaypoints(e2.context.connection);
  }
  this.executed([
    "connection.layout",
    "connection.move",
    "connection.updateWaypoints"
  ], ifBpmn(updateConnectionWaypoints));
  this.reverted([
    "connection.layout",
    "connection.move",
    "connection.updateWaypoints"
  ], ifBpmn(updateConnectionWaypoints));
  this.executed("connection.reconnect", ifBpmn(function(event2) {
    var context = event2.context, connection = context.connection, oldSource = context.oldSource, newSource = context.newSource, connectionBo = getBusinessObject(connection), oldSourceBo = getBusinessObject(oldSource), newSourceBo = getBusinessObject(newSource);
    if (connectionBo.conditionExpression && !isAny$7(newSourceBo, [
      "bpmn:Activity",
      "bpmn:ExclusiveGateway",
      "bpmn:InclusiveGateway"
    ])) {
      context.oldConditionExpression = connectionBo.conditionExpression;
      delete connectionBo.conditionExpression;
    }
    if (oldSource !== newSource && oldSourceBo.default === connectionBo) {
      context.oldDefault = oldSourceBo.default;
      delete oldSourceBo.default;
    }
  }));
  this.reverted("connection.reconnect", ifBpmn(function(event2) {
    var context = event2.context, connection = context.connection, oldSource = context.oldSource, newSource = context.newSource, connectionBo = getBusinessObject(connection), oldSourceBo = getBusinessObject(oldSource), newSourceBo = getBusinessObject(newSource);
    if (context.oldConditionExpression) {
      connectionBo.conditionExpression = context.oldConditionExpression;
    }
    if (context.oldDefault) {
      oldSourceBo.default = context.oldDefault;
      delete newSourceBo.default;
    }
  }));
  function updateAttachment(e2) {
    self2.updateAttachment(e2.context);
  }
  this.executed(["element.updateAttachment"], ifBpmn(updateAttachment));
  this.reverted(["element.updateAttachment"], ifBpmn(updateAttachment));
  this.executed("element.updateLabel", ifBpmn(updateBPMNLabel));
  this.reverted("element.updateLabel", ifBpmn(updateBPMNLabel));
  function updateBPMNLabel(event2) {
    const { element } = event2.context, label = getLabel(element);
    const di = getDi(element), diLabel = di && di.get("label");
    if (isLabelExternal(element) || isPlane(element)) {
      return;
    }
    if (label && !diLabel) {
      di.set("label", bpmnFactory.create("bpmndi:BPMNLabel"));
    } else if (!label && diLabel) {
      di.set("label", void 0);
    }
  }
}
e$3(BpmnUpdater, CommandInterceptor);
BpmnUpdater.$inject = [
  "eventBus",
  "bpmnFactory",
  "connectionDocking"
];
BpmnUpdater.prototype.updateAttachment = function(context) {
  var shape = context.shape, businessObject = shape.businessObject, host = shape.host;
  businessObject.attachedToRef = host && host.businessObject;
};
BpmnUpdater.prototype.updateParent = function(element, oldParent) {
  if (isLabel(element)) {
    return;
  }
  if (is$g(element, "bpmn:DataStoreReference") && element.parent && is$g(element.parent, "bpmn:Collaboration")) {
    return;
  }
  var parentShape = element.parent;
  var businessObject = element.businessObject, di = getDi(element), parentBusinessObject = parentShape && parentShape.businessObject, parentDi = getDi(parentShape);
  if (is$g(element, "bpmn:FlowNode")) {
    this.updateFlowNodeRefs(businessObject, parentBusinessObject, oldParent && oldParent.businessObject);
  }
  if (is$g(element, "bpmn:DataOutputAssociation")) {
    if (element.source) {
      parentBusinessObject = element.source.businessObject;
    } else {
      parentBusinessObject = null;
    }
  }
  if (is$g(element, "bpmn:DataInputAssociation")) {
    if (element.target) {
      parentBusinessObject = element.target.businessObject;
    } else {
      parentBusinessObject = null;
    }
  }
  this.updateSemanticParent(businessObject, parentBusinessObject);
  if (is$g(element, "bpmn:DataObjectReference") && businessObject.dataObjectRef) {
    this.updateSemanticParent(businessObject.dataObjectRef, parentBusinessObject);
  }
  this.updateDiParent(di, parentDi);
};
BpmnUpdater.prototype.updateBounds = function(shape) {
  var di = getDi(shape), embeddedLabelBounds = getEmbeddedLabelBounds(shape);
  if (embeddedLabelBounds) {
    var embeddedLabelBoundsDelta = delta(embeddedLabelBounds, di.get("bounds"));
    assign$2(embeddedLabelBounds, {
      x: shape.x + embeddedLabelBoundsDelta.x,
      y: shape.y + embeddedLabelBoundsDelta.y
    });
  }
  var target = isLabel(shape) ? this._getLabel(di) : di;
  var bounds = target.bounds;
  if (!bounds) {
    bounds = this._bpmnFactory.createDiBounds();
    target.set("bounds", bounds);
  }
  assign$2(bounds, {
    x: shape.x,
    y: shape.y,
    width: shape.width,
    height: shape.height
  });
};
BpmnUpdater.prototype.updateFlowNodeRefs = function(businessObject, newContainment, oldContainment) {
  if (oldContainment === newContainment) {
    return;
  }
  var oldRefs, newRefs;
  if (is$g(oldContainment, "bpmn:Lane")) {
    oldRefs = oldContainment.get("flowNodeRef");
    remove$2(oldRefs, businessObject);
  }
  if (is$g(newContainment, "bpmn:Lane")) {
    newRefs = newContainment.get("flowNodeRef");
    add$1(newRefs, businessObject);
  }
};
BpmnUpdater.prototype.updateDiConnection = function(connection, newSource, newTarget) {
  var connectionDi = getDi(connection), newSourceDi = getDi(newSource), newTargetDi = getDi(newTarget);
  if (connectionDi.sourceElement && connectionDi.sourceElement.bpmnElement !== getBusinessObject(newSource)) {
    connectionDi.sourceElement = newSource && newSourceDi;
  }
  if (connectionDi.targetElement && connectionDi.targetElement.bpmnElement !== getBusinessObject(newTarget)) {
    connectionDi.targetElement = newTarget && newTargetDi;
  }
};
BpmnUpdater.prototype.updateDiParent = function(di, parentDi) {
  if (parentDi && !is$g(parentDi, "bpmndi:BPMNPlane")) {
    parentDi = parentDi.$parent;
  }
  if (di.$parent === parentDi) {
    return;
  }
  var planeElements = (parentDi || di.$parent).get("planeElement");
  if (parentDi) {
    planeElements.push(di);
    di.$parent = parentDi;
  } else {
    remove$2(planeElements, di);
    di.$parent = null;
  }
};
function getDefinitions(element) {
  while (element && !is$g(element, "bpmn:Definitions")) {
    element = element.$parent;
  }
  return element;
}
BpmnUpdater.prototype.getLaneSet = function(container) {
  var laneSet, laneSets;
  if (is$g(container, "bpmn:Lane")) {
    laneSet = container.childLaneSet;
    if (!laneSet) {
      laneSet = this._bpmnFactory.create("bpmn:LaneSet");
      container.childLaneSet = laneSet;
      laneSet.$parent = container;
    }
    return laneSet;
  }
  if (is$g(container, "bpmn:Participant")) {
    container = container.processRef;
  }
  laneSets = container.get("laneSets");
  laneSet = laneSets[0];
  if (!laneSet) {
    laneSet = this._bpmnFactory.create("bpmn:LaneSet");
    laneSet.$parent = container;
    laneSets.push(laneSet);
  }
  return laneSet;
};
BpmnUpdater.prototype.updateSemanticParent = function(businessObject, newParent, visualParent) {
  var containment;
  if (businessObject.$parent === newParent) {
    return;
  }
  if (is$g(businessObject, "bpmn:DataInput") || is$g(businessObject, "bpmn:DataOutput")) {
    if (is$g(newParent, "bpmn:Participant") && "processRef" in newParent) {
      newParent = newParent.processRef;
    }
    if ("ioSpecification" in newParent && newParent.ioSpecification === businessObject.$parent) {
      return;
    }
  }
  if (is$g(businessObject, "bpmn:Lane")) {
    if (newParent) {
      newParent = this.getLaneSet(newParent);
    }
    containment = "lanes";
  } else if (is$g(businessObject, "bpmn:FlowElement")) {
    if (newParent) {
      if (is$g(newParent, "bpmn:Participant")) {
        newParent = newParent.processRef;
      } else if (is$g(newParent, "bpmn:Lane")) {
        do {
          newParent = newParent.$parent.$parent;
        } while (is$g(newParent, "bpmn:Lane"));
      }
    }
    containment = "flowElements";
  } else if (is$g(businessObject, "bpmn:Artifact")) {
    while (newParent && !is$g(newParent, "bpmn:Process") && !is$g(newParent, "bpmn:SubProcess") && !is$g(newParent, "bpmn:Collaboration")) {
      if (is$g(newParent, "bpmn:Participant")) {
        newParent = newParent.processRef;
        break;
      } else {
        newParent = newParent.$parent;
      }
    }
    containment = "artifacts";
  } else if (is$g(businessObject, "bpmn:MessageFlow")) {
    containment = "messageFlows";
  } else if (is$g(businessObject, "bpmn:Participant")) {
    containment = "participants";
    var process = businessObject.processRef, definitions;
    if (process) {
      definitions = getDefinitions(businessObject.$parent || newParent);
      if (businessObject.$parent) {
        remove$2(definitions.get("rootElements"), process);
        process.$parent = null;
      }
      if (newParent) {
        add$1(definitions.get("rootElements"), process);
        process.$parent = definitions;
      }
    }
  } else if (is$g(businessObject, "bpmn:DataOutputAssociation")) {
    containment = "dataOutputAssociations";
  } else if (is$g(businessObject, "bpmn:DataInputAssociation")) {
    containment = "dataInputAssociations";
  }
  if (!containment) {
    throw new Error(`no parent for <${businessObject.id}> in <${newParent.id}>`);
  }
  var children;
  if (businessObject.$parent) {
    children = businessObject.$parent.get(containment);
    remove$2(children, businessObject);
  }
  if (!newParent) {
    businessObject.$parent = null;
  } else {
    children = newParent.get(containment);
    children.push(businessObject);
    businessObject.$parent = newParent;
  }
  if (visualParent) {
    var diChildren = visualParent.get(containment);
    remove$2(children, businessObject);
    if (newParent) {
      if (!diChildren) {
        diChildren = [];
        newParent.set(containment, diChildren);
      }
      diChildren.push(businessObject);
    }
  }
};
BpmnUpdater.prototype.updateConnectionWaypoints = function(connection) {
  var di = getDi(connection);
  di.set("waypoint", this._bpmnFactory.createDiWaypoints(connection.waypoints));
};
BpmnUpdater.prototype.updateConnection = function(context) {
  var connection = context.connection, businessObject = getBusinessObject(connection), newSource = connection.source, newSourceBo = getBusinessObject(newSource), newTarget = connection.target, newTargetBo = getBusinessObject(connection.target), visualParent;
  if (!is$g(businessObject, "bpmn:DataAssociation")) {
    var inverseSet = is$g(businessObject, "bpmn:SequenceFlow");
    if (businessObject.sourceRef !== newSourceBo) {
      if (inverseSet) {
        remove$2(businessObject.sourceRef && businessObject.sourceRef.get("outgoing"), businessObject);
        if (newSourceBo && newSourceBo.get("outgoing")) {
          newSourceBo.get("outgoing").push(businessObject);
        }
      }
      businessObject.sourceRef = newSourceBo;
    }
    if (businessObject.targetRef !== newTargetBo) {
      if (inverseSet) {
        remove$2(businessObject.targetRef && businessObject.targetRef.get("incoming"), businessObject);
        if (newTargetBo && newTargetBo.get("incoming")) {
          newTargetBo.get("incoming").push(businessObject);
        }
      }
      businessObject.targetRef = newTargetBo;
    }
  } else if (is$g(businessObject, "bpmn:DataInputAssociation")) {
    businessObject.get("sourceRef")[0] = newSourceBo;
    visualParent = context.parent || context.newParent || newTargetBo;
    this.updateSemanticParent(businessObject, newTargetBo, visualParent);
  } else if (is$g(businessObject, "bpmn:DataOutputAssociation")) {
    visualParent = context.parent || context.newParent || newSourceBo;
    this.updateSemanticParent(businessObject, newSourceBo, visualParent);
    businessObject.targetRef = newTargetBo;
  }
  this.updateConnectionWaypoints(connection);
  this.updateDiConnection(connection, newSource, newTarget);
};
BpmnUpdater.prototype._getLabel = function(di) {
  if (!di.label) {
    di.label = this._bpmnFactory.createDiLabel();
  }
  return di.label;
};
function ifBpmn(fn) {
  return function(event2) {
    var context = event2.context, element = context.shape || context.connection || context.element;
    if (is$g(element, "bpmn:BaseElement")) {
      fn(event2);
    }
  };
}
function getEmbeddedLabelBounds(shape) {
  if (!is$g(shape, "bpmn:Activity")) {
    return;
  }
  var di = getDi(shape);
  if (!di) {
    return;
  }
  var label = di.get("label");
  if (!label) {
    return;
  }
  return label.get("bounds");
}
function extend(collection, refs, property, target) {
  var inverseProperty = property.inverse;
  Object.defineProperty(collection, "remove", {
    value: function(element) {
      var idx = this.indexOf(element);
      if (idx !== -1) {
        this.splice(idx, 1);
        refs.unset(element, inverseProperty, target);
      }
      return element;
    }
  });
  Object.defineProperty(collection, "contains", {
    value: function(element) {
      return this.indexOf(element) !== -1;
    }
  });
  Object.defineProperty(collection, "add", {
    value: function(element, idx) {
      var currentIdx = this.indexOf(element);
      if (typeof idx === "undefined") {
        if (currentIdx !== -1) {
          return;
        }
        idx = this.length;
      }
      if (currentIdx !== -1) {
        this.splice(currentIdx, 1);
      }
      this.splice(idx, 0, element);
      if (currentIdx === -1) {
        refs.set(element, inverseProperty, target);
      }
    }
  });
  Object.defineProperty(collection, "__refs_collection", {
    value: true
  });
  return collection;
}
function isExtended(collection) {
  return collection.__refs_collection === true;
}
function hasOwnProperty(e2, property) {
  return Object.prototype.hasOwnProperty.call(e2, property.name || property);
}
function defineCollectionProperty(ref2, property, target) {
  var collection = extend(target[property.name] || [], ref2, property, target);
  Object.defineProperty(target, property.name, {
    enumerable: property.enumerable,
    value: collection
  });
  if (collection.length) {
    collection.forEach(function(o2) {
      ref2.set(o2, property.inverse, target);
    });
  }
}
function defineProperty(ref2, property, target) {
  var inverseProperty = property.inverse;
  var _value = target[property.name];
  Object.defineProperty(target, property.name, {
    configurable: property.configurable,
    enumerable: property.enumerable,
    get: function() {
      return _value;
    },
    set: function(value) {
      if (value === _value) {
        return;
      }
      var old = _value;
      _value = null;
      if (old) {
        ref2.unset(old, inverseProperty, target);
      }
      _value = value;
      ref2.set(_value, inverseProperty, target);
    }
  });
}
function Refs(a2, b2) {
  if (!(this instanceof Refs)) {
    return new Refs(a2, b2);
  }
  a2.inverse = b2;
  b2.inverse = a2;
  this.props = {};
  this.props[a2.name] = a2;
  this.props[b2.name] = b2;
}
Refs.prototype.bind = function(target, property) {
  if (typeof property === "string") {
    if (!this.props[property]) {
      throw new Error("no property <" + property + "> in ref");
    }
    property = this.props[property];
  }
  if (property.collection) {
    defineCollectionProperty(this, property, target);
  } else {
    defineProperty(this, property, target);
  }
};
Refs.prototype.ensureRefsCollection = function(target, property) {
  var collection = target[property.name];
  if (!isExtended(collection)) {
    defineCollectionProperty(this, property, target);
  }
  return collection;
};
Refs.prototype.ensureBound = function(target, property) {
  if (!hasOwnProperty(target, property)) {
    this.bind(target, property);
  }
};
Refs.prototype.unset = function(target, property, value) {
  if (target) {
    this.ensureBound(target, property);
    if (property.collection) {
      this.ensureRefsCollection(target, property).remove(value);
    } else {
      target[property.name] = void 0;
    }
  }
};
Refs.prototype.set = function(target, property, value) {
  if (target) {
    this.ensureBound(target, property);
    if (property.collection) {
      this.ensureRefsCollection(target, property).add(value);
    } else {
      target[property.name] = value;
    }
  }
};
var parentRefs = new Refs({ name: "children", enumerable: true, collection: true }, { name: "parent" }), labelRefs = new Refs({ name: "labels", enumerable: true, collection: true }, { name: "labelTarget" }), attacherRefs = new Refs({ name: "attachers", collection: true }, { name: "host" }), outgoingRefs = new Refs({ name: "outgoing", collection: true }, { name: "source" }), incomingRefs = new Refs({ name: "incoming", collection: true }, { name: "target" });
function ElementImpl() {
  Object.defineProperty(this, "businessObject", {
    writable: true
  });
  Object.defineProperty(this, "label", {
    get: function() {
      return this.labels[0];
    },
    set: function(newLabel) {
      var label = this.label, labels = this.labels;
      if (!newLabel && label) {
        labels.remove(label);
      } else {
        labels.add(newLabel, 0);
      }
    }
  });
  parentRefs.bind(this, "parent");
  labelRefs.bind(this, "labels");
  outgoingRefs.bind(this, "outgoing");
  incomingRefs.bind(this, "incoming");
}
function ShapeImpl() {
  ElementImpl.call(this);
  parentRefs.bind(this, "children");
  attacherRefs.bind(this, "host");
  attacherRefs.bind(this, "attachers");
}
e$3(ShapeImpl, ElementImpl);
function RootImpl() {
  ElementImpl.call(this);
  parentRefs.bind(this, "children");
}
e$3(RootImpl, ShapeImpl);
function LabelImpl() {
  ShapeImpl.call(this);
  labelRefs.bind(this, "labelTarget");
}
e$3(LabelImpl, ShapeImpl);
function ConnectionImpl() {
  ElementImpl.call(this);
  outgoingRefs.bind(this, "source");
  incomingRefs.bind(this, "target");
}
e$3(ConnectionImpl, ElementImpl);
var types$1 = {
  connection: ConnectionImpl,
  shape: ShapeImpl,
  label: LabelImpl,
  root: RootImpl
};
function create(type, attrs) {
  var Type = types$1[type];
  if (!Type) {
    throw new Error("unknown type: <" + type + ">");
  }
  return assign$2(new Type(), attrs);
}
function isModelElement(obj) {
  return obj instanceof ElementImpl;
}
function ElementFactory$1() {
  this._uid = 12;
}
ElementFactory$1.prototype.createRoot = function(attrs) {
  return this.create("root", attrs);
};
ElementFactory$1.prototype.createLabel = function(attrs) {
  return this.create("label", attrs);
};
ElementFactory$1.prototype.createShape = function(attrs) {
  return this.create("shape", attrs);
};
ElementFactory$1.prototype.createConnection = function(attrs) {
  return this.create("connection", attrs);
};
ElementFactory$1.prototype.create = function(type, attrs) {
  attrs = assign$2({}, attrs || {});
  if (!attrs.id) {
    attrs.id = type + "_" + this._uid++;
  }
  return create(type, attrs);
};
function ElementFactory(bpmnFactory, moddle) {
  ElementFactory$1.call(this);
  this._bpmnFactory = bpmnFactory;
  this._moddle = moddle;
}
e$3(ElementFactory, ElementFactory$1);
ElementFactory.$inject = [
  "bpmnFactory",
  "moddle"
];
ElementFactory.prototype._baseCreate = ElementFactory$1.prototype.create;
ElementFactory.prototype.create = function(elementType, attrs) {
  if (elementType === "label") {
    var di = attrs.di || this._bpmnFactory.createDiLabel();
    return this._baseCreate(elementType, assign$2({ type: "label", di }, DEFAULT_LABEL_SIZE$1, attrs));
  }
  return this.createElement(elementType, attrs);
};
ElementFactory.prototype.createElement = function(elementType, attrs) {
  attrs = assign$2({}, attrs || {});
  var size2;
  var businessObject = attrs.businessObject, di = attrs.di;
  if (!businessObject) {
    if (!attrs.type) {
      throw new Error("no shape type specified");
    }
    businessObject = this._bpmnFactory.create(attrs.type);
    ensureCompatDiRef(businessObject);
  }
  if (!isModdleDi(di)) {
    var diAttrs = assign$2(
      {},
      di || {},
      { id: businessObject.id + "_di" }
    );
    if (elementType === "root") {
      di = this._bpmnFactory.createDiPlane(businessObject, diAttrs);
    } else if (elementType === "connection") {
      di = this._bpmnFactory.createDiEdge(businessObject, diAttrs);
    } else {
      di = this._bpmnFactory.createDiShape(businessObject, diAttrs);
    }
  }
  if (is$g(businessObject, "bpmn:Group")) {
    attrs = assign$2({
      isFrame: true
    }, attrs);
  }
  attrs = applyAttributes(businessObject, attrs, [
    "processRef",
    "isInterrupting",
    "associationDirection",
    "isForCompensation"
  ]);
  if (attrs.isExpanded) {
    attrs = applyAttribute(di, attrs, "isExpanded");
  }
  if (isAny$7(businessObject, ["bpmn:Lane", "bpmn:Participant"])) {
    attrs = applyAttribute(di, attrs, "isHorizontal");
  }
  if (is$g(businessObject, "bpmn:SubProcess")) {
    attrs.collapsed = !isExpanded(businessObject, di);
  }
  if (is$g(businessObject, "bpmn:ExclusiveGateway")) {
    if (has$2(di, "isMarkerVisible")) {
      if (di.isMarkerVisible === void 0) {
        di.isMarkerVisible = false;
      }
    } else {
      di.isMarkerVisible = true;
    }
  }
  if (isDefined$1(attrs.triggeredByEvent)) {
    businessObject.triggeredByEvent = attrs.triggeredByEvent;
    delete attrs.triggeredByEvent;
  }
  if (isDefined$1(attrs.cancelActivity)) {
    businessObject.cancelActivity = attrs.cancelActivity;
    delete attrs.cancelActivity;
  }
  var eventDefinitions, newEventDefinition;
  if (attrs.eventDefinitionType) {
    eventDefinitions = businessObject.get("eventDefinitions") || [];
    newEventDefinition = this._bpmnFactory.create(attrs.eventDefinitionType, attrs.eventDefinitionAttrs);
    if (attrs.eventDefinitionType === "bpmn:ConditionalEventDefinition") {
      newEventDefinition.condition = this._bpmnFactory.create("bpmn:FormalExpression");
    }
    eventDefinitions.push(newEventDefinition);
    newEventDefinition.$parent = businessObject;
    businessObject.eventDefinitions = eventDefinitions;
    delete attrs.eventDefinitionType;
  }
  size2 = this.getDefaultSize(businessObject, di);
  attrs = assign$2({
    id: businessObject.id
  }, size2, attrs, {
    businessObject,
    di
  });
  return this._baseCreate(elementType, attrs);
};
ElementFactory.prototype.getDefaultSize = function(element, di) {
  var bo = getBusinessObject(element);
  di = di || getDi(element);
  if (is$g(bo, "bpmn:SubProcess")) {
    if (isExpanded(bo, di)) {
      return { width: 350, height: 200 };
    } else {
      return { width: 100, height: 80 };
    }
  }
  if (is$g(bo, "bpmn:Task")) {
    return { width: 100, height: 80 };
  }
  if (is$g(bo, "bpmn:Gateway")) {
    return { width: 50, height: 50 };
  }
  if (is$g(bo, "bpmn:Event")) {
    return { width: 36, height: 36 };
  }
  if (is$g(bo, "bpmn:Participant")) {
    if (isExpanded(bo, di)) {
      return { width: 600, height: 250 };
    } else {
      return { width: 400, height: 60 };
    }
  }
  if (is$g(bo, "bpmn:Lane")) {
    return { width: 400, height: 100 };
  }
  if (is$g(bo, "bpmn:DataObjectReference")) {
    return { width: 36, height: 50 };
  }
  if (is$g(bo, "bpmn:DataStoreReference")) {
    return { width: 50, height: 50 };
  }
  if (is$g(bo, "bpmn:TextAnnotation")) {
    return { width: 100, height: 30 };
  }
  if (is$g(bo, "bpmn:Group")) {
    return { width: 300, height: 300 };
  }
  return { width: 100, height: 80 };
};
ElementFactory.prototype.createParticipantShape = function(attrs) {
  if (!isObject$1(attrs)) {
    attrs = { isExpanded: attrs };
  }
  attrs = assign$2({ type: "bpmn:Participant" }, attrs || {});
  if (attrs.isExpanded !== false) {
    attrs.processRef = this._bpmnFactory.create("bpmn:Process");
  }
  return this.createShape(attrs);
};
function applyAttributes(element, attrs, attributeNames) {
  forEach$2(attributeNames, function(property) {
    attrs = applyAttribute(element, attrs, property);
  });
  return attrs;
}
function applyAttribute(element, attrs, attributeName) {
  if (attrs[attributeName] === void 0) {
    return attrs;
  }
  element[attributeName] = attrs[attributeName];
  return omit$1(attrs, [attributeName]);
}
function isModdleDi(element) {
  return isAny$7(element, [
    "bpmndi:BPMNShape",
    "bpmndi:BPMNEdge",
    "bpmndi:BPMNDiagram",
    "bpmndi:BPMNPlane"
  ]);
}
function AlignElements(modeling, canvas) {
  this._modeling = modeling;
  this._canvas = canvas;
}
AlignElements.$inject = ["modeling", "canvas"];
AlignElements.prototype.preExecute = function(context) {
  var modeling = this._modeling;
  var elements = context.elements, alignment = context.alignment;
  forEach$2(elements, function(element) {
    var delta2 = {
      x: 0,
      y: 0
    };
    if (isDefined$1(alignment.left)) {
      delta2.x = alignment.left - element.x;
    } else if (isDefined$1(alignment.right)) {
      delta2.x = alignment.right - element.width - element.x;
    } else if (isDefined$1(alignment.center)) {
      delta2.x = alignment.center - Math.round(element.width / 2) - element.x;
    } else if (isDefined$1(alignment.top)) {
      delta2.y = alignment.top - element.y;
    } else if (isDefined$1(alignment.bottom)) {
      delta2.y = alignment.bottom - element.height - element.y;
    } else if (isDefined$1(alignment.middle)) {
      delta2.y = alignment.middle - Math.round(element.height / 2) - element.y;
    }
    modeling.moveElements([element], delta2, element.parent);
  });
};
AlignElements.prototype.postExecute = function(context) {
};
function AppendShapeHandler(modeling) {
  this._modeling = modeling;
}
AppendShapeHandler.$inject = ["modeling"];
AppendShapeHandler.prototype.preExecute = function(context) {
  var source2 = context.source;
  if (!source2) {
    throw new Error("source required");
  }
  var target = context.target || source2.parent, shape = context.shape, hints = context.hints || {};
  shape = context.shape = this._modeling.createShape(
    shape,
    context.position,
    target,
    { attach: hints.attach }
  );
  context.shape = shape;
};
AppendShapeHandler.prototype.postExecute = function(context) {
  var hints = context.hints || {};
  if (!existsConnection(context.source, context.shape)) {
    if (hints.connectionTarget === context.source) {
      this._modeling.connect(context.shape, context.source, context.connection);
    } else {
      this._modeling.connect(context.source, context.shape, context.connection);
    }
  }
};
function existsConnection(source2, target) {
  return some$1(source2.outgoing, function(c2) {
    return c2.target === target;
  });
}
function CreateConnectionHandler(canvas, layouter) {
  this._canvas = canvas;
  this._layouter = layouter;
}
CreateConnectionHandler.$inject = ["canvas", "layouter"];
CreateConnectionHandler.prototype.execute = function(context) {
  var connection = context.connection, source2 = context.source, target = context.target, parent = context.parent, parentIndex = context.parentIndex, hints = context.hints;
  if (!source2 || !target) {
    throw new Error("source and target required");
  }
  if (!parent) {
    throw new Error("parent required");
  }
  connection.source = source2;
  connection.target = target;
  if (!connection.waypoints) {
    connection.waypoints = this._layouter.layoutConnection(connection, hints);
  }
  this._canvas.addConnection(connection, parent, parentIndex);
  return connection;
};
CreateConnectionHandler.prototype.revert = function(context) {
  var connection = context.connection;
  this._canvas.removeConnection(connection);
  connection.source = null;
  connection.target = null;
  return connection;
};
var round$4 = Math.round;
function CreateElementsHandler(modeling) {
  this._modeling = modeling;
}
CreateElementsHandler.$inject = [
  "modeling"
];
CreateElementsHandler.prototype.preExecute = function(context) {
  var elements = context.elements, parent = context.parent, parentIndex = context.parentIndex, position = context.position, hints = context.hints;
  var modeling = this._modeling;
  forEach$2(elements, function(element) {
    if (!isNumber$1(element.x)) {
      element.x = 0;
    }
    if (!isNumber$1(element.y)) {
      element.y = 0;
    }
  });
  var visibleElements = filter$1(elements, function(element) {
    return !element.hidden;
  });
  var bbox = getBBox(visibleElements);
  forEach$2(elements, function(element) {
    if (isConnection(element)) {
      element.waypoints = map$2(element.waypoints, function(waypoint) {
        return {
          x: round$4(waypoint.x - bbox.x - bbox.width / 2 + position.x),
          y: round$4(waypoint.y - bbox.y - bbox.height / 2 + position.y)
        };
      });
    }
    assign$2(element, {
      x: round$4(element.x - bbox.x - bbox.width / 2 + position.x),
      y: round$4(element.y - bbox.y - bbox.height / 2 + position.y)
    });
  });
  var parents = getParents$1(elements);
  var cache2 = {};
  forEach$2(elements, function(element) {
    if (isConnection(element)) {
      cache2[element.id] = isNumber$1(parentIndex) ? modeling.createConnection(
        cache2[element.source.id],
        cache2[element.target.id],
        parentIndex,
        element,
        element.parent || parent,
        hints
      ) : modeling.createConnection(
        cache2[element.source.id],
        cache2[element.target.id],
        element,
        element.parent || parent,
        hints
      );
      return;
    }
    var createShapeHints = assign$2({}, hints);
    if (parents.indexOf(element) === -1) {
      createShapeHints.autoResize = false;
    }
    if (isLabel(element)) {
      createShapeHints = omit$1(createShapeHints, ["attach"]);
    }
    cache2[element.id] = isNumber$1(parentIndex) ? modeling.createShape(
      element,
      pick$1(element, ["x", "y", "width", "height"]),
      element.parent || parent,
      parentIndex,
      createShapeHints
    ) : modeling.createShape(
      element,
      pick$1(element, ["x", "y", "width", "height"]),
      element.parent || parent,
      createShapeHints
    );
  });
  context.elements = values$1(cache2);
};
var round$3 = Math.round;
function CreateShapeHandler(canvas) {
  this._canvas = canvas;
}
CreateShapeHandler.$inject = ["canvas"];
CreateShapeHandler.prototype.execute = function(context) {
  var shape = context.shape, positionOrBounds = context.position, parent = context.parent, parentIndex = context.parentIndex;
  if (!parent) {
    throw new Error("parent required");
  }
  if (!positionOrBounds) {
    throw new Error("position required");
  }
  if (positionOrBounds.width !== void 0) {
    assign$2(shape, positionOrBounds);
  } else {
    assign$2(shape, {
      x: positionOrBounds.x - round$3(shape.width / 2),
      y: positionOrBounds.y - round$3(shape.height / 2)
    });
  }
  this._canvas.addShape(shape, parent, parentIndex);
  return shape;
};
CreateShapeHandler.prototype.revert = function(context) {
  var shape = context.shape;
  this._canvas.removeShape(shape);
  return shape;
};
function CreateLabelHandler(canvas) {
  CreateShapeHandler.call(this, canvas);
}
e$3(CreateLabelHandler, CreateShapeHandler);
CreateLabelHandler.$inject = ["canvas"];
var originalExecute = CreateShapeHandler.prototype.execute;
CreateLabelHandler.prototype.execute = function(context) {
  var label = context.shape;
  ensureValidDimensions(label);
  label.labelTarget = context.labelTarget;
  return originalExecute.call(this, context);
};
var originalRevert = CreateShapeHandler.prototype.revert;
CreateLabelHandler.prototype.revert = function(context) {
  context.shape.labelTarget = null;
  return originalRevert.call(this, context);
};
function ensureValidDimensions(label) {
  ["width", "height"].forEach(function(prop) {
    if (typeof label[prop] === "undefined") {
      label[prop] = 0;
    }
  });
}
function DeleteConnectionHandler(canvas, modeling) {
  this._canvas = canvas;
  this._modeling = modeling;
}
DeleteConnectionHandler.$inject = [
  "canvas",
  "modeling"
];
DeleteConnectionHandler.prototype.preExecute = function(context) {
  var modeling = this._modeling;
  var connection = context.connection;
  saveClear(connection.incoming, function(connection2) {
    modeling.removeConnection(connection2, { nested: true });
  });
  saveClear(connection.outgoing, function(connection2) {
    modeling.removeConnection(connection2, { nested: true });
  });
};
DeleteConnectionHandler.prototype.execute = function(context) {
  var connection = context.connection, parent = connection.parent;
  context.parent = parent;
  context.parentIndex = indexOf(parent.children, connection);
  context.source = connection.source;
  context.target = connection.target;
  this._canvas.removeConnection(connection);
  connection.source = null;
  connection.target = null;
  return connection;
};
DeleteConnectionHandler.prototype.revert = function(context) {
  var connection = context.connection, parent = context.parent, parentIndex = context.parentIndex;
  connection.source = context.source;
  connection.target = context.target;
  add$1(parent.children, connection, parentIndex);
  this._canvas.addConnection(connection, parent);
  return connection;
};
function DeleteElementsHandler(modeling, elementRegistry) {
  this._modeling = modeling;
  this._elementRegistry = elementRegistry;
}
DeleteElementsHandler.$inject = [
  "modeling",
  "elementRegistry"
];
DeleteElementsHandler.prototype.postExecute = function(context) {
  var modeling = this._modeling, elementRegistry = this._elementRegistry, elements = context.elements;
  forEach$2(elements, function(element) {
    if (!elementRegistry.get(element.id)) {
      return;
    }
    if (element.waypoints) {
      modeling.removeConnection(element);
    } else {
      modeling.removeShape(element);
    }
  });
};
function DeleteShapeHandler(canvas, modeling) {
  this._canvas = canvas;
  this._modeling = modeling;
}
DeleteShapeHandler.$inject = ["canvas", "modeling"];
DeleteShapeHandler.prototype.preExecute = function(context) {
  var modeling = this._modeling;
  var shape = context.shape;
  saveClear(shape.incoming, function(connection) {
    modeling.removeConnection(connection, { nested: true });
  });
  saveClear(shape.outgoing, function(connection) {
    modeling.removeConnection(connection, { nested: true });
  });
  saveClear(shape.children, function(child) {
    if (isConnection(child)) {
      modeling.removeConnection(child, { nested: true });
    } else {
      modeling.removeShape(child, { nested: true });
    }
  });
};
DeleteShapeHandler.prototype.execute = function(context) {
  var canvas = this._canvas;
  var shape = context.shape, oldParent = shape.parent;
  context.oldParent = oldParent;
  context.oldParentIndex = indexOf(oldParent.children, shape);
  canvas.removeShape(shape);
  return shape;
};
DeleteShapeHandler.prototype.revert = function(context) {
  var canvas = this._canvas;
  var shape = context.shape, oldParent = context.oldParent, oldParentIndex = context.oldParentIndex;
  add$1(oldParent.children, shape, oldParentIndex);
  canvas.addShape(shape, oldParent);
  return shape;
};
function DistributeElements$1(modeling) {
  this._modeling = modeling;
}
DistributeElements$1.$inject = ["modeling"];
var OFF_AXIS = {
  x: "y",
  y: "x"
};
DistributeElements$1.prototype.preExecute = function(context) {
  var modeling = this._modeling;
  var groups = context.groups, axis = context.axis, dimension = context.dimension;
  function updateRange(group, element) {
    group.range.min = Math.min(element[axis], group.range.min);
    group.range.max = Math.max(element[axis] + element[dimension], group.range.max);
  }
  function center2(element) {
    return element[axis] + element[dimension] / 2;
  }
  function lastIdx(arr) {
    return arr.length - 1;
  }
  function rangeDiff(range) {
    return range.max - range.min;
  }
  function centerElement(refCenter, element) {
    var delta2 = { y: 0 };
    delta2[axis] = refCenter - center2(element);
    if (delta2[axis]) {
      delta2[OFF_AXIS[axis]] = 0;
      modeling.moveElements([element], delta2, element.parent);
    }
  }
  var firstGroup = groups[0], lastGroupIdx = lastIdx(groups), lastGroup = groups[lastGroupIdx];
  var margin, spaceInBetween, groupsSize = 0;
  forEach$2(groups, function(group, idx) {
    var sortedElements, refElem, refCenter;
    if (group.elements.length < 2) {
      if (idx && idx !== groups.length - 1) {
        updateRange(group, group.elements[0]);
        groupsSize += rangeDiff(group.range);
      }
      return;
    }
    sortedElements = sortBy$1(group.elements, axis);
    refElem = sortedElements[0];
    if (idx === lastGroupIdx) {
      refElem = sortedElements[lastIdx(sortedElements)];
    }
    refCenter = center2(refElem);
    group.range = null;
    forEach$2(sortedElements, function(element) {
      centerElement(refCenter, element);
      if (group.range === null) {
        group.range = {
          min: element[axis],
          max: element[axis] + element[dimension]
        };
        return;
      }
      updateRange(group, element);
    });
    if (idx && idx !== groups.length - 1) {
      groupsSize += rangeDiff(group.range);
    }
  });
  spaceInBetween = Math.abs(lastGroup.range.min - firstGroup.range.max);
  margin = Math.round((spaceInBetween - groupsSize) / (groups.length - 1));
  if (margin < groups.length - 1) {
    return;
  }
  forEach$2(groups, function(group, groupIdx) {
    var delta2 = {}, prevGroup;
    if (group === firstGroup || group === lastGroup) {
      return;
    }
    prevGroup = groups[groupIdx - 1];
    group.range.max = 0;
    forEach$2(group.elements, function(element, idx) {
      delta2[OFF_AXIS[axis]] = 0;
      delta2[axis] = prevGroup.range.max - element[axis] + margin;
      if (group.range.min !== element[axis]) {
        delta2[axis] += element[axis] - group.range.min;
      }
      if (delta2[axis]) {
        modeling.moveElements([element], delta2, element.parent);
      }
      group.range.max = Math.max(element[axis] + element[dimension], idx ? group.range.max : 0);
    });
  });
};
DistributeElements$1.prototype.postExecute = function(context) {
};
function LayoutConnectionHandler(layouter, canvas) {
  this._layouter = layouter;
  this._canvas = canvas;
}
LayoutConnectionHandler.$inject = ["layouter", "canvas"];
LayoutConnectionHandler.prototype.execute = function(context) {
  var connection = context.connection;
  var oldWaypoints = connection.waypoints;
  assign$2(context, {
    oldWaypoints
  });
  connection.waypoints = this._layouter.layoutConnection(connection, context.hints);
  return connection;
};
LayoutConnectionHandler.prototype.revert = function(context) {
  var connection = context.connection;
  connection.waypoints = context.oldWaypoints;
  return connection;
};
function MoveConnectionHandler() {
}
MoveConnectionHandler.prototype.execute = function(context) {
  var connection = context.connection, delta2 = context.delta;
  var newParent = context.newParent || connection.parent, newParentIndex = context.newParentIndex, oldParent = connection.parent;
  context.oldParent = oldParent;
  context.oldParentIndex = remove$2(oldParent.children, connection);
  add$1(newParent.children, connection, newParentIndex);
  connection.parent = newParent;
  forEach$2(connection.waypoints, function(p2) {
    p2.x += delta2.x;
    p2.y += delta2.y;
    if (p2.original) {
      p2.original.x += delta2.x;
      p2.original.y += delta2.y;
    }
  });
  return connection;
};
MoveConnectionHandler.prototype.revert = function(context) {
  var connection = context.connection, newParent = connection.parent, oldParent = context.oldParent, oldParentIndex = context.oldParentIndex, delta2 = context.delta;
  remove$2(newParent.children, connection);
  add$1(oldParent.children, connection, oldParentIndex);
  connection.parent = oldParent;
  forEach$2(connection.waypoints, function(p2) {
    p2.x -= delta2.x;
    p2.y -= delta2.y;
    if (p2.original) {
      p2.original.x -= delta2.x;
      p2.original.y -= delta2.y;
    }
  });
  return connection;
};
function MoveClosure() {
  this.allShapes = {};
  this.allConnections = {};
  this.enclosedElements = {};
  this.enclosedConnections = {};
  this.topLevel = {};
}
MoveClosure.prototype.add = function(element, isTopLevel) {
  return this.addAll([element], isTopLevel);
};
MoveClosure.prototype.addAll = function(elements, isTopLevel) {
  var newClosure = getClosure(elements, !!isTopLevel, this);
  assign$2(this, newClosure);
  return this;
};
function MoveHelper(modeling) {
  this._modeling = modeling;
}
MoveHelper.prototype.moveRecursive = function(elements, delta2, newParent) {
  if (!elements) {
    return [];
  } else {
    return this.moveClosure(this.getClosure(elements), delta2, newParent);
  }
};
MoveHelper.prototype.moveClosure = function(closure, delta2, newParent, newHost, primaryShape) {
  var modeling = this._modeling;
  var allShapes = closure.allShapes, allConnections = closure.allConnections, enclosedConnections = closure.enclosedConnections, topLevel = closure.topLevel, keepParent = false;
  if (primaryShape && primaryShape.parent === newParent) {
    keepParent = true;
  }
  forEach$2(allShapes, function(shape) {
    modeling.moveShape(shape, delta2, topLevel[shape.id] && !keepParent && newParent, {
      recurse: false,
      layout: false
    });
  });
  forEach$2(allConnections, function(c2) {
    var sourceMoved = !!allShapes[c2.source.id], targetMoved = !!allShapes[c2.target.id];
    if (enclosedConnections[c2.id] && sourceMoved && targetMoved) {
      modeling.moveConnection(c2, delta2, topLevel[c2.id] && !keepParent && newParent);
    } else {
      modeling.layoutConnection(c2, {
        connectionStart: sourceMoved && getMovedSourceAnchor(c2, c2.source, delta2),
        connectionEnd: targetMoved && getMovedTargetAnchor(c2, c2.target, delta2)
      });
    }
  });
};
MoveHelper.prototype.getClosure = function(elements) {
  return new MoveClosure().addAll(elements, true);
};
function MoveElementsHandler(modeling) {
  this._helper = new MoveHelper(modeling);
}
MoveElementsHandler.$inject = ["modeling"];
MoveElementsHandler.prototype.preExecute = function(context) {
  context.closure = this._helper.getClosure(context.shapes);
};
MoveElementsHandler.prototype.postExecute = function(context) {
  var hints = context.hints, primaryShape;
  if (hints && hints.primaryShape) {
    primaryShape = hints.primaryShape;
    hints.oldParent = primaryShape.parent;
  }
  this._helper.moveClosure(
    context.closure,
    context.delta,
    context.newParent,
    context.newHost,
    primaryShape
  );
};
function MoveShapeHandler(modeling) {
  this._modeling = modeling;
  this._helper = new MoveHelper(modeling);
}
MoveShapeHandler.$inject = ["modeling"];
MoveShapeHandler.prototype.execute = function(context) {
  var shape = context.shape, delta2 = context.delta, newParent = context.newParent || shape.parent, newParentIndex = context.newParentIndex, oldParent = shape.parent;
  context.oldBounds = pick$1(shape, ["x", "y", "width", "height"]);
  context.oldParent = oldParent;
  context.oldParentIndex = remove$2(oldParent.children, shape);
  add$1(newParent.children, shape, newParentIndex);
  assign$2(shape, {
    parent: newParent,
    x: shape.x + delta2.x,
    y: shape.y + delta2.y
  });
  return shape;
};
MoveShapeHandler.prototype.postExecute = function(context) {
  var shape = context.shape, delta2 = context.delta, hints = context.hints;
  var modeling = this._modeling;
  if (hints.layout !== false) {
    forEach$2(shape.incoming, function(c2) {
      modeling.layoutConnection(c2, {
        connectionEnd: getMovedTargetAnchor(c2, shape, delta2)
      });
    });
    forEach$2(shape.outgoing, function(c2) {
      modeling.layoutConnection(c2, {
        connectionStart: getMovedSourceAnchor(c2, shape, delta2)
      });
    });
  }
  if (hints.recurse !== false) {
    this.moveChildren(context);
  }
};
MoveShapeHandler.prototype.revert = function(context) {
  var shape = context.shape, oldParent = context.oldParent, oldParentIndex = context.oldParentIndex, delta2 = context.delta;
  add$1(oldParent.children, shape, oldParentIndex);
  assign$2(shape, {
    parent: oldParent,
    x: shape.x - delta2.x,
    y: shape.y - delta2.y
  });
  return shape;
};
MoveShapeHandler.prototype.moveChildren = function(context) {
  var delta2 = context.delta, shape = context.shape;
  this._helper.moveRecursive(shape.children, delta2, null);
};
MoveShapeHandler.prototype.getNewParent = function(context) {
  return context.newParent || context.shape.parent;
};
function ReconnectConnectionHandler(modeling) {
  this._modeling = modeling;
}
ReconnectConnectionHandler.$inject = ["modeling"];
ReconnectConnectionHandler.prototype.execute = function(context) {
  var newSource = context.newSource, newTarget = context.newTarget, connection = context.connection, dockingOrPoints = context.dockingOrPoints;
  if (!newSource && !newTarget) {
    throw new Error("newSource or newTarget required");
  }
  if (isArray$3(dockingOrPoints)) {
    context.oldWaypoints = connection.waypoints;
    connection.waypoints = dockingOrPoints;
  }
  if (newSource) {
    context.oldSource = connection.source;
    connection.source = newSource;
  }
  if (newTarget) {
    context.oldTarget = connection.target;
    connection.target = newTarget;
  }
  return connection;
};
ReconnectConnectionHandler.prototype.postExecute = function(context) {
  var connection = context.connection, newSource = context.newSource, newTarget = context.newTarget, dockingOrPoints = context.dockingOrPoints, hints = context.hints || {};
  var layoutConnectionHints = {};
  if (hints.connectionStart) {
    layoutConnectionHints.connectionStart = hints.connectionStart;
  }
  if (hints.connectionEnd) {
    layoutConnectionHints.connectionEnd = hints.connectionEnd;
  }
  if (hints.layoutConnection === false) {
    return;
  }
  if (newSource && (!newTarget || hints.docking === "source")) {
    layoutConnectionHints.connectionStart = layoutConnectionHints.connectionStart || getDocking(isArray$3(dockingOrPoints) ? dockingOrPoints[0] : dockingOrPoints);
  }
  if (newTarget && (!newSource || hints.docking === "target")) {
    layoutConnectionHints.connectionEnd = layoutConnectionHints.connectionEnd || getDocking(isArray$3(dockingOrPoints) ? dockingOrPoints[dockingOrPoints.length - 1] : dockingOrPoints);
  }
  if (hints.newWaypoints) {
    layoutConnectionHints.waypoints = hints.newWaypoints;
  }
  this._modeling.layoutConnection(connection, layoutConnectionHints);
};
ReconnectConnectionHandler.prototype.revert = function(context) {
  var oldSource = context.oldSource, oldTarget = context.oldTarget, oldWaypoints = context.oldWaypoints, connection = context.connection;
  if (oldSource) {
    connection.source = oldSource;
  }
  if (oldTarget) {
    connection.target = oldTarget;
  }
  if (oldWaypoints) {
    connection.waypoints = oldWaypoints;
  }
  return connection;
};
function getDocking(point) {
  return point.original || point;
}
function ReplaceShapeHandler(modeling, rules2) {
  this._modeling = modeling;
  this._rules = rules2;
}
ReplaceShapeHandler.$inject = ["modeling", "rules"];
ReplaceShapeHandler.prototype.preExecute = function(context) {
  var self2 = this, modeling = this._modeling, rules2 = this._rules;
  var oldShape = context.oldShape, newData = context.newData, hints = context.hints || {}, newShape;
  function canReconnect(source2, target, connection) {
    return rules2.allowed("connection.reconnect", {
      connection,
      source: source2,
      target
    });
  }
  var position = {
    x: newData.x,
    y: newData.y
  };
  var oldBounds = {
    x: oldShape.x,
    y: oldShape.y,
    width: oldShape.width,
    height: oldShape.height
  };
  newShape = context.newShape = context.newShape || self2.createShape(newData, position, oldShape.parent, hints);
  if (oldShape.host) {
    modeling.updateAttachment(newShape, oldShape.host);
  }
  var children;
  if (hints.moveChildren !== false) {
    children = oldShape.children.slice();
    modeling.moveElements(children, { x: 0, y: 0 }, newShape, hints);
  }
  var incoming = oldShape.incoming.slice(), outgoing = oldShape.outgoing.slice();
  forEach$2(incoming, function(connection) {
    var source2 = connection.source, allowed = canReconnect(source2, newShape, connection);
    if (allowed) {
      self2.reconnectEnd(
        connection,
        newShape,
        getResizedTargetAnchor(connection, newShape, oldBounds),
        hints
      );
    }
  });
  forEach$2(outgoing, function(connection) {
    var target = connection.target, allowed = canReconnect(newShape, target, connection);
    if (allowed) {
      self2.reconnectStart(
        connection,
        newShape,
        getResizedSourceAnchor(connection, newShape, oldBounds),
        hints
      );
    }
  });
};
ReplaceShapeHandler.prototype.postExecute = function(context) {
  var oldShape = context.oldShape;
  this._modeling.removeShape(oldShape);
};
ReplaceShapeHandler.prototype.execute = function(context) {
};
ReplaceShapeHandler.prototype.revert = function(context) {
};
ReplaceShapeHandler.prototype.createShape = function(shape, position, target, hints) {
  return this._modeling.createShape(shape, position, target, hints);
};
ReplaceShapeHandler.prototype.reconnectStart = function(connection, newSource, dockingPoint, hints) {
  this._modeling.reconnectStart(connection, newSource, dockingPoint, hints);
};
ReplaceShapeHandler.prototype.reconnectEnd = function(connection, newTarget, dockingPoint, hints) {
  this._modeling.reconnectEnd(connection, newTarget, dockingPoint, hints);
};
function ResizeShapeHandler(modeling) {
  this._modeling = modeling;
}
ResizeShapeHandler.$inject = ["modeling"];
ResizeShapeHandler.prototype.execute = function(context) {
  var shape = context.shape, newBounds = context.newBounds, minBounds = context.minBounds;
  if (newBounds.x === void 0 || newBounds.y === void 0 || newBounds.width === void 0 || newBounds.height === void 0) {
    throw new Error("newBounds must have {x, y, width, height} properties");
  }
  if (minBounds && (newBounds.width < minBounds.width || newBounds.height < minBounds.height)) {
    throw new Error("width and height cannot be less than minimum height and width");
  } else if (!minBounds && newBounds.width < 10 || newBounds.height < 10) {
    throw new Error("width and height cannot be less than 10px");
  }
  context.oldBounds = {
    width: shape.width,
    height: shape.height,
    x: shape.x,
    y: shape.y
  };
  assign$2(shape, {
    width: newBounds.width,
    height: newBounds.height,
    x: newBounds.x,
    y: newBounds.y
  });
  return shape;
};
ResizeShapeHandler.prototype.postExecute = function(context) {
  var modeling = this._modeling;
  var shape = context.shape, oldBounds = context.oldBounds, hints = context.hints || {};
  if (hints.layout === false) {
    return;
  }
  forEach$2(shape.incoming, function(c2) {
    modeling.layoutConnection(c2, {
      connectionEnd: getResizedTargetAnchor(c2, shape, oldBounds)
    });
  });
  forEach$2(shape.outgoing, function(c2) {
    modeling.layoutConnection(c2, {
      connectionStart: getResizedSourceAnchor(c2, shape, oldBounds)
    });
  });
};
ResizeShapeHandler.prototype.revert = function(context) {
  var shape = context.shape, oldBounds = context.oldBounds;
  assign$2(shape, {
    width: oldBounds.width,
    height: oldBounds.height,
    x: oldBounds.x,
    y: oldBounds.y
  });
  return shape;
};
function SpaceToolHandler(modeling) {
  this._modeling = modeling;
}
SpaceToolHandler.$inject = ["modeling"];
SpaceToolHandler.prototype.preExecute = function(context) {
  var delta2 = context.delta, direction = context.direction, movingShapes = context.movingShapes, resizingShapes = context.resizingShapes, start = context.start, oldBounds = {};
  this.moveShapes(movingShapes, delta2);
  forEach$2(resizingShapes, function(shape) {
    oldBounds[shape.id] = getBounds(shape);
  });
  this.resizeShapes(resizingShapes, delta2, direction);
  this.updateConnectionWaypoints(
    getWaypointsUpdatingConnections(movingShapes, resizingShapes),
    delta2,
    direction,
    start,
    movingShapes,
    resizingShapes,
    oldBounds
  );
};
SpaceToolHandler.prototype.execute = function() {
};
SpaceToolHandler.prototype.revert = function() {
};
SpaceToolHandler.prototype.moveShapes = function(shapes, delta2) {
  var self2 = this;
  forEach$2(shapes, function(element) {
    self2._modeling.moveShape(element, delta2, null, {
      autoResize: false,
      layout: false,
      recurse: false
    });
  });
};
SpaceToolHandler.prototype.resizeShapes = function(shapes, delta2, direction) {
  var self2 = this;
  forEach$2(shapes, function(shape) {
    var newBounds = resizeBounds(shape, direction, delta2);
    self2._modeling.resizeShape(shape, newBounds, null, {
      attachSupport: false,
      autoResize: false,
      layout: false
    });
  });
};
SpaceToolHandler.prototype.updateConnectionWaypoints = function(connections, delta2, direction, start, movingShapes, resizingShapes, oldBounds) {
  var self2 = this, affectedShapes = movingShapes.concat(resizingShapes);
  forEach$2(connections, function(connection) {
    var source2 = connection.source, target = connection.target, waypoints = copyWaypoints(connection), axis = getAxisFromDirection(direction), layoutHints = {};
    if (includes$2(affectedShapes, source2) && includes$2(affectedShapes, target)) {
      waypoints = map$2(waypoints, function(waypoint) {
        if (shouldMoveWaypoint(waypoint, start, direction)) {
          waypoint[axis] = waypoint[axis] + delta2[axis];
        }
        if (waypoint.original && shouldMoveWaypoint(waypoint.original, start, direction)) {
          waypoint.original[axis] = waypoint.original[axis] + delta2[axis];
        }
        return waypoint;
      });
      self2._modeling.updateWaypoints(connection, waypoints, {
        labelBehavior: false
      });
    } else if (includes$2(affectedShapes, source2) || includes$2(affectedShapes, target)) {
      if (includes$2(movingShapes, source2)) {
        layoutHints.connectionStart = getMovedSourceAnchor(connection, source2, delta2);
      } else if (includes$2(movingShapes, target)) {
        layoutHints.connectionEnd = getMovedTargetAnchor(connection, target, delta2);
      } else if (includes$2(resizingShapes, source2)) {
        layoutHints.connectionStart = getResizedSourceAnchor(
          connection,
          source2,
          oldBounds[source2.id]
        );
      } else if (includes$2(resizingShapes, target)) {
        layoutHints.connectionEnd = getResizedTargetAnchor(
          connection,
          target,
          oldBounds[target.id]
        );
      }
      self2._modeling.layoutConnection(connection, layoutHints);
    }
  });
};
function copyWaypoint(waypoint) {
  return assign$2({}, waypoint);
}
function copyWaypoints(connection) {
  return map$2(connection.waypoints, function(waypoint) {
    waypoint = copyWaypoint(waypoint);
    if (waypoint.original) {
      waypoint.original = copyWaypoint(waypoint.original);
    }
    return waypoint;
  });
}
function getAxisFromDirection(direction) {
  switch (direction) {
    case "n":
      return "y";
    case "w":
      return "x";
    case "s":
      return "y";
    case "e":
      return "x";
  }
}
function shouldMoveWaypoint(waypoint, start, direction) {
  var relevantAxis = getAxisFromDirection(direction);
  if (/e|s/.test(direction)) {
    return waypoint[relevantAxis] > start;
  } else if (/n|w/.test(direction)) {
    return waypoint[relevantAxis] < start;
  }
}
function includes$2(array, item) {
  return array.indexOf(item) !== -1;
}
function getBounds(shape) {
  return {
    x: shape.x,
    y: shape.y,
    height: shape.height,
    width: shape.width
  };
}
function ToggleShapeCollapseHandler(modeling) {
  this._modeling = modeling;
}
ToggleShapeCollapseHandler.$inject = ["modeling"];
ToggleShapeCollapseHandler.prototype.execute = function(context) {
  var shape = context.shape, children = shape.children;
  context.oldChildrenVisibility = getElementsVisibilityRecursive(children);
  shape.collapsed = !shape.collapsed;
  var result = setHiddenRecursive(children, shape.collapsed);
  return [shape].concat(result);
};
ToggleShapeCollapseHandler.prototype.revert = function(context) {
  var shape = context.shape, oldChildrenVisibility = context.oldChildrenVisibility;
  var children = shape.children;
  var result = restoreVisibilityRecursive(children, oldChildrenVisibility);
  shape.collapsed = !shape.collapsed;
  return [shape].concat(result);
};
function getElementsVisibilityRecursive(elements) {
  var result = {};
  forEach$2(elements, function(element) {
    result[element.id] = element.hidden;
    if (element.children) {
      result = assign$2({}, result, getElementsVisibilityRecursive(element.children));
    }
  });
  return result;
}
function setHiddenRecursive(elements, newHidden) {
  var result = [];
  forEach$2(elements, function(element) {
    element.hidden = newHidden;
    result = result.concat(element);
    if (element.children) {
      result = result.concat(setHiddenRecursive(element.children, element.collapsed || newHidden));
    }
  });
  return result;
}
function restoreVisibilityRecursive(elements, lastState) {
  var result = [];
  forEach$2(elements, function(element) {
    element.hidden = lastState[element.id];
    result = result.concat(element);
    if (element.children) {
      result = result.concat(restoreVisibilityRecursive(element.children, lastState));
    }
  });
  return result;
}
function UpdateAttachmentHandler(modeling) {
  this._modeling = modeling;
}
UpdateAttachmentHandler.$inject = ["modeling"];
UpdateAttachmentHandler.prototype.execute = function(context) {
  var shape = context.shape, newHost = context.newHost, oldHost = shape.host;
  context.oldHost = oldHost;
  context.attacherIdx = removeAttacher(oldHost, shape);
  addAttacher(newHost, shape);
  shape.host = newHost;
  return shape;
};
UpdateAttachmentHandler.prototype.revert = function(context) {
  var shape = context.shape, newHost = context.newHost, oldHost = context.oldHost, attacherIdx = context.attacherIdx;
  shape.host = oldHost;
  removeAttacher(newHost, shape);
  addAttacher(oldHost, shape, attacherIdx);
  return shape;
};
function removeAttacher(host, attacher) {
  return remove$2(host && host.attachers, attacher);
}
function addAttacher(host, attacher, idx) {
  if (!host) {
    return;
  }
  var attachers = host.attachers;
  if (!attachers) {
    host.attachers = attachers = [];
  }
  add$1(attachers, attacher, idx);
}
function UpdateWaypointsHandler() {
}
UpdateWaypointsHandler.prototype.execute = function(context) {
  var connection = context.connection, newWaypoints = context.newWaypoints;
  context.oldWaypoints = connection.waypoints;
  connection.waypoints = newWaypoints;
  return connection;
};
UpdateWaypointsHandler.prototype.revert = function(context) {
  var connection = context.connection, oldWaypoints = context.oldWaypoints;
  connection.waypoints = oldWaypoints;
  return connection;
};
function Modeling$1(eventBus, elementFactory, commandStack) {
  this._eventBus = eventBus;
  this._elementFactory = elementFactory;
  this._commandStack = commandStack;
  var self2 = this;
  eventBus.on("diagram.init", function() {
    self2.registerHandlers(commandStack);
  });
}
Modeling$1.$inject = ["eventBus", "elementFactory", "commandStack"];
Modeling$1.prototype.getHandlers = function() {
  return {
    "shape.append": AppendShapeHandler,
    "shape.create": CreateShapeHandler,
    "shape.delete": DeleteShapeHandler,
    "shape.move": MoveShapeHandler,
    "shape.resize": ResizeShapeHandler,
    "shape.replace": ReplaceShapeHandler,
    "shape.toggleCollapse": ToggleShapeCollapseHandler,
    "spaceTool": SpaceToolHandler,
    "label.create": CreateLabelHandler,
    "connection.create": CreateConnectionHandler,
    "connection.delete": DeleteConnectionHandler,
    "connection.move": MoveConnectionHandler,
    "connection.layout": LayoutConnectionHandler,
    "connection.updateWaypoints": UpdateWaypointsHandler,
    "connection.reconnect": ReconnectConnectionHandler,
    "elements.create": CreateElementsHandler,
    "elements.move": MoveElementsHandler,
    "elements.delete": DeleteElementsHandler,
    "elements.distribute": DistributeElements$1,
    "elements.align": AlignElements,
    "element.updateAttachment": UpdateAttachmentHandler
  };
};
Modeling$1.prototype.registerHandlers = function(commandStack) {
  forEach$2(this.getHandlers(), function(handler, id) {
    commandStack.registerHandler(id, handler);
  });
};
Modeling$1.prototype.moveShape = function(shape, delta2, newParent, newParentIndex, hints) {
  if (typeof newParentIndex === "object") {
    hints = newParentIndex;
    newParentIndex = null;
  }
  var context = {
    shape,
    delta: delta2,
    newParent,
    newParentIndex,
    hints: hints || {}
  };
  this._commandStack.execute("shape.move", context);
};
Modeling$1.prototype.updateAttachment = function(shape, newHost) {
  var context = {
    shape,
    newHost
  };
  this._commandStack.execute("element.updateAttachment", context);
};
Modeling$1.prototype.moveElements = function(shapes, delta2, target, hints) {
  hints = hints || {};
  var attach = hints.attach;
  var newParent = target, newHost;
  if (attach === true) {
    newHost = target;
    newParent = target.parent;
  } else if (attach === false) {
    newHost = null;
  }
  var context = {
    shapes,
    delta: delta2,
    newParent,
    newHost,
    hints
  };
  this._commandStack.execute("elements.move", context);
};
Modeling$1.prototype.moveConnection = function(connection, delta2, newParent, newParentIndex, hints) {
  if (typeof newParentIndex === "object") {
    hints = newParentIndex;
    newParentIndex = void 0;
  }
  var context = {
    connection,
    delta: delta2,
    newParent,
    newParentIndex,
    hints: hints || {}
  };
  this._commandStack.execute("connection.move", context);
};
Modeling$1.prototype.layoutConnection = function(connection, hints) {
  var context = {
    connection,
    hints: hints || {}
  };
  this._commandStack.execute("connection.layout", context);
};
Modeling$1.prototype.createConnection = function(source2, target, parentIndex, connection, parent, hints) {
  if (typeof parentIndex === "object") {
    hints = parent;
    parent = connection;
    connection = parentIndex;
    parentIndex = void 0;
  }
  connection = this._create("connection", connection);
  var context = {
    source: source2,
    target,
    parent,
    parentIndex,
    connection,
    hints
  };
  this._commandStack.execute("connection.create", context);
  return context.connection;
};
Modeling$1.prototype.createShape = function(shape, position, target, parentIndex, hints) {
  if (typeof parentIndex !== "number") {
    hints = parentIndex;
    parentIndex = void 0;
  }
  hints = hints || {};
  var attach = hints.attach, parent, host;
  shape = this._create("shape", shape);
  if (attach) {
    parent = target.parent;
    host = target;
  } else {
    parent = target;
  }
  var context = {
    position,
    shape,
    parent,
    parentIndex,
    host,
    hints
  };
  this._commandStack.execute("shape.create", context);
  return context.shape;
};
Modeling$1.prototype.createElements = function(elements, position, parent, parentIndex, hints) {
  if (!isArray$3(elements)) {
    elements = [elements];
  }
  if (typeof parentIndex !== "number") {
    hints = parentIndex;
    parentIndex = void 0;
  }
  hints = hints || {};
  var context = {
    position,
    elements,
    parent,
    parentIndex,
    hints
  };
  this._commandStack.execute("elements.create", context);
  return context.elements;
};
Modeling$1.prototype.createLabel = function(labelTarget, position, label, parent) {
  label = this._create("label", label);
  var context = {
    labelTarget,
    position,
    parent: parent || labelTarget.parent,
    shape: label
  };
  this._commandStack.execute("label.create", context);
  return context.shape;
};
Modeling$1.prototype.appendShape = function(source2, shape, position, target, hints) {
  hints = hints || {};
  shape = this._create("shape", shape);
  var context = {
    source: source2,
    position,
    target,
    shape,
    connection: hints.connection,
    connectionParent: hints.connectionParent,
    hints
  };
  this._commandStack.execute("shape.append", context);
  return context.shape;
};
Modeling$1.prototype.removeElements = function(elements) {
  var context = {
    elements
  };
  this._commandStack.execute("elements.delete", context);
};
Modeling$1.prototype.distributeElements = function(groups, axis, dimension) {
  var context = {
    groups,
    axis,
    dimension
  };
  this._commandStack.execute("elements.distribute", context);
};
Modeling$1.prototype.removeShape = function(shape, hints) {
  var context = {
    shape,
    hints: hints || {}
  };
  this._commandStack.execute("shape.delete", context);
};
Modeling$1.prototype.removeConnection = function(connection, hints) {
  var context = {
    connection,
    hints: hints || {}
  };
  this._commandStack.execute("connection.delete", context);
};
Modeling$1.prototype.replaceShape = function(oldShape, newShape, hints) {
  var context = {
    oldShape,
    newData: newShape,
    hints: hints || {}
  };
  this._commandStack.execute("shape.replace", context);
  return context.newShape;
};
Modeling$1.prototype.alignElements = function(elements, alignment) {
  var context = {
    elements,
    alignment
  };
  this._commandStack.execute("elements.align", context);
};
Modeling$1.prototype.resizeShape = function(shape, newBounds, minBounds, hints) {
  var context = {
    shape,
    newBounds,
    minBounds,
    hints
  };
  this._commandStack.execute("shape.resize", context);
};
Modeling$1.prototype.createSpace = function(movingShapes, resizingShapes, delta2, direction, start) {
  var context = {
    delta: delta2,
    direction,
    movingShapes,
    resizingShapes,
    start
  };
  this._commandStack.execute("spaceTool", context);
};
Modeling$1.prototype.updateWaypoints = function(connection, newWaypoints, hints) {
  var context = {
    connection,
    newWaypoints,
    hints: hints || {}
  };
  this._commandStack.execute("connection.updateWaypoints", context);
};
Modeling$1.prototype.reconnect = function(connection, source2, target, dockingOrPoints, hints) {
  var context = {
    connection,
    newSource: source2,
    newTarget: target,
    dockingOrPoints,
    hints: hints || {}
  };
  this._commandStack.execute("connection.reconnect", context);
};
Modeling$1.prototype.reconnectStart = function(connection, newSource, dockingOrPoints, hints) {
  if (!hints) {
    hints = {};
  }
  this.reconnect(connection, newSource, connection.target, dockingOrPoints, assign$2(hints, {
    docking: "source"
  }));
};
Modeling$1.prototype.reconnectEnd = function(connection, newTarget, dockingOrPoints, hints) {
  if (!hints) {
    hints = {};
  }
  this.reconnect(connection, connection.source, newTarget, dockingOrPoints, assign$2(hints, {
    docking: "target"
  }));
};
Modeling$1.prototype.connect = function(source2, target, attrs, hints) {
  return this.createConnection(source2, target, attrs || {}, source2.parent, hints);
};
Modeling$1.prototype._create = function(type, attrs) {
  if (isModelElement(attrs)) {
    return attrs;
  } else {
    return this._elementFactory.create(type, attrs);
  }
};
Modeling$1.prototype.toggleCollapse = function(shape, hints) {
  var context = {
    shape,
    hints: hints || {}
  };
  this._commandStack.execute("shape.toggleCollapse", context);
};
function UpdateModdlePropertiesHandler(elementRegistry) {
  this._elementRegistry = elementRegistry;
}
UpdateModdlePropertiesHandler.$inject = ["elementRegistry"];
UpdateModdlePropertiesHandler.prototype.execute = function(context) {
  var element = context.element, moddleElement = context.moddleElement, properties = context.properties;
  if (!moddleElement) {
    throw new Error("<moddleElement> required");
  }
  var changed = context.changed || this._getVisualReferences(moddleElement).concat(element);
  var oldProperties = context.oldProperties || getModdleProperties(moddleElement, keys$1(properties));
  setModdleProperties(moddleElement, properties);
  context.oldProperties = oldProperties;
  context.changed = changed;
  return changed;
};
UpdateModdlePropertiesHandler.prototype.revert = function(context) {
  var oldProperties = context.oldProperties, moddleElement = context.moddleElement, changed = context.changed;
  setModdleProperties(moddleElement, oldProperties);
  return changed;
};
UpdateModdlePropertiesHandler.prototype._getVisualReferences = function(moddleElement) {
  var elementRegistry = this._elementRegistry;
  if (is$g(moddleElement, "bpmn:DataObject")) {
    return getAllDataObjectReferences(moddleElement, elementRegistry);
  }
  return [];
};
function getModdleProperties(moddleElement, propertyNames) {
  return reduce$1(propertyNames, function(result, key) {
    result[key] = moddleElement.get(key);
    return result;
  }, {});
}
function setModdleProperties(moddleElement, properties) {
  forEach$2(properties, function(value, key) {
    moddleElement.set(key, value);
  });
}
function getAllDataObjectReferences(dataObject, elementRegistry) {
  return elementRegistry.filter(function(element) {
    return is$g(element, "bpmn:DataObjectReference") && getBusinessObject(element).dataObjectRef === dataObject;
  });
}
var DEFAULT_FLOW = "default", ID = "id", DI = "di";
var NULL_DIMENSIONS$1 = {
  width: 0,
  height: 0
};
function UpdatePropertiesHandler(elementRegistry, moddle, modeling, textRenderer) {
  this._elementRegistry = elementRegistry;
  this._moddle = moddle;
  this._modeling = modeling;
  this._textRenderer = textRenderer;
}
UpdatePropertiesHandler.$inject = [
  "elementRegistry",
  "moddle",
  "modeling",
  "textRenderer"
];
UpdatePropertiesHandler.prototype.execute = function(context) {
  var element = context.element, changed = [element];
  if (!element) {
    throw new Error("element required");
  }
  var elementRegistry = this._elementRegistry, ids2 = this._moddle.ids;
  var businessObject = element.businessObject, properties = unwrapBusinessObjects(context.properties), oldProperties = context.oldProperties || getProperties(element, properties);
  if (isIdChange(properties, businessObject)) {
    ids2.unclaim(businessObject[ID]);
    elementRegistry.updateId(element, properties[ID]);
    ids2.claim(properties[ID], businessObject);
  }
  if (DEFAULT_FLOW in properties) {
    if (properties[DEFAULT_FLOW]) {
      changed.push(elementRegistry.get(properties[DEFAULT_FLOW].id));
    }
    if (businessObject[DEFAULT_FLOW]) {
      changed.push(elementRegistry.get(businessObject[DEFAULT_FLOW].id));
    }
  }
  setProperties(element, properties);
  context.oldProperties = oldProperties;
  context.changed = changed;
  return changed;
};
UpdatePropertiesHandler.prototype.postExecute = function(context) {
  var element = context.element, label = element.label;
  var text = label && getBusinessObject(label).name;
  if (!text) {
    return;
  }
  var newLabelBounds = this._textRenderer.getExternalLabelBounds(label, text);
  this._modeling.resizeShape(label, newLabelBounds, NULL_DIMENSIONS$1);
};
UpdatePropertiesHandler.prototype.revert = function(context) {
  var element = context.element, properties = context.properties, oldProperties = context.oldProperties, businessObject = element.businessObject, elementRegistry = this._elementRegistry, ids2 = this._moddle.ids;
  setProperties(element, oldProperties);
  if (isIdChange(properties, businessObject)) {
    ids2.unclaim(properties[ID]);
    elementRegistry.updateId(element, oldProperties[ID]);
    ids2.claim(oldProperties[ID], businessObject);
  }
  return context.changed;
};
function isIdChange(properties, businessObject) {
  return ID in properties && properties[ID] !== businessObject[ID];
}
function getProperties(element, properties) {
  var propertyNames = keys$1(properties), businessObject = element.businessObject, di = getDi(element);
  return reduce$1(propertyNames, function(result, key) {
    if (key !== DI) {
      result[key] = businessObject.get(key);
    } else {
      result[key] = getDiProperties(di, keys$1(properties.di));
    }
    return result;
  }, {});
}
function getDiProperties(di, propertyNames) {
  return reduce$1(propertyNames, function(result, key) {
    result[key] = di && di.get(key);
    return result;
  }, {});
}
function setProperties(element, properties) {
  var businessObject = element.businessObject, di = getDi(element);
  forEach$2(properties, function(value, key) {
    if (key !== DI) {
      businessObject.set(key, value);
    } else {
      if (di) {
        setDiProperties(di, value);
      }
    }
  });
}
function setDiProperties(di, properties) {
  forEach$2(properties, function(value, key) {
    di.set(key, value);
  });
}
var referencePropertyNames = ["default"];
function unwrapBusinessObjects(properties) {
  var unwrappedProps = assign$2({}, properties);
  referencePropertyNames.forEach(function(name2) {
    if (name2 in properties) {
      unwrappedProps[name2] = getBusinessObject(unwrappedProps[name2]);
    }
  });
  return unwrappedProps;
}
function UpdateCanvasRootHandler(canvas, modeling) {
  this._canvas = canvas;
  this._modeling = modeling;
}
UpdateCanvasRootHandler.$inject = [
  "canvas",
  "modeling"
];
UpdateCanvasRootHandler.prototype.execute = function(context) {
  var canvas = this._canvas;
  var newRoot = context.newRoot, newRootBusinessObject = newRoot.businessObject, oldRoot = canvas.getRootElement(), oldRootBusinessObject = oldRoot.businessObject, bpmnDefinitions = oldRootBusinessObject.$parent, diPlane = getDi(oldRoot);
  canvas.setRootElement(newRoot);
  canvas.removeRootElement(oldRoot);
  add$1(bpmnDefinitions.rootElements, newRootBusinessObject);
  newRootBusinessObject.$parent = bpmnDefinitions;
  remove$2(bpmnDefinitions.rootElements, oldRootBusinessObject);
  oldRootBusinessObject.$parent = null;
  oldRoot.di = null;
  diPlane.bpmnElement = newRootBusinessObject;
  newRoot.di = diPlane;
  context.oldRoot = oldRoot;
  return [];
};
UpdateCanvasRootHandler.prototype.revert = function(context) {
  var canvas = this._canvas;
  var newRoot = context.newRoot, newRootBusinessObject = newRoot.businessObject, oldRoot = context.oldRoot, oldRootBusinessObject = oldRoot.businessObject, bpmnDefinitions = newRootBusinessObject.$parent, diPlane = getDi(newRoot);
  canvas.setRootElement(oldRoot);
  canvas.removeRootElement(newRoot);
  remove$2(bpmnDefinitions.rootElements, newRootBusinessObject);
  newRootBusinessObject.$parent = null;
  add$1(bpmnDefinitions.rootElements, oldRootBusinessObject);
  oldRootBusinessObject.$parent = bpmnDefinitions;
  newRoot.di = null;
  diPlane.bpmnElement = oldRootBusinessObject;
  oldRoot.di = diPlane;
  return [];
};
function AddLaneHandler(modeling, spaceTool) {
  this._modeling = modeling;
  this._spaceTool = spaceTool;
}
AddLaneHandler.$inject = [
  "modeling",
  "spaceTool"
];
AddLaneHandler.prototype.preExecute = function(context) {
  var spaceTool = this._spaceTool, modeling = this._modeling;
  var shape = context.shape, location = context.location;
  var lanesRoot = getLanesRoot(shape);
  var isRoot = lanesRoot === shape, laneParent = isRoot ? shape : shape.parent;
  var existingChildLanes = getChildLanes(laneParent);
  var isHorizontalLane = isHorizontal$3(shape);
  if (isHorizontalLane) {
    if (location === "left") {
      location = "top";
    } else if (location === "right") {
      location = "bottom";
    }
  } else {
    if (location === "top") {
      location = "left";
    } else if (location === "bottom") {
      location = "right";
    }
  }
  if (!existingChildLanes.length) {
    var siblingPosition = isHorizontalLane ? {
      x: shape.x + LANE_INDENTATION,
      y: shape.y,
      width: shape.width - LANE_INDENTATION,
      height: shape.height
    } : {
      x: shape.x,
      y: shape.y + LANE_INDENTATION,
      width: shape.width,
      height: shape.height - LANE_INDENTATION
    };
    modeling.createShape(
      {
        type: "bpmn:Lane",
        isHorizontal: isHorizontalLane
      },
      siblingPosition,
      laneParent
    );
  }
  var allAffected = [];
  eachElement(lanesRoot, function(element) {
    allAffected.push(element);
    if (element.label) {
      allAffected.push(element.label);
    }
    if (element === shape) {
      return [];
    }
    return filter$1(element.children, function(c2) {
      return c2 !== shape;
    });
  });
  var offset, lanePosition, spacePos, direction, axis;
  if (location === "top") {
    offset = -120;
    lanePosition = shape.y;
    spacePos = lanePosition + 10;
    direction = "n";
    axis = "y";
  } else if (location === "left") {
    offset = -120;
    lanePosition = shape.x;
    spacePos = lanePosition + 10;
    direction = "w";
    axis = "x";
  } else if (location === "bottom") {
    offset = 120;
    lanePosition = shape.y + shape.height;
    spacePos = lanePosition - 10;
    direction = "s";
    axis = "y";
  } else if (location === "right") {
    offset = 120;
    lanePosition = shape.x + shape.width;
    spacePos = lanePosition - 10;
    direction = "e";
    axis = "x";
  }
  var adjustments = spaceTool.calculateAdjustments(allAffected, axis, offset, spacePos);
  var delta2 = isHorizontalLane ? { x: 0, y: offset } : { x: offset, y: 0 };
  spaceTool.makeSpace(
    adjustments.movingShapes,
    adjustments.resizingShapes,
    delta2,
    direction,
    spacePos
  );
  var newLanePosition = isHorizontalLane ? {
    x: shape.x + (isRoot ? LANE_INDENTATION : 0),
    y: lanePosition - (location === "top" ? 120 : 0),
    width: shape.width - (isRoot ? LANE_INDENTATION : 0),
    height: 120
  } : {
    x: lanePosition - (location === "left" ? 120 : 0),
    y: shape.y + (isRoot ? LANE_INDENTATION : 0),
    width: 120,
    height: shape.height - (isRoot ? LANE_INDENTATION : 0)
  };
  context.newLane = modeling.createShape(
    {
      type: "bpmn:Lane",
      isHorizontal: isHorizontalLane
    },
    newLanePosition,
    laneParent
  );
};
function SplitLaneHandler(modeling) {
  this._modeling = modeling;
}
SplitLaneHandler.$inject = [
  "modeling"
];
SplitLaneHandler.prototype.preExecute = function(context) {
  var modeling = this._modeling;
  var shape = context.shape, newLanesCount = context.count;
  var childLanes = getChildLanes(shape), existingLanesCount = childLanes.length;
  if (existingLanesCount > newLanesCount) {
    throw new Error(`more than <${newLanesCount}> child lanes`);
  }
  var isHorizontalLane = isHorizontal$3(shape);
  var laneBaseSize = isHorizontalLane ? shape.height : shape.width;
  var newLanesSize = Math.round(laneBaseSize / newLanesCount);
  var laneSize, laneBounds, newLaneAttrs, idx;
  for (idx = 0; idx < newLanesCount; idx++) {
    if (idx === newLanesCount - 1) {
      laneSize = laneBaseSize - newLanesSize * idx;
    } else {
      laneSize = newLanesSize;
    }
    laneBounds = isHorizontalLane ? {
      x: shape.x + LANE_INDENTATION,
      y: shape.y + idx * newLanesSize,
      width: shape.width - LANE_INDENTATION,
      height: laneSize
    } : {
      x: shape.x + idx * newLanesSize,
      y: shape.y + LANE_INDENTATION,
      width: laneSize,
      height: shape.height - LANE_INDENTATION
    };
    if (idx < existingLanesCount) {
      modeling.resizeShape(childLanes[idx], laneBounds);
    } else {
      newLaneAttrs = {
        type: "bpmn:Lane",
        isHorizontal: isHorizontalLane
      };
      modeling.createShape(newLaneAttrs, laneBounds, shape);
    }
  }
};
function ResizeLaneHandler(modeling, spaceTool) {
  this._modeling = modeling;
  this._spaceTool = spaceTool;
}
ResizeLaneHandler.$inject = [
  "modeling",
  "spaceTool"
];
ResizeLaneHandler.prototype.preExecute = function(context) {
  var shape = context.shape, newBounds = context.newBounds, balanced = context.balanced;
  if (balanced !== false) {
    this.resizeBalanced(shape, newBounds);
  } else {
    this.resizeSpace(shape, newBounds);
  }
};
ResizeLaneHandler.prototype.resizeBalanced = function(shape, newBounds) {
  var modeling = this._modeling;
  var resizeNeeded = computeLanesResize(shape, newBounds);
  modeling.resizeShape(shape, newBounds);
  resizeNeeded.forEach(function(r2) {
    modeling.resizeShape(r2.shape, r2.newBounds);
  });
};
ResizeLaneHandler.prototype.resizeSpace = function(shape, newBounds) {
  var spaceTool = this._spaceTool;
  var shapeTrbl = asTRBL(shape), newTrbl = asTRBL(newBounds);
  var trblDiff = substractTRBL(newTrbl, shapeTrbl);
  var lanesRoot = getLanesRoot(shape);
  var allAffected = [], allLanes = [];
  eachElement(lanesRoot, function(element) {
    allAffected.push(element);
    if (is$g(element, "bpmn:Lane") || is$g(element, "bpmn:Participant")) {
      allLanes.push(element);
    }
    return element.children;
  });
  var change, spacePos, direction, offset, adjustments;
  if (trblDiff.bottom || trblDiff.top) {
    change = trblDiff.bottom || trblDiff.top;
    spacePos = shape.y + (trblDiff.bottom ? shape.height : 0) + (trblDiff.bottom ? -10 : 10);
    direction = trblDiff.bottom ? "s" : "n";
    offset = trblDiff.top > 0 || trblDiff.bottom < 0 ? -change : change;
    adjustments = spaceTool.calculateAdjustments(allAffected, "y", offset, spacePos);
    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: 0, y: change }, direction);
  }
  if (trblDiff.left || trblDiff.right) {
    change = trblDiff.right || trblDiff.left;
    spacePos = shape.x + (trblDiff.right ? shape.width : 0) + (trblDiff.right ? -10 : 100);
    direction = trblDiff.right ? "e" : "w";
    offset = trblDiff.left > 0 || trblDiff.right < 0 ? -change : change;
    adjustments = spaceTool.calculateAdjustments(allLanes, "x", offset, spacePos);
    spaceTool.makeSpace(adjustments.movingShapes, adjustments.resizingShapes, { x: change, y: 0 }, direction);
  }
};
var FLOW_NODE_REFS_ATTR = "flowNodeRef", LANES_ATTR = "lanes";
function UpdateFlowNodeRefsHandler(elementRegistry) {
  this._elementRegistry = elementRegistry;
}
UpdateFlowNodeRefsHandler.$inject = [
  "elementRegistry"
];
UpdateFlowNodeRefsHandler.prototype._computeUpdates = function(flowNodeShapes, laneShapes) {
  var handledNodes = [];
  var updates = [];
  var participantCache = {};
  var allFlowNodeShapes = [];
  function isInLaneShape(element, laneShape) {
    var laneTrbl = asTRBL(laneShape);
    var elementMid = {
      x: element.x + element.width / 2,
      y: element.y + element.height / 2
    };
    return elementMid.x > laneTrbl.left && elementMid.x < laneTrbl.right && elementMid.y > laneTrbl.top && elementMid.y < laneTrbl.bottom;
  }
  function addFlowNodeShape(flowNodeShape) {
    if (handledNodes.indexOf(flowNodeShape) === -1) {
      allFlowNodeShapes.push(flowNodeShape);
      handledNodes.push(flowNodeShape);
    }
  }
  function getAllLaneShapes(flowNodeShape) {
    var root = getLanesRoot(flowNodeShape);
    if (!participantCache[root.id]) {
      participantCache[root.id] = collectLanes(root);
    }
    return participantCache[root.id];
  }
  function getNewLanes(flowNodeShape) {
    if (!flowNodeShape.parent) {
      return [];
    }
    var allLaneShapes = getAllLaneShapes(flowNodeShape);
    return allLaneShapes.filter(function(l2) {
      return isInLaneShape(flowNodeShape, l2);
    }).map(function(shape) {
      return shape.businessObject;
    });
  }
  laneShapes.forEach(function(laneShape) {
    var root = getLanesRoot(laneShape);
    if (!root || handledNodes.indexOf(root) !== -1) {
      return;
    }
    var children = root.children.filter(function(c2) {
      return is$g(c2, "bpmn:FlowNode");
    });
    children.forEach(addFlowNodeShape);
    handledNodes.push(root);
  });
  flowNodeShapes.forEach(addFlowNodeShape);
  allFlowNodeShapes.forEach(function(flowNodeShape) {
    var flowNode = flowNodeShape.businessObject;
    var lanes = flowNode.get(LANES_ATTR), remove2 = lanes.slice(), add2 = getNewLanes(flowNodeShape);
    updates.push({ flowNode, remove: remove2, add: add2 });
  });
  laneShapes.forEach(function(laneShape) {
    var lane = laneShape.businessObject;
    if (!laneShape.parent) {
      lane.get(FLOW_NODE_REFS_ATTR).forEach(function(flowNode) {
        updates.push({ flowNode, remove: [lane], add: [] });
      });
    }
  });
  return updates;
};
UpdateFlowNodeRefsHandler.prototype.execute = function(context) {
  var updates = context.updates;
  if (!updates) {
    updates = context.updates = this._computeUpdates(context.flowNodeShapes, context.laneShapes);
  }
  updates.forEach(function(update) {
    var flowNode = update.flowNode, lanes = flowNode.get(LANES_ATTR);
    update.remove.forEach(function(oldLane) {
      remove$2(lanes, oldLane);
      remove$2(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);
    });
    update.add.forEach(function(newLane) {
      add$1(lanes, newLane);
      add$1(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);
    });
  });
  return [];
};
UpdateFlowNodeRefsHandler.prototype.revert = function(context) {
  var updates = context.updates;
  updates.forEach(function(update) {
    var flowNode = update.flowNode, lanes = flowNode.get(LANES_ATTR);
    update.add.forEach(function(newLane) {
      remove$2(lanes, newLane);
      remove$2(newLane.get(FLOW_NODE_REFS_ATTR), flowNode);
    });
    update.remove.forEach(function(oldLane) {
      add$1(lanes, oldLane);
      add$1(oldLane.get(FLOW_NODE_REFS_ATTR), flowNode);
    });
  });
  return [];
};
function IdClaimHandler(moddle) {
  this._moddle = moddle;
}
IdClaimHandler.$inject = ["moddle"];
IdClaimHandler.prototype.execute = function(context) {
  var ids2 = this._moddle.ids, id = context.id, element = context.element, claiming = context.claiming;
  if (claiming) {
    ids2.claim(id, element);
  } else {
    ids2.unclaim(id);
  }
  return [];
};
IdClaimHandler.prototype.revert = function(context) {
  var ids2 = this._moddle.ids, id = context.id, element = context.element, claiming = context.claiming;
  if (claiming) {
    ids2.unclaim(id);
  } else {
    ids2.claim(id, element);
  }
  return [];
};
var DEFAULT_COLORS = {
  fill: void 0,
  stroke: void 0
};
function SetColorHandler(commandStack) {
  this._commandStack = commandStack;
  this._normalizeColor = function(color) {
    if (!color) {
      return void 0;
    }
    if (isString$1(color)) {
      var hexColor = colorToHex(color);
      if (hexColor) {
        return hexColor;
      }
    }
    throw new Error(`invalid color value: ${color}`);
  };
}
SetColorHandler.$inject = [
  "commandStack"
];
SetColorHandler.prototype.postExecute = function(context) {
  var elements = context.elements, colors = context.colors || DEFAULT_COLORS;
  var self2 = this;
  var di = {};
  if ("fill" in colors) {
    assign$2(di, {
      "background-color": this._normalizeColor(colors.fill)
    });
  }
  if ("stroke" in colors) {
    assign$2(di, {
      "border-color": this._normalizeColor(colors.stroke)
    });
  }
  forEach$2(elements, function(element) {
    var assignedDi = isConnection(element) ? pick$1(di, ["border-color"]) : di, elementDi = getDi(element);
    ensureLegacySupport(assignedDi);
    if (isLabel(element)) {
      self2._commandStack.execute("element.updateModdleProperties", {
        element,
        moddleElement: elementDi.label,
        properties: {
          color: di["border-color"]
        }
      });
    } else {
      if (!isAny$7(elementDi, ["bpmndi:BPMNEdge", "bpmndi:BPMNShape"])) {
        return;
      }
      self2._commandStack.execute("element.updateProperties", {
        element,
        properties: {
          di: assignedDi
        }
      });
    }
  });
};
function colorToHex(color) {
  var context = document.createElement("canvas").getContext("2d");
  context.fillStyle = "transparent";
  context.fillStyle = color;
  return /^#[0-9a-fA-F]{6}$/.test(context.fillStyle) ? context.fillStyle : null;
}
function ensureLegacySupport(di) {
  if ("border-color" in di) {
    di.stroke = di["border-color"];
  }
  if ("background-color" in di) {
    di.fill = di["background-color"];
  }
}
var NULL_DIMENSIONS = {
  width: 0,
  height: 0
};
function UpdateLabelHandler(modeling, textRenderer, bpmnFactory) {
  function setText(element, text) {
    var label = element.label || element;
    var labelTarget = element.labelTarget || element;
    setLabel(label, text);
    return [label, labelTarget];
  }
  function preExecute(ctx) {
    var element = ctx.element, businessObject = element.businessObject, newLabel = ctx.newLabel;
    if (!isLabel(element) && isLabelExternal(element) && !hasExternalLabel(element) && !isEmptyText$1(newLabel)) {
      var paddingTop = 7;
      var labelCenter = getExternalLabelMid(element);
      labelCenter = {
        x: labelCenter.x,
        y: labelCenter.y + paddingTop
      };
      modeling.createLabel(element, labelCenter, {
        id: businessObject.id + "_label",
        businessObject,
        di: element.di
      });
    }
  }
  function execute(ctx) {
    ctx.oldLabel = getLabel(ctx.element);
    return setText(ctx.element, ctx.newLabel);
  }
  function revert(ctx) {
    return setText(ctx.element, ctx.oldLabel);
  }
  function postExecute(ctx) {
    var element = ctx.element, label = element.label || element, newLabel = ctx.newLabel, newBounds = ctx.newBounds, hints = ctx.hints || {};
    if (!isLabel(label) && !is$g(label, "bpmn:TextAnnotation")) {
      return;
    }
    if (isLabel(label) && isEmptyText$1(newLabel)) {
      if (hints.removeShape !== false) {
        modeling.removeShape(label, { unsetLabel: false });
      }
      return;
    }
    var text = getLabel(element);
    if (typeof newBounds === "undefined") {
      newBounds = textRenderer.getExternalLabelBounds(label, text);
    }
    if (newBounds) {
      modeling.resizeShape(label, newBounds, NULL_DIMENSIONS);
    }
  }
  this.preExecute = preExecute;
  this.execute = execute;
  this.revert = revert;
  this.postExecute = postExecute;
}
UpdateLabelHandler.$inject = [
  "modeling",
  "textRenderer",
  "bpmnFactory"
];
function isEmptyText$1(label) {
  return !label || !label.trim();
}
function Modeling(eventBus, elementFactory, commandStack, bpmnRules) {
  Modeling$1.call(this, eventBus, elementFactory, commandStack);
  this._bpmnRules = bpmnRules;
}
e$3(Modeling, Modeling$1);
Modeling.$inject = [
  "eventBus",
  "elementFactory",
  "commandStack",
  "bpmnRules"
];
Modeling.prototype.getHandlers = function() {
  var handlers = Modeling$1.prototype.getHandlers.call(this);
  handlers["element.updateModdleProperties"] = UpdateModdlePropertiesHandler;
  handlers["element.updateProperties"] = UpdatePropertiesHandler;
  handlers["canvas.updateRoot"] = UpdateCanvasRootHandler;
  handlers["lane.add"] = AddLaneHandler;
  handlers["lane.resize"] = ResizeLaneHandler;
  handlers["lane.split"] = SplitLaneHandler;
  handlers["lane.updateRefs"] = UpdateFlowNodeRefsHandler;
  handlers["id.updateClaim"] = IdClaimHandler;
  handlers["element.setColor"] = SetColorHandler;
  handlers["element.updateLabel"] = UpdateLabelHandler;
  return handlers;
};
Modeling.prototype.updateLabel = function(element, newLabel, newBounds, hints) {
  this._commandStack.execute("element.updateLabel", {
    element,
    newLabel,
    newBounds,
    hints: hints || {}
  });
};
Modeling.prototype.connect = function(source2, target, attrs, hints) {
  var bpmnRules = this._bpmnRules;
  if (!attrs) {
    attrs = bpmnRules.canConnect(source2, target);
  }
  if (!attrs) {
    return;
  }
  return this.createConnection(source2, target, attrs, source2.parent, hints);
};
Modeling.prototype.updateModdleProperties = function(element, moddleElement, properties) {
  this._commandStack.execute("element.updateModdleProperties", {
    element,
    moddleElement,
    properties
  });
};
Modeling.prototype.updateProperties = function(element, properties) {
  this._commandStack.execute("element.updateProperties", {
    element,
    properties
  });
};
Modeling.prototype.resizeLane = function(laneShape, newBounds, balanced) {
  this._commandStack.execute("lane.resize", {
    shape: laneShape,
    newBounds,
    balanced
  });
};
Modeling.prototype.addLane = function(targetLaneShape, location) {
  var context = {
    shape: targetLaneShape,
    location
  };
  this._commandStack.execute("lane.add", context);
  return context.newLane;
};
Modeling.prototype.splitLane = function(targetLane, count) {
  this._commandStack.execute("lane.split", {
    shape: targetLane,
    count
  });
};
Modeling.prototype.makeCollaboration = function() {
  var collaborationElement = this._create("root", {
    type: "bpmn:Collaboration"
  });
  var context = {
    newRoot: collaborationElement
  };
  this._commandStack.execute("canvas.updateRoot", context);
  return collaborationElement;
};
Modeling.prototype.makeProcess = function() {
  var processElement = this._create("root", {
    type: "bpmn:Process"
  });
  var context = {
    newRoot: processElement
  };
  this._commandStack.execute("canvas.updateRoot", context);
};
Modeling.prototype.updateLaneRefs = function(flowNodeShapes, laneShapes) {
  this._commandStack.execute("lane.updateRefs", {
    flowNodeShapes,
    laneShapes
  });
};
Modeling.prototype.claimId = function(id, moddleElement) {
  this._commandStack.execute("id.updateClaim", {
    id,
    element: moddleElement,
    claiming: true
  });
};
Modeling.prototype.unclaimId = function(id, moddleElement) {
  this._commandStack.execute("id.updateClaim", {
    id,
    element: moddleElement
  });
};
Modeling.prototype.setColor = function(elements, colors) {
  if (!elements.length) {
    elements = [elements];
  }
  this._commandStack.execute("element.setColor", {
    elements,
    colors
  });
};
function BaseLayouter() {
}
BaseLayouter.prototype.layoutConnection = function(connection, hints) {
  hints = hints || {};
  return [
    hints.connectionStart || getMid(hints.source || connection.source),
    hints.connectionEnd || getMid(hints.target || connection.target)
  ];
};
var MIN_SEGMENT_LENGTH = 20, POINT_ORIENTATION_PADDING = 5;
var round$2 = Math.round;
var INTERSECTION_THRESHOLD = 20, ORIENTATION_THRESHOLD = {
  "h:h": 20,
  "v:v": 20,
  "h:v": -10,
  "v:h": -10
};
function needsTurn(orientation, startDirection) {
  return !{
    t: /top/,
    r: /right/,
    b: /bottom/,
    l: /left/,
    h: /./,
    v: /./
  }[startDirection].test(orientation);
}
function canLayoutStraight(direction, targetOrientation) {
  return {
    t: /top/,
    r: /right/,
    b: /bottom/,
    l: /left/,
    h: /left|right/,
    v: /top|bottom/
  }[direction].test(targetOrientation);
}
function getSegmentBendpoints(a2, b2, directions2) {
  var orientation = getOrientation(b2, a2, POINT_ORIENTATION_PADDING);
  var startDirection = directions2.split(":")[0];
  var xmid = round$2((b2.x - a2.x) / 2 + a2.x), ymid = round$2((b2.y - a2.y) / 2 + a2.y);
  var segmentEnd, segmentDirections;
  var layoutStraight = canLayoutStraight(startDirection, orientation), layoutHorizontal = /h|r|l/.test(startDirection), layoutTurn = false;
  var turnNextDirections = false;
  if (layoutStraight) {
    segmentEnd = layoutHorizontal ? { x: xmid, y: a2.y } : { x: a2.x, y: ymid };
    segmentDirections = layoutHorizontal ? "h:h" : "v:v";
  } else {
    layoutTurn = needsTurn(orientation, startDirection);
    segmentDirections = layoutHorizontal ? "h:v" : "v:h";
    if (layoutTurn) {
      if (layoutHorizontal) {
        turnNextDirections = ymid === a2.y;
        segmentEnd = {
          x: a2.x + MIN_SEGMENT_LENGTH * (/l/.test(startDirection) ? -1 : 1),
          y: turnNextDirections ? ymid + MIN_SEGMENT_LENGTH : ymid
        };
      } else {
        turnNextDirections = xmid === a2.x;
        segmentEnd = {
          x: turnNextDirections ? xmid + MIN_SEGMENT_LENGTH : xmid,
          y: a2.y + MIN_SEGMENT_LENGTH * (/t/.test(startDirection) ? -1 : 1)
        };
      }
    } else {
      segmentEnd = {
        x: xmid,
        y: ymid
      };
    }
  }
  return {
    waypoints: getBendpoints(a2, segmentEnd, segmentDirections).concat(segmentEnd),
    directions: segmentDirections,
    turnNextDirections
  };
}
function getStartSegment(a2, b2, directions2) {
  return getSegmentBendpoints(a2, b2, directions2);
}
function getEndSegment(a2, b2, directions2) {
  var invertedSegment = getSegmentBendpoints(b2, a2, invertDirections(directions2));
  return {
    waypoints: invertedSegment.waypoints.slice().reverse(),
    directions: invertDirections(invertedSegment.directions),
    turnNextDirections: invertedSegment.turnNextDirections
  };
}
function getMidSegment(startSegment, endSegment) {
  var startDirection = startSegment.directions.split(":")[1], endDirection = endSegment.directions.split(":")[0];
  if (startSegment.turnNextDirections) {
    startDirection = startDirection == "h" ? "v" : "h";
  }
  if (endSegment.turnNextDirections) {
    endDirection = endDirection == "h" ? "v" : "h";
  }
  var directions2 = startDirection + ":" + endDirection;
  var bendpoints = getBendpoints(
    startSegment.waypoints[startSegment.waypoints.length - 1],
    endSegment.waypoints[0],
    directions2
  );
  return {
    waypoints: bendpoints,
    directions: directions2
  };
}
function invertDirections(directions2) {
  return directions2.split(":").reverse().join(":");
}
function getSimpleBendpoints(a2, b2, directions2) {
  var xmid = round$2((b2.x - a2.x) / 2 + a2.x), ymid = round$2((b2.y - a2.y) / 2 + a2.y);
  if (directions2 === "h:v") {
    return [{ x: b2.x, y: a2.y }];
  }
  if (directions2 === "v:h") {
    return [{ x: a2.x, y: b2.y }];
  }
  if (directions2 === "h:h") {
    return [
      { x: xmid, y: a2.y },
      { x: xmid, y: b2.y }
    ];
  }
  if (directions2 === "v:v") {
    return [
      { x: a2.x, y: ymid },
      { x: b2.x, y: ymid }
    ];
  }
  throw new Error("invalid directions: can only handle varians of [hv]:[hv]");
}
function getBendpoints(a2, b2, directions2) {
  directions2 = directions2 || "h:h";
  if (!isValidDirections(directions2)) {
    throw new Error(
      "unknown directions: <" + directions2 + ">: must be specified as <start>:<end> with start/end in { h,v,t,r,b,l }"
    );
  }
  if (isExplicitDirections(directions2)) {
    var startSegment = getStartSegment(a2, b2, directions2), endSegment = getEndSegment(a2, b2, directions2), midSegment = getMidSegment(startSegment, endSegment);
    return [].concat(
      startSegment.waypoints,
      midSegment.waypoints,
      endSegment.waypoints
    );
  }
  return getSimpleBendpoints(a2, b2, directions2);
}
function connectPoints(a2, b2, directions2) {
  var points = getBendpoints(a2, b2, directions2);
  points.unshift(a2);
  points.push(b2);
  return withoutRedundantPoints(points);
}
function connectRectangles(source2, target, start, end, hints) {
  var preferredLayouts = hints && hints.preferredLayouts || [];
  var preferredLayout = without$1(preferredLayouts, "straight")[0] || "h:h";
  var threshold = ORIENTATION_THRESHOLD[preferredLayout] || 0;
  var orientation = getOrientation(source2, target, threshold);
  var directions2 = getDirections(orientation, preferredLayout);
  start = start || getMid(source2);
  end = end || getMid(target);
  var directionSplit = directions2.split(":");
  var startDocking = getDockingPoint(start, source2, directionSplit[0], invertOrientation(orientation)), endDocking = getDockingPoint(end, target, directionSplit[1], orientation);
  return connectPoints(startDocking, endDocking, directions2);
}
function repairConnection(source2, target, start, end, waypoints, hints) {
  if (isArray$3(start)) {
    waypoints = start;
    hints = end;
    start = getMid(source2);
    end = getMid(target);
  }
  hints = assign$2({ preferredLayouts: [] }, hints);
  waypoints = waypoints || [];
  var preferredLayouts = hints.preferredLayouts, preferStraight = preferredLayouts.indexOf("straight") !== -1, repairedWaypoints;
  repairedWaypoints = preferStraight && tryLayoutStraight(source2, target, start, end, hints);
  if (repairedWaypoints) {
    return repairedWaypoints;
  }
  repairedWaypoints = hints.connectionEnd && tryRepairConnectionEnd(target, source2, end, waypoints);
  if (repairedWaypoints) {
    return repairedWaypoints;
  }
  repairedWaypoints = hints.connectionStart && tryRepairConnectionStart(source2, target, start, waypoints);
  if (repairedWaypoints) {
    return repairedWaypoints;
  }
  if (!hints.connectionStart && !hints.connectionEnd && waypoints && waypoints.length) {
    return waypoints;
  }
  return connectRectangles(source2, target, start, end, hints);
}
function inRange(a2, start, end) {
  return a2 >= start && a2 <= end;
}
function isInRange(axis, a2, b2) {
  var size2 = {
    x: "width",
    y: "height"
  };
  return inRange(a2[axis], b2[axis], b2[axis] + b2[size2[axis]]);
}
function tryLayoutStraight(source2, target, start, end, hints) {
  var axis = {}, primaryAxis, orientation;
  orientation = getOrientation(source2, target);
  if (!/^(top|bottom|left|right)$/.test(orientation)) {
    return null;
  }
  if (/top|bottom/.test(orientation)) {
    primaryAxis = "x";
  }
  if (/left|right/.test(orientation)) {
    primaryAxis = "y";
  }
  if (hints.preserveDocking === "target") {
    if (!isInRange(primaryAxis, end, source2)) {
      return null;
    }
    axis[primaryAxis] = end[primaryAxis];
    return [
      {
        x: axis.x !== void 0 ? axis.x : start.x,
        y: axis.y !== void 0 ? axis.y : start.y,
        original: {
          x: axis.x !== void 0 ? axis.x : start.x,
          y: axis.y !== void 0 ? axis.y : start.y
        }
      },
      {
        x: end.x,
        y: end.y
      }
    ];
  } else {
    if (!isInRange(primaryAxis, start, target)) {
      return null;
    }
    axis[primaryAxis] = start[primaryAxis];
    return [
      {
        x: start.x,
        y: start.y
      },
      {
        x: axis.x !== void 0 ? axis.x : end.x,
        y: axis.y !== void 0 ? axis.y : end.y,
        original: {
          x: axis.x !== void 0 ? axis.x : end.x,
          y: axis.y !== void 0 ? axis.y : end.y
        }
      }
    ];
  }
}
function tryRepairConnectionStart(moved, other2, newDocking, points) {
  return _tryRepairConnectionSide(moved, other2, newDocking, points);
}
function tryRepairConnectionEnd(moved, other2, newDocking, points) {
  var waypoints = points.slice().reverse();
  waypoints = _tryRepairConnectionSide(moved, other2, newDocking, waypoints);
  return waypoints ? waypoints.reverse() : null;
}
function _tryRepairConnectionSide(moved, other2, newDocking, points) {
  function needsRelayout(points2) {
    if (points2.length < 3) {
      return true;
    }
    if (points2.length > 4) {
      return false;
    }
    return !!find$1(points2, function(p2, idx) {
      var q2 = points2[idx - 1];
      return q2 && pointDistance(p2, q2) < 3;
    });
  }
  function repairBendpoint(candidate, oldPeer, newPeer) {
    var alignment = pointsAligned(oldPeer, candidate);
    switch (alignment) {
      case "v":
        return { x: newPeer.x, y: candidate.y };
      case "h":
        return { x: candidate.x, y: newPeer.y };
    }
    return { x: candidate.x, y: candidate.y };
  }
  function removeOverlapping(points2, a2, b2) {
    var i2;
    for (i2 = points2.length - 2; i2 !== 0; i2--) {
      if (pointInRect(points2[i2], a2, INTERSECTION_THRESHOLD) || pointInRect(points2[i2], b2, INTERSECTION_THRESHOLD)) {
        return points2.slice(i2);
      }
    }
    return points2;
  }
  if (needsRelayout(points)) {
    return null;
  }
  var oldDocking = points[0], newPoints = points.slice(), slicedPoints;
  newPoints[0] = newDocking;
  newPoints[1] = repairBendpoint(newPoints[1], oldDocking, newDocking);
  slicedPoints = removeOverlapping(newPoints, moved, other2);
  if (slicedPoints !== newPoints) {
    newPoints = _tryRepairConnectionSide(moved, other2, newDocking, slicedPoints);
  }
  if (newPoints && pointsAligned(newPoints)) {
    return null;
  }
  return newPoints;
}
function getDirections(orientation, defaultLayout) {
  if (isExplicitDirections(defaultLayout)) {
    return defaultLayout;
  }
  switch (orientation) {
    case "intersect":
      return "t:t";
    case "top":
    case "bottom":
      return "v:v";
    case "left":
    case "right":
      return "h:h";
    default:
      return defaultLayout;
  }
}
function isValidDirections(directions2) {
  return directions2 && /^h|v|t|r|b|l:h|v|t|r|b|l$/.test(directions2);
}
function isExplicitDirections(directions2) {
  return directions2 && /t|r|b|l/.test(directions2);
}
function invertOrientation(orientation) {
  return {
    "top": "bottom",
    "bottom": "top",
    "left": "right",
    "right": "left",
    "top-left": "bottom-right",
    "bottom-right": "top-left",
    "top-right": "bottom-left",
    "bottom-left": "top-right"
  }[orientation];
}
function getDockingPoint(point, rectangle, dockingDirection, targetOrientation) {
  if (dockingDirection === "h") {
    dockingDirection = /left/.test(targetOrientation) ? "l" : "r";
  }
  if (dockingDirection === "v") {
    dockingDirection = /top/.test(targetOrientation) ? "t" : "b";
  }
  if (dockingDirection === "t") {
    return { original: point, x: point.x, y: rectangle.y };
  }
  if (dockingDirection === "r") {
    return { original: point, x: rectangle.x + rectangle.width, y: point.y };
  }
  if (dockingDirection === "b") {
    return { original: point, x: point.x, y: rectangle.y + rectangle.height };
  }
  if (dockingDirection === "l") {
    return { original: point, x: rectangle.x, y: point.y };
  }
  throw new Error("unexpected dockingDirection: <" + dockingDirection + ">");
}
function withoutRedundantPoints(waypoints) {
  return waypoints.reduce(function(points, p2, idx) {
    var previous = points[points.length - 1], next = waypoints[idx + 1];
    if (!pointsOnLine(previous, next, p2, 0)) {
      points.push(p2);
    }
    return points;
  }, []);
}
var ATTACH_ORIENTATION_PADDING = -10, BOUNDARY_TO_HOST_THRESHOLD$1 = 40;
var PREFERRED_LAYOUTS_HORIZONTAL = {
  default: ["h:h"],
  fromGateway: ["v:h"],
  toGateway: ["h:v"],
  loop: {
    fromTop: ["t:r"],
    fromRight: ["r:b"],
    fromLeft: ["l:t"],
    fromBottom: ["b:l"]
  },
  boundaryLoop: {
    alternateHorizontalSide: "b",
    alternateVerticalSide: "l",
    default: "v"
  },
  messageFlow: ["straight", "v:v"],
  subProcess: ["straight", "h:h"],
  isHorizontal: true
};
var PREFERRED_LAYOUTS_VERTICAL = {
  default: ["v:v"],
  fromGateway: ["h:v"],
  toGateway: ["v:h"],
  loop: {
    fromTop: ["t:l"],
    fromRight: ["r:t"],
    fromLeft: ["l:b"],
    fromBottom: ["b:r"]
  },
  boundaryLoop: {
    alternateHorizontalSide: "t",
    alternateVerticalSide: "r",
    default: "h"
  },
  messageFlow: ["straight", "h:h"],
  subProcess: ["straight", "v:v"],
  isHorizontal: false
};
var oppositeOrientationMapping = {
  "top": "bottom",
  "top-right": "bottom-left",
  "top-left": "bottom-right",
  "right": "left",
  "bottom": "top",
  "bottom-right": "top-left",
  "bottom-left": "top-right",
  "left": "right"
};
var orientationDirectionMapping = {
  top: "t",
  right: "r",
  bottom: "b",
  left: "l"
};
function BpmnLayouter() {
}
e$3(BpmnLayouter, BaseLayouter);
BpmnLayouter.prototype.layoutConnection = function(connection, hints) {
  if (!hints) {
    hints = {};
  }
  var source2 = hints.source || connection.source, target = hints.target || connection.target, waypoints = hints.waypoints || connection.waypoints, connectionStart = hints.connectionStart, connectionEnd = hints.connectionEnd;
  var manhattanOptions, updatedWaypoints;
  if (!connectionStart) {
    connectionStart = getConnectionDocking(waypoints && waypoints[0], source2);
  }
  if (!connectionEnd) {
    connectionEnd = getConnectionDocking(waypoints && waypoints[waypoints.length - 1], target);
  }
  if (is$g(connection, "bpmn:Association") || is$g(connection, "bpmn:DataAssociation")) {
    if (waypoints && !isCompensationAssociation(source2, target)) {
      return [].concat([connectionStart], waypoints.slice(1, -1), [connectionEnd]);
    }
  }
  var layout = isDirectionHorizontal(source2) ? PREFERRED_LAYOUTS_HORIZONTAL : PREFERRED_LAYOUTS_VERTICAL;
  if (is$g(connection, "bpmn:MessageFlow")) {
    manhattanOptions = getMessageFlowManhattanOptions(source2, target, layout);
  } else if (is$g(connection, "bpmn:SequenceFlow") || isCompensationAssociation(source2, target)) {
    if (source2 === target) {
      manhattanOptions = {
        preferredLayouts: getLoopPreferredLayout(source2, connection, layout)
      };
    } else if (is$g(source2, "bpmn:BoundaryEvent")) {
      manhattanOptions = {
        preferredLayouts: getBoundaryEventPreferredLayouts(source2, target, connectionEnd, layout)
      };
    } else if (isExpandedSubProcess$1(source2) || isExpandedSubProcess$1(target)) {
      manhattanOptions = {
        preferredLayouts: layout.subProcess,
        preserveDocking: getSubProcessPreserveDocking(source2)
      };
    } else if (is$g(source2, "bpmn:Gateway")) {
      manhattanOptions = {
        preferredLayouts: layout.fromGateway
      };
    } else if (is$g(target, "bpmn:Gateway")) {
      manhattanOptions = {
        preferredLayouts: layout.toGateway
      };
    } else {
      manhattanOptions = {
        preferredLayouts: layout.default
      };
    }
  }
  if (manhattanOptions) {
    manhattanOptions = assign$2(manhattanOptions, hints);
    updatedWaypoints = withoutRedundantPoints(repairConnection(
      source2,
      target,
      connectionStart,
      connectionEnd,
      waypoints,
      manhattanOptions
    ));
  }
  return updatedWaypoints || [connectionStart, connectionEnd];
};
function getAttachOrientation(attachedElement) {
  var hostElement = attachedElement.host;
  return getOrientation(getMid(attachedElement), hostElement, ATTACH_ORIENTATION_PADDING);
}
function getMessageFlowManhattanOptions(source2, target, layout) {
  return {
    preferredLayouts: layout.messageFlow,
    preserveDocking: getMessageFlowPreserveDocking(source2, target)
  };
}
function getMessageFlowPreserveDocking(source2, target) {
  if (is$g(target, "bpmn:Participant")) {
    return "source";
  }
  if (is$g(source2, "bpmn:Participant")) {
    return "target";
  }
  if (isExpandedSubProcess$1(target)) {
    return "source";
  }
  if (isExpandedSubProcess$1(source2)) {
    return "target";
  }
  if (is$g(target, "bpmn:Event")) {
    return "target";
  }
  if (is$g(source2, "bpmn:Event")) {
    return "source";
  }
  return null;
}
function getSubProcessPreserveDocking(source2) {
  return isExpandedSubProcess$1(source2) ? "target" : "source";
}
function getConnectionDocking(point, shape) {
  return point ? point.original || point : getMid(shape);
}
function isCompensationAssociation(source2, target) {
  return is$g(target, "bpmn:Activity") && is$g(source2, "bpmn:BoundaryEvent") && target.businessObject.isForCompensation;
}
function isExpandedSubProcess$1(element) {
  return is$g(element, "bpmn:SubProcess") && isExpanded(element);
}
function isSame(a2, b2) {
  return a2 === b2;
}
function isAnyOrientation(orientation, orientations) {
  return orientations.indexOf(orientation) !== -1;
}
function getHorizontalOrientation(orientation) {
  var matches2 = /right|left/.exec(orientation);
  return matches2 && matches2[0];
}
function getVerticalOrientation(orientation) {
  var matches2 = /top|bottom/.exec(orientation);
  return matches2 && matches2[0];
}
function isOppositeOrientation(a2, b2) {
  return oppositeOrientationMapping[a2] === b2;
}
function isOppositeHorizontalOrientation(a2, b2) {
  var horizontalOrientation = getHorizontalOrientation(a2);
  var oppositeHorizontalOrientation = oppositeOrientationMapping[horizontalOrientation];
  return b2.indexOf(oppositeHorizontalOrientation) !== -1;
}
function isOppositeVerticalOrientation(a2, b2) {
  var verticalOrientation = getVerticalOrientation(a2);
  var oppositeVerticalOrientation = oppositeOrientationMapping[verticalOrientation];
  return b2.indexOf(oppositeVerticalOrientation) !== -1;
}
function isHorizontalOrientation(orientation) {
  return orientation === "right" || orientation === "left";
}
function getLoopPreferredLayout(source2, connection, layout) {
  var waypoints = connection.waypoints;
  var orientation = waypoints && waypoints.length && getOrientation(waypoints[0], source2);
  if (orientation === "top") {
    return layout.loop.fromTop;
  } else if (orientation === "right") {
    return layout.loop.fromRight;
  } else if (orientation === "left") {
    return layout.loop.fromLeft;
  }
  return layout.loop.fromBottom;
}
function getBoundaryEventPreferredLayouts(source2, target, end, layout) {
  var sourceMid = getMid(source2), targetMid = getMid(target), attachOrientation = getAttachOrientation(source2), sourceLayout, targetLayout;
  var isLoop = isSame(source2.host, target);
  var attachedToSide = isAnyOrientation(attachOrientation, ["top", "right", "bottom", "left"]);
  var targetOrientation = getOrientation(targetMid, sourceMid, {
    x: source2.width / 2 + target.width / 2,
    y: source2.height / 2 + target.height / 2
  });
  if (isLoop) {
    return getBoundaryEventLoopLayout(attachOrientation, attachedToSide, source2, target, end, layout);
  }
  sourceLayout = getBoundaryEventSourceLayout(attachOrientation, targetOrientation, attachedToSide, layout.isHorizontal);
  targetLayout = getBoundaryEventTargetLayout(attachOrientation, targetOrientation, attachedToSide, layout.isHorizontal);
  return [sourceLayout + ":" + targetLayout];
}
function getBoundaryEventLoopLayout(attachOrientation, attachedToSide, source2, target, end, layout) {
  var orientation = attachedToSide ? attachOrientation : layout.isHorizontal ? getVerticalOrientation(attachOrientation) : getHorizontalOrientation(attachOrientation), sourceLayout = orientationDirectionMapping[orientation], targetLayout;
  if (attachedToSide) {
    if (isHorizontalOrientation(attachOrientation)) {
      targetLayout = shouldConnectToSameSide("y", source2, target, end) ? "h" : layout.boundaryLoop.alternateHorizontalSide;
    } else {
      targetLayout = shouldConnectToSameSide("x", source2, target, end) ? "v" : layout.boundaryLoop.alternateVerticalSide;
    }
  } else {
    targetLayout = layout.boundaryLoop.default;
  }
  return [sourceLayout + ":" + targetLayout];
}
function shouldConnectToSameSide(axis, source2, target, end) {
  var threshold = BOUNDARY_TO_HOST_THRESHOLD$1;
  return !(areCloseOnAxis(axis, end, target, threshold) || areCloseOnAxis(axis, end, {
    x: target.x + target.width,
    y: target.y + target.height
  }, threshold) || areCloseOnAxis(axis, end, getMid(source2), threshold));
}
function areCloseOnAxis(axis, a2, b2, threshold) {
  return Math.abs(a2[axis] - b2[axis]) < threshold;
}
function getBoundaryEventSourceLayout(attachOrientation, targetOrientation, attachedToSide, isHorizontal2) {
  if (attachedToSide) {
    return orientationDirectionMapping[attachOrientation];
  }
  var verticalAttachOrientation = getVerticalOrientation(attachOrientation), horizontalAttachOrientation = getHorizontalOrientation(attachOrientation), verticalTargetOrientation = getVerticalOrientation(targetOrientation), horizontalTargetOrientation = getHorizontalOrientation(targetOrientation);
  if (isHorizontal2) {
    if (isSame(verticalAttachOrientation, verticalTargetOrientation) || isOppositeOrientation(horizontalAttachOrientation, horizontalTargetOrientation)) {
      return orientationDirectionMapping[verticalAttachOrientation];
    }
  } else {
    if (isSame(horizontalAttachOrientation, horizontalTargetOrientation) || isOppositeOrientation(verticalAttachOrientation, verticalTargetOrientation)) {
      return orientationDirectionMapping[horizontalAttachOrientation];
    }
  }
  return orientationDirectionMapping[isHorizontal2 ? horizontalAttachOrientation : verticalAttachOrientation];
}
function getBoundaryEventTargetLayout(attachOrientation, targetOrientation, attachedToSide, isHorizontal2) {
  if (attachedToSide) {
    if (isHorizontalOrientation(attachOrientation)) {
      if (isOppositeHorizontalOrientation(attachOrientation, targetOrientation) || isSame(attachOrientation, targetOrientation)) {
        return "h";
      }
      return "v";
    } else {
      if (isOppositeVerticalOrientation(attachOrientation, targetOrientation) || isSame(attachOrientation, targetOrientation)) {
        return "v";
      }
      return "h";
    }
  }
  if (isHorizontal2) {
    if (isSame(getVerticalOrientation(attachOrientation), getVerticalOrientation(targetOrientation))) {
      return "h";
    } else {
      return "v";
    }
  } else {
    if (isSame(getHorizontalOrientation(attachOrientation), getHorizontalOrientation(targetOrientation))) {
      return "v";
    } else {
      return "h";
    }
  }
}
function dockingToPoint(docking) {
  return assign$2({ original: docking.point.original || docking.point }, docking.actual);
}
function CroppingConnectionDocking(elementRegistry, graphicsFactory) {
  this._elementRegistry = elementRegistry;
  this._graphicsFactory = graphicsFactory;
}
CroppingConnectionDocking.$inject = ["elementRegistry", "graphicsFactory"];
CroppingConnectionDocking.prototype.getCroppedWaypoints = function(connection, source2, target) {
  source2 = source2 || connection.source;
  target = target || connection.target;
  var sourceDocking = this.getDockingPoint(connection, source2, true), targetDocking = this.getDockingPoint(connection, target);
  var croppedWaypoints = connection.waypoints.slice(sourceDocking.idx + 1, targetDocking.idx);
  croppedWaypoints.unshift(dockingToPoint(sourceDocking));
  croppedWaypoints.push(dockingToPoint(targetDocking));
  return croppedWaypoints;
};
CroppingConnectionDocking.prototype.getDockingPoint = function(connection, shape, dockStart) {
  var waypoints = connection.waypoints, dockingIdx, dockingPoint, croppedPoint;
  dockingIdx = dockStart ? 0 : waypoints.length - 1;
  dockingPoint = waypoints[dockingIdx];
  croppedPoint = this._getIntersection(shape, connection, dockStart);
  return {
    point: dockingPoint,
    actual: croppedPoint || dockingPoint,
    idx: dockingIdx
  };
};
CroppingConnectionDocking.prototype._getIntersection = function(shape, connection, takeFirst) {
  var shapePath = this._getShapePath(shape), connectionPath = this._getConnectionPath(connection);
  return getElementLineIntersection(shapePath, connectionPath, takeFirst);
};
CroppingConnectionDocking.prototype._getConnectionPath = function(connection) {
  return this._graphicsFactory.getConnectionPath(connection);
};
CroppingConnectionDocking.prototype._getShapePath = function(shape) {
  return this._graphicsFactory.getShapePath(shape);
};
CroppingConnectionDocking.prototype._getGfx = function(element) {
  return this._elementRegistry.getGraphics(element);
};
const ModelingModule = {
  __init__: [
    "modeling",
    "bpmnUpdater"
  ],
  __depends__: [
    BehaviorModule,
    RulesModule,
    DiOrderingModule,
    OrderingModule,
    ReplaceModule,
    CommandModule,
    LabelSupportModule,
    AttachSupportModule,
    SelectionModule,
    ChangeSupportModule,
    SpaceToolModule
  ],
  bpmnFactory: ["type", BpmnFactory],
  bpmnUpdater: ["type", BpmnUpdater],
  elementFactory: ["type", ElementFactory],
  modeling: ["type", Modeling],
  layouter: ["type", BpmnLayouter],
  connectionDocking: ["type", CroppingConnectionDocking]
};
const round$1 = Math.round;
function AppendPreview(complexPreview, connectionDocking, elementFactory, eventBus, layouter, rules2) {
  this._complexPreview = complexPreview;
  this._connectionDocking = connectionDocking;
  this._elementFactory = elementFactory;
  this._eventBus = eventBus;
  this._layouter = layouter;
  this._rules = rules2;
}
AppendPreview.prototype.create = function(source2, type, options) {
  const complexPreview = this._complexPreview, connectionDocking = this._connectionDocking, elementFactory = this._elementFactory, eventBus = this._eventBus, layouter = this._layouter, rules2 = this._rules;
  const shape = elementFactory.createShape(assign$2({ type }, options));
  const position = eventBus.fire("autoPlace", {
    source: source2,
    shape
  });
  if (!position) {
    return;
  }
  assign$2(shape, {
    x: position.x - round$1(shape.width / 2),
    y: position.y - round$1(shape.height / 2)
  });
  const connectionCreateAllowed = rules2.allowed("connection.create", {
    source: source2,
    target: shape,
    hints: {
      targetParent: source2.parent
    }
  });
  let connection = null;
  if (connectionCreateAllowed) {
    connection = elementFactory.createConnection(connectionCreateAllowed);
    connection.waypoints = layouter.layoutConnection(connection, {
      source: source2,
      target: shape
    });
    connection.waypoints = connectionDocking.getCroppedWaypoints(connection, source2, shape);
  }
  complexPreview.create({
    created: [
      shape,
      connection
    ].filter((element) => !isNil$1(element))
  });
};
AppendPreview.prototype.cleanUp = function() {
  this._complexPreview.cleanUp();
};
AppendPreview.$inject = [
  "complexPreview",
  "connectionDocking",
  "elementFactory",
  "eventBus",
  "layouter",
  "rules"
];
const AppendPreviewModule = {
  __depends__: [
    AutoPlaceModule,
    ComplexPreviewModule,
    ModelingModule
  ],
  __init__: ["appendPreview"],
  appendPreview: ["type", AppendPreview]
};
var min = Math.min, max = Math.max;
function preventDefault(e2) {
  e2.preventDefault();
}
function stopPropagation(e2) {
  e2.stopPropagation();
}
function isTextNode(node2) {
  return node2.nodeType === Node.TEXT_NODE;
}
function toArray(nodeList) {
  return [].slice.call(nodeList);
}
function TextBox(options) {
  this.container = options.container;
  this.parent = domify$1(
    '<div class="djs-direct-editing-parent"><div class="djs-direct-editing-content" contenteditable="true"></div></div>'
  );
  this.content = query("[contenteditable]", this.parent);
  this.keyHandler = options.keyHandler || function() {
  };
  this.resizeHandler = options.resizeHandler || function() {
  };
  this.autoResize = bind$3(this.autoResize, this);
  this.handlePaste = bind$3(this.handlePaste, this);
}
TextBox.prototype.create = function(bounds, style, value, options) {
  var self2 = this;
  var parent = this.parent, content = this.content, container = this.container;
  options = this.options = options || {};
  style = this.style = style || {};
  var parentStyle = pick$1(style, [
    "width",
    "height",
    "maxWidth",
    "maxHeight",
    "minWidth",
    "minHeight",
    "left",
    "top",
    "backgroundColor",
    "position",
    "overflow",
    "border",
    "wordWrap",
    "textAlign",
    "outline",
    "transform"
  ]);
  assign$2(parent.style, {
    width: bounds.width + "px",
    height: bounds.height + "px",
    maxWidth: bounds.maxWidth + "px",
    maxHeight: bounds.maxHeight + "px",
    minWidth: bounds.minWidth + "px",
    minHeight: bounds.minHeight + "px",
    left: bounds.x + "px",
    top: bounds.y + "px",
    backgroundColor: "#ffffff",
    position: "absolute",
    overflow: "visible",
    border: "1px solid #ccc",
    boxSizing: "border-box",
    wordWrap: "normal",
    textAlign: "center",
    outline: "none"
  }, parentStyle);
  var contentStyle = pick$1(style, [
    "fontFamily",
    "fontSize",
    "fontWeight",
    "lineHeight",
    "padding",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft"
  ]);
  assign$2(content.style, {
    boxSizing: "border-box",
    width: "100%",
    outline: "none",
    wordWrap: "break-word"
  }, contentStyle);
  if (options.centerVertically) {
    assign$2(content.style, {
      position: "absolute",
      top: "50%",
      transform: "translate(0, -50%)"
    }, contentStyle);
  }
  content.innerText = value;
  event.bind(content, "keydown", this.keyHandler);
  event.bind(content, "mousedown", stopPropagation);
  event.bind(content, "paste", self2.handlePaste);
  if (options.autoResize) {
    event.bind(content, "input", this.autoResize);
  }
  if (options.resizable) {
    this.resizable(style);
  }
  container.appendChild(parent);
  this.setSelection(content.lastChild, content.lastChild && content.lastChild.length);
  return parent;
};
TextBox.prototype.handlePaste = function(e2) {
  var options = this.options, style = this.style;
  e2.preventDefault();
  var text;
  if (e2.clipboardData) {
    text = e2.clipboardData.getData("text/plain");
  } else {
    text = window.clipboardData.getData("Text");
  }
  this.insertText(text);
  if (options.autoResize) {
    var hasResized = this.autoResize(style);
    if (hasResized) {
      this.resizeHandler(hasResized);
    }
  }
};
TextBox.prototype.insertText = function(text) {
  text = normalizeEndOfLineSequences(text);
  var success = document.execCommand("insertText", false, text);
  if (success) {
    return;
  }
  this._insertTextIE(text);
};
TextBox.prototype._insertTextIE = function(text) {
  var range = this.getSelection(), startContainer = range.startContainer, endContainer = range.endContainer, startOffset = range.startOffset, endOffset = range.endOffset, commonAncestorContainer = range.commonAncestorContainer;
  var childNodesArray = toArray(commonAncestorContainer.childNodes);
  var container, offset;
  if (isTextNode(commonAncestorContainer)) {
    var containerTextContent = startContainer.textContent;
    startContainer.textContent = containerTextContent.substring(0, startOffset) + text + containerTextContent.substring(endOffset);
    container = startContainer;
    offset = startOffset + text.length;
  } else if (startContainer === this.content && endContainer === this.content) {
    var textNode = document.createTextNode(text);
    this.content.insertBefore(textNode, childNodesArray[startOffset]);
    container = textNode;
    offset = textNode.textContent.length;
  } else {
    var startContainerChildIndex = childNodesArray.indexOf(startContainer), endContainerChildIndex = childNodesArray.indexOf(endContainer);
    childNodesArray.forEach(function(childNode, index2) {
      if (index2 === startContainerChildIndex) {
        childNode.textContent = startContainer.textContent.substring(0, startOffset) + text + endContainer.textContent.substring(endOffset);
      } else if (index2 > startContainerChildIndex && index2 <= endContainerChildIndex) {
        remove$1(childNode);
      }
    });
    container = startContainer;
    offset = startOffset + text.length;
  }
  if (container && offset !== void 0) {
    setTimeout(function() {
      self.setSelection(container, offset);
    });
  }
};
TextBox.prototype.autoResize = function() {
  var parent = this.parent, content = this.content;
  var fontSize = parseInt(this.style.fontSize) || 12;
  if (content.scrollHeight > parent.offsetHeight || content.scrollHeight < parent.offsetHeight - fontSize) {
    var bounds = parent.getBoundingClientRect();
    var height = content.scrollHeight;
    parent.style.height = height + "px";
    this.resizeHandler({
      width: bounds.width,
      height: bounds.height,
      dx: 0,
      dy: height - bounds.height
    });
  }
};
TextBox.prototype.resizable = function() {
  var self2 = this;
  var parent = this.parent, resizeHandle = this.resizeHandle;
  var minWidth = parseInt(this.style.minWidth) || 0, minHeight = parseInt(this.style.minHeight) || 0, maxWidth = parseInt(this.style.maxWidth) || Infinity, maxHeight = parseInt(this.style.maxHeight) || Infinity;
  if (!resizeHandle) {
    resizeHandle = this.resizeHandle = domify$1(
      '<div class="djs-direct-editing-resize-handle"></div>'
    );
    var startX, startY, startWidth, startHeight;
    var onMouseDown = function(e2) {
      preventDefault(e2);
      stopPropagation(e2);
      startX = e2.clientX;
      startY = e2.clientY;
      var bounds = parent.getBoundingClientRect();
      startWidth = bounds.width;
      startHeight = bounds.height;
      event.bind(document, "mousemove", onMouseMove);
      event.bind(document, "mouseup", onMouseUp);
    };
    var onMouseMove = function(e2) {
      preventDefault(e2);
      stopPropagation(e2);
      var newWidth = min(max(startWidth + e2.clientX - startX, minWidth), maxWidth);
      var newHeight = min(max(startHeight + e2.clientY - startY, minHeight), maxHeight);
      parent.style.width = newWidth + "px";
      parent.style.height = newHeight + "px";
      self2.resizeHandler({
        width: startWidth,
        height: startHeight,
        dx: e2.clientX - startX,
        dy: e2.clientY - startY
      });
    };
    var onMouseUp = function(e2) {
      preventDefault(e2);
      stopPropagation(e2);
      event.unbind(document, "mousemove", onMouseMove, false);
      event.unbind(document, "mouseup", onMouseUp, false);
    };
    event.bind(resizeHandle, "mousedown", onMouseDown);
  }
  assign$2(resizeHandle.style, {
    position: "absolute",
    bottom: "0px",
    right: "0px",
    cursor: "nwse-resize",
    width: "0",
    height: "0",
    borderTop: (parseInt(this.style.fontSize) / 4 || 3) + "px solid transparent",
    borderRight: (parseInt(this.style.fontSize) / 4 || 3) + "px solid #ccc",
    borderBottom: (parseInt(this.style.fontSize) / 4 || 3) + "px solid #ccc",
    borderLeft: (parseInt(this.style.fontSize) / 4 || 3) + "px solid transparent"
  });
  parent.appendChild(resizeHandle);
};
TextBox.prototype.destroy = function() {
  var parent = this.parent, content = this.content, resizeHandle = this.resizeHandle;
  content.innerText = "";
  parent.removeAttribute("style");
  content.removeAttribute("style");
  event.unbind(content, "keydown", this.keyHandler);
  event.unbind(content, "mousedown", stopPropagation);
  event.unbind(content, "input", this.autoResize);
  event.unbind(content, "paste", this.handlePaste);
  if (resizeHandle) {
    resizeHandle.removeAttribute("style");
    remove$1(resizeHandle);
  }
  remove$1(parent);
};
TextBox.prototype.getValue = function() {
  return this.content.innerText.trim();
};
TextBox.prototype.getSelection = function() {
  var selection = window.getSelection(), range = selection.getRangeAt(0);
  return range;
};
TextBox.prototype.setSelection = function(container, offset) {
  var range = document.createRange();
  if (container === null) {
    range.selectNodeContents(this.content);
  } else {
    range.setStart(container, offset);
    range.setEnd(container, offset);
  }
  var selection = window.getSelection();
  selection.removeAllRanges();
  selection.addRange(range);
};
function normalizeEndOfLineSequences(string) {
  return string.replace(/\r\n|\r|\n/g, "\n");
}
function DirectEditing(eventBus, canvas) {
  this._eventBus = eventBus;
  this._providers = [];
  this._textbox = new TextBox({
    container: canvas.getContainer(),
    keyHandler: bind$3(this._handleKey, this),
    resizeHandler: bind$3(this._handleResize, this)
  });
}
DirectEditing.$inject = ["eventBus", "canvas"];
DirectEditing.prototype.registerProvider = function(provider) {
  this._providers.push(provider);
};
DirectEditing.prototype.isActive = function(element) {
  return !!(this._active && (!element || this._active.element === element));
};
DirectEditing.prototype.cancel = function() {
  if (!this._active) {
    return;
  }
  this._fire("cancel");
  this.close();
};
DirectEditing.prototype._fire = function(event2, context) {
  this._eventBus.fire("directEditing." + event2, context || { active: this._active });
};
DirectEditing.prototype.close = function() {
  this._textbox.destroy();
  this._fire("deactivate");
  this._active = null;
  this.resizable = void 0;
};
DirectEditing.prototype.complete = function() {
  var active = this._active;
  if (!active) {
    return;
  }
  var containerBounds, previousBounds = active.context.bounds, newBounds = this.$textbox.getBoundingClientRect(), newText = this.getValue(), previousText = active.context.text;
  if (newText !== previousText || newBounds.height !== previousBounds.height || newBounds.width !== previousBounds.width) {
    containerBounds = this._textbox.container.getBoundingClientRect();
    active.provider.update(active.element, newText, active.context.text, {
      x: newBounds.left - containerBounds.left,
      y: newBounds.top - containerBounds.top,
      width: newBounds.width,
      height: newBounds.height
    });
  }
  this._fire("complete");
  this.close();
};
DirectEditing.prototype.getValue = function() {
  return this._textbox.getValue();
};
DirectEditing.prototype._handleKey = function(e2) {
  e2.stopPropagation();
  var key = e2.keyCode || e2.charCode;
  if (key === 27) {
    e2.preventDefault();
    return this.cancel();
  }
  if (key === 13 && !e2.shiftKey) {
    e2.preventDefault();
    return this.complete();
  }
};
DirectEditing.prototype._handleResize = function(event2) {
  this._fire("resize", event2);
};
DirectEditing.prototype.activate = function(element) {
  if (this.isActive()) {
    this.cancel();
  }
  var context;
  var provider = find$1(this._providers, function(p2) {
    return (context = p2.activate(element)) ? p2 : null;
  });
  if (context) {
    this.$textbox = this._textbox.create(
      context.bounds,
      context.style,
      context.text,
      context.options
    );
    this._active = {
      element,
      context,
      provider
    };
    if (context.options && context.options.resizable) {
      this.resizable = true;
    }
    this._fire("activate");
  }
  return !!context;
};
const DirectEditingModule = {
  __depends__: [
    InteractionEventsModule$1
  ],
  __init__: ["directEditing"],
  directEditing: ["type", DirectEditing]
};
function isDifferentType(element) {
  return function(entry) {
    var target = entry.target;
    var businessObject = getBusinessObject(element), eventDefinition = businessObject.eventDefinitions && businessObject.eventDefinitions[0];
    var isTypeEqual = businessObject.$type === target.type;
    var isEventDefinitionEqual = (eventDefinition && eventDefinition.$type) === target.eventDefinitionType;
    var isTriggeredByEventEqual = (
      // coherse to <false>
      !!target.triggeredByEvent === !!businessObject.triggeredByEvent
    );
    var isExpandedEqual = target.isExpanded === void 0 || target.isExpanded === isExpanded(element);
    return !isTypeEqual || !isEventDefinitionEqual || !isTriggeredByEventEqual || !isExpandedEqual;
  };
}
var START_EVENT = [
  {
    label: "Start event",
    actionName: "replace-with-none-start",
    className: "bpmn-icon-start-event-none",
    target: {
      type: "bpmn:StartEvent"
    }
  },
  {
    label: "Intermediate throw event",
    actionName: "replace-with-none-intermediate-throwing",
    className: "bpmn-icon-intermediate-event-none",
    target: {
      type: "bpmn:IntermediateThrowEvent"
    }
  },
  {
    label: "End event",
    actionName: "replace-with-none-end",
    className: "bpmn-icon-end-event-none",
    target: {
      type: "bpmn:EndEvent"
    }
  },
  {
    label: "Message start event",
    actionName: "replace-with-message-start",
    className: "bpmn-icon-start-event-message",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition"
    }
  },
  {
    label: "Timer start event",
    actionName: "replace-with-timer-start",
    className: "bpmn-icon-start-event-timer",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:TimerEventDefinition"
    }
  },
  {
    label: "Conditional start event",
    actionName: "replace-with-conditional-start",
    className: "bpmn-icon-start-event-condition",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:ConditionalEventDefinition"
    }
  },
  {
    label: "Signal start event",
    actionName: "replace-with-signal-start",
    className: "bpmn-icon-start-event-signal",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition"
    }
  }
];
var START_EVENT_SUB_PROCESS = [
  {
    label: "Start event",
    actionName: "replace-with-none-start",
    className: "bpmn-icon-start-event-none",
    target: {
      type: "bpmn:StartEvent"
    }
  },
  {
    label: "Intermediate throw event",
    actionName: "replace-with-none-intermediate-throwing",
    className: "bpmn-icon-intermediate-event-none",
    target: {
      type: "bpmn:IntermediateThrowEvent"
    }
  },
  {
    label: "End event",
    actionName: "replace-with-none-end",
    className: "bpmn-icon-end-event-none",
    target: {
      type: "bpmn:EndEvent"
    }
  }
];
var INTERMEDIATE_EVENT = [
  {
    label: "Start event",
    actionName: "replace-with-none-start",
    className: "bpmn-icon-start-event-none",
    target: {
      type: "bpmn:StartEvent"
    }
  },
  {
    label: "Intermediate throw event",
    actionName: "replace-with-none-intermediate-throw",
    className: "bpmn-icon-intermediate-event-none",
    target: {
      type: "bpmn:IntermediateThrowEvent"
    }
  },
  {
    label: "End event",
    actionName: "replace-with-none-end",
    className: "bpmn-icon-end-event-none",
    target: {
      type: "bpmn:EndEvent"
    }
  },
  {
    label: "Message intermediate catch event",
    actionName: "replace-with-message-intermediate-catch",
    className: "bpmn-icon-intermediate-event-catch-message",
    target: {
      type: "bpmn:IntermediateCatchEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition"
    }
  },
  {
    label: "Message intermediate throw event",
    actionName: "replace-with-message-intermediate-throw",
    className: "bpmn-icon-intermediate-event-throw-message",
    target: {
      type: "bpmn:IntermediateThrowEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition"
    }
  },
  {
    label: "Timer intermediate catch event",
    actionName: "replace-with-timer-intermediate-catch",
    className: "bpmn-icon-intermediate-event-catch-timer",
    target: {
      type: "bpmn:IntermediateCatchEvent",
      eventDefinitionType: "bpmn:TimerEventDefinition"
    }
  },
  {
    label: "Escalation intermediate throw event",
    actionName: "replace-with-escalation-intermediate-throw",
    className: "bpmn-icon-intermediate-event-throw-escalation",
    target: {
      type: "bpmn:IntermediateThrowEvent",
      eventDefinitionType: "bpmn:EscalationEventDefinition"
    }
  },
  {
    label: "Conditional intermediate catch event",
    actionName: "replace-with-conditional-intermediate-catch",
    className: "bpmn-icon-intermediate-event-catch-condition",
    target: {
      type: "bpmn:IntermediateCatchEvent",
      eventDefinitionType: "bpmn:ConditionalEventDefinition"
    }
  },
  {
    label: "Link intermediate catch event",
    actionName: "replace-with-link-intermediate-catch",
    className: "bpmn-icon-intermediate-event-catch-link",
    target: {
      type: "bpmn:IntermediateCatchEvent",
      eventDefinitionType: "bpmn:LinkEventDefinition",
      eventDefinitionAttrs: {
        name: ""
      }
    }
  },
  {
    label: "Link intermediate throw event",
    actionName: "replace-with-link-intermediate-throw",
    className: "bpmn-icon-intermediate-event-throw-link",
    target: {
      type: "bpmn:IntermediateThrowEvent",
      eventDefinitionType: "bpmn:LinkEventDefinition",
      eventDefinitionAttrs: {
        name: ""
      }
    }
  },
  {
    label: "Compensation intermediate throw event",
    actionName: "replace-with-compensation-intermediate-throw",
    className: "bpmn-icon-intermediate-event-throw-compensation",
    target: {
      type: "bpmn:IntermediateThrowEvent",
      eventDefinitionType: "bpmn:CompensateEventDefinition"
    }
  },
  {
    label: "Signal intermediate catch event",
    actionName: "replace-with-signal-intermediate-catch",
    className: "bpmn-icon-intermediate-event-catch-signal",
    target: {
      type: "bpmn:IntermediateCatchEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition"
    }
  },
  {
    label: "Signal intermediate throw event",
    actionName: "replace-with-signal-intermediate-throw",
    className: "bpmn-icon-intermediate-event-throw-signal",
    target: {
      type: "bpmn:IntermediateThrowEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition"
    }
  }
];
var END_EVENT = [
  {
    label: "Start event",
    actionName: "replace-with-none-start",
    className: "bpmn-icon-start-event-none",
    target: {
      type: "bpmn:StartEvent"
    }
  },
  {
    label: "Intermediate throw event",
    actionName: "replace-with-none-intermediate-throw",
    className: "bpmn-icon-intermediate-event-none",
    target: {
      type: "bpmn:IntermediateThrowEvent"
    }
  },
  {
    label: "End event",
    actionName: "replace-with-none-end",
    className: "bpmn-icon-end-event-none",
    target: {
      type: "bpmn:EndEvent"
    }
  },
  {
    label: "Message end event",
    actionName: "replace-with-message-end",
    className: "bpmn-icon-end-event-message",
    target: {
      type: "bpmn:EndEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition"
    }
  },
  {
    label: "Escalation end event",
    actionName: "replace-with-escalation-end",
    className: "bpmn-icon-end-event-escalation",
    target: {
      type: "bpmn:EndEvent",
      eventDefinitionType: "bpmn:EscalationEventDefinition"
    }
  },
  {
    label: "Error end event",
    actionName: "replace-with-error-end",
    className: "bpmn-icon-end-event-error",
    target: {
      type: "bpmn:EndEvent",
      eventDefinitionType: "bpmn:ErrorEventDefinition"
    }
  },
  {
    label: "Cancel end event",
    actionName: "replace-with-cancel-end",
    className: "bpmn-icon-end-event-cancel",
    target: {
      type: "bpmn:EndEvent",
      eventDefinitionType: "bpmn:CancelEventDefinition"
    }
  },
  {
    label: "Compensation end event",
    actionName: "replace-with-compensation-end",
    className: "bpmn-icon-end-event-compensation",
    target: {
      type: "bpmn:EndEvent",
      eventDefinitionType: "bpmn:CompensateEventDefinition"
    }
  },
  {
    label: "Signal end event",
    actionName: "replace-with-signal-end",
    className: "bpmn-icon-end-event-signal",
    target: {
      type: "bpmn:EndEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition"
    }
  },
  {
    label: "Terminate end event",
    actionName: "replace-with-terminate-end",
    className: "bpmn-icon-end-event-terminate",
    target: {
      type: "bpmn:EndEvent",
      eventDefinitionType: "bpmn:TerminateEventDefinition"
    }
  }
];
var GATEWAY = [
  {
    label: "Exclusive gateway",
    actionName: "replace-with-exclusive-gateway",
    className: "bpmn-icon-gateway-xor",
    target: {
      type: "bpmn:ExclusiveGateway"
    }
  },
  {
    label: "Parallel gateway",
    actionName: "replace-with-parallel-gateway",
    className: "bpmn-icon-gateway-parallel",
    target: {
      type: "bpmn:ParallelGateway"
    }
  },
  {
    label: "Inclusive gateway",
    actionName: "replace-with-inclusive-gateway",
    className: "bpmn-icon-gateway-or",
    target: {
      type: "bpmn:InclusiveGateway"
    }
  },
  {
    label: "Complex gateway",
    actionName: "replace-with-complex-gateway",
    className: "bpmn-icon-gateway-complex",
    target: {
      type: "bpmn:ComplexGateway"
    }
  },
  {
    label: "Event-based gateway",
    actionName: "replace-with-event-based-gateway",
    className: "bpmn-icon-gateway-eventbased",
    target: {
      type: "bpmn:EventBasedGateway",
      instantiate: false,
      eventGatewayType: "Exclusive"
    }
  }
  // Gateways deactivated until https://github.com/bpmn-io/bpmn-js/issues/194
  // {
  //   label: 'Event based instantiating Gateway',
  //   actionName: 'replace-with-exclusive-event-based-gateway',
  //   className: 'bpmn-icon-exclusive-event-based',
  //   target: {
  //     type: 'bpmn:EventBasedGateway'
  //   },
  //   options: {
  //     businessObject: { instantiate: true, eventGatewayType: 'Exclusive' }
  //   }
  // },
  // {
  //   label: 'Parallel Event based instantiating Gateway',
  //   actionName: 'replace-with-parallel-event-based-instantiate-gateway',
  //   className: 'bpmn-icon-parallel-event-based-instantiate-gateway',
  //   target: {
  //     type: 'bpmn:EventBasedGateway'
  //   },
  //   options: {
  //     businessObject: { instantiate: true, eventGatewayType: 'Parallel' }
  //   }
  // }
];
var SUBPROCESS_EXPANDED = [
  {
    label: "Transaction",
    actionName: "replace-with-transaction",
    className: "bpmn-icon-transaction",
    target: {
      type: "bpmn:Transaction",
      isExpanded: true
    }
  },
  {
    label: "Event sub-process",
    actionName: "replace-with-event-subprocess",
    className: "bpmn-icon-event-subprocess-expanded",
    target: {
      type: "bpmn:SubProcess",
      triggeredByEvent: true,
      isExpanded: true
    }
  },
  {
    label: "Sub-process (collapsed)",
    actionName: "replace-with-collapsed-subprocess",
    className: "bpmn-icon-subprocess-collapsed",
    target: {
      type: "bpmn:SubProcess",
      isExpanded: false
    }
  }
];
var TRANSACTION = [
  {
    label: "Transaction",
    actionName: "replace-with-transaction",
    className: "bpmn-icon-transaction",
    target: {
      type: "bpmn:Transaction",
      isExpanded: true
    }
  },
  {
    label: "Sub-process",
    actionName: "replace-with-subprocess",
    className: "bpmn-icon-subprocess-expanded",
    target: {
      type: "bpmn:SubProcess",
      isExpanded: true
    }
  },
  {
    label: "Event sub-process",
    actionName: "replace-with-event-subprocess",
    className: "bpmn-icon-event-subprocess-expanded",
    target: {
      type: "bpmn:SubProcess",
      triggeredByEvent: true,
      isExpanded: true
    }
  }
];
var EVENT_SUB_PROCESS = TRANSACTION;
var TASK = [
  {
    label: "Task",
    actionName: "replace-with-task",
    className: "bpmn-icon-task",
    target: {
      type: "bpmn:Task"
    }
  },
  {
    label: "User task",
    actionName: "replace-with-user-task",
    className: "bpmn-icon-user",
    target: {
      type: "bpmn:UserTask"
    }
  },
  {
    label: "Service task",
    actionName: "replace-with-service-task",
    className: "bpmn-icon-service",
    target: {
      type: "bpmn:ServiceTask"
    }
  },
  {
    label: "Send task",
    actionName: "replace-with-send-task",
    className: "bpmn-icon-send",
    target: {
      type: "bpmn:SendTask"
    }
  },
  {
    label: "Receive task",
    actionName: "replace-with-receive-task",
    className: "bpmn-icon-receive",
    target: {
      type: "bpmn:ReceiveTask"
    }
  },
  {
    label: "Manual task",
    actionName: "replace-with-manual-task",
    className: "bpmn-icon-manual",
    target: {
      type: "bpmn:ManualTask"
    }
  },
  {
    label: "Business rule task",
    actionName: "replace-with-rule-task",
    className: "bpmn-icon-business-rule",
    target: {
      type: "bpmn:BusinessRuleTask"
    }
  },
  {
    label: "Script task",
    actionName: "replace-with-script-task",
    className: "bpmn-icon-script",
    target: {
      type: "bpmn:ScriptTask"
    }
  },
  {
    label: "Call activity",
    actionName: "replace-with-call-activity",
    className: "bpmn-icon-call-activity",
    target: {
      type: "bpmn:CallActivity"
    }
  },
  {
    label: "Sub-process (collapsed)",
    actionName: "replace-with-collapsed-subprocess",
    className: "bpmn-icon-subprocess-collapsed",
    target: {
      type: "bpmn:SubProcess",
      isExpanded: false
    }
  },
  {
    label: "Sub-process (expanded)",
    actionName: "replace-with-expanded-subprocess",
    className: "bpmn-icon-subprocess-expanded",
    target: {
      type: "bpmn:SubProcess",
      isExpanded: true
    }
  }
];
var DATA_OBJECT_REFERENCE = [
  {
    label: "Data store reference",
    actionName: "replace-with-data-store-reference",
    className: "bpmn-icon-data-store",
    target: {
      type: "bpmn:DataStoreReference"
    }
  }
];
var DATA_STORE_REFERENCE = [
  {
    label: "Data object reference",
    actionName: "replace-with-data-object-reference",
    className: "bpmn-icon-data-object",
    target: {
      type: "bpmn:DataObjectReference"
    }
  }
];
var BOUNDARY_EVENT = [
  {
    label: "Message boundary event",
    actionName: "replace-with-message-boundary",
    className: "bpmn-icon-intermediate-event-catch-message",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Timer boundary event",
    actionName: "replace-with-timer-boundary",
    className: "bpmn-icon-intermediate-event-catch-timer",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:TimerEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Escalation boundary event",
    actionName: "replace-with-escalation-boundary",
    className: "bpmn-icon-intermediate-event-catch-escalation",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:EscalationEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Conditional boundary event",
    actionName: "replace-with-conditional-boundary",
    className: "bpmn-icon-intermediate-event-catch-condition",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:ConditionalEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Error boundary event",
    actionName: "replace-with-error-boundary",
    className: "bpmn-icon-intermediate-event-catch-error",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:ErrorEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Cancel boundary event",
    actionName: "replace-with-cancel-boundary",
    className: "bpmn-icon-intermediate-event-catch-cancel",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:CancelEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Signal boundary event",
    actionName: "replace-with-signal-boundary",
    className: "bpmn-icon-intermediate-event-catch-signal",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Compensation boundary event",
    actionName: "replace-with-compensation-boundary",
    className: "bpmn-icon-intermediate-event-catch-compensation",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:CompensateEventDefinition",
      cancelActivity: true
    }
  },
  {
    label: "Message boundary event (non-interrupting)",
    actionName: "replace-with-non-interrupting-message-boundary",
    className: "bpmn-icon-intermediate-event-catch-non-interrupting-message",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition",
      cancelActivity: false
    }
  },
  {
    label: "Timer boundary event (non-interrupting)",
    actionName: "replace-with-non-interrupting-timer-boundary",
    className: "bpmn-icon-intermediate-event-catch-non-interrupting-timer",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:TimerEventDefinition",
      cancelActivity: false
    }
  },
  {
    label: "Escalation boundary event (non-interrupting)",
    actionName: "replace-with-non-interrupting-escalation-boundary",
    className: "bpmn-icon-intermediate-event-catch-non-interrupting-escalation",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:EscalationEventDefinition",
      cancelActivity: false
    }
  },
  {
    label: "Conditional boundary event (non-interrupting)",
    actionName: "replace-with-non-interrupting-conditional-boundary",
    className: "bpmn-icon-intermediate-event-catch-non-interrupting-condition",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:ConditionalEventDefinition",
      cancelActivity: false
    }
  },
  {
    label: "Signal boundary event (non-interrupting)",
    actionName: "replace-with-non-interrupting-signal-boundary",
    className: "bpmn-icon-intermediate-event-catch-non-interrupting-signal",
    target: {
      type: "bpmn:BoundaryEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition",
      cancelActivity: false
    }
  }
];
var EVENT_SUB_PROCESS_START_EVENT = [
  {
    label: "Message start event",
    actionName: "replace-with-message-start",
    className: "bpmn-icon-start-event-message",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition",
      isInterrupting: true
    }
  },
  {
    label: "Timer start event",
    actionName: "replace-with-timer-start",
    className: "bpmn-icon-start-event-timer",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:TimerEventDefinition",
      isInterrupting: true
    }
  },
  {
    label: "Conditional start event",
    actionName: "replace-with-conditional-start",
    className: "bpmn-icon-start-event-condition",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:ConditionalEventDefinition",
      isInterrupting: true
    }
  },
  {
    label: "Signal start event",
    actionName: "replace-with-signal-start",
    className: "bpmn-icon-start-event-signal",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition",
      isInterrupting: true
    }
  },
  {
    label: "Error start event",
    actionName: "replace-with-error-start",
    className: "bpmn-icon-start-event-error",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:ErrorEventDefinition",
      isInterrupting: true
    }
  },
  {
    label: "Escalation start event",
    actionName: "replace-with-escalation-start",
    className: "bpmn-icon-start-event-escalation",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:EscalationEventDefinition",
      isInterrupting: true
    }
  },
  {
    label: "Compensation start event",
    actionName: "replace-with-compensation-start",
    className: "bpmn-icon-start-event-compensation",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:CompensateEventDefinition",
      isInterrupting: true
    }
  },
  {
    label: "Message start event (non-interrupting)",
    actionName: "replace-with-non-interrupting-message-start",
    className: "bpmn-icon-start-event-non-interrupting-message",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:MessageEventDefinition",
      isInterrupting: false
    }
  },
  {
    label: "Timer start event (non-interrupting)",
    actionName: "replace-with-non-interrupting-timer-start",
    className: "bpmn-icon-start-event-non-interrupting-timer",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:TimerEventDefinition",
      isInterrupting: false
    }
  },
  {
    label: "Conditional start event (non-interrupting)",
    actionName: "replace-with-non-interrupting-conditional-start",
    className: "bpmn-icon-start-event-non-interrupting-condition",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:ConditionalEventDefinition",
      isInterrupting: false
    }
  },
  {
    label: "Signal start event (non-interrupting)",
    actionName: "replace-with-non-interrupting-signal-start",
    className: "bpmn-icon-start-event-non-interrupting-signal",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:SignalEventDefinition",
      isInterrupting: false
    }
  },
  {
    label: "Escalation start event (non-interrupting)",
    actionName: "replace-with-non-interrupting-escalation-start",
    className: "bpmn-icon-start-event-non-interrupting-escalation",
    target: {
      type: "bpmn:StartEvent",
      eventDefinitionType: "bpmn:EscalationEventDefinition",
      isInterrupting: false
    }
  }
];
var SEQUENCE_FLOW = [
  {
    label: "Sequence flow",
    actionName: "replace-with-sequence-flow",
    className: "bpmn-icon-connection"
  },
  {
    label: "Default flow",
    actionName: "replace-with-default-flow",
    className: "bpmn-icon-default-flow"
  },
  {
    label: "Conditional flow",
    actionName: "replace-with-conditional-flow",
    className: "bpmn-icon-conditional-flow"
  }
];
var PARTICIPANT = [
  {
    label: "Expanded pool/participant",
    actionName: "replace-with-expanded-pool",
    className: "bpmn-icon-participant",
    target: {
      type: "bpmn:Participant",
      isExpanded: true
    }
  },
  {
    label: function(element) {
      var label = "Empty pool/participant";
      if (element.children && element.children.length) {
        label += " (removes content)";
      }
      return label;
    },
    actionName: "replace-with-collapsed-pool",
    // TODO(@janstuemmel): maybe design new icon
    className: "bpmn-icon-lane",
    target: {
      type: "bpmn:Participant",
      isExpanded: false
    }
  }
];
const Icons = {
  "start-event-non-interrupting": `
  <svg viewBox="0 0 2048 2048" xmlns="http://www.w3.org/2000/svg">
    <g transform="translate(0 995.64)">
      <path d="m1899 28.357c21.545 567.43-598.38 1023.5-1133.6 835.92-548.09-147.21-801.57-873.95-463.59-1330 302.62-480.3 1071.7-507.54 1407.6-49.847 122.14 153.12 190.07 348.07 189.59 543.91z" fill="none" stroke="currentColor" stroke-dasharray="418.310422, 361.2328165" stroke-linecap="round" stroke-width="100"/>
    </g>
  </svg>`,
  "intermediate-event-non-interrupting": `
  <svg viewBox="0 0 2048 2048" xmlns="http://www.w3.org/2000/svg">
     <g transform="translate(0 995.64)" fill="none" stroke="currentColor" stroke-linecap="round">
        <circle cx="1024" cy="28.357" r="875" stroke-dasharray="418.310422, 361.2328165" stroke-width="100"/>
        <circle cx="1024" cy="28.357" r="685" stroke-dasharray="348.31044857,261.23283643" stroke-dashoffset="500" stroke-width="100"/>
     </g>
  </svg>`
};
function ReplaceMenuProvider(bpmnFactory, popupMenu, modeling, moddle, bpmnReplace, rules2, translate2, moddleCopy) {
  this._bpmnFactory = bpmnFactory;
  this._popupMenu = popupMenu;
  this._modeling = modeling;
  this._moddle = moddle;
  this._bpmnReplace = bpmnReplace;
  this._rules = rules2;
  this._translate = translate2;
  this._moddleCopy = moddleCopy;
  this._register();
}
ReplaceMenuProvider.$inject = [
  "bpmnFactory",
  "popupMenu",
  "modeling",
  "moddle",
  "bpmnReplace",
  "rules",
  "translate",
  "moddleCopy"
];
ReplaceMenuProvider.prototype._register = function() {
  this._popupMenu.registerProvider("bpmn-replace", this);
};
ReplaceMenuProvider.prototype.getPopupMenuEntries = function(target) {
  var businessObject = target.businessObject;
  var rules2 = this._rules;
  var filteredReplaceOptions = [];
  if (isArray$3(target) || !rules2.allowed("shape.replace", { element: target })) {
    return {};
  }
  var differentType = isDifferentType(target);
  if (is$g(businessObject, "bpmn:DataObjectReference")) {
    return this._createEntries(target, DATA_OBJECT_REFERENCE);
  }
  if (is$g(businessObject, "bpmn:DataStoreReference") && !is$g(target.parent, "bpmn:Collaboration")) {
    return this._createEntries(target, DATA_STORE_REFERENCE);
  }
  if (is$g(businessObject, "bpmn:StartEvent") && !is$g(businessObject.$parent, "bpmn:SubProcess")) {
    filteredReplaceOptions = filter$1(START_EVENT, differentType);
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:Participant")) {
    filteredReplaceOptions = filter$1(PARTICIPANT, function(replaceOption) {
      return isExpanded(target) !== replaceOption.target.isExpanded;
    });
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:StartEvent") && isEventSubProcess(businessObject.$parent)) {
    filteredReplaceOptions = filter$1(EVENT_SUB_PROCESS_START_EVENT, function(replaceOption) {
      var target2 = replaceOption.target;
      var isInterrupting2 = target2.isInterrupting !== false;
      var isInterruptingEqual = businessObject.isInterrupting === isInterrupting2;
      return differentType(replaceOption) || !differentType(replaceOption) && !isInterruptingEqual;
    });
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:StartEvent") && !isEventSubProcess(businessObject.$parent) && is$g(businessObject.$parent, "bpmn:SubProcess")) {
    filteredReplaceOptions = filter$1(START_EVENT_SUB_PROCESS, differentType);
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:EndEvent")) {
    filteredReplaceOptions = filter$1(END_EVENT, function(replaceOption) {
      var target2 = replaceOption.target;
      if (target2.eventDefinitionType == "bpmn:CancelEventDefinition" && !is$g(businessObject.$parent, "bpmn:Transaction")) {
        return false;
      }
      return differentType(replaceOption);
    });
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:BoundaryEvent")) {
    filteredReplaceOptions = filter$1(BOUNDARY_EVENT, function(replaceOption) {
      var target2 = replaceOption.target;
      if (target2.eventDefinitionType == "bpmn:CancelEventDefinition" && !is$g(businessObject.attachedToRef, "bpmn:Transaction")) {
        return false;
      }
      var cancelActivity = target2.cancelActivity !== false;
      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;
      return differentType(replaceOption) || !differentType(replaceOption) && !isCancelActivityEqual;
    });
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:IntermediateCatchEvent") || is$g(businessObject, "bpmn:IntermediateThrowEvent")) {
    filteredReplaceOptions = filter$1(INTERMEDIATE_EVENT, differentType);
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:Gateway")) {
    filteredReplaceOptions = filter$1(GATEWAY, differentType);
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:Transaction")) {
    filteredReplaceOptions = filter$1(TRANSACTION, differentType);
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (isEventSubProcess(businessObject) && isExpanded(target)) {
    filteredReplaceOptions = filter$1(EVENT_SUB_PROCESS, differentType);
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:SubProcess") && isExpanded(target)) {
    filteredReplaceOptions = filter$1(SUBPROCESS_EXPANDED, differentType);
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:AdHocSubProcess") && !isExpanded(target)) {
    filteredReplaceOptions = filter$1(TASK, function(replaceOption) {
      var target2 = replaceOption.target;
      var isTargetSubProcess = target2.type === "bpmn:SubProcess";
      var isTargetExpanded = target2.isExpanded === true;
      return isDifferentType(target2) && (!isTargetSubProcess || isTargetExpanded);
    });
    return this._createEntries(target, filteredReplaceOptions);
  }
  if (is$g(businessObject, "bpmn:SequenceFlow")) {
    return this._createSequenceFlowEntries(target, SEQUENCE_FLOW);
  }
  if (is$g(businessObject, "bpmn:FlowNode")) {
    filteredReplaceOptions = filter$1(TASK, differentType);
    if (is$g(businessObject, "bpmn:SubProcess") && !isExpanded(target)) {
      filteredReplaceOptions = filter$1(filteredReplaceOptions, function(replaceOption) {
        return replaceOption.label !== "Sub-process (collapsed)";
      });
    }
    return this._createEntries(target, filteredReplaceOptions);
  }
  return {};
};
ReplaceMenuProvider.prototype.getPopupMenuHeaderEntries = function(target) {
  var headerEntries = {};
  if (is$g(target, "bpmn:Activity") && !isEventSubProcess(target)) {
    headerEntries = {
      ...headerEntries,
      ...this._getLoopCharacteristicsHeaderEntries(target)
    };
  }
  if (is$g(target, "bpmn:DataObjectReference")) {
    headerEntries = {
      ...headerEntries,
      ...this._getCollectionHeaderEntries(target)
    };
  }
  if (is$g(target, "bpmn:Participant")) {
    headerEntries = {
      ...headerEntries,
      ...this._getParticipantMultiplicityHeaderEntries(target)
    };
  }
  if (is$g(target, "bpmn:SubProcess") && !is$g(target, "bpmn:Transaction") && !isEventSubProcess(target)) {
    headerEntries = {
      ...headerEntries,
      ...this._getAdHocHeaderEntries(target)
    };
  }
  if (canBeNonInterrupting(target)) {
    headerEntries = {
      ...headerEntries,
      ...this._getNonInterruptingHeaderEntries(target)
    };
  }
  return headerEntries;
};
ReplaceMenuProvider.prototype._createEntries = function(target, replaceOptions) {
  var entries = {};
  var self2 = this;
  forEach$2(replaceOptions, function(replaceOption) {
    entries[replaceOption.actionName] = self2._createEntry(replaceOption, target);
  });
  return entries;
};
ReplaceMenuProvider.prototype._createSequenceFlowEntries = function(target, replaceOptions) {
  var businessObject = getBusinessObject(target);
  var entries = {};
  var modeling = this._modeling, moddle = this._moddle;
  var self2 = this;
  forEach$2(replaceOptions, function(replaceOption) {
    switch (replaceOption.actionName) {
      case "replace-with-default-flow":
        if (businessObject.sourceRef.default !== businessObject && (is$g(businessObject.sourceRef, "bpmn:ExclusiveGateway") || is$g(businessObject.sourceRef, "bpmn:InclusiveGateway") || is$g(businessObject.sourceRef, "bpmn:ComplexGateway") || is$g(businessObject.sourceRef, "bpmn:Activity"))) {
          entries = {
            ...entries,
            [replaceOption.actionName]: self2._createEntry(replaceOption, target, function() {
              modeling.updateProperties(target.source, { default: businessObject });
            })
          };
        }
        break;
      case "replace-with-conditional-flow":
        if (!businessObject.conditionExpression && is$g(businessObject.sourceRef, "bpmn:Activity")) {
          entries = {
            ...entries,
            [replaceOption.actionName]: self2._createEntry(replaceOption, target, function() {
              var conditionExpression = moddle.create("bpmn:FormalExpression", { body: "" });
              modeling.updateProperties(target, { conditionExpression });
            })
          };
        }
        break;
      default:
        if (is$g(businessObject.sourceRef, "bpmn:Activity") && businessObject.conditionExpression) {
          entries = {
            ...entries,
            [replaceOption.actionName]: self2._createEntry(replaceOption, target, function() {
              modeling.updateProperties(target, { conditionExpression: void 0 });
            })
          };
        }
        if ((is$g(businessObject.sourceRef, "bpmn:ExclusiveGateway") || is$g(businessObject.sourceRef, "bpmn:InclusiveGateway") || is$g(businessObject.sourceRef, "bpmn:ComplexGateway") || is$g(businessObject.sourceRef, "bpmn:Activity")) && businessObject.sourceRef.default === businessObject) {
          entries = {
            ...entries,
            [replaceOption.actionName]: self2._createEntry(replaceOption, target, function() {
              modeling.updateProperties(target.source, { default: void 0 });
            })
          };
        }
    }
  });
  return entries;
};
ReplaceMenuProvider.prototype._createEntry = function(replaceOption, target, action) {
  var translate2 = this._translate;
  var replaceElement = this._bpmnReplace.replaceElement;
  var replaceAction = function() {
    return replaceElement(target, replaceOption.target);
  };
  var label = replaceOption.label;
  if (label && typeof label === "function") {
    label = label(target);
  }
  action = action || replaceAction;
  return {
    label: translate2(label),
    className: replaceOption.className,
    action
  };
};
ReplaceMenuProvider.prototype._getLoopCharacteristicsHeaderEntries = function(target) {
  var self2 = this;
  var translate2 = this._translate;
  function toggleLoopEntry(event2, entry) {
    if (entry.active) {
      self2._modeling.updateProperties(target, { loopCharacteristics: void 0 });
      return;
    }
    const currentLoopCharacteristics = target.businessObject.get("loopCharacteristics"), newLoopCharacteristics = self2._moddle.create(entry.options.loopCharacteristics);
    if (currentLoopCharacteristics) {
      self2._moddleCopy.copyElement(currentLoopCharacteristics, newLoopCharacteristics);
    }
    newLoopCharacteristics.set("isSequential", entry.options.isSequential);
    self2._modeling.updateProperties(target, { loopCharacteristics: newLoopCharacteristics });
  }
  var businessObject = getBusinessObject(target), loopCharacteristics = businessObject.loopCharacteristics;
  var isSequential, isLoop, isParallel;
  if (loopCharacteristics) {
    isSequential = loopCharacteristics.isSequential;
    isLoop = loopCharacteristics.isSequential === void 0;
    isParallel = loopCharacteristics.isSequential !== void 0 && !loopCharacteristics.isSequential;
  }
  return {
    "toggle-parallel-mi": {
      className: "bpmn-icon-parallel-mi-marker",
      title: translate2("Parallel multi-instance"),
      active: isParallel,
      action: toggleLoopEntry,
      options: {
        loopCharacteristics: "bpmn:MultiInstanceLoopCharacteristics",
        isSequential: false
      }
    },
    "toggle-sequential-mi": {
      className: "bpmn-icon-sequential-mi-marker",
      title: translate2("Sequential multi-instance"),
      active: isSequential,
      action: toggleLoopEntry,
      options: {
        loopCharacteristics: "bpmn:MultiInstanceLoopCharacteristics",
        isSequential: true
      }
    },
    "toggle-loop": {
      className: "bpmn-icon-loop-marker",
      title: translate2("Loop"),
      active: isLoop,
      action: toggleLoopEntry,
      options: {
        loopCharacteristics: "bpmn:StandardLoopCharacteristics"
      }
    }
  };
};
ReplaceMenuProvider.prototype._getCollectionHeaderEntries = function(target) {
  var self2 = this;
  var translate2 = this._translate;
  var dataObject = target.businessObject.dataObjectRef;
  if (!dataObject) {
    return {};
  }
  function toggleIsCollection(event2, entry) {
    self2._modeling.updateModdleProperties(
      target,
      dataObject,
      { isCollection: !entry.active }
    );
  }
  var isCollection2 = dataObject.isCollection;
  return {
    "toggle-is-collection": {
      className: "bpmn-icon-parallel-mi-marker",
      title: translate2("Collection"),
      active: isCollection2,
      action: toggleIsCollection
    }
  };
};
ReplaceMenuProvider.prototype._getParticipantMultiplicityHeaderEntries = function(target) {
  var self2 = this;
  var bpmnFactory = this._bpmnFactory;
  var translate2 = this._translate;
  function toggleParticipantMultiplicity(event2, entry) {
    var isActive = entry.active;
    var participantMultiplicity2;
    if (!isActive) {
      participantMultiplicity2 = bpmnFactory.create("bpmn:ParticipantMultiplicity");
    }
    self2._modeling.updateProperties(
      target,
      { participantMultiplicity: participantMultiplicity2 }
    );
  }
  var participantMultiplicity = target.businessObject.participantMultiplicity;
  return {
    "toggle-participant-multiplicity": {
      className: "bpmn-icon-parallel-mi-marker",
      title: translate2("Participant multiplicity"),
      active: !!participantMultiplicity,
      action: toggleParticipantMultiplicity
    }
  };
};
ReplaceMenuProvider.prototype._getAdHocHeaderEntries = function(element) {
  var translate2 = this._translate;
  var businessObject = getBusinessObject(element);
  var isAdHoc = is$g(businessObject, "bpmn:AdHocSubProcess");
  var replaceElement = this._bpmnReplace.replaceElement;
  return {
    "toggle-adhoc": {
      className: "bpmn-icon-ad-hoc-marker",
      title: translate2("Ad-hoc"),
      active: isAdHoc,
      action: function(event2, entry) {
        if (isAdHoc) {
          return replaceElement(element, { type: "bpmn:SubProcess" }, {
            autoResize: false,
            layoutConnection: false
          });
        } else {
          return replaceElement(element, { type: "bpmn:AdHocSubProcess" }, {
            autoResize: false,
            layoutConnection: false
          });
        }
      }
    }
  };
};
ReplaceMenuProvider.prototype._getNonInterruptingHeaderEntries = function(element) {
  const translate2 = this._translate;
  const businessObject = getBusinessObject(element);
  const self2 = this;
  const interruptingProperty = getInterruptingProperty(element);
  const icon = is$g(element, "bpmn:BoundaryEvent") ? Icons["intermediate-event-non-interrupting"] : Icons["start-event-non-interrupting"];
  const isNonInterrupting = !businessObject[interruptingProperty];
  return {
    "toggle-non-interrupting": {
      imageHtml: icon,
      title: translate2("Toggle non-interrupting"),
      active: isNonInterrupting,
      action: function() {
        self2._modeling.updateProperties(element, {
          [interruptingProperty]: !!isNonInterrupting
        });
      }
    }
  };
};
const PopupMenuModule = {
  __depends__: [
    PopupMenuModule$1,
    ReplaceModule,
    AutoPlaceModule
  ],
  __init__: [
    "replaceMenuProvider"
  ],
  replaceMenuProvider: ["type", ReplaceMenuProvider]
};
function ContextPadProvider(config2, injector, eventBus, contextPad, modeling, elementFactory, connect, create2, popupMenu, canvas, rules2, translate2, appendPreview) {
  config2 = config2 || {};
  contextPad.registerProvider(this);
  this._contextPad = contextPad;
  this._modeling = modeling;
  this._elementFactory = elementFactory;
  this._connect = connect;
  this._create = create2;
  this._popupMenu = popupMenu;
  this._canvas = canvas;
  this._rules = rules2;
  this._translate = translate2;
  this._eventBus = eventBus;
  this._appendPreview = appendPreview;
  if (config2.autoPlace !== false) {
    this._autoPlace = injector.get("autoPlace", false);
  }
  eventBus.on("create.end", 250, function(event2) {
    var context = event2.context, shape = context.shape;
    if (!hasPrimaryModifier(event2) || !contextPad.isOpen(shape)) {
      return;
    }
    var entries = contextPad.getEntries(shape);
    if (entries.replace) {
      entries.replace.action.click(event2, shape);
    }
  });
  eventBus.on("contextPad.close", function() {
    appendPreview.cleanUp();
  });
}
ContextPadProvider.$inject = [
  "config.contextPad",
  "injector",
  "eventBus",
  "contextPad",
  "modeling",
  "elementFactory",
  "connect",
  "create",
  "popupMenu",
  "canvas",
  "rules",
  "translate",
  "appendPreview"
];
ContextPadProvider.prototype.getMultiElementContextPadEntries = function(elements) {
  var modeling = this._modeling;
  var actions = {};
  if (this._isDeleteAllowed(elements)) {
    assign$2(actions, {
      "delete": {
        group: "edit",
        className: "bpmn-icon-trash",
        title: this._translate("Delete"),
        action: {
          click: function(event2, elements2) {
            modeling.removeElements(elements2.slice());
          }
        }
      }
    });
  }
  return actions;
};
ContextPadProvider.prototype._isDeleteAllowed = function(elements) {
  var baseAllowed = this._rules.allowed("elements.delete", {
    elements
  });
  if (isArray$3(baseAllowed)) {
    return every$1(baseAllowed, function(element) {
      return includes$1(baseAllowed, element);
    });
  }
  return baseAllowed;
};
ContextPadProvider.prototype.getContextPadEntries = function(element) {
  var contextPad = this._contextPad, modeling = this._modeling, elementFactory = this._elementFactory, connect = this._connect, create2 = this._create, popupMenu = this._popupMenu, rules2 = this._rules, autoPlace = this._autoPlace, translate2 = this._translate, appendPreview = this._appendPreview;
  var actions = {};
  if (element.type === "label") {
    return actions;
  }
  var businessObject = element.businessObject;
  function startConnect(event2, element2) {
    connect.start(event2, element2);
  }
  function removeElement2(e2, element2) {
    modeling.removeElements([element2]);
  }
  function getReplaceMenuPosition(element2) {
    var Y_OFFSET = 5;
    var pad = contextPad.getPad(element2).html;
    var padRect = pad.getBoundingClientRect();
    var pos = {
      x: padRect.left,
      y: padRect.bottom + Y_OFFSET
    };
    return pos;
  }
  function appendAction(type, className, title, options) {
    function appendStart(event2, element2) {
      var shape = elementFactory.createShape(assign$2({ type }, options));
      create2.start(event2, shape, {
        source: element2
      });
    }
    var append2 = autoPlace ? function(_2, element2) {
      var shape = elementFactory.createShape(assign$2({ type }, options));
      autoPlace.append(element2, shape);
    } : appendStart;
    var previewAppend = autoPlace ? function(_2, element2) {
      appendPreview.create(element2, type, options);
      return () => {
        appendPreview.cleanUp();
      };
    } : null;
    return {
      group: "model",
      className,
      title,
      action: {
        dragstart: appendStart,
        click: append2,
        hover: previewAppend
      }
    };
  }
  function splitLaneHandler(count) {
    return function(_2, element2) {
      modeling.splitLane(element2, count);
      contextPad.open(element2, true);
    };
  }
  if (isAny$7(businessObject, ["bpmn:Lane", "bpmn:Participant"]) && isExpanded(element)) {
    var childLanes = getChildLanes(element);
    assign$2(actions, {
      "lane-insert-above": {
        group: "lane-insert-above",
        className: "bpmn-icon-lane-insert-above",
        title: translate2("Add lane above"),
        action: {
          click: function(event2, element2) {
            modeling.addLane(element2, "top");
          }
        }
      }
    });
    if (childLanes.length < 2) {
      if (isHorizontal$3(element) ? element.height >= 120 : element.width >= 120) {
        assign$2(actions, {
          "lane-divide-two": {
            group: "lane-divide",
            className: "bpmn-icon-lane-divide-two",
            title: translate2("Divide into two lanes"),
            action: {
              click: splitLaneHandler(2)
            }
          }
        });
      }
      if (isHorizontal$3(element) ? element.height >= 180 : element.width >= 180) {
        assign$2(actions, {
          "lane-divide-three": {
            group: "lane-divide",
            className: "bpmn-icon-lane-divide-three",
            title: translate2("Divide into three lanes"),
            action: {
              click: splitLaneHandler(3)
            }
          }
        });
      }
    }
    assign$2(actions, {
      "lane-insert-below": {
        group: "lane-insert-below",
        className: "bpmn-icon-lane-insert-below",
        title: translate2("Add lane below"),
        action: {
          click: function(event2, element2) {
            modeling.addLane(element2, "bottom");
          }
        }
      }
    });
  }
  if (is$g(businessObject, "bpmn:FlowNode")) {
    if (is$g(businessObject, "bpmn:EventBasedGateway")) {
      assign$2(actions, {
        "append.receive-task": appendAction(
          "bpmn:ReceiveTask",
          "bpmn-icon-receive-task",
          translate2("Append receive task")
        ),
        "append.message-intermediate-event": appendAction(
          "bpmn:IntermediateCatchEvent",
          "bpmn-icon-intermediate-event-catch-message",
          translate2("Append message intermediate catch event"),
          { eventDefinitionType: "bpmn:MessageEventDefinition" }
        ),
        "append.timer-intermediate-event": appendAction(
          "bpmn:IntermediateCatchEvent",
          "bpmn-icon-intermediate-event-catch-timer",
          translate2("Append timer intermediate catch event"),
          { eventDefinitionType: "bpmn:TimerEventDefinition" }
        ),
        "append.condition-intermediate-event": appendAction(
          "bpmn:IntermediateCatchEvent",
          "bpmn-icon-intermediate-event-catch-condition",
          translate2("Append conditional intermediate catch event"),
          { eventDefinitionType: "bpmn:ConditionalEventDefinition" }
        ),
        "append.signal-intermediate-event": appendAction(
          "bpmn:IntermediateCatchEvent",
          "bpmn-icon-intermediate-event-catch-signal",
          translate2("Append signal intermediate catch event"),
          { eventDefinitionType: "bpmn:SignalEventDefinition" }
        )
      });
    } else if (isEventType(businessObject, "bpmn:BoundaryEvent", "bpmn:CompensateEventDefinition")) {
      assign$2(actions, {
        "append.compensation-activity": appendAction(
          "bpmn:Task",
          "bpmn-icon-task",
          translate2("Append compensation activity"),
          {
            isForCompensation: true
          }
        )
      });
    } else if (!is$g(businessObject, "bpmn:EndEvent") && !businessObject.isForCompensation && !isEventType(businessObject, "bpmn:IntermediateThrowEvent", "bpmn:LinkEventDefinition") && !isEventSubProcess(businessObject)) {
      assign$2(actions, {
        "append.end-event": appendAction(
          "bpmn:EndEvent",
          "bpmn-icon-end-event-none",
          translate2("Append end event")
        ),
        "append.gateway": appendAction(
          "bpmn:ExclusiveGateway",
          "bpmn-icon-gateway-none",
          translate2("Append gateway")
        ),
        "append.append-task": appendAction(
          "bpmn:Task",
          "bpmn-icon-task",
          translate2("Append task")
        ),
        "append.intermediate-event": appendAction(
          "bpmn:IntermediateThrowEvent",
          "bpmn-icon-intermediate-event-none",
          translate2("Append intermediate/boundary event")
        )
      });
    }
  }
  if (!popupMenu.isEmpty(element, "bpmn-replace")) {
    assign$2(actions, {
      "replace": {
        group: "edit",
        className: "bpmn-icon-screw-wrench",
        title: translate2("Change element"),
        action: {
          click: function(event2, element2) {
            var position = assign$2(getReplaceMenuPosition(element2), {
              cursor: { x: event2.x, y: event2.y }
            });
            popupMenu.open(element2, "bpmn-replace", position, {
              title: translate2("Change element"),
              width: 300,
              search: true
            });
          }
        }
      }
    });
  }
  if (is$g(businessObject, "bpmn:SequenceFlow")) {
    assign$2(actions, {
      "append.text-annotation": appendAction(
        "bpmn:TextAnnotation",
        "bpmn-icon-text-annotation",
        translate2("Add text annotation")
      )
    });
  }
  if (isAny$7(businessObject, [
    "bpmn:FlowNode",
    "bpmn:InteractionNode",
    "bpmn:DataObjectReference",
    "bpmn:DataStoreReference"
  ])) {
    assign$2(actions, {
      "append.text-annotation": appendAction(
        "bpmn:TextAnnotation",
        "bpmn-icon-text-annotation",
        translate2("Add text annotation")
      ),
      "connect": {
        group: "connect",
        className: "bpmn-icon-connection-multi",
        title: translate2("Connect to other element"),
        action: {
          click: startConnect,
          dragstart: startConnect
        }
      }
    });
  }
  if (is$g(businessObject, "bpmn:TextAnnotation")) {
    assign$2(actions, {
      "connect": {
        group: "connect",
        className: "bpmn-icon-connection-multi",
        title: translate2("Connect using association"),
        action: {
          click: startConnect,
          dragstart: startConnect
        }
      }
    });
  }
  if (isAny$7(businessObject, ["bpmn:DataObjectReference", "bpmn:DataStoreReference"])) {
    assign$2(actions, {
      "connect": {
        group: "connect",
        className: "bpmn-icon-connection-multi",
        title: translate2("Connect using data input association"),
        action: {
          click: startConnect,
          dragstart: startConnect
        }
      }
    });
  }
  if (is$g(businessObject, "bpmn:Group")) {
    assign$2(actions, {
      "append.text-annotation": appendAction(
        "bpmn:TextAnnotation",
        "bpmn-icon-text-annotation",
        translate2("Add text annotation")
      )
    });
  }
  var deleteAllowed = rules2.allowed("elements.delete", { elements: [element] });
  if (isArray$3(deleteAllowed)) {
    deleteAllowed = deleteAllowed[0] === element;
  }
  if (deleteAllowed) {
    assign$2(actions, {
      "delete": {
        group: "edit",
        className: "bpmn-icon-trash",
        title: translate2("Delete"),
        action: {
          click: removeElement2
        }
      }
    });
  }
  return actions;
};
function isEventType(businessObject, type, eventDefinitionType) {
  var isType2 = businessObject.$instanceOf(type);
  var isDefinition = false;
  var definitions = businessObject.eventDefinitions || [];
  forEach$2(definitions, function(def) {
    if (def.$type === eventDefinitionType) {
      isDefinition = true;
    }
  });
  return isType2 && isDefinition;
}
function includes$1(array, item) {
  return array.indexOf(item) !== -1;
}
const ContextPadModule = {
  __depends__: [
    AppendPreviewModule,
    DirectEditingModule,
    ContextPadModule$1,
    SelectionModule,
    ConnectModule,
    CreateModule,
    PopupMenuModule
  ],
  __init__: ["contextPadProvider"],
  contextPadProvider: ["type", ContextPadProvider]
};
var AXIS_DIMENSIONS = {
  horizontal: ["x", "width"],
  vertical: ["y", "height"]
};
var THRESHOLD = 5;
function DistributeElements(modeling, rules2) {
  this._modeling = modeling;
  this._filters = [];
  this.registerFilter(function(elements) {
    var allowed = rules2.allowed("elements.distribute", { elements });
    if (isArray$3(allowed)) {
      return allowed;
    }
    return allowed ? elements : [];
  });
}
DistributeElements.$inject = ["modeling", "rules"];
DistributeElements.prototype.registerFilter = function(filterFn) {
  if (typeof filterFn !== "function") {
    throw new Error("the filter has to be a function");
  }
  this._filters.push(filterFn);
};
DistributeElements.prototype.trigger = function(elements, orientation) {
  var modeling = this._modeling;
  var groups, distributableElements;
  if (elements.length < 3) {
    return;
  }
  this._setOrientation(orientation);
  distributableElements = this._filterElements(elements);
  groups = this._createGroups(distributableElements);
  if (groups.length <= 2) {
    return;
  }
  modeling.distributeElements(groups, this._axis, this._dimension);
  return groups;
};
DistributeElements.prototype._filterElements = function(elements) {
  var filters = this._filters, axis = this._axis, dimension = this._dimension, distributableElements = [].concat(elements);
  if (!filters.length) {
    return elements;
  }
  forEach$2(filters, function(filterFn) {
    distributableElements = filterFn(distributableElements, axis, dimension);
  });
  return distributableElements;
};
DistributeElements.prototype._createGroups = function(elements) {
  var rangeGroups = [], self2 = this, axis = this._axis, dimension = this._dimension;
  if (!axis) {
    throw new Error('must have a defined "axis" and "dimension"');
  }
  var sortedElements = sortBy$1(elements, axis);
  forEach$2(sortedElements, function(element, idx) {
    var elementRange = self2._findRange(element, axis, dimension), range;
    var previous = rangeGroups[rangeGroups.length - 1];
    if (previous && self2._hasIntersection(previous.range, elementRange)) {
      rangeGroups[rangeGroups.length - 1].elements.push(element);
    } else {
      range = { range: elementRange, elements: [element] };
      rangeGroups.push(range);
    }
  });
  return rangeGroups;
};
DistributeElements.prototype._setOrientation = function(direction) {
  var orientation = AXIS_DIMENSIONS[direction];
  this._axis = orientation[0];
  this._dimension = orientation[1];
};
DistributeElements.prototype._hasIntersection = function(rangeA, rangeB) {
  return Math.max(rangeA.min, rangeA.max) >= Math.min(rangeB.min, rangeB.max) && Math.min(rangeA.min, rangeA.max) <= Math.max(rangeB.min, rangeB.max);
};
DistributeElements.prototype._findRange = function(element) {
  var axis = element[this._axis], dimension = element[this._dimension];
  return {
    min: axis + THRESHOLD,
    max: axis + dimension - THRESHOLD
  };
};
const DistributeElementsModule$1 = {
  __init__: ["distributeElements"],
  distributeElements: ["type", DistributeElements]
};
function BpmnDistributeElements(eventBus) {
  RuleProvider.call(this, eventBus);
}
BpmnDistributeElements.$inject = ["eventBus"];
e$3(BpmnDistributeElements, RuleProvider);
BpmnDistributeElements.prototype.init = function() {
  this.addRule("elements.distribute", function(context) {
    var elements = context.elements;
    elements = filter$1(elements, function(element) {
      var cannotDistribute = isAny$7(element, [
        "bpmn:Association",
        "bpmn:BoundaryEvent",
        "bpmn:DataInputAssociation",
        "bpmn:DataOutputAssociation",
        "bpmn:Lane",
        "bpmn:MessageFlow",
        "bpmn:SequenceFlow",
        "bpmn:TextAnnotation"
      ]);
      return !(element.labelTarget || cannotDistribute);
    });
    elements = getParents$1(elements);
    if (elements.length < 3) {
      return false;
    }
    return elements;
  });
};
var icons = {
  horizontal: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
                <polyline points="450 400 450 150 1350 150 1350 400" style="fill:none;stroke:currentColor;stroke-width:100;stroke-linejoin:round;"/>
                <rect x="150" y="450" width="600" height="1200" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
                <rect x="1050" y="450" width="600" height="800" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
              </svg>`,
  vertical: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1800 1800">
              <polyline points="400 1350 150 1350 150 450 400 450" style="fill:none;stroke:currentColor;stroke-width:100;stroke-linejoin:round;"/>
              <rect x="450" y="150" width="1200" height="600" rx="1" style="fill:none;stroke:currentColor;stroke-width:100;"></rect>
              <rect x="450" y="1050" width="800" height="600" rx="1" style="fill:currentColor;stroke:currentColor;stroke-width:100;opacity:.5;"></rect>
            </svg>`
};
var LOW_PRIORITY$6 = 900;
function DistributeElementsMenuProvider(popupMenu, distributeElements, translate2, rules2) {
  this._distributeElements = distributeElements;
  this._translate = translate2;
  this._popupMenu = popupMenu;
  this._rules = rules2;
  popupMenu.registerProvider("align-elements", LOW_PRIORITY$6, this);
}
DistributeElementsMenuProvider.$inject = [
  "popupMenu",
  "distributeElements",
  "translate",
  "rules"
];
DistributeElementsMenuProvider.prototype.getPopupMenuEntries = function(target) {
  var entries = {};
  if (this._isAllowed(target)) {
    assign$2(entries, this._getEntries(target));
  }
  return entries;
};
DistributeElementsMenuProvider.prototype._isAllowed = function(elements) {
  return this._rules.allowed("elements.distribute", { elements });
};
DistributeElementsMenuProvider.prototype._getEntries = function(elements) {
  var distributeElements = this._distributeElements, translate2 = this._translate, popupMenu = this._popupMenu;
  var entries = {
    "distribute-elements-horizontal": {
      group: "distribute",
      title: translate2("Distribute elements horizontally"),
      className: "bjs-align-elements-menu-entry",
      imageHtml: icons["horizontal"],
      action: function(event2, entry) {
        distributeElements.trigger(elements, "horizontal");
        popupMenu.close();
      }
    },
    "distribute-elements-vertical": {
      group: "distribute",
      title: translate2("Distribute elements vertically"),
      imageHtml: icons["vertical"],
      action: function(event2, entry) {
        distributeElements.trigger(elements, "vertical");
        popupMenu.close();
      }
    }
  };
  return entries;
};
const DistributeElementsModule = {
  __depends__: [
    PopupMenuModule$1,
    DistributeElementsModule$1
  ],
  __init__: [
    "bpmnDistributeElements",
    "distributeElementsMenuProvider"
  ],
  bpmnDistributeElements: ["type", BpmnDistributeElements],
  distributeElementsMenuProvider: ["type", DistributeElementsMenuProvider]
};
var NOT_REGISTERED_ERROR = "is not a registered action", IS_REGISTERED_ERROR = "is already registered";
function EditorActions(eventBus, injector) {
  this._actions = {};
  var self2 = this;
  eventBus.on("diagram.init", function() {
    self2._registerDefaultActions(injector);
    eventBus.fire("editorActions.init", {
      editorActions: self2
    });
  });
}
EditorActions.$inject = [
  "eventBus",
  "injector"
];
EditorActions.prototype._registerDefaultActions = function(injector) {
  var commandStack = injector.get("commandStack", false);
  var modeling = injector.get("modeling", false);
  var selection = injector.get("selection", false);
  var zoomScroll = injector.get("zoomScroll", false);
  var copyPaste = injector.get("copyPaste", false);
  var canvas = injector.get("canvas", false);
  var rules2 = injector.get("rules", false);
  var keyboardMove = injector.get("keyboardMove", false);
  var keyboardMoveSelection = injector.get("keyboardMoveSelection", false);
  if (commandStack) {
    this.register("undo", function() {
      commandStack.undo();
    });
    this.register("redo", function() {
      commandStack.redo();
    });
  }
  if (copyPaste && selection) {
    this.register("copy", function() {
      var selectedElements = selection.get();
      if (selectedElements.length) {
        return copyPaste.copy(selectedElements);
      }
    });
  }
  if (copyPaste) {
    this.register("paste", function() {
      copyPaste.paste();
    });
  }
  if (zoomScroll) {
    this.register("stepZoom", function(opts) {
      zoomScroll.stepZoom(opts.value);
    });
  }
  if (canvas) {
    this.register("zoom", function(opts) {
      canvas.zoom(opts.value);
    });
  }
  if (modeling && selection && rules2) {
    this.register("removeSelection", function() {
      var selectedElements = selection.get();
      if (!selectedElements.length) {
        return;
      }
      var allowed = rules2.allowed("elements.delete", { elements: selectedElements }), removableElements;
      if (allowed === false) {
        return;
      } else if (isArray$3(allowed)) {
        removableElements = allowed;
      } else {
        removableElements = selectedElements;
      }
      if (removableElements.length) {
        modeling.removeElements(removableElements.slice());
      }
    });
  }
  if (keyboardMove) {
    this.register("moveCanvas", function(opts) {
      keyboardMove.moveCanvas(opts);
    });
  }
  if (keyboardMoveSelection) {
    this.register("moveSelection", function(opts) {
      keyboardMoveSelection.moveSelection(opts.direction, opts.accelerated);
    });
  }
};
EditorActions.prototype.trigger = function(action, opts) {
  if (!this._actions[action]) {
    throw error$1(action, NOT_REGISTERED_ERROR);
  }
  return this._actions[action](opts);
};
EditorActions.prototype.register = function(actions, listener) {
  var self2 = this;
  if (typeof actions === "string") {
    return this._registerAction(actions, listener);
  }
  forEach$2(actions, function(listener2, action) {
    self2._registerAction(action, listener2);
  });
};
EditorActions.prototype._registerAction = function(action, listener) {
  if (this.isRegistered(action)) {
    throw error$1(action, IS_REGISTERED_ERROR);
  }
  this._actions[action] = listener;
};
EditorActions.prototype.unregister = function(action) {
  if (!this.isRegistered(action)) {
    throw error$1(action, NOT_REGISTERED_ERROR);
  }
  this._actions[action] = void 0;
};
EditorActions.prototype.getActions = function() {
  return Object.keys(this._actions);
};
EditorActions.prototype.isRegistered = function(action) {
  return !!this._actions[action];
};
function error$1(action, message) {
  return new Error(action + " " + message);
}
const EditorActionsModule$1 = {
  __init__: ["editorActions"],
  editorActions: ["type", EditorActions]
};
function BpmnEditorActions(injector) {
  injector.invoke(EditorActions, this);
}
e$3(BpmnEditorActions, EditorActions);
BpmnEditorActions.$inject = [
  "injector"
];
BpmnEditorActions.prototype._registerDefaultActions = function(injector) {
  EditorActions.prototype._registerDefaultActions.call(this, injector);
  var canvas = injector.get("canvas", false);
  var elementRegistry = injector.get("elementRegistry", false);
  var selection = injector.get("selection", false);
  var spaceTool = injector.get("spaceTool", false);
  var lassoTool = injector.get("lassoTool", false);
  var handTool = injector.get("handTool", false);
  var globalConnect = injector.get("globalConnect", false);
  var distributeElements = injector.get("distributeElements", false);
  var alignElements = injector.get("alignElements", false);
  var directEditing = injector.get("directEditing", false);
  var searchPad = injector.get("searchPad", false);
  var modeling = injector.get("modeling", false);
  var contextPad = injector.get("contextPad", false);
  if (canvas && elementRegistry && selection) {
    this._registerAction("selectElements", function() {
      var rootElement = canvas.getRootElement();
      var elements = elementRegistry.filter(function(element) {
        return element !== rootElement;
      });
      selection.select(elements);
      return elements;
    });
  }
  if (spaceTool) {
    this._registerAction("spaceTool", function() {
      spaceTool.toggle();
    });
  }
  if (lassoTool) {
    this._registerAction("lassoTool", function() {
      lassoTool.toggle();
    });
  }
  if (handTool) {
    this._registerAction("handTool", function() {
      handTool.toggle();
    });
  }
  if (globalConnect) {
    this._registerAction("globalConnectTool", function() {
      globalConnect.toggle();
    });
  }
  if (selection && distributeElements) {
    this._registerAction("distributeElements", function(opts) {
      var currentSelection = selection.get(), type = opts.type;
      if (currentSelection.length) {
        distributeElements.trigger(currentSelection, type);
      }
    });
  }
  if (selection && alignElements) {
    this._registerAction("alignElements", function(opts) {
      var currentSelection = selection.get(), aligneableElements = [], type = opts.type;
      if (currentSelection.length) {
        aligneableElements = filter$1(currentSelection, function(element) {
          return !is$g(element, "bpmn:Lane");
        });
        alignElements.trigger(aligneableElements, type);
      }
    });
  }
  if (selection && modeling) {
    this._registerAction("setColor", function(opts) {
      var currentSelection = selection.get();
      if (currentSelection.length) {
        modeling.setColor(currentSelection, opts);
      }
    });
  }
  if (selection && directEditing) {
    this._registerAction("directEditing", function() {
      var currentSelection = selection.get();
      if (currentSelection.length) {
        directEditing.activate(currentSelection[0]);
      }
    });
  }
  if (searchPad) {
    this._registerAction("find", function() {
      searchPad.toggle();
    });
  }
  if (canvas && modeling) {
    this._registerAction("moveToOrigin", function() {
      var rootElement = canvas.getRootElement(), boundingBox, elements;
      if (is$g(rootElement, "bpmn:Collaboration")) {
        elements = elementRegistry.filter(function(element) {
          return is$g(element.parent, "bpmn:Collaboration");
        });
      } else {
        elements = elementRegistry.filter(function(element) {
          return element !== rootElement && !is$g(element.parent, "bpmn:SubProcess");
        });
      }
      boundingBox = getBBox(elements);
      modeling.moveElements(
        elements,
        { x: -boundingBox.x, y: -boundingBox.y },
        rootElement
      );
    });
  }
  if (selection && contextPad) {
    this._registerAction("replaceElement", function(event2) {
      contextPad.triggerEntry("replace", "click", event2);
    });
  }
};
const EditorActionsModule = {
  __depends__: [
    EditorActionsModule$1
  ],
  editorActions: ["type", BpmnEditorActions]
};
function BpmnGridSnapping(eventBus) {
  eventBus.on([
    "create.init",
    "shape.move.init"
  ], function(event2) {
    var context = event2.context, shape = event2.shape;
    if (isAny$7(shape, [
      "bpmn:Participant",
      "bpmn:SubProcess",
      "bpmn:TextAnnotation"
    ])) {
      if (!context.gridSnappingContext) {
        context.gridSnappingContext = {};
      }
      context.gridSnappingContext.snapLocation = "top-left";
    }
  });
}
BpmnGridSnapping.$inject = ["eventBus"];
var SPACING = 10;
function quantize(value, quantum, fn) {
  if (!fn) {
    fn = "round";
  }
  return Math[fn](value / quantum) * quantum;
}
var LOWER_PRIORITY = 1200;
var LOW_PRIORITY$5 = 800;
function GridSnapping(elementRegistry, eventBus, config2) {
  var active = !config2 || config2.active !== false;
  this._eventBus = eventBus;
  var self2 = this;
  eventBus.on("diagram.init", LOW_PRIORITY$5, function() {
    self2.setActive(active);
  });
  eventBus.on([
    "create.move",
    "create.end",
    "bendpoint.move.move",
    "bendpoint.move.end",
    "connect.move",
    "connect.end",
    "connectionSegment.move.move",
    "connectionSegment.move.end",
    "resize.move",
    "resize.end",
    "shape.move.move",
    "shape.move.end"
  ], LOWER_PRIORITY, function(event2) {
    var originalEvent = event2.originalEvent;
    if (!self2.active || originalEvent && isCmd(originalEvent)) {
      return;
    }
    var context = event2.context, gridSnappingContext = context.gridSnappingContext;
    if (!gridSnappingContext) {
      gridSnappingContext = context.gridSnappingContext = {};
    }
    ["x", "y"].forEach(function(axis) {
      var options = {};
      var snapOffset = getSnapOffset(event2, axis, elementRegistry);
      if (snapOffset) {
        options.offset = snapOffset;
      }
      var snapConstraints = getSnapConstraints(event2, axis);
      if (snapConstraints) {
        assign$2(options, snapConstraints);
      }
      if (!isSnapped(event2, axis)) {
        self2.snapEvent(event2, axis, options);
      }
    });
  });
}
GridSnapping.prototype.snapEvent = function(event2, axis, options) {
  var snappedValue = this.snapValue(event2[axis], options);
  setSnapped(event2, axis, snappedValue);
};
GridSnapping.prototype.getGridSpacing = function() {
  return SPACING;
};
GridSnapping.prototype.snapValue = function(value, options) {
  var offset = 0;
  if (options && options.offset) {
    offset = options.offset;
  }
  value += offset;
  value = quantize(value, SPACING);
  var min2, max2;
  if (options && options.min) {
    min2 = options.min;
    if (isNumber$1(min2)) {
      min2 = quantize(min2 + offset, SPACING, "ceil");
      value = Math.max(value, min2);
    }
  }
  if (options && options.max) {
    max2 = options.max;
    if (isNumber$1(max2)) {
      max2 = quantize(max2 + offset, SPACING, "floor");
      value = Math.min(value, max2);
    }
  }
  value -= offset;
  return value;
};
GridSnapping.prototype.isActive = function() {
  return this.active;
};
GridSnapping.prototype.setActive = function(active) {
  this.active = active;
  this._eventBus.fire("gridSnapping.toggle", { active });
};
GridSnapping.prototype.toggleActive = function() {
  this.setActive(!this.active);
};
GridSnapping.$inject = [
  "elementRegistry",
  "eventBus",
  "config.gridSnapping"
];
function getSnapConstraints(event2, axis) {
  var context = event2.context, createConstraints = context.createConstraints, resizeConstraints = context.resizeConstraints || {}, gridSnappingContext = context.gridSnappingContext, snapConstraints = gridSnappingContext.snapConstraints;
  if (snapConstraints && snapConstraints[axis]) {
    return snapConstraints[axis];
  }
  if (!snapConstraints) {
    snapConstraints = gridSnappingContext.snapConstraints = {};
  }
  if (!snapConstraints[axis]) {
    snapConstraints[axis] = {};
  }
  var direction = context.direction;
  if (createConstraints) {
    if (isHorizontal$2(axis)) {
      snapConstraints.x.min = createConstraints.left;
      snapConstraints.x.max = createConstraints.right;
    } else {
      snapConstraints.y.min = createConstraints.top;
      snapConstraints.y.max = createConstraints.bottom;
    }
  }
  var minResizeConstraints = resizeConstraints.min, maxResizeConstraints = resizeConstraints.max;
  if (minResizeConstraints) {
    if (isHorizontal$2(axis)) {
      if (isWest(direction)) {
        snapConstraints.x.max = minResizeConstraints.left;
      } else {
        snapConstraints.x.min = minResizeConstraints.right;
      }
    } else {
      if (isNorth(direction)) {
        snapConstraints.y.max = minResizeConstraints.top;
      } else {
        snapConstraints.y.min = minResizeConstraints.bottom;
      }
    }
  }
  if (maxResizeConstraints) {
    if (isHorizontal$2(axis)) {
      if (isWest(direction)) {
        snapConstraints.x.min = maxResizeConstraints.left;
      } else {
        snapConstraints.x.max = maxResizeConstraints.right;
      }
    } else {
      if (isNorth(direction)) {
        snapConstraints.y.min = maxResizeConstraints.top;
      } else {
        snapConstraints.y.max = maxResizeConstraints.bottom;
      }
    }
  }
  return snapConstraints[axis];
}
function getSnapOffset(event2, axis, elementRegistry) {
  var context = event2.context, shape = event2.shape, gridSnappingContext = context.gridSnappingContext, snapLocation = gridSnappingContext.snapLocation, snapOffset = gridSnappingContext.snapOffset;
  if (snapOffset && isNumber$1(snapOffset[axis])) {
    return snapOffset[axis];
  }
  if (!snapOffset) {
    snapOffset = gridSnappingContext.snapOffset = {};
  }
  if (!isNumber$1(snapOffset[axis])) {
    snapOffset[axis] = 0;
  }
  if (!shape) {
    return snapOffset[axis];
  }
  if (!elementRegistry.get(shape.id)) {
    if (isHorizontal$2(axis)) {
      snapOffset[axis] += shape[axis] + shape.width / 2;
    } else {
      snapOffset[axis] += shape[axis] + shape.height / 2;
    }
  }
  if (!snapLocation) {
    return snapOffset[axis];
  }
  if (axis === "x") {
    if (/left/.test(snapLocation)) {
      snapOffset[axis] -= shape.width / 2;
    } else if (/right/.test(snapLocation)) {
      snapOffset[axis] += shape.width / 2;
    }
  } else {
    if (/top/.test(snapLocation)) {
      snapOffset[axis] -= shape.height / 2;
    } else if (/bottom/.test(snapLocation)) {
      snapOffset[axis] += shape.height / 2;
    }
  }
  return snapOffset[axis];
}
function isHorizontal$2(axis) {
  return axis === "x";
}
function isNorth(direction) {
  return direction.indexOf("n") !== -1;
}
function isWest(direction) {
  return direction.indexOf("w") !== -1;
}
function ResizeBehavior(eventBus, gridSnapping) {
  CommandInterceptor.call(this, eventBus);
  this._gridSnapping = gridSnapping;
  var self2 = this;
  this.preExecute("shape.resize", function(event2) {
    var context = event2.context, hints = context.hints || {}, autoResize = hints.autoResize;
    if (!autoResize) {
      return;
    }
    var shape = context.shape, newBounds = context.newBounds;
    if (isString$1(autoResize)) {
      context.newBounds = self2.snapComplex(newBounds, autoResize);
    } else {
      context.newBounds = self2.snapSimple(shape, newBounds);
    }
  });
}
ResizeBehavior.$inject = [
  "eventBus",
  "gridSnapping",
  "modeling"
];
e$3(ResizeBehavior, CommandInterceptor);
ResizeBehavior.prototype.snapSimple = function(shape, newBounds) {
  var gridSnapping = this._gridSnapping;
  newBounds.width = gridSnapping.snapValue(newBounds.width, {
    min: newBounds.width
  });
  newBounds.height = gridSnapping.snapValue(newBounds.height, {
    min: newBounds.height
  });
  newBounds.x = shape.x + shape.width / 2 - newBounds.width / 2;
  newBounds.y = shape.y + shape.height / 2 - newBounds.height / 2;
  return newBounds;
};
ResizeBehavior.prototype.snapComplex = function(newBounds, directions2) {
  if (/w|e/.test(directions2)) {
    newBounds = this.snapHorizontally(newBounds, directions2);
  }
  if (/n|s/.test(directions2)) {
    newBounds = this.snapVertically(newBounds, directions2);
  }
  return newBounds;
};
ResizeBehavior.prototype.snapHorizontally = function(newBounds, directions2) {
  var gridSnapping = this._gridSnapping, west = /w/.test(directions2), east = /e/.test(directions2);
  var snappedNewBounds = {};
  snappedNewBounds.width = gridSnapping.snapValue(newBounds.width, {
    min: newBounds.width
  });
  if (east) {
    if (west) {
      snappedNewBounds.x = gridSnapping.snapValue(newBounds.x, {
        max: newBounds.x
      });
      snappedNewBounds.width += gridSnapping.snapValue(newBounds.x - snappedNewBounds.x, {
        min: newBounds.x - snappedNewBounds.x
      });
    } else {
      newBounds.x = newBounds.x + newBounds.width - snappedNewBounds.width;
    }
  }
  assign$2(newBounds, snappedNewBounds);
  return newBounds;
};
ResizeBehavior.prototype.snapVertically = function(newBounds, directions2) {
  var gridSnapping = this._gridSnapping, north = /n/.test(directions2), south = /s/.test(directions2);
  var snappedNewBounds = {};
  snappedNewBounds.height = gridSnapping.snapValue(newBounds.height, {
    min: newBounds.height
  });
  if (north) {
    if (south) {
      snappedNewBounds.y = gridSnapping.snapValue(newBounds.y, {
        max: newBounds.y
      });
      snappedNewBounds.height += gridSnapping.snapValue(newBounds.y - snappedNewBounds.y, {
        min: newBounds.y - snappedNewBounds.y
      });
    } else {
      newBounds.y = newBounds.y + newBounds.height - snappedNewBounds.height;
    }
  }
  assign$2(newBounds, snappedNewBounds);
  return newBounds;
};
var HIGH_PRIORITY$6 = 2e3;
function SpaceToolBehavior(eventBus, gridSnapping) {
  eventBus.on([
    "spaceTool.move",
    "spaceTool.end"
  ], HIGH_PRIORITY$6, function(event2) {
    var context = event2.context;
    if (!context.initialized) {
      return;
    }
    var axis = context.axis;
    var snapped;
    if (axis === "x") {
      snapped = gridSnapping.snapValue(event2.dx);
      event2.x = event2.x + snapped - event2.dx;
      event2.dx = snapped;
    } else {
      snapped = gridSnapping.snapValue(event2.dy);
      event2.y = event2.y + snapped - event2.dy;
      event2.dy = snapped;
    }
  });
}
SpaceToolBehavior.$inject = [
  "eventBus",
  "gridSnapping"
];
const GridSnappingBehaviorModule$1 = {
  __init__: [
    "gridSnappingResizeBehavior",
    "gridSnappingSpaceToolBehavior"
  ],
  gridSnappingResizeBehavior: ["type", ResizeBehavior],
  gridSnappingSpaceToolBehavior: ["type", SpaceToolBehavior]
};
const GridSnappingModule$1 = {
  __depends__: [GridSnappingBehaviorModule$1],
  __init__: ["gridSnapping"],
  gridSnapping: ["type", GridSnapping]
};
var HIGH_PRIORITY$5 = 2e3;
function GridSnappingAutoPlaceBehavior(eventBus, gridSnapping) {
  eventBus.on("autoPlace", HIGH_PRIORITY$5, function(context) {
    var source2 = context.source, sourceMid = getMid(source2), shape = context.shape;
    var position = getNewShapePosition(source2, shape);
    ["x", "y"].forEach(function(axis) {
      var options = {};
      if (position[axis] === sourceMid[axis]) {
        return;
      }
      if (position[axis] > sourceMid[axis]) {
        options.min = position[axis];
      } else {
        options.max = position[axis];
      }
      if (is$g(shape, "bpmn:TextAnnotation")) {
        if (isHorizontal$1(axis)) {
          options.offset = -shape.width / 2;
        } else {
          options.offset = -shape.height / 2;
        }
      }
      position[axis] = gridSnapping.snapValue(position[axis], options);
    });
    return position;
  });
}
GridSnappingAutoPlaceBehavior.$inject = [
  "eventBus",
  "gridSnapping"
];
function isHorizontal$1(axis) {
  return axis === "x";
}
var HIGHER_PRIORITY$4 = 1750;
function GridSnappingParticipantBehavior(canvas, eventBus, gridSnapping) {
  eventBus.on([
    "create.start",
    "shape.move.start"
  ], HIGHER_PRIORITY$4, function(event2) {
    var context = event2.context, shape = context.shape, rootElement = canvas.getRootElement();
    if (!is$g(shape, "bpmn:Participant") || !is$g(rootElement, "bpmn:Process") || !rootElement.children.length) {
      return;
    }
    var createConstraints = context.createConstraints;
    if (!createConstraints) {
      return;
    }
    shape.width = gridSnapping.snapValue(shape.width, { min: shape.width });
    shape.height = gridSnapping.snapValue(shape.height, { min: shape.height });
  });
}
GridSnappingParticipantBehavior.$inject = [
  "canvas",
  "eventBus",
  "gridSnapping"
];
var HIGH_PRIORITY$4 = 3e3;
function GridSnappingLayoutConnectionBehavior(eventBus, gridSnapping, modeling) {
  CommandInterceptor.call(this, eventBus);
  this._gridSnapping = gridSnapping;
  var self2 = this;
  this.postExecuted([
    "connection.create",
    "connection.layout"
  ], HIGH_PRIORITY$4, function(event2) {
    var context = event2.context, connection = context.connection, hints = context.hints || {}, waypoints = connection.waypoints;
    if (hints.connectionStart || hints.connectionEnd || hints.createElementsBehavior === false) {
      return;
    }
    if (!hasMiddleSegments(waypoints)) {
      return;
    }
    modeling.updateWaypoints(connection, self2.snapMiddleSegments(waypoints));
  });
}
GridSnappingLayoutConnectionBehavior.$inject = [
  "eventBus",
  "gridSnapping",
  "modeling"
];
e$3(GridSnappingLayoutConnectionBehavior, CommandInterceptor);
GridSnappingLayoutConnectionBehavior.prototype.snapMiddleSegments = function(waypoints) {
  var gridSnapping = this._gridSnapping, snapped;
  waypoints = waypoints.slice();
  for (var i2 = 1; i2 < waypoints.length - 2; i2++) {
    snapped = snapSegment(gridSnapping, waypoints[i2], waypoints[i2 + 1]);
    waypoints[i2] = snapped[0];
    waypoints[i2 + 1] = snapped[1];
  }
  return waypoints;
};
function hasMiddleSegments(waypoints) {
  return waypoints.length > 3;
}
function horizontallyAligned(aligned) {
  return aligned === "h";
}
function verticallyAligned(aligned) {
  return aligned === "v";
}
function snapSegment(gridSnapping, segmentStart, segmentEnd) {
  var aligned = pointsAligned(segmentStart, segmentEnd);
  var snapped = {};
  if (horizontallyAligned(aligned)) {
    snapped.y = gridSnapping.snapValue(segmentStart.y);
  }
  if (verticallyAligned(aligned)) {
    snapped.x = gridSnapping.snapValue(segmentStart.x);
  }
  if ("x" in snapped || "y" in snapped) {
    segmentStart = assign$2({}, segmentStart, snapped);
    segmentEnd = assign$2({}, segmentEnd, snapped);
  }
  return [segmentStart, segmentEnd];
}
const GridSnappingBehaviorModule = {
  __init__: [
    "gridSnappingAutoPlaceBehavior",
    "gridSnappingParticipantBehavior",
    "gridSnappingLayoutConnectionBehavior"
  ],
  gridSnappingAutoPlaceBehavior: ["type", GridSnappingAutoPlaceBehavior],
  gridSnappingParticipantBehavior: ["type", GridSnappingParticipantBehavior],
  gridSnappingLayoutConnectionBehavior: ["type", GridSnappingLayoutConnectionBehavior]
};
const GridSnappingModule = {
  __depends__: [
    GridSnappingModule$1,
    GridSnappingBehaviorModule
  ],
  __init__: ["bpmnGridSnapping"],
  bpmnGridSnapping: ["type", BpmnGridSnapping]
};
var LABEL_WIDTH = 30, LABEL_HEIGHT = 30;
function BpmnInteractionEvents(eventBus, interactionEvents) {
  this._interactionEvents = interactionEvents;
  var self2 = this;
  eventBus.on([
    "interactionEvents.createHit",
    "interactionEvents.updateHit"
  ], function(context) {
    var element = context.element, gfx = context.gfx;
    if (is$g(element, "bpmn:Lane")) {
      return self2._createParticipantHit(element, gfx);
    } else if (is$g(element, "bpmn:Participant")) {
      if (isExpanded(element)) {
        return self2._createParticipantHit(element, gfx);
      } else {
        return self2._createDefaultHit(element, gfx);
      }
    } else if (is$g(element, "bpmn:SubProcess")) {
      if (isExpanded(element)) {
        return self2._createSubProcessHit(element, gfx);
      } else {
        return self2._createDefaultHit(element, gfx);
      }
    }
  });
}
BpmnInteractionEvents.$inject = [
  "eventBus",
  "interactionEvents"
];
BpmnInteractionEvents.prototype._createDefaultHit = function(element, gfx) {
  this._interactionEvents.removeHits(gfx);
  this._interactionEvents.createDefaultHit(element, gfx);
  return true;
};
BpmnInteractionEvents.prototype._createParticipantHit = function(element, gfx) {
  this._interactionEvents.removeHits(gfx);
  this._interactionEvents.createBoxHit(gfx, "no-move", {
    width: element.width,
    height: element.height
  });
  this._interactionEvents.createBoxHit(gfx, "click-stroke", {
    width: element.width,
    height: element.height
  });
  var box = isHorizontal$3(element) ? {
    width: LABEL_WIDTH,
    height: element.height
  } : {
    width: element.width,
    height: LABEL_HEIGHT
  };
  this._interactionEvents.createBoxHit(gfx, "all", box);
  return true;
};
BpmnInteractionEvents.prototype._createSubProcessHit = function(element, gfx) {
  this._interactionEvents.removeHits(gfx);
  this._interactionEvents.createBoxHit(gfx, "no-move", {
    width: element.width,
    height: element.height
  });
  this._interactionEvents.createBoxHit(gfx, "click-stroke", {
    width: element.width,
    height: element.height
  });
  this._interactionEvents.createBoxHit(gfx, "all", {
    width: element.width,
    height: LABEL_HEIGHT
  });
  return true;
};
const InteractionEventsModule = {
  __init__: ["bpmnInteractionEvents"],
  bpmnInteractionEvents: ["type", BpmnInteractionEvents]
};
function BpmnKeyboardBindings(injector) {
  injector.invoke(KeyboardBindings, this);
}
e$3(BpmnKeyboardBindings, KeyboardBindings);
BpmnKeyboardBindings.$inject = [
  "injector"
];
BpmnKeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {
  KeyboardBindings.prototype.registerBindings.call(this, keyboard, editorActions);
  function addListener(action, fn) {
    if (editorActions.isRegistered(action)) {
      keyboard.addListener(fn);
    }
  }
  addListener("selectElements", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.isKey(["a", "A"], event2) && keyboard.isCmd(event2)) {
      editorActions.trigger("selectElements");
      return true;
    }
  });
  addListener("find", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.isKey(["f", "F"], event2) && keyboard.isCmd(event2)) {
      editorActions.trigger("find");
      return true;
    }
  });
  addListener("spaceTool", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.hasModifier(event2)) {
      return;
    }
    if (keyboard.isKey(["s", "S"], event2)) {
      editorActions.trigger("spaceTool");
      return true;
    }
  });
  addListener("lassoTool", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.hasModifier(event2)) {
      return;
    }
    if (keyboard.isKey(["l", "L"], event2)) {
      editorActions.trigger("lassoTool");
      return true;
    }
  });
  addListener("handTool", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.hasModifier(event2)) {
      return;
    }
    if (keyboard.isKey(["h", "H"], event2)) {
      editorActions.trigger("handTool");
      return true;
    }
  });
  addListener("globalConnectTool", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.hasModifier(event2)) {
      return;
    }
    if (keyboard.isKey(["c", "C"], event2)) {
      editorActions.trigger("globalConnectTool");
      return true;
    }
  });
  addListener("directEditing", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.hasModifier(event2)) {
      return;
    }
    if (keyboard.isKey(["e", "E"], event2)) {
      editorActions.trigger("directEditing");
      return true;
    }
  });
  addListener("replaceElement", function(context) {
    var event2 = context.keyEvent;
    if (keyboard.hasModifier(event2)) {
      return;
    }
    if (keyboard.isKey(["r", "R"], event2)) {
      editorActions.trigger("replaceElement", event2);
      return true;
    }
  });
};
const KeyboardModule = {
  __depends__: [
    KeyboardModule$1
  ],
  __init__: ["keyboardBindings"],
  keyboardBindings: ["type", BpmnKeyboardBindings]
};
var DEFAULT_CONFIG = {
  moveSpeed: 1,
  moveSpeedAccelerated: 10
};
var HIGHER_PRIORITY$3 = 1500;
var LEFT = "left";
var UP = "up";
var RIGHT = "right";
var DOWN = "down";
var KEY_TO_DIRECTION = {
  ArrowLeft: LEFT,
  Left: LEFT,
  ArrowUp: UP,
  Up: UP,
  ArrowRight: RIGHT,
  Right: RIGHT,
  ArrowDown: DOWN,
  Down: DOWN
};
var DIRECTIONS_DELTA = {
  left: function(speed) {
    return {
      x: -speed,
      y: 0
    };
  },
  up: function(speed) {
    return {
      x: 0,
      y: -speed
    };
  },
  right: function(speed) {
    return {
      x: speed,
      y: 0
    };
  },
  down: function(speed) {
    return {
      x: 0,
      y: speed
    };
  }
};
function KeyboardMoveSelection(config2, keyboard, modeling, rules2, selection) {
  var self2 = this;
  this._config = assign$2({}, DEFAULT_CONFIG, config2 || {});
  keyboard.addListener(HIGHER_PRIORITY$3, function(event2) {
    var keyEvent = event2.keyEvent;
    var direction = KEY_TO_DIRECTION[keyEvent.key];
    if (!direction) {
      return;
    }
    if (keyboard.isCmd(keyEvent)) {
      return;
    }
    var accelerated = keyboard.isShift(keyEvent);
    self2.moveSelection(direction, accelerated);
    return true;
  });
  this.moveSelection = function(direction, accelerated) {
    var selectedElements = selection.get();
    if (!selectedElements.length) {
      return;
    }
    var speed = this._config[accelerated ? "moveSpeedAccelerated" : "moveSpeed"];
    var delta2 = DIRECTIONS_DELTA[direction](speed);
    var canMove2 = rules2.allowed("elements.move", {
      shapes: selectedElements
    });
    if (canMove2) {
      modeling.moveElements(selectedElements, delta2);
    }
  };
}
KeyboardMoveSelection.$inject = [
  "config.keyboardMoveSelection",
  "keyboard",
  "modeling",
  "rules",
  "selection"
];
const KeyboardMoveSelectionModule = {
  __depends__: [
    KeyboardModule$1,
    SelectionModule
  ],
  __init__: [
    "keyboardMoveSelection"
  ],
  keyboardMoveSelection: ["type", KeyboardMoveSelection]
};
var DEFAULT_MIN_WIDTH = 10;
function Resize(eventBus, rules2, modeling, dragging) {
  this._dragging = dragging;
  this._rules = rules2;
  var self2 = this;
  function handleMove(context, delta2) {
    var shape = context.shape, direction = context.direction, resizeConstraints = context.resizeConstraints, newBounds;
    context.delta = delta2;
    newBounds = resizeBounds$1(shape, direction, delta2);
    context.newBounds = ensureConstraints$2(newBounds, resizeConstraints);
    context.canExecute = self2.canResize(context);
  }
  function handleStart(context) {
    var resizeConstraints = context.resizeConstraints, minBounds = context.minBounds;
    if (resizeConstraints !== void 0) {
      return;
    }
    if (minBounds === void 0) {
      minBounds = self2.computeMinResizeBox(context);
    }
    context.resizeConstraints = {
      min: asTRBL(minBounds)
    };
  }
  function handleEnd(context) {
    var shape = context.shape, canExecute = context.canExecute, newBounds = context.newBounds;
    if (canExecute) {
      newBounds = roundBounds(newBounds);
      if (!boundsChanged(shape, newBounds)) {
        return;
      }
      modeling.resizeShape(shape, newBounds);
    }
  }
  eventBus.on("resize.start", function(event2) {
    handleStart(event2.context);
  });
  eventBus.on("resize.move", function(event2) {
    var delta2 = {
      x: event2.dx,
      y: event2.dy
    };
    handleMove(event2.context, delta2);
  });
  eventBus.on("resize.end", function(event2) {
    handleEnd(event2.context);
  });
}
Resize.prototype.canResize = function(context) {
  var rules2 = this._rules;
  var ctx = pick$1(context, ["newBounds", "shape", "delta", "direction"]);
  return rules2.allowed("shape.resize", ctx);
};
Resize.prototype.activate = function(event2, shape, contextOrDirection) {
  var dragging = this._dragging, context, direction;
  if (typeof contextOrDirection === "string") {
    contextOrDirection = {
      direction: contextOrDirection
    };
  }
  context = assign$2({ shape }, contextOrDirection);
  direction = context.direction;
  if (!direction) {
    throw new Error("must provide a direction (n|w|s|e|nw|se|ne|sw)");
  }
  dragging.init(event2, getReferencePoint(shape, direction), "resize", {
    autoActivate: true,
    cursor: getCursor(direction),
    data: {
      shape,
      context
    }
  });
};
Resize.prototype.computeMinResizeBox = function(context) {
  var shape = context.shape, direction = context.direction, minDimensions, childrenBounds;
  minDimensions = context.minDimensions || {
    width: DEFAULT_MIN_WIDTH,
    height: DEFAULT_MIN_WIDTH
  };
  childrenBounds = computeChildrenBBox(shape, context.childrenBoxPadding);
  return getMinResizeBounds(direction, shape, minDimensions, childrenBounds);
};
Resize.$inject = [
  "eventBus",
  "rules",
  "modeling",
  "dragging"
];
function boundsChanged(shape, newBounds) {
  return shape.x !== newBounds.x || shape.y !== newBounds.y || shape.width !== newBounds.width || shape.height !== newBounds.height;
}
function getReferencePoint(shape, direction) {
  var mid2 = getMid(shape), trbl = asTRBL(shape);
  var referencePoint = {
    x: mid2.x,
    y: mid2.y
  };
  if (direction.indexOf("n") !== -1) {
    referencePoint.y = trbl.top;
  } else if (direction.indexOf("s") !== -1) {
    referencePoint.y = trbl.bottom;
  }
  if (direction.indexOf("e") !== -1) {
    referencePoint.x = trbl.right;
  } else if (direction.indexOf("w") !== -1) {
    referencePoint.x = trbl.left;
  }
  return referencePoint;
}
function getCursor(direction) {
  var prefix2 = "resize-";
  if (direction === "n" || direction === "s") {
    return prefix2 + "ns";
  } else if (direction === "e" || direction === "w") {
    return prefix2 + "ew";
  } else if (direction === "nw" || direction === "se") {
    return prefix2 + "nwse";
  } else {
    return prefix2 + "nesw";
  }
}
var MARKER_RESIZING = "djs-resizing", MARKER_RESIZE_NOT_OK = "resize-not-ok";
var LOW_PRIORITY$4 = 500;
function ResizePreview(eventBus, canvas, previewSupport) {
  function updateFrame(context) {
    var shape = context.shape, bounds = context.newBounds, frame = context.frame;
    if (!frame) {
      frame = context.frame = previewSupport.addFrame(shape, canvas.getActiveLayer());
      canvas.addMarker(shape, MARKER_RESIZING);
    }
    if (bounds.width > 5) {
      attr(frame, { x: bounds.x, width: bounds.width });
    }
    if (bounds.height > 5) {
      attr(frame, { y: bounds.y, height: bounds.height });
    }
    if (context.canExecute) {
      classes(frame).remove(MARKER_RESIZE_NOT_OK);
    } else {
      classes(frame).add(MARKER_RESIZE_NOT_OK);
    }
  }
  function removeFrame(context) {
    var shape = context.shape, frame = context.frame;
    if (frame) {
      remove(context.frame);
    }
    canvas.removeMarker(shape, MARKER_RESIZING);
  }
  eventBus.on("resize.move", LOW_PRIORITY$4, function(event2) {
    updateFrame(event2.context);
  });
  eventBus.on("resize.cleanup", function(event2) {
    removeFrame(event2.context);
  });
}
ResizePreview.$inject = [
  "eventBus",
  "canvas",
  "previewSupport"
];
var HANDLE_OFFSET = -6, HANDLE_SIZE = 8, HANDLE_HIT_SIZE = 20;
var CLS_RESIZER = "djs-resizer";
var directions = ["n", "w", "s", "e", "nw", "ne", "se", "sw"];
function ResizeHandles(eventBus, canvas, selection, resize) {
  this._resize = resize;
  this._canvas = canvas;
  var self2 = this;
  eventBus.on("selection.changed", function(e2) {
    var newSelection = e2.newSelection;
    self2.removeResizers();
    if (newSelection.length === 1) {
      forEach$2(newSelection, bind$3(self2.addResizer, self2));
    }
  });
  eventBus.on("shape.changed", function(e2) {
    var shape = e2.element;
    if (selection.isSelected(shape)) {
      self2.removeResizers();
      self2.addResizer(shape);
    }
  });
}
ResizeHandles.prototype.makeDraggable = function(element, gfx, direction) {
  var resize = this._resize;
  function startResize(event2) {
    if (isPrimaryButton(event2)) {
      resize.activate(event2, element, direction);
    }
  }
  event.bind(gfx, "mousedown", startResize);
  event.bind(gfx, "touchstart", startResize);
};
ResizeHandles.prototype._createResizer = function(element, x2, y2, direction) {
  var resizersParent = this._getResizersParent();
  var offset = getHandleOffset(direction);
  var group = create$1("g");
  classes(group).add(CLS_RESIZER);
  classes(group).add(CLS_RESIZER + "-" + element.id);
  classes(group).add(CLS_RESIZER + "-" + direction);
  append(resizersParent, group);
  var visual = create$1("rect");
  attr(visual, {
    x: -HANDLE_SIZE / 2 + offset.x,
    y: -HANDLE_SIZE / 2 + offset.y,
    width: HANDLE_SIZE,
    height: HANDLE_SIZE
  });
  classes(visual).add(CLS_RESIZER + "-visual");
  append(group, visual);
  var hit = create$1("rect");
  attr(hit, {
    x: -HANDLE_HIT_SIZE / 2 + offset.x,
    y: -HANDLE_HIT_SIZE / 2 + offset.y,
    width: HANDLE_HIT_SIZE,
    height: HANDLE_HIT_SIZE
  });
  classes(hit).add(CLS_RESIZER + "-hit");
  append(group, hit);
  transform(group, x2, y2);
  return group;
};
ResizeHandles.prototype.createResizer = function(element, direction) {
  var point = getReferencePoint(element, direction);
  var resizer = this._createResizer(element, point.x, point.y, direction);
  this.makeDraggable(element, resizer, direction);
};
ResizeHandles.prototype.addResizer = function(element) {
  var self2 = this;
  if (isConnection(element) || !this._resize.canResize({ shape: element })) {
    return;
  }
  forEach$2(directions, function(direction) {
    self2.createResizer(element, direction);
  });
};
ResizeHandles.prototype.removeResizers = function() {
  var resizersParent = this._getResizersParent();
  clear(resizersParent);
};
ResizeHandles.prototype._getResizersParent = function() {
  return this._canvas.getLayer("resizers");
};
ResizeHandles.$inject = [
  "eventBus",
  "canvas",
  "selection",
  "resize"
];
function getHandleOffset(direction) {
  var offset = {
    x: 0,
    y: 0
  };
  if (direction.indexOf("e") !== -1) {
    offset.x = -HANDLE_OFFSET;
  } else if (direction.indexOf("w") !== -1) {
    offset.x = HANDLE_OFFSET;
  }
  if (direction.indexOf("s") !== -1) {
    offset.y = -HANDLE_OFFSET;
  } else if (direction.indexOf("n") !== -1) {
    offset.y = HANDLE_OFFSET;
  }
  return offset;
}
const ResizeModule = {
  __depends__: [
    RulesModule$1,
    DraggingModule,
    PreviewSupportModule
  ],
  __init__: [
    "resize",
    "resizePreview",
    "resizeHandles"
  ],
  resize: ["type", Resize],
  resizePreview: ["type", ResizePreview],
  resizeHandles: ["type", ResizeHandles]
};
var HIGH_PRIORITY$3 = 2e3;
function LabelEditingProvider(eventBus, bpmnFactory, canvas, directEditing, modeling, resizeHandles, textRenderer) {
  this._bpmnFactory = bpmnFactory;
  this._canvas = canvas;
  this._modeling = modeling;
  this._textRenderer = textRenderer;
  directEditing.registerProvider(this);
  eventBus.on("element.dblclick", function(event2) {
    activateDirectEdit(event2.element, true);
  });
  eventBus.on([
    "autoPlace.start",
    "canvas.viewbox.changing",
    "drag.init",
    "element.mousedown",
    "popupMenu.open",
    "root.set",
    "selection.changed"
  ], function() {
    if (directEditing.isActive()) {
      directEditing.complete();
    }
  });
  eventBus.on([
    "shape.remove",
    "connection.remove"
  ], HIGH_PRIORITY$3, function(event2) {
    if (directEditing.isActive(event2.element)) {
      directEditing.cancel();
    }
  });
  eventBus.on(["commandStack.changed"], function(e2) {
    if (directEditing.isActive()) {
      directEditing.cancel();
    }
  });
  eventBus.on("directEditing.activate", function(event2) {
    resizeHandles.removeResizers();
  });
  eventBus.on("create.end", 500, function(event2) {
    var context = event2.context, element = context.shape, canExecute = event2.context.canExecute, isTouch = event2.isTouch;
    if (isTouch) {
      return;
    }
    if (!canExecute) {
      return;
    }
    if (context.hints && context.hints.createElementsBehavior === false) {
      return;
    }
    activateDirectEdit(element);
  });
  eventBus.on("autoPlace.end", 500, function(event2) {
    activateDirectEdit(event2.shape);
  });
  function activateDirectEdit(element, force) {
    if (force || isAny$7(element, ["bpmn:Task", "bpmn:TextAnnotation", "bpmn:Participant"]) || isCollapsedSubProcess(element)) {
      directEditing.activate(element);
    }
  }
}
LabelEditingProvider.$inject = [
  "eventBus",
  "bpmnFactory",
  "canvas",
  "directEditing",
  "modeling",
  "resizeHandles",
  "textRenderer"
];
LabelEditingProvider.prototype.activate = function(element) {
  var text = getLabel(element);
  if (text === void 0) {
    return;
  }
  var context = {
    text
  };
  var bounds = this.getEditingBBox(element);
  assign$2(context, bounds);
  var options = {};
  var style = context.style || {};
  assign$2(style, {
    backgroundColor: null,
    border: null
  });
  if (isAny$7(element, [
    "bpmn:Task",
    "bpmn:Participant",
    "bpmn:Lane",
    "bpmn:CallActivity"
  ]) || isCollapsedSubProcess(element)) {
    assign$2(options, {
      centerVertically: true
    });
  }
  if (isLabelExternal(element)) {
    assign$2(options, {
      autoResize: true
    });
    assign$2(style, {
      backgroundColor: "#ffffff",
      border: "1px solid #ccc"
    });
  }
  if (is$g(element, "bpmn:TextAnnotation")) {
    assign$2(options, {
      resizable: true,
      autoResize: true
    });
    assign$2(style, {
      backgroundColor: "#ffffff",
      border: "1px solid #ccc"
    });
  }
  assign$2(context, {
    options,
    style
  });
  return context;
};
LabelEditingProvider.prototype.getEditingBBox = function(element) {
  var canvas = this._canvas;
  var target = element.label || element;
  var bbox = canvas.getAbsoluteBBox(target);
  var mid2 = {
    x: bbox.x + bbox.width / 2,
    y: bbox.y + bbox.height / 2
  };
  var bounds = { x: bbox.x, y: bbox.y };
  var zoom2 = canvas.zoom();
  var defaultStyle = this._textRenderer.getDefaultStyle(), externalStyle = this._textRenderer.getExternalStyle();
  var externalFontSize = externalStyle.fontSize * zoom2, externalLineHeight = externalStyle.lineHeight, defaultFontSize = defaultStyle.fontSize * zoom2, defaultLineHeight = defaultStyle.lineHeight;
  var style = {
    fontFamily: this._textRenderer.getDefaultStyle().fontFamily,
    fontWeight: this._textRenderer.getDefaultStyle().fontWeight
  };
  if (is$g(element, "bpmn:Lane") || isExpandedPool(element)) {
    var isHorizontalLane = isHorizontal$3(element);
    var laneBounds = isHorizontalLane ? {
      width: bbox.height,
      height: 30 * zoom2,
      x: bbox.x - bbox.height / 2 + 15 * zoom2,
      y: mid2.y - 30 * zoom2 / 2
    } : {
      width: bbox.width,
      height: 30 * zoom2
    };
    assign$2(bounds, laneBounds);
    assign$2(style, {
      fontSize: defaultFontSize + "px",
      lineHeight: defaultLineHeight,
      paddingTop: 7 * zoom2 + "px",
      paddingBottom: 7 * zoom2 + "px",
      paddingLeft: 5 * zoom2 + "px",
      paddingRight: 5 * zoom2 + "px",
      transform: isHorizontalLane ? "rotate(-90deg)" : null
    });
  }
  if (isCollapsedPool(element)) {
    var isHorizontalPool = isHorizontal$3(element);
    var poolBounds = isHorizontalPool ? {
      width: bbox.width,
      height: bbox.height
    } : {
      width: bbox.height,
      height: bbox.width,
      x: mid2.x - bbox.height / 2,
      y: mid2.y - bbox.width / 2
    };
    assign$2(bounds, poolBounds);
    assign$2(style, {
      fontSize: defaultFontSize + "px",
      lineHeight: defaultLineHeight,
      paddingTop: 7 * zoom2 + "px",
      paddingBottom: 7 * zoom2 + "px",
      paddingLeft: 5 * zoom2 + "px",
      paddingRight: 5 * zoom2 + "px",
      transform: isHorizontalPool ? null : "rotate(-90deg)"
    });
  }
  if (isAny$7(element, ["bpmn:Task", "bpmn:CallActivity"]) || isCollapsedSubProcess(element)) {
    assign$2(bounds, {
      width: bbox.width,
      height: bbox.height
    });
    assign$2(style, {
      fontSize: defaultFontSize + "px",
      lineHeight: defaultLineHeight,
      paddingTop: 7 * zoom2 + "px",
      paddingBottom: 7 * zoom2 + "px",
      paddingLeft: 5 * zoom2 + "px",
      paddingRight: 5 * zoom2 + "px"
    });
  }
  if (isExpandedSubProcess(element)) {
    assign$2(bounds, {
      width: bbox.width,
      x: bbox.x
    });
    assign$2(style, {
      fontSize: defaultFontSize + "px",
      lineHeight: defaultLineHeight,
      paddingTop: 7 * zoom2 + "px",
      paddingBottom: 7 * zoom2 + "px",
      paddingLeft: 5 * zoom2 + "px",
      paddingRight: 5 * zoom2 + "px"
    });
  }
  var width = 90 * zoom2, paddingTop = 7 * zoom2, paddingBottom = 4 * zoom2;
  if (target.labelTarget) {
    assign$2(bounds, {
      width,
      height: bbox.height + paddingTop + paddingBottom,
      x: mid2.x - width / 2,
      y: bbox.y - paddingTop
    });
    assign$2(style, {
      fontSize: externalFontSize + "px",
      lineHeight: externalLineHeight,
      paddingTop: paddingTop + "px",
      paddingBottom: paddingBottom + "px"
    });
  }
  if (isLabelExternal(target) && !hasExternalLabel(target) && !isLabel(target)) {
    var externalLabelMid = getExternalLabelMid(element);
    var absoluteBBox = canvas.getAbsoluteBBox({
      x: externalLabelMid.x,
      y: externalLabelMid.y,
      width: 0,
      height: 0
    });
    var height = externalFontSize + paddingTop + paddingBottom;
    assign$2(bounds, {
      width,
      height,
      x: absoluteBBox.x - width / 2,
      y: absoluteBBox.y - height / 2
    });
    assign$2(style, {
      fontSize: externalFontSize + "px",
      lineHeight: externalLineHeight,
      paddingTop: paddingTop + "px",
      paddingBottom: paddingBottom + "px"
    });
  }
  if (is$g(element, "bpmn:TextAnnotation")) {
    assign$2(bounds, {
      width: bbox.width,
      height: bbox.height,
      minWidth: 30 * zoom2,
      minHeight: 10 * zoom2
    });
    assign$2(style, {
      textAlign: "left",
      paddingTop: 5 * zoom2 + "px",
      paddingBottom: 7 * zoom2 + "px",
      paddingLeft: 7 * zoom2 + "px",
      paddingRight: 5 * zoom2 + "px",
      fontSize: defaultFontSize + "px",
      lineHeight: defaultLineHeight
    });
  }
  return { bounds, style };
};
LabelEditingProvider.prototype.update = function(element, newLabel, activeContextText, bounds) {
  var newBounds, bbox;
  if (is$g(element, "bpmn:TextAnnotation")) {
    bbox = this._canvas.getAbsoluteBBox(element);
    newBounds = {
      x: element.x,
      y: element.y,
      width: element.width / bbox.width * bounds.width,
      height: element.height / bbox.height * bounds.height
    };
  }
  if (isEmptyText(newLabel)) {
    newLabel = null;
  }
  this._modeling.updateLabel(element, newLabel, newBounds);
};
function isCollapsedSubProcess(element) {
  return is$g(element, "bpmn:SubProcess") && !isExpanded(element);
}
function isExpandedSubProcess(element) {
  return is$g(element, "bpmn:SubProcess") && isExpanded(element);
}
function isCollapsedPool(element) {
  return is$g(element, "bpmn:Participant") && !isExpanded(element);
}
function isExpandedPool(element) {
  return is$g(element, "bpmn:Participant") && isExpanded(element);
}
function isEmptyText(label) {
  return !label || !label.trim();
}
var MARKER_HIDDEN = "djs-element-hidden", MARKER_LABEL_HIDDEN = "djs-label-hidden";
function LabelEditingPreview(eventBus, canvas, pathMap) {
  var self2 = this;
  var defaultLayer = canvas.getDefaultLayer();
  var element, absoluteElementBBox, gfx;
  eventBus.on("directEditing.activate", function(context) {
    var activeProvider = context.active;
    element = activeProvider.element.label || activeProvider.element;
    if (is$g(element, "bpmn:TextAnnotation")) {
      absoluteElementBBox = canvas.getAbsoluteBBox(element);
      gfx = create$1("g");
      var textPathData = pathMap.getScaledPath("TEXT_ANNOTATION", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: element.width,
        containerHeight: element.height,
        position: {
          mx: 0,
          my: 0
        }
      });
      var path = self2.path = create$1("path");
      attr(path, {
        d: textPathData,
        strokeWidth: 2,
        stroke: getStrokeColor(element)
      });
      append(gfx, path);
      append(defaultLayer, gfx);
      translate$2(gfx, element.x, element.y);
    }
    if (is$g(element, "bpmn:TextAnnotation") || element.labelTarget) {
      canvas.addMarker(element, MARKER_HIDDEN);
    } else if (is$g(element, "bpmn:Task") || is$g(element, "bpmn:CallActivity") || is$g(element, "bpmn:SubProcess") || is$g(element, "bpmn:Participant")) {
      canvas.addMarker(element, MARKER_LABEL_HIDDEN);
    }
  });
  eventBus.on("directEditing.resize", function(context) {
    if (is$g(element, "bpmn:TextAnnotation")) {
      var height = context.height, dy = context.dy;
      var newElementHeight = Math.max(element.height / absoluteElementBBox.height * (height + dy), 0);
      var textPathData = pathMap.getScaledPath("TEXT_ANNOTATION", {
        xScaleFactor: 1,
        yScaleFactor: 1,
        containerWidth: element.width,
        containerHeight: newElementHeight,
        position: {
          mx: 0,
          my: 0
        }
      });
      attr(self2.path, {
        d: textPathData
      });
    }
  });
  eventBus.on(["directEditing.complete", "directEditing.cancel"], function(context) {
    var activeProvider = context.active;
    if (activeProvider) {
      canvas.removeMarker(activeProvider.element.label || activeProvider.element, MARKER_HIDDEN);
      canvas.removeMarker(element, MARKER_LABEL_HIDDEN);
    }
    element = void 0;
    absoluteElementBBox = void 0;
    if (gfx) {
      remove(gfx);
      gfx = void 0;
    }
  });
}
LabelEditingPreview.$inject = [
  "eventBus",
  "canvas",
  "pathMap"
];
function getStrokeColor(element, defaultColor) {
  var di = getDi(element);
  return di.get("stroke") || defaultColor || "black";
}
const LabelEditingModule = {
  __depends__: [
    ChangeSupportModule,
    ResizeModule,
    DirectEditingModule
  ],
  __init__: [
    "labelEditingProvider",
    "labelEditingPreview"
  ],
  labelEditingProvider: ["type", LabelEditingProvider],
  labelEditingPreview: ["type", LabelEditingPreview]
};
var ids = new IdGenerator("tt");
function createRoot(parentNode) {
  var root = domify$1(
    '<div class="djs-tooltip-container" />'
  );
  assign$1(root, {
    position: "absolute",
    width: "0",
    height: "0"
  });
  parentNode.insertBefore(root, parentNode.firstChild);
  return root;
}
function setPosition(el, x2, y2) {
  assign$1(el, { left: x2 + "px", top: y2 + "px" });
}
function setVisible(el, visible) {
  el.style.display = visible === false ? "none" : "";
}
var tooltipClass = "djs-tooltip", tooltipSelector = "." + tooltipClass;
function Tooltips(eventBus, canvas) {
  this._eventBus = eventBus;
  this._canvas = canvas;
  this._ids = ids;
  this._tooltipDefaults = {
    show: {
      minZoom: 0.7,
      maxZoom: 5
    }
  };
  this._tooltips = {};
  this._tooltipRoot = createRoot(canvas.getContainer());
  var self2 = this;
  delegate.bind(this._tooltipRoot, tooltipSelector, "mousedown", function(event2) {
    event2.stopPropagation();
  });
  delegate.bind(this._tooltipRoot, tooltipSelector, "mouseover", function(event2) {
    self2.trigger("mouseover", event2);
  });
  delegate.bind(this._tooltipRoot, tooltipSelector, "mouseout", function(event2) {
    self2.trigger("mouseout", event2);
  });
  this._init();
}
Tooltips.$inject = ["eventBus", "canvas"];
Tooltips.prototype.add = function(tooltip) {
  if (!tooltip.position) {
    throw new Error("must specifiy tooltip position");
  }
  if (!tooltip.html) {
    throw new Error("must specifiy tooltip html");
  }
  var id = this._ids.next();
  tooltip = assign$2({}, this._tooltipDefaults, tooltip, {
    id
  });
  this._addTooltip(tooltip);
  if (tooltip.timeout) {
    this.setTimeout(tooltip);
  }
  return id;
};
Tooltips.prototype.trigger = function(action, event2) {
  var node2 = event2.delegateTarget || event2.target;
  var tooltip = this.get(attr$1(node2, "data-tooltip-id"));
  if (!tooltip) {
    return;
  }
  if (action === "mouseover" && tooltip.timeout) {
    this.clearTimeout(tooltip);
  }
  if (action === "mouseout" && tooltip.timeout) {
    tooltip.timeout = 1e3;
    this.setTimeout(tooltip);
  }
};
Tooltips.prototype.get = function(id) {
  if (typeof id !== "string") {
    id = id.id;
  }
  return this._tooltips[id];
};
Tooltips.prototype.clearTimeout = function(tooltip) {
  tooltip = this.get(tooltip);
  if (!tooltip) {
    return;
  }
  var removeTimer = tooltip.removeTimer;
  if (removeTimer) {
    clearTimeout(removeTimer);
    tooltip.removeTimer = null;
  }
};
Tooltips.prototype.setTimeout = function(tooltip) {
  tooltip = this.get(tooltip);
  if (!tooltip) {
    return;
  }
  this.clearTimeout(tooltip);
  var self2 = this;
  tooltip.removeTimer = setTimeout(function() {
    self2.remove(tooltip);
  }, tooltip.timeout);
};
Tooltips.prototype.remove = function(id) {
  var tooltip = this.get(id);
  if (tooltip) {
    remove$1(tooltip.html);
    remove$1(tooltip.htmlContainer);
    delete tooltip.htmlContainer;
    delete this._tooltips[tooltip.id];
  }
};
Tooltips.prototype.show = function() {
  setVisible(this._tooltipRoot);
};
Tooltips.prototype.hide = function() {
  setVisible(this._tooltipRoot, false);
};
Tooltips.prototype._updateRoot = function(viewbox) {
  var a2 = viewbox.scale || 1;
  var d2 = viewbox.scale || 1;
  var matrix = "matrix(" + a2 + ",0,0," + d2 + "," + -1 * viewbox.x * a2 + "," + -1 * viewbox.y * d2 + ")";
  this._tooltipRoot.style.transform = matrix;
  this._tooltipRoot.style["-ms-transform"] = matrix;
};
Tooltips.prototype._addTooltip = function(tooltip) {
  var id = tooltip.id, html = tooltip.html, htmlContainer, tooltipRoot = this._tooltipRoot;
  if (html.get && html.constructor.prototype.jquery) {
    html = html.get(0);
  }
  if (isString$1(html)) {
    html = domify$1(html);
  }
  htmlContainer = domify$1('<div data-tooltip-id="' + id + '" class="' + tooltipClass + '">');
  assign$1(htmlContainer, { position: "absolute" });
  htmlContainer.appendChild(html);
  if (tooltip.type) {
    classes$1(htmlContainer).add("djs-tooltip-" + tooltip.type);
  }
  if (tooltip.className) {
    classes$1(htmlContainer).add(tooltip.className);
  }
  tooltip.htmlContainer = htmlContainer;
  tooltipRoot.appendChild(htmlContainer);
  this._tooltips[id] = tooltip;
  this._updateTooltip(tooltip);
};
Tooltips.prototype._updateTooltip = function(tooltip) {
  var position = tooltip.position, htmlContainer = tooltip.htmlContainer;
  setPosition(htmlContainer, position.x, position.y);
};
Tooltips.prototype._updateTooltipVisibilty = function(viewbox) {
  forEach$2(this._tooltips, function(tooltip) {
    var show = tooltip.show, htmlContainer = tooltip.htmlContainer, visible = true;
    if (show) {
      if (show.minZoom > viewbox.scale || show.maxZoom < viewbox.scale) {
        visible = false;
      }
      setVisible(htmlContainer, visible);
    }
  });
};
Tooltips.prototype._init = function() {
  var self2 = this;
  function updateViewbox(viewbox) {
    self2._updateRoot(viewbox);
    self2._updateTooltipVisibilty(viewbox);
    self2.show();
  }
  this._eventBus.on("canvas.viewbox.changing", function(event2) {
    self2.hide();
  });
  this._eventBus.on("canvas.viewbox.changed", function(event2) {
    updateViewbox(event2.viewbox);
  });
};
const TooltipsModule = {
  __init__: ["tooltips"],
  tooltips: ["type", Tooltips]
};
var COLLAB_ERR_MSG = "flow elements must be children of pools/participants";
function ModelingFeedback(eventBus, tooltips, translate2) {
  function showError(position, message, timeout) {
    tooltips.add({
      position: {
        x: position.x + 5,
        y: position.y + 5
      },
      type: "error",
      timeout: 2e3,
      html: "<div>" + message + "</div>"
    });
  }
  eventBus.on(["shape.move.rejected", "create.rejected"], function(event2) {
    var context = event2.context, shape = context.shape, target = context.target;
    if (is$g(target, "bpmn:Collaboration") && is$g(shape, "bpmn:FlowNode")) {
      showError(event2, translate2(COLLAB_ERR_MSG));
    }
  });
}
ModelingFeedback.$inject = [
  "eventBus",
  "tooltips",
  "translate"
];
const ModelingFeedbackModule = {
  __depends__: [
    TooltipsModule
  ],
  __init__: [
    "modelingFeedback"
  ],
  modelingFeedback: ["type", ModelingFeedback]
};
var LOW_PRIORITY$3 = 500, MEDIUM_PRIORITY = 1250, HIGH_PRIORITY$2 = 1500;
var round = Math.round;
function mid(element) {
  return {
    x: element.x + round(element.width / 2),
    y: element.y + round(element.height / 2)
  };
}
function MoveEvents(eventBus, dragging, modeling, selection, rules2) {
  function canMove2(shapes, delta2, position, target) {
    return rules2.allowed("elements.move", {
      shapes,
      delta: delta2,
      position,
      target
    });
  }
  eventBus.on("shape.move.start", HIGH_PRIORITY$2, function(event2) {
    var context = event2.context, shape = event2.shape, shapes = selection.get().slice();
    if (shapes.indexOf(shape) === -1) {
      shapes = [shape];
    }
    shapes = removeNested(shapes);
    assign$2(context, {
      shapes,
      validatedShapes: shapes,
      shape
    });
  });
  eventBus.on("shape.move.start", MEDIUM_PRIORITY, function(event2) {
    var context = event2.context, validatedShapes = context.validatedShapes, canExecute;
    canExecute = context.canExecute = canMove2(validatedShapes);
    if (!canExecute) {
      return false;
    }
  });
  eventBus.on("shape.move.move", LOW_PRIORITY$3, function(event2) {
    var context = event2.context, validatedShapes = context.validatedShapes, hover = event2.hover, delta2 = { x: event2.dx, y: event2.dy }, position = { x: event2.x, y: event2.y }, canExecute;
    canExecute = canMove2(validatedShapes, delta2, position, hover);
    context.delta = delta2;
    context.canExecute = canExecute;
    if (canExecute === null) {
      context.target = null;
      return;
    }
    context.target = hover;
  });
  eventBus.on("shape.move.end", function(event2) {
    var context = event2.context;
    var delta2 = context.delta, canExecute = context.canExecute, isAttach = canExecute === "attach", shapes = context.shapes;
    if (canExecute === false) {
      return false;
    }
    delta2.x = round(delta2.x);
    delta2.y = round(delta2.y);
    if (delta2.x === 0 && delta2.y === 0) {
      return;
    }
    modeling.moveElements(shapes, delta2, context.target, {
      primaryShape: context.shape,
      attach: isAttach
    });
  });
  eventBus.on("element.mousedown", function(event2) {
    if (!isPrimaryButton(event2)) {
      return;
    }
    var originalEvent = getOriginal$1(event2);
    if (!originalEvent) {
      throw new Error("must supply DOM mousedown event");
    }
    return start(originalEvent, event2.element);
  });
  function start(event2, element, activate, context) {
    if (isObject$1(activate)) {
      context = activate;
      activate = false;
    }
    if (element.waypoints || !element.parent) {
      return;
    }
    if (classes(event2.target).has("djs-hit-no-move")) {
      return;
    }
    var referencePoint = mid(element);
    dragging.init(event2, referencePoint, "shape.move", {
      cursor: "grabbing",
      autoActivate: activate,
      data: {
        shape: element,
        context: context || {}
      }
    });
    return true;
  }
  this.start = start;
}
MoveEvents.$inject = [
  "eventBus",
  "dragging",
  "modeling",
  "selection",
  "rules"
];
function removeNested(elements) {
  var ids2 = groupBy$1(elements, "id");
  return filter$1(elements, function(element) {
    while (element = element.parent) {
      if (ids2[element.id]) {
        return false;
      }
    }
    return true;
  });
}
var LOW_PRIORITY$2 = 499;
var MARKER_DRAGGING = "djs-dragging", MARKER_OK$1 = "drop-ok", MARKER_NOT_OK$1 = "drop-not-ok", MARKER_NEW_PARENT = "new-parent", MARKER_ATTACH = "attach-ok";
function MovePreview(eventBus, canvas, styles, previewSupport) {
  function getVisualDragShapes(shapes) {
    var elements = getAllDraggedElements(shapes);
    var filteredElements = removeEdges(elements);
    return filteredElements;
  }
  function getAllDraggedElements(shapes) {
    var allShapes = selfAndAllChildren(shapes, true);
    var allConnections = map$2(allShapes, function(shape) {
      return (shape.incoming || []).concat(shape.outgoing || []);
    });
    return flatten$2(allShapes.concat(allConnections));
  }
  function setMarker(element, marker) {
    [MARKER_ATTACH, MARKER_OK$1, MARKER_NOT_OK$1, MARKER_NEW_PARENT].forEach(function(m2) {
      if (m2 === marker) {
        canvas.addMarker(element, m2);
      } else {
        canvas.removeMarker(element, m2);
      }
    });
  }
  function makeDraggable(context, element, addMarker) {
    previewSupport.addDragger(element, context.dragGroup);
    if (addMarker) {
      canvas.addMarker(element, MARKER_DRAGGING);
    }
    if (context.allDraggedElements) {
      context.allDraggedElements.push(element);
    } else {
      context.allDraggedElements = [element];
    }
  }
  eventBus.on("shape.move.start", LOW_PRIORITY$2, function(event2) {
    var context = event2.context, dragShapes = context.shapes, allDraggedElements = context.allDraggedElements;
    var visuallyDraggedShapes = getVisualDragShapes(dragShapes);
    if (!context.dragGroup) {
      var dragGroup = create$1("g");
      attr(dragGroup, styles.cls("djs-drag-group", ["no-events"]));
      var activeLayer = canvas.getActiveLayer();
      append(activeLayer, dragGroup);
      context.dragGroup = dragGroup;
    }
    visuallyDraggedShapes.forEach(function(shape) {
      previewSupport.addDragger(shape, context.dragGroup);
    });
    if (!allDraggedElements) {
      allDraggedElements = getAllDraggedElements(dragShapes);
    } else {
      allDraggedElements = flatten$2([
        allDraggedElements,
        getAllDraggedElements(dragShapes)
      ]);
    }
    forEach$2(allDraggedElements, function(e2) {
      canvas.addMarker(e2, MARKER_DRAGGING);
    });
    context.allDraggedElements = allDraggedElements;
    context.differentParents = haveDifferentParents(dragShapes);
  });
  eventBus.on("shape.move.move", LOW_PRIORITY$2, function(event2) {
    var context = event2.context, dragGroup = context.dragGroup, target = context.target, parent = context.shape.parent, canExecute = context.canExecute;
    if (target) {
      if (canExecute === "attach") {
        setMarker(target, MARKER_ATTACH);
      } else if (context.canExecute && parent && target.id !== parent.id) {
        setMarker(target, MARKER_NEW_PARENT);
      } else {
        setMarker(target, context.canExecute ? MARKER_OK$1 : MARKER_NOT_OK$1);
      }
    }
    translate$2(dragGroup, event2.dx, event2.dy);
  });
  eventBus.on(["shape.move.out", "shape.move.cleanup"], function(event2) {
    var context = event2.context, target = context.target;
    if (target) {
      setMarker(target, null);
    }
  });
  eventBus.on("shape.move.cleanup", function(event2) {
    var context = event2.context, allDraggedElements = context.allDraggedElements, dragGroup = context.dragGroup;
    forEach$2(allDraggedElements, function(e2) {
      canvas.removeMarker(e2, MARKER_DRAGGING);
    });
    if (dragGroup) {
      remove(dragGroup);
    }
  });
  this.makeDraggable = makeDraggable;
}
MovePreview.$inject = [
  "eventBus",
  "canvas",
  "styles",
  "previewSupport"
];
function removeEdges(elements) {
  var filteredElements = filter$1(elements, function(element) {
    if (!isConnection(element)) {
      return true;
    } else {
      return find$1(elements, matchPattern$1({ id: element.source.id })) && find$1(elements, matchPattern$1({ id: element.target.id }));
    }
  });
  return filteredElements;
}
function haveDifferentParents(elements) {
  return size$1(groupBy$1(elements, function(e2) {
    return e2.parent && e2.parent.id;
  })) !== 1;
}
const MoveModule = {
  __depends__: [
    InteractionEventsModule$1,
    SelectionModule,
    OutlineModule$1,
    RulesModule$1,
    DraggingModule,
    PreviewSupportModule
  ],
  __init__: [
    "move",
    "movePreview"
  ],
  move: ["type", MoveEvents],
  movePreview: ["type", MovePreview]
};
var TOGGLE_SELECTOR = ".djs-palette-toggle", ENTRY_SELECTOR = ".entry", ELEMENT_SELECTOR = TOGGLE_SELECTOR + ", " + ENTRY_SELECTOR;
var PALETTE_PREFIX = "djs-palette-", PALETTE_SHOWN_CLS = "shown", PALETTE_OPEN_CLS = "open", PALETTE_TWO_COLUMN_CLS = "two-column";
var DEFAULT_PRIORITY = 1e3;
function Palette(eventBus, canvas) {
  this._eventBus = eventBus;
  this._canvas = canvas;
  var self2 = this;
  eventBus.on("tool-manager.update", function(event2) {
    var tool = event2.tool;
    self2.updateToolHighlight(tool);
  });
  eventBus.on("i18n.changed", function() {
    self2._update();
  });
  eventBus.on("diagram.init", function() {
    self2._diagramInitialized = true;
    self2._rebuild();
  });
}
Palette.$inject = ["eventBus", "canvas"];
Palette.prototype.registerProvider = function(priority, provider) {
  if (!provider) {
    provider = priority;
    priority = DEFAULT_PRIORITY;
  }
  this._eventBus.on("palette.getProviders", priority, function(event2) {
    event2.providers.push(provider);
  });
  this._rebuild();
};
Palette.prototype.getEntries = function() {
  var providers = this._getProviders();
  return providers.reduce(addPaletteEntries, {});
};
Palette.prototype._rebuild = function() {
  if (!this._diagramInitialized) {
    return;
  }
  var providers = this._getProviders();
  if (!providers.length) {
    return;
  }
  if (!this._container) {
    this._init();
  }
  this._update();
};
Palette.prototype._init = function() {
  var self2 = this;
  var eventBus = this._eventBus;
  var parentContainer = this._getParentContainer();
  var container = this._container = domify$1(Palette.HTML_MARKUP);
  parentContainer.appendChild(container);
  classes$1(parentContainer).add(PALETTE_PREFIX + PALETTE_SHOWN_CLS);
  delegate.bind(container, ELEMENT_SELECTOR, "click", function(event2) {
    var target = event2.delegateTarget;
    if (matches(target, TOGGLE_SELECTOR)) {
      return self2.toggle();
    }
    self2.trigger("click", event2);
  });
  event.bind(container, "mousedown", function(event2) {
    event2.stopPropagation();
  });
  delegate.bind(container, ENTRY_SELECTOR, "dragstart", function(event2) {
    self2.trigger("dragstart", event2);
  });
  eventBus.on("canvas.resized", this._layoutChanged, this);
  eventBus.fire("palette.create", {
    container
  });
};
Palette.prototype._getProviders = function(id) {
  var event2 = this._eventBus.createEvent({
    type: "palette.getProviders",
    providers: []
  });
  this._eventBus.fire(event2);
  return event2.providers;
};
Palette.prototype._toggleState = function(state) {
  state = state || {};
  var parent = this._getParentContainer(), container = this._container;
  var eventBus = this._eventBus;
  var twoColumn;
  var cls = classes$1(container), parentCls = classes$1(parent);
  if ("twoColumn" in state) {
    twoColumn = state.twoColumn;
  } else {
    twoColumn = this._needsCollapse(parent.clientHeight, this._entries || {});
  }
  cls.toggle(PALETTE_TWO_COLUMN_CLS, twoColumn);
  parentCls.toggle(PALETTE_PREFIX + PALETTE_TWO_COLUMN_CLS, twoColumn);
  if ("open" in state) {
    cls.toggle(PALETTE_OPEN_CLS, state.open);
    parentCls.toggle(PALETTE_PREFIX + PALETTE_OPEN_CLS, state.open);
  }
  eventBus.fire("palette.changed", {
    twoColumn,
    open: this.isOpen()
  });
};
Palette.prototype._update = function() {
  var entriesContainer = query(".djs-palette-entries", this._container), entries = this._entries = this.getEntries();
  clear$1(entriesContainer);
  forEach$2(entries, function(entry, id) {
    var grouping = entry.group || "default";
    var container = query("[data-group=" + escapeCSS(grouping) + "]", entriesContainer);
    if (!container) {
      container = domify$1('<div class="group"></div>');
      attr$1(container, "data-group", grouping);
      entriesContainer.appendChild(container);
    }
    var html = entry.html || (entry.separator ? '<hr class="separator" />' : '<div class="entry" draggable="true"></div>');
    var control = domify$1(html);
    container.appendChild(control);
    if (!entry.separator) {
      attr$1(control, "data-action", id);
      if (entry.title) {
        attr$1(control, "title", entry.title);
      }
      if (entry.className) {
        addClasses(control, entry.className);
      }
      if (entry.imageUrl) {
        var image = domify$1("<img>");
        attr$1(image, "src", entry.imageUrl);
        control.appendChild(image);
      }
    }
  });
  this.open();
};
Palette.prototype.trigger = function(action, event2, autoActivate) {
  var entry, originalEvent, button = event2.delegateTarget || event2.target;
  if (!button) {
    return event2.preventDefault();
  }
  entry = attr$1(button, "data-action");
  originalEvent = event2.originalEvent || event2;
  return this.triggerEntry(entry, action, originalEvent, autoActivate);
};
Palette.prototype.triggerEntry = function(entryId, action, event2, autoActivate) {
  var entries = this._entries, entry, handler;
  entry = entries[entryId];
  if (!entry) {
    return;
  }
  handler = entry.action;
  if (this._eventBus.fire("palette.trigger", { entry, event: event2 }) === false) {
    return;
  }
  if (isFunction$1(handler)) {
    if (action === "click") {
      return handler(event2, autoActivate);
    }
  } else {
    if (handler[action]) {
      return handler[action](event2, autoActivate);
    }
  }
  event2.preventDefault();
};
Palette.prototype._layoutChanged = function() {
  this._toggleState({});
};
Palette.prototype._needsCollapse = function(availableHeight, entries) {
  var margin = 20 + 10 + 20;
  var entriesHeight = Object.keys(entries).length * 46;
  return availableHeight < entriesHeight + margin;
};
Palette.prototype.close = function() {
  this._toggleState({
    open: false,
    twoColumn: false
  });
};
Palette.prototype.open = function() {
  this._toggleState({ open: true });
};
Palette.prototype.toggle = function() {
  if (this.isOpen()) {
    this.close();
  } else {
    this.open();
  }
};
Palette.prototype.isActiveTool = function(tool) {
  return tool && this._activeTool === tool;
};
Palette.prototype.updateToolHighlight = function(name2) {
  var entriesContainer, toolsContainer;
  if (!this._toolsContainer) {
    entriesContainer = query(".djs-palette-entries", this._container);
    this._toolsContainer = query("[data-group=tools]", entriesContainer);
  }
  toolsContainer = this._toolsContainer;
  forEach$2(toolsContainer.children, function(tool) {
    var actionName = tool.getAttribute("data-action");
    if (!actionName) {
      return;
    }
    var toolClasses = classes$1(tool);
    actionName = actionName.replace("-tool", "");
    if (toolClasses.contains("entry") && actionName === name2) {
      toolClasses.add("highlighted-entry");
    } else {
      toolClasses.remove("highlighted-entry");
    }
  });
};
Palette.prototype.isOpen = function() {
  return classes$1(this._container).has(PALETTE_OPEN_CLS);
};
Palette.prototype._getParentContainer = function() {
  return this._canvas.getContainer();
};
Palette.HTML_MARKUP = '<div class="djs-palette"><div class="djs-palette-entries"></div><div class="djs-palette-toggle"></div></div>';
function addClasses(element, classNames) {
  var classes2 = classes$1(element);
  var actualClassNames = isArray$3(classNames) ? classNames : classNames.split(/\s+/g);
  actualClassNames.forEach(function(cls) {
    classes2.add(cls);
  });
}
function addPaletteEntries(entries, provider) {
  var entriesOrUpdater = provider.getPaletteEntries();
  if (isFunction$1(entriesOrUpdater)) {
    return entriesOrUpdater(entries);
  }
  forEach$2(entriesOrUpdater, function(entry, id) {
    entries[id] = entry;
  });
  return entries;
}
const PaletteModule$1 = {
  __init__: ["palette"],
  palette: ["type", Palette]
};
var LASSO_TOOL_CURSOR = "crosshair";
function LassoTool(eventBus, canvas, dragging, elementRegistry, selection, toolManager, mouse) {
  this._selection = selection;
  this._dragging = dragging;
  this._mouse = mouse;
  var self2 = this;
  var visuals = {
    create: function(context) {
      var container = canvas.getActiveLayer(), frame;
      frame = context.frame = create$1("rect");
      attr(frame, {
        class: "djs-lasso-overlay",
        width: 1,
        height: 1,
        x: 0,
        y: 0
      });
      append(container, frame);
    },
    update: function(context) {
      var frame = context.frame, bbox = context.bbox;
      attr(frame, {
        x: bbox.x,
        y: bbox.y,
        width: bbox.width,
        height: bbox.height
      });
    },
    remove: function(context) {
      if (context.frame) {
        remove(context.frame);
      }
    }
  };
  toolManager.registerTool("lasso", {
    tool: "lasso.selection",
    dragging: "lasso"
  });
  eventBus.on("lasso.selection.end", function(event2) {
    var target = event2.originalEvent.target;
    if (!event2.hover && !(target instanceof SVGElement)) {
      return;
    }
    eventBus.once("lasso.selection.ended", function() {
      self2.activateLasso(event2.originalEvent, true);
    });
  });
  eventBus.on("lasso.end", 0, function(event2) {
    var context = event2.context;
    var bbox = toBBox(event2);
    var elements = elementRegistry.filter(function(element) {
      return element;
    });
    var add2 = hasSecondaryModifier(event2);
    self2.select(elements, bbox, add2 ? context.selection : []);
  });
  eventBus.on("lasso.start", function(event2) {
    var context = event2.context;
    context.bbox = toBBox(event2);
    visuals.create(context);
    context.selection = selection.get();
  });
  eventBus.on("lasso.move", function(event2) {
    var context = event2.context;
    context.bbox = toBBox(event2);
    visuals.update(context);
  });
  eventBus.on("lasso.cleanup", function(event2) {
    var context = event2.context;
    visuals.remove(context);
  });
  eventBus.on("element.mousedown", 1500, function(event2) {
    if (!hasSecondaryModifier(event2)) {
      return;
    }
    self2.activateLasso(event2.originalEvent);
    return true;
  });
}
LassoTool.$inject = [
  "eventBus",
  "canvas",
  "dragging",
  "elementRegistry",
  "selection",
  "toolManager",
  "mouse"
];
LassoTool.prototype.activateLasso = function(event2, autoActivate) {
  this._dragging.init(event2, "lasso", {
    autoActivate,
    cursor: LASSO_TOOL_CURSOR,
    data: {
      context: {}
    }
  });
};
LassoTool.prototype.activateSelection = function(event2, autoActivate) {
  this._dragging.init(event2, "lasso.selection", {
    trapClick: false,
    autoActivate,
    cursor: LASSO_TOOL_CURSOR,
    data: {
      context: {}
    },
    keepSelection: true
  });
};
LassoTool.prototype.select = function(elements, bbox, previousSelection = []) {
  var selectedElements = getEnclosedElements(elements, bbox);
  this._selection.select([
    ...previousSelection,
    ...values$1(selectedElements)
  ]);
};
LassoTool.prototype.toggle = function() {
  if (this.isActive()) {
    return this._dragging.cancel();
  }
  var mouseEvent = this._mouse.getLastMoveEvent();
  this.activateSelection(mouseEvent, !!mouseEvent);
};
LassoTool.prototype.isActive = function() {
  var context = this._dragging.context();
  return context && /^lasso/.test(context.prefix);
};
function toBBox(event2) {
  var start = {
    x: event2.x - event2.dx,
    y: event2.y - event2.dy
  };
  var end = {
    x: event2.x,
    y: event2.y
  };
  var bbox;
  if (start.x <= end.x && start.y < end.y || start.x < end.x && start.y <= end.y) {
    bbox = {
      x: start.x,
      y: start.y,
      width: end.x - start.x,
      height: end.y - start.y
    };
  } else if (start.x >= end.x && start.y < end.y || start.x > end.x && start.y <= end.y) {
    bbox = {
      x: end.x,
      y: start.y,
      width: start.x - end.x,
      height: end.y - start.y
    };
  } else if (start.x <= end.x && start.y > end.y || start.x < end.x && start.y >= end.y) {
    bbox = {
      x: start.x,
      y: end.y,
      width: end.x - start.x,
      height: start.y - end.y
    };
  } else if (start.x >= end.x && start.y > end.y || start.x > end.x && start.y >= end.y) {
    bbox = {
      x: end.x,
      y: end.y,
      width: start.x - end.x,
      height: start.y - end.y
    };
  } else {
    bbox = {
      x: end.x,
      y: end.y,
      width: 0,
      height: 0
    };
  }
  return bbox;
}
const LassoToolModule = {
  __depends__: [
    ToolManagerModule,
    MouseModule
  ],
  __init__: ["lassoTool"],
  lassoTool: ["type", LassoTool]
};
var HIGH_PRIORITY$1 = 1500;
var HAND_CURSOR = "grab";
function HandTool(eventBus, canvas, dragging, injector, toolManager, mouse) {
  this._dragging = dragging;
  this._mouse = mouse;
  var self2 = this, keyboard = injector.get("keyboard", false);
  toolManager.registerTool("hand", {
    tool: "hand",
    dragging: "hand.move"
  });
  eventBus.on("element.mousedown", HIGH_PRIORITY$1, function(event2) {
    if (!hasPrimaryModifier(event2)) {
      return;
    }
    self2.activateMove(event2.originalEvent, true);
    return false;
  });
  keyboard && keyboard.addListener(HIGH_PRIORITY$1, function(e2) {
    if (!isSpace(e2.keyEvent) || self2.isActive()) {
      return;
    }
    var mouseEvent = self2._mouse.getLastMoveEvent();
    self2.activateMove(mouseEvent, !!mouseEvent);
  }, "keyboard.keydown");
  keyboard && keyboard.addListener(HIGH_PRIORITY$1, function(e2) {
    if (!isSpace(e2.keyEvent) || !self2.isActive()) {
      return;
    }
    self2.toggle();
  }, "keyboard.keyup");
  eventBus.on("hand.end", function(event2) {
    var target = event2.originalEvent.target;
    if (!event2.hover && !(target instanceof SVGElement)) {
      return false;
    }
    eventBus.once("hand.ended", function() {
      self2.activateMove(event2.originalEvent, { reactivate: true });
    });
  });
  eventBus.on("hand.move.move", function(event2) {
    var scale = canvas.viewbox().scale;
    canvas.scroll({
      dx: event2.dx * scale,
      dy: event2.dy * scale
    });
  });
  eventBus.on("hand.move.end", function(event2) {
    var context = event2.context, reactivate = context.reactivate;
    if (!hasPrimaryModifier(event2) && reactivate) {
      eventBus.once("hand.move.ended", function(event3) {
        self2.activateHand(event3.originalEvent, true, true);
      });
    }
    return false;
  });
}
HandTool.$inject = [
  "eventBus",
  "canvas",
  "dragging",
  "injector",
  "toolManager",
  "mouse"
];
HandTool.prototype.activateMove = function(event2, autoActivate, context) {
  if (typeof autoActivate === "object") {
    context = autoActivate;
    autoActivate = false;
  }
  this._dragging.init(event2, "hand.move", {
    autoActivate,
    cursor: HAND_CURSOR,
    data: {
      context: context || {}
    }
  });
};
HandTool.prototype.activateHand = function(event2, autoActivate, reactivate) {
  this._dragging.init(event2, "hand", {
    trapClick: false,
    autoActivate,
    cursor: HAND_CURSOR,
    data: {
      context: {
        reactivate
      }
    }
  });
};
HandTool.prototype.toggle = function() {
  if (this.isActive()) {
    return this._dragging.cancel();
  }
  var mouseEvent = this._mouse.getLastMoveEvent();
  this.activateHand(mouseEvent, !!mouseEvent);
};
HandTool.prototype.isActive = function() {
  var context = this._dragging.context();
  if (context) {
    return /^(hand|hand\.move)$/.test(context.prefix);
  }
  return false;
};
function isSpace(keyEvent) {
  return isKey("Space", keyEvent);
}
const HandToolModule = {
  __depends__: [
    ToolManagerModule,
    MouseModule
  ],
  __init__: ["handTool"],
  handTool: ["type", HandTool]
};
var MARKER_OK = "connect-ok", MARKER_NOT_OK = "connect-not-ok";
function GlobalConnect(eventBus, dragging, connect, canvas, toolManager, rules2, mouse) {
  var self2 = this;
  this._dragging = dragging;
  this._rules = rules2;
  this._mouse = mouse;
  toolManager.registerTool("global-connect", {
    tool: "global-connect",
    dragging: "global-connect.drag"
  });
  eventBus.on("global-connect.hover", function(event2) {
    var context = event2.context, startTarget = event2.hover;
    var canStartConnect = context.canStartConnect = self2.canStartConnect(startTarget);
    if (canStartConnect === null) {
      return;
    }
    context.startTarget = startTarget;
    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);
  });
  eventBus.on(["global-connect.out", "global-connect.cleanup"], function(event2) {
    var startTarget = event2.context.startTarget, canStartConnect = event2.context.canStartConnect;
    if (startTarget) {
      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);
    }
  });
  eventBus.on(["global-connect.ended"], function(event2) {
    var context = event2.context, startTarget = context.startTarget, startPosition = {
      x: event2.x,
      y: event2.y
    };
    var canStartConnect = self2.canStartConnect(startTarget);
    if (!canStartConnect) {
      return;
    }
    eventBus.once("element.out", function() {
      eventBus.once(["connect.ended", "connect.canceled"], function() {
        eventBus.fire("global-connect.drag.ended");
      });
      connect.start(null, startTarget, startPosition);
    });
    return false;
  });
}
GlobalConnect.$inject = [
  "eventBus",
  "dragging",
  "connect",
  "canvas",
  "toolManager",
  "rules",
  "mouse"
];
GlobalConnect.prototype.start = function(event2, autoActivate) {
  this._dragging.init(event2, "global-connect", {
    autoActivate,
    trapClick: false,
    data: {
      context: {}
    }
  });
};
GlobalConnect.prototype.toggle = function() {
  if (this.isActive()) {
    return this._dragging.cancel();
  }
  var mouseEvent = this._mouse.getLastMoveEvent();
  return this.start(mouseEvent, !!mouseEvent);
};
GlobalConnect.prototype.isActive = function() {
  var context = this._dragging.context();
  return context && /^global-connect/.test(context.prefix);
};
GlobalConnect.prototype.canStartConnect = function(startTarget) {
  return this._rules.allowed("connection.start", { source: startTarget });
};
const GlobalConnectModule = {
  __depends__: [
    ConnectModule,
    RulesModule$1,
    DraggingModule,
    ToolManagerModule,
    MouseModule
  ],
  globalConnect: ["type", GlobalConnect]
};
function PaletteProvider(palette, create2, elementFactory, spaceTool, lassoTool, handTool, globalConnect, translate2) {
  this._palette = palette;
  this._create = create2;
  this._elementFactory = elementFactory;
  this._spaceTool = spaceTool;
  this._lassoTool = lassoTool;
  this._handTool = handTool;
  this._globalConnect = globalConnect;
  this._translate = translate2;
  palette.registerProvider(this);
}
PaletteProvider.$inject = [
  "palette",
  "create",
  "elementFactory",
  "spaceTool",
  "lassoTool",
  "handTool",
  "globalConnect",
  "translate"
];
PaletteProvider.prototype.getPaletteEntries = function() {
  var actions = {}, create2 = this._create, elementFactory = this._elementFactory, spaceTool = this._spaceTool, lassoTool = this._lassoTool, handTool = this._handTool, globalConnect = this._globalConnect, translate2 = this._translate;
  function createAction(type, group, className, title, options) {
    function createListener(event2) {
      var shape = elementFactory.createShape(assign$2({ type }, options));
      create2.start(event2, shape);
    }
    return {
      group,
      className,
      title,
      action: {
        dragstart: createListener,
        click: createListener
      }
    };
  }
  function createSubprocess(event2) {
    var subProcess = elementFactory.createShape({
      type: "bpmn:SubProcess",
      x: 0,
      y: 0,
      isExpanded: true
    });
    var startEvent = elementFactory.createShape({
      type: "bpmn:StartEvent",
      x: 40,
      y: 82,
      parent: subProcess
    });
    create2.start(event2, [subProcess, startEvent], {
      hints: {
        autoSelect: [subProcess]
      }
    });
  }
  function createParticipant(event2) {
    create2.start(event2, elementFactory.createParticipantShape());
  }
  assign$2(actions, {
    "hand-tool": {
      group: "tools",
      className: "bpmn-icon-hand-tool",
      title: translate2("Activate hand tool"),
      action: {
        click: function(event2) {
          handTool.activateHand(event2);
        }
      }
    },
    "lasso-tool": {
      group: "tools",
      className: "bpmn-icon-lasso-tool",
      title: translate2("Activate lasso tool"),
      action: {
        click: function(event2) {
          lassoTool.activateSelection(event2);
        }
      }
    },
    "space-tool": {
      group: "tools",
      className: "bpmn-icon-space-tool",
      title: translate2("Activate create/remove space tool"),
      action: {
        click: function(event2) {
          spaceTool.activateSelection(event2);
        }
      }
    },
    "global-connect-tool": {
      group: "tools",
      className: "bpmn-icon-connection-multi",
      title: translate2("Activate global connect tool"),
      action: {
        click: function(event2) {
          globalConnect.start(event2);
        }
      }
    },
    "tool-separator": {
      group: "tools",
      separator: true
    },
    "create.start-event": createAction(
      "bpmn:StartEvent",
      "event",
      "bpmn-icon-start-event-none",
      translate2("Create start event")
    ),
    "create.intermediate-event": createAction(
      "bpmn:IntermediateThrowEvent",
      "event",
      "bpmn-icon-intermediate-event-none",
      translate2("Create intermediate/boundary event")
    ),
    "create.end-event": createAction(
      "bpmn:EndEvent",
      "event",
      "bpmn-icon-end-event-none",
      translate2("Create end event")
    ),
    "create.exclusive-gateway": createAction(
      "bpmn:ExclusiveGateway",
      "gateway",
      "bpmn-icon-gateway-none",
      translate2("Create gateway")
    ),
    "create.task": createAction(
      "bpmn:Task",
      "activity",
      "bpmn-icon-task",
      translate2("Create task")
    ),
    "create.data-object": createAction(
      "bpmn:DataObjectReference",
      "data-object",
      "bpmn-icon-data-object",
      translate2("Create data object reference")
    ),
    "create.data-store": createAction(
      "bpmn:DataStoreReference",
      "data-store",
      "bpmn-icon-data-store",
      translate2("Create data store reference")
    ),
    "create.subprocess-expanded": {
      group: "activity",
      className: "bpmn-icon-subprocess-expanded",
      title: translate2("Create expanded sub-process"),
      action: {
        dragstart: createSubprocess,
        click: createSubprocess
      }
    },
    "create.participant-expanded": {
      group: "collaboration",
      className: "bpmn-icon-participant",
      title: translate2("Create pool/participant"),
      action: {
        dragstart: createParticipant,
        click: createParticipant
      }
    },
    "create.group": createAction(
      "bpmn:Group",
      "artifact",
      "bpmn-icon-group",
      translate2("Create group")
    )
  });
  return actions;
};
const PaletteModule = {
  __depends__: [
    PaletteModule$1,
    CreateModule,
    SpaceToolModule,
    LassoToolModule,
    HandToolModule,
    GlobalConnectModule,
    TranslateModule
  ],
  __init__: ["paletteProvider"],
  paletteProvider: ["type", PaletteProvider]
};
var LOW_PRIORITY$1 = 250;
function BpmnReplacePreview(eventBus, elementRegistry, elementFactory, canvas, previewSupport) {
  CommandInterceptor.call(this, eventBus);
  function replaceVisual(context) {
    var replacements = context.canExecute.replacements;
    forEach$2(replacements, function(replacement) {
      var id = replacement.oldElementId;
      var newElement = {
        type: replacement.newElementType
      };
      if (context.visualReplacements[id]) {
        return;
      }
      var element = elementRegistry.get(id);
      assign$2(newElement, { x: element.x, y: element.y });
      var tempShape = elementFactory.createShape(newElement);
      canvas.addShape(tempShape, element.parent);
      var gfx = query('[data-element-id="' + escapeCSS(element.id) + '"]', context.dragGroup);
      if (gfx) {
        attr(gfx, { display: "none" });
      }
      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);
      context.visualReplacements[id] = dragger;
      canvas.removeShape(tempShape);
    });
  }
  function restoreVisual(context) {
    var visualReplacements = context.visualReplacements;
    forEach$2(visualReplacements, function(dragger, id) {
      var originalGfx = query('[data-element-id="' + escapeCSS(id) + '"]', context.dragGroup);
      if (originalGfx) {
        attr(originalGfx, { display: "inline" });
      }
      dragger.remove();
      if (visualReplacements[id]) {
        delete visualReplacements[id];
      }
    });
  }
  eventBus.on("shape.move.move", LOW_PRIORITY$1, function(event2) {
    var context = event2.context, canExecute = context.canExecute;
    if (!context.visualReplacements) {
      context.visualReplacements = {};
    }
    if (canExecute && canExecute.replacements) {
      replaceVisual(context);
    } else {
      restoreVisual(context);
    }
  });
}
BpmnReplacePreview.$inject = [
  "eventBus",
  "elementRegistry",
  "elementFactory",
  "canvas",
  "previewSupport"
];
e$3(BpmnReplacePreview, CommandInterceptor);
const ReplacePreviewModule = {
  __depends__: [
    PreviewSupportModule
  ],
  __init__: ["bpmnReplacePreview"],
  bpmnReplacePreview: ["type", BpmnReplacePreview]
};
var HIGHER_PRIORITY$2 = 1250;
var BOUNDARY_TO_HOST_THRESHOLD = 40;
var TARGET_BOUNDS_PADDING = 20, TASK_BOUNDS_PADDING = 10;
var TARGET_CENTER_PADDING = 20;
var AXES = ["x", "y"];
var abs = Math.abs;
function BpmnConnectSnapping(eventBus) {
  eventBus.on([
    "connect.hover",
    "connect.move",
    "connect.end"
  ], HIGHER_PRIORITY$2, function(event2) {
    var context = event2.context, canExecute = context.canExecute, start = context.start, hover = context.hover, source2 = context.source, target = context.target;
    if (event2.originalEvent && isCmd(event2.originalEvent)) {
      return;
    }
    if (!context.initialConnectionStart) {
      context.initialConnectionStart = context.connectionStart;
    }
    if (canExecute && hover) {
      snapToShape(event2, hover, getTargetBoundsPadding(hover));
    }
    if (hover && isAnyType(canExecute, [
      "bpmn:Association",
      "bpmn:DataInputAssociation",
      "bpmn:DataOutputAssociation",
      "bpmn:SequenceFlow"
    ])) {
      context.connectionStart = mid$2(start);
      if (isAny$7(hover, ["bpmn:Event", "bpmn:Gateway"])) {
        snapToPosition(event2, mid$2(hover));
      }
      if (isAny$7(hover, ["bpmn:Task", "bpmn:SubProcess"])) {
        snapToTargetMid(event2, hover);
      }
      if (is$g(source2, "bpmn:BoundaryEvent") && target === source2.host) {
        snapBoundaryEventLoop(event2);
      }
    } else if (isType(canExecute, "bpmn:MessageFlow")) {
      if (is$g(start, "bpmn:Event")) {
        context.connectionStart = mid$2(start);
      }
      if (is$g(hover, "bpmn:Event")) {
        snapToPosition(event2, mid$2(hover));
      }
    } else {
      context.connectionStart = context.initialConnectionStart;
    }
  });
}
BpmnConnectSnapping.$inject = ["eventBus"];
function snapToShape(event2, target, padding) {
  AXES.forEach(function(axis) {
    var dimensionForAxis = getDimensionForAxis(axis, target);
    if (event2[axis] < target[axis] + padding) {
      setSnapped(event2, axis, target[axis] + padding);
    } else if (event2[axis] > target[axis] + dimensionForAxis - padding) {
      setSnapped(event2, axis, target[axis] + dimensionForAxis - padding);
    }
  });
}
function snapToTargetMid(event2, target) {
  var targetMid = mid$2(target);
  AXES.forEach(function(axis) {
    if (isMid(event2, target, axis)) {
      setSnapped(event2, axis, targetMid[axis]);
    }
  });
}
function snapBoundaryEventLoop(event2) {
  var context = event2.context, source2 = context.source, target = context.target;
  if (isReverse(context)) {
    return;
  }
  var sourceMid = mid$2(source2), orientation = getOrientation(sourceMid, target, -10), axes = [];
  if (/top|bottom/.test(orientation)) {
    axes.push("x");
  }
  if (/left|right/.test(orientation)) {
    axes.push("y");
  }
  axes.forEach(function(axis) {
    var coordinate = event2[axis], newCoordinate;
    if (abs(coordinate - sourceMid[axis]) < BOUNDARY_TO_HOST_THRESHOLD) {
      if (coordinate > sourceMid[axis]) {
        newCoordinate = sourceMid[axis] + BOUNDARY_TO_HOST_THRESHOLD;
      } else {
        newCoordinate = sourceMid[axis] - BOUNDARY_TO_HOST_THRESHOLD;
      }
      setSnapped(event2, axis, newCoordinate);
    }
  });
}
function snapToPosition(event2, position) {
  setSnapped(event2, "x", position.x);
  setSnapped(event2, "y", position.y);
}
function isType(attrs, type) {
  return attrs && attrs.type === type;
}
function isAnyType(attrs, types2) {
  return some$1(types2, function(type) {
    return isType(attrs, type);
  });
}
function getDimensionForAxis(axis, element) {
  return axis === "x" ? element.width : element.height;
}
function getTargetBoundsPadding(target) {
  if (is$g(target, "bpmn:Task")) {
    return TASK_BOUNDS_PADDING;
  } else {
    return TARGET_BOUNDS_PADDING;
  }
}
function isMid(event2, target, axis) {
  return event2[axis] > target[axis] + TARGET_CENTER_PADDING && event2[axis] < target[axis] + getDimensionForAxis(axis, target) - TARGET_CENTER_PADDING;
}
function isReverse(context) {
  var hover = context.hover, source2 = context.source;
  return hover && source2 && hover === source2;
}
function SnapContext() {
  this._targets = {};
  this._snapOrigins = {};
  this._snapLocations = [];
  this._defaultSnaps = {};
}
SnapContext.prototype.getSnapOrigin = function(snapLocation) {
  return this._snapOrigins[snapLocation];
};
SnapContext.prototype.setSnapOrigin = function(snapLocation, snapOrigin) {
  this._snapOrigins[snapLocation] = snapOrigin;
  if (this._snapLocations.indexOf(snapLocation) === -1) {
    this._snapLocations.push(snapLocation);
  }
};
SnapContext.prototype.addDefaultSnap = function(snapLocation, point) {
  var snapValues = this._defaultSnaps[snapLocation];
  if (!snapValues) {
    snapValues = this._defaultSnaps[snapLocation] = [];
  }
  snapValues.push(point);
};
SnapContext.prototype.getSnapLocations = function() {
  return this._snapLocations;
};
SnapContext.prototype.setSnapLocations = function(snapLocations) {
  this._snapLocations = snapLocations;
};
SnapContext.prototype.pointsForTarget = function(target) {
  var targetId = target.id || target;
  var snapPoints = this._targets[targetId];
  if (!snapPoints) {
    snapPoints = this._targets[targetId] = new SnapPoints();
    snapPoints.initDefaults(this._defaultSnaps);
  }
  return snapPoints;
};
function SnapPoints() {
  this._snapValues = {};
}
SnapPoints.prototype.add = function(snapLocation, point) {
  var snapValues = this._snapValues[snapLocation];
  if (!snapValues) {
    snapValues = this._snapValues[snapLocation] = { x: [], y: [] };
  }
  if (snapValues.x.indexOf(point.x) === -1) {
    snapValues.x.push(point.x);
  }
  if (snapValues.y.indexOf(point.y) === -1) {
    snapValues.y.push(point.y);
  }
};
SnapPoints.prototype.snap = function(point, snapLocation, axis, tolerance) {
  var snappingValues = this._snapValues[snapLocation];
  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);
};
SnapPoints.prototype.initDefaults = function(defaultSnaps) {
  var self2 = this;
  forEach$2(defaultSnaps || {}, function(snapPoints, snapLocation) {
    forEach$2(snapPoints, function(point) {
      self2.add(snapLocation, point);
    });
  });
};
var HIGHER_PRIORITY$1 = 1250;
function CreateMoveSnapping(elementRegistry, eventBus, snapping) {
  var self2 = this;
  this._elementRegistry = elementRegistry;
  eventBus.on([
    "create.start",
    "shape.move.start"
  ], function(event2) {
    self2.initSnap(event2);
  });
  eventBus.on([
    "create.move",
    "create.end",
    "shape.move.move",
    "shape.move.end"
  ], HIGHER_PRIORITY$1, function(event2) {
    var context = event2.context, shape = context.shape, snapContext = context.snapContext, target = context.target;
    if (event2.originalEvent && isCmd(event2.originalEvent)) {
      return;
    }
    if (isSnapped(event2) || !target) {
      return;
    }
    var snapPoints = snapContext.pointsForTarget(target);
    if (!snapPoints.initialized) {
      snapPoints = self2.addSnapTargetPoints(snapPoints, shape, target);
      snapPoints.initialized = true;
    }
    snapping.snap(event2, snapPoints);
  });
  eventBus.on([
    "create.cleanup",
    "shape.move.cleanup"
  ], function() {
    snapping.hide();
  });
}
CreateMoveSnapping.$inject = [
  "elementRegistry",
  "eventBus",
  "snapping"
];
CreateMoveSnapping.prototype.initSnap = function(event2) {
  var elementRegistry = this._elementRegistry;
  var context = event2.context, shape = context.shape, snapContext = context.snapContext;
  if (!snapContext) {
    snapContext = context.snapContext = new SnapContext();
  }
  var shapeMid;
  if (elementRegistry.get(shape.id)) {
    shapeMid = mid$2(shape, event2);
  } else {
    shapeMid = {
      x: event2.x + mid$2(shape).x,
      y: event2.y + mid$2(shape).y
    };
  }
  var shapeTopLeft = {
    x: shapeMid.x - shape.width / 2,
    y: shapeMid.y - shape.height / 2
  }, shapeBottomRight = {
    x: shapeMid.x + shape.width / 2,
    y: shapeMid.y + shape.height / 2
  };
  snapContext.setSnapOrigin("mid", {
    x: shapeMid.x - event2.x,
    y: shapeMid.y - event2.y
  });
  if (isLabel(shape)) {
    return snapContext;
  }
  snapContext.setSnapOrigin("top-left", {
    x: shapeTopLeft.x - event2.x,
    y: shapeTopLeft.y - event2.y
  });
  snapContext.setSnapOrigin("bottom-right", {
    x: shapeBottomRight.x - event2.x,
    y: shapeBottomRight.y - event2.y
  });
  return snapContext;
};
CreateMoveSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target) {
  var snapTargets = this.getSnapTargets(shape, target);
  forEach$2(snapTargets, function(snapTarget) {
    if (isLabel(snapTarget)) {
      if (isLabel(shape)) {
        snapPoints.add("mid", mid$2(snapTarget));
      }
      return;
    }
    if (isConnection(snapTarget)) {
      if (snapTarget.waypoints.length < 3) {
        return;
      }
      var waypoints = snapTarget.waypoints.slice(1, -1);
      forEach$2(waypoints, function(waypoint) {
        snapPoints.add("mid", waypoint);
      });
      return;
    }
    snapPoints.add("mid", mid$2(snapTarget));
  });
  if (!isNumber$1(shape.x) || !isNumber$1(shape.y)) {
    return snapPoints;
  }
  if (this._elementRegistry.get(shape.id)) {
    snapPoints.add("mid", mid$2(shape));
  }
  return snapPoints;
};
CreateMoveSnapping.prototype.getSnapTargets = function(shape, target) {
  return getChildren(target).filter(function(child) {
    return !isHidden$1(child);
  });
};
function isHidden$1(element) {
  return !!element.hidden;
}
var HIGH_PRIORITY = 1500;
function BpmnCreateMoveSnapping(eventBus, injector) {
  injector.invoke(CreateMoveSnapping, this);
  eventBus.on(["create.move", "create.end"], HIGH_PRIORITY, setSnappedIfConstrained);
  eventBus.on([
    "create.move",
    "create.end",
    "shape.move.move",
    "shape.move.end"
  ], HIGH_PRIORITY, function(event2) {
    var context = event2.context, canExecute = context.canExecute, target = context.target;
    var canAttach2 = canExecute && (canExecute === "attach" || canExecute.attach);
    if (canAttach2 && !isSnapped(event2)) {
      snapBoundaryEvent(event2, target);
    }
  });
}
e$3(BpmnCreateMoveSnapping, CreateMoveSnapping);
BpmnCreateMoveSnapping.$inject = [
  "eventBus",
  "injector"
];
BpmnCreateMoveSnapping.prototype.initSnap = function(event2) {
  var snapContext = CreateMoveSnapping.prototype.initSnap.call(this, event2);
  var shape = event2.shape;
  var isMove = !!this._elementRegistry.get(shape.id);
  forEach$2(shape.outgoing, function(connection) {
    var docking = connection.waypoints[0];
    docking = docking.original || docking;
    snapContext.setSnapOrigin(connection.id + "-docking", getDockingSnapOrigin(docking, isMove, event2));
  });
  forEach$2(shape.incoming, function(connection) {
    var docking = connection.waypoints[connection.waypoints.length - 1];
    docking = docking.original || docking;
    snapContext.setSnapOrigin(connection.id + "-docking", getDockingSnapOrigin(docking, isMove, event2));
  });
  if (is$g(shape, "bpmn:Participant")) {
    snapContext.setSnapLocations(["top-left", "bottom-right", "mid"]);
  }
  return snapContext;
};
BpmnCreateMoveSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target) {
  CreateMoveSnapping.prototype.addSnapTargetPoints.call(this, snapPoints, shape, target);
  var snapTargets = this.getSnapTargets(shape, target);
  forEach$2(snapTargets, function(snapTarget) {
    if (isContainer(snapTarget) || areAll([shape, snapTarget], "bpmn:TextAnnotation")) {
      snapPoints.add("top-left", topLeft(snapTarget));
      snapPoints.add("bottom-right", bottomRight(snapTarget));
    }
  });
  var elementRegistry = this._elementRegistry;
  forEach$2(shape.incoming, function(connection) {
    if (elementRegistry.get(shape.id)) {
      if (!includes(snapTargets, connection.source)) {
        snapPoints.add("mid", getMid(connection.source));
      }
      var docking = connection.waypoints[0];
      snapPoints.add(connection.id + "-docking", docking.original || docking);
    }
  });
  forEach$2(shape.outgoing, function(connection) {
    if (elementRegistry.get(shape.id)) {
      if (!includes(snapTargets, connection.target)) {
        snapPoints.add("mid", getMid(connection.target));
      }
      var docking = connection.waypoints[connection.waypoints.length - 1];
      snapPoints.add(connection.id + "-docking", docking.original || docking);
    }
  });
  if (is$g(target, "bpmn:SequenceFlow")) {
    snapPoints = this.addSnapTargetPoints(snapPoints, shape, target.parent);
  }
  return snapPoints;
};
BpmnCreateMoveSnapping.prototype.getSnapTargets = function(shape, target) {
  return CreateMoveSnapping.prototype.getSnapTargets.call(this, shape, target).filter(function(snapTarget) {
    return !is$g(snapTarget, "bpmn:Lane");
  });
};
function snapBoundaryEvent(event2, target) {
  var targetTRBL = asTRBL(target);
  var direction = getBoundaryAttachment(event2, target);
  var context = event2.context, shape = context.shape;
  var offset;
  if (shape.parent) {
    offset = { x: 0, y: 0 };
  } else {
    offset = getMid(shape);
  }
  if (/top/.test(direction)) {
    setSnapped(event2, "y", targetTRBL.top - offset.y);
  } else if (/bottom/.test(direction)) {
    setSnapped(event2, "y", targetTRBL.bottom - offset.y);
  }
  if (/left/.test(direction)) {
    setSnapped(event2, "x", targetTRBL.left - offset.x);
  } else if (/right/.test(direction)) {
    setSnapped(event2, "x", targetTRBL.right - offset.x);
  }
}
function areAll(elements, type) {
  return elements.every(function(el) {
    return is$g(el, type);
  });
}
function isContainer(element) {
  if (is$g(element, "bpmn:SubProcess") && isExpanded(element)) {
    return true;
  }
  return is$g(element, "bpmn:Participant");
}
function setSnappedIfConstrained(event2) {
  var context = event2.context, createConstraints = context.createConstraints;
  if (!createConstraints) {
    return;
  }
  var top = createConstraints.top, right = createConstraints.right, bottom = createConstraints.bottom, left = createConstraints.left;
  if (left && left >= event2.x || right && right <= event2.x) {
    setSnapped(event2, "x", event2.x);
  }
  if (top && top >= event2.y || bottom && bottom <= event2.y) {
    setSnapped(event2, "y", event2.y);
  }
}
function includes(array, value) {
  return array.indexOf(value) !== -1;
}
function getDockingSnapOrigin(docking, isMove, event2) {
  return isMove ? {
    x: docking.x - event2.x,
    y: docking.y - event2.y
  } : {
    x: docking.x,
    y: docking.y
  };
}
var HIGHER_PRIORITY = 1250;
function ResizeSnapping(eventBus, snapping) {
  var self2 = this;
  eventBus.on(["resize.start"], function(event2) {
    self2.initSnap(event2);
  });
  eventBus.on([
    "resize.move",
    "resize.end"
  ], HIGHER_PRIORITY, function(event2) {
    var context = event2.context, shape = context.shape, parent = shape.parent, direction = context.direction, snapContext = context.snapContext;
    if (event2.originalEvent && isCmd(event2.originalEvent)) {
      return;
    }
    if (isSnapped(event2)) {
      return;
    }
    var snapPoints = snapContext.pointsForTarget(parent);
    if (!snapPoints.initialized) {
      snapPoints = self2.addSnapTargetPoints(snapPoints, shape, parent, direction);
      snapPoints.initialized = true;
    }
    if (isHorizontal(direction)) {
      setSnapped(event2, "x", event2.x);
    }
    if (isVertical(direction)) {
      setSnapped(event2, "y", event2.y);
    }
    snapping.snap(event2, snapPoints);
  });
  eventBus.on(["resize.cleanup"], function() {
    snapping.hide();
  });
}
ResizeSnapping.prototype.initSnap = function(event2) {
  var context = event2.context, shape = context.shape, direction = context.direction, snapContext = context.snapContext;
  if (!snapContext) {
    snapContext = context.snapContext = new SnapContext();
  }
  var snapOrigin = getSnapOrigin(shape, direction);
  snapContext.setSnapOrigin("corner", {
    x: snapOrigin.x - event2.x,
    y: snapOrigin.y - event2.y
  });
  return snapContext;
};
ResizeSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target, direction) {
  var snapTargets = this.getSnapTargets(shape, target);
  forEach$2(snapTargets, function(snapTarget) {
    snapPoints.add("corner", bottomRight(snapTarget));
    snapPoints.add("corner", topLeft(snapTarget));
  });
  snapPoints.add("corner", getSnapOrigin(shape, direction));
  return snapPoints;
};
ResizeSnapping.$inject = [
  "eventBus",
  "snapping"
];
ResizeSnapping.prototype.getSnapTargets = function(shape, target) {
  return getChildren(target).filter(function(child) {
    return !isAttached(child, shape) && !isConnection(child) && !isHidden(child) && !isLabel(child);
  });
};
function getSnapOrigin(shape, direction) {
  var mid2 = getMid(shape), trbl = asTRBL(shape);
  var snapOrigin = {
    x: mid2.x,
    y: mid2.y
  };
  if (direction.indexOf("n") !== -1) {
    snapOrigin.y = trbl.top;
  } else if (direction.indexOf("s") !== -1) {
    snapOrigin.y = trbl.bottom;
  }
  if (direction.indexOf("e") !== -1) {
    snapOrigin.x = trbl.right;
  } else if (direction.indexOf("w") !== -1) {
    snapOrigin.x = trbl.left;
  }
  return snapOrigin;
}
function isAttached(element, host) {
  return element.host === host;
}
function isHidden(element) {
  return !!element.hidden;
}
function isHorizontal(direction) {
  return direction === "n" || direction === "s";
}
function isVertical(direction) {
  return direction === "e" || direction === "w";
}
var SNAP_TOLERANCE = 7;
var SNAP_LINE_HIDE_DELAY = 1e3;
function Snapping(canvas) {
  this._canvas = canvas;
  this._asyncHide = debounce$1(bind$3(this.hide, this), SNAP_LINE_HIDE_DELAY);
}
Snapping.$inject = ["canvas"];
Snapping.prototype.snap = function(event2, snapPoints) {
  var context = event2.context, snapContext = context.snapContext, snapLocations = snapContext.getSnapLocations();
  var snapping = {
    x: isSnapped(event2, "x"),
    y: isSnapped(event2, "y")
  };
  forEach$2(snapLocations, function(location) {
    var snapOrigin = snapContext.getSnapOrigin(location);
    var snapCurrent = {
      x: event2.x + snapOrigin.x,
      y: event2.y + snapOrigin.y
    };
    forEach$2(["x", "y"], function(axis) {
      var locationSnapping;
      if (!snapping[axis]) {
        locationSnapping = snapPoints.snap(snapCurrent, location, axis, SNAP_TOLERANCE);
        if (locationSnapping !== void 0) {
          snapping[axis] = {
            value: locationSnapping,
            originValue: locationSnapping - snapOrigin[axis]
          };
        }
      }
    });
    if (snapping.x && snapping.y) {
      return false;
    }
  });
  this.showSnapLine("vertical", snapping.x && snapping.x.value);
  this.showSnapLine("horizontal", snapping.y && snapping.y.value);
  forEach$2(["x", "y"], function(axis) {
    var axisSnapping = snapping[axis];
    if (isObject$1(axisSnapping)) {
      setSnapped(event2, axis, axisSnapping.originValue);
    }
  });
};
Snapping.prototype._createLine = function(orientation) {
  var root = this._canvas.getLayer("snap");
  var line = create$1("path");
  attr(line, { d: "M0,0 L0,0" });
  classes(line).add("djs-snap-line");
  append(root, line);
  return {
    update: function(position) {
      if (!isNumber$1(position)) {
        attr(line, { display: "none" });
      } else {
        if (orientation === "horizontal") {
          attr(line, {
            d: "M-100000," + position + " L+100000," + position,
            display: ""
          });
        } else {
          attr(line, {
            d: "M " + position + ",-100000 L " + position + ", +100000",
            display: ""
          });
        }
      }
    }
  };
};
Snapping.prototype._createSnapLines = function() {
  this._snapLines = {
    horizontal: this._createLine("horizontal"),
    vertical: this._createLine("vertical")
  };
};
Snapping.prototype.showSnapLine = function(orientation, position) {
  var line = this.getSnapLine(orientation);
  if (line) {
    line.update(position);
  }
  this._asyncHide();
};
Snapping.prototype.getSnapLine = function(orientation) {
  if (!this._snapLines) {
    this._createSnapLines();
  }
  return this._snapLines[orientation];
};
Snapping.prototype.hide = function() {
  forEach$2(this._snapLines, function(snapLine) {
    snapLine.update();
  });
};
const SnappingModule$1 = {
  __init__: [
    "createMoveSnapping",
    "resizeSnapping",
    "snapping"
  ],
  createMoveSnapping: ["type", CreateMoveSnapping],
  resizeSnapping: ["type", ResizeSnapping],
  snapping: ["type", Snapping]
};
const SnappingModule = {
  __depends__: [SnappingModule$1],
  __init__: [
    "connectSnapping",
    "createMoveSnapping"
  ],
  connectSnapping: ["type", BpmnConnectSnapping],
  createMoveSnapping: ["type", BpmnCreateMoveSnapping]
};
function SearchPad(canvas, eventBus, overlays, selection, translate2) {
  this._open = false;
  this._results = [];
  this._eventMaps = [];
  this._canvas = canvas;
  this._eventBus = eventBus;
  this._overlays = overlays;
  this._selection = selection;
  this._translate = translate2;
  this._container = this._getBoxHtml();
  this._searchInput = query(SearchPad.INPUT_SELECTOR, this._container);
  this._resultsContainer = query(SearchPad.RESULTS_CONTAINER_SELECTOR, this._container);
  this._canvas.getContainer().appendChild(this._container);
  eventBus.on(["canvas.destroy", "diagram.destroy"], this.close, this);
}
SearchPad.$inject = [
  "canvas",
  "eventBus",
  "overlays",
  "selection",
  "translate"
];
SearchPad.prototype._bindEvents = function() {
  var self2 = this;
  function listen(el, selector, type, fn) {
    self2._eventMaps.push({
      el,
      type,
      listener: delegate.bind(el, selector, type, fn)
    });
  }
  listen(document, "html", "click", function(e2) {
    self2.close();
  });
  listen(this._container, SearchPad.INPUT_SELECTOR, "click", function(e2) {
    e2.stopPropagation();
    e2.delegateTarget.focus();
  });
  listen(this._container, SearchPad.RESULT_SELECTOR, "mouseover", function(e2) {
    e2.stopPropagation();
    self2._scrollToNode(e2.delegateTarget);
    self2._preselect(e2.delegateTarget);
  });
  listen(this._container, SearchPad.RESULT_SELECTOR, "click", function(e2) {
    e2.stopPropagation();
    self2._select(e2.delegateTarget);
  });
  listen(this._container, SearchPad.INPUT_SELECTOR, "keydown", function(e2) {
    if (isKey("ArrowUp", e2)) {
      e2.preventDefault();
    }
    if (isKey("ArrowDown", e2)) {
      e2.preventDefault();
    }
  });
  listen(this._container, SearchPad.INPUT_SELECTOR, "keyup", function(e2) {
    if (isKey("Escape", e2)) {
      return self2.close();
    }
    if (isKey("Enter", e2)) {
      var selected = self2._getCurrentResult();
      return selected ? self2._select(selected) : self2.close();
    }
    if (isKey("ArrowUp", e2)) {
      return self2._scrollToDirection(true);
    }
    if (isKey("ArrowDown", e2)) {
      return self2._scrollToDirection();
    }
    if (isKey(["ArrowLeft", "ArrowRight"], e2)) {
      return;
    }
    self2._search(e2.delegateTarget.value);
  });
};
SearchPad.prototype._unbindEvents = function() {
  this._eventMaps.forEach(function(m2) {
    delegate.unbind(m2.el, m2.type, m2.listener);
  });
};
SearchPad.prototype._search = function(pattern) {
  var self2 = this;
  this._clearResults();
  if (!pattern || pattern === "") {
    return;
  }
  var searchResults = this._searchProvider.find(pattern);
  if (!searchResults.length) {
    return;
  }
  searchResults.forEach(function(result) {
    var id = result.element.id;
    var node3 = self2._createResultNode(result, id);
    self2._results[id] = {
      element: result.element,
      node: node3
    };
  });
  var node2 = query(SearchPad.RESULT_SELECTOR, this._resultsContainer);
  this._scrollToNode(node2);
  this._preselect(node2);
};
SearchPad.prototype._scrollToDirection = function(previous) {
  var selected = this._getCurrentResult();
  if (!selected) {
    return;
  }
  var node2 = previous ? selected.previousElementSibling : selected.nextElementSibling;
  if (node2) {
    this._scrollToNode(node2);
    this._preselect(node2);
  }
};
SearchPad.prototype._scrollToNode = function(node2) {
  if (!node2 || node2 === this._getCurrentResult()) {
    return;
  }
  var nodeOffset = node2.offsetTop;
  var containerScroll = this._resultsContainer.scrollTop;
  var bottomScroll = nodeOffset - this._resultsContainer.clientHeight + node2.clientHeight;
  if (nodeOffset < containerScroll) {
    this._resultsContainer.scrollTop = nodeOffset;
  } else if (containerScroll < bottomScroll) {
    this._resultsContainer.scrollTop = bottomScroll;
  }
};
SearchPad.prototype._clearResults = function() {
  clear$1(this._resultsContainer);
  this._results = [];
  this._resetOverlay();
  this._eventBus.fire("searchPad.cleared");
};
SearchPad.prototype._getCurrentResult = function() {
  return query(SearchPad.RESULT_SELECTED_SELECTOR, this._resultsContainer);
};
SearchPad.prototype._createResultNode = function(result, id) {
  var node2 = domify$1(SearchPad.RESULT_HTML);
  if (result.primaryTokens.length > 0) {
    createInnerTextNode(node2, result.primaryTokens, SearchPad.RESULT_PRIMARY_HTML);
  }
  createInnerTextNode(node2, result.secondaryTokens, SearchPad.RESULT_SECONDARY_HTML);
  attr$1(node2, SearchPad.RESULT_ID_ATTRIBUTE, id);
  this._resultsContainer.appendChild(node2);
  return node2;
};
SearchPad.prototype.registerProvider = function(provider) {
  this._searchProvider = provider;
};
SearchPad.prototype.open = function() {
  if (!this._searchProvider) {
    throw new Error("no search provider registered");
  }
  if (this.isOpen()) {
    return;
  }
  this._bindEvents();
  this._open = true;
  classes$1(this._container).add("open");
  this._searchInput.focus();
  this._eventBus.fire("searchPad.opened");
};
SearchPad.prototype.close = function() {
  if (!this.isOpen()) {
    return;
  }
  this._unbindEvents();
  this._open = false;
  classes$1(this._container).remove("open");
  this._clearResults();
  this._searchInput.value = "";
  this._searchInput.blur();
  this._resetOverlay();
  this._eventBus.fire("searchPad.closed");
};
SearchPad.prototype.toggle = function() {
  this.isOpen() ? this.close() : this.open();
};
SearchPad.prototype.isOpen = function() {
  return this._open;
};
SearchPad.prototype._preselect = function(node2) {
  var selectedNode = this._getCurrentResult();
  if (node2 === selectedNode) {
    return;
  }
  if (selectedNode) {
    classes$1(selectedNode).remove(SearchPad.RESULT_SELECTED_CLASS);
  }
  var id = attr$1(node2, SearchPad.RESULT_ID_ATTRIBUTE);
  var element = this._results[id].element;
  classes$1(node2).add(SearchPad.RESULT_SELECTED_CLASS);
  this._resetOverlay(element);
  this._canvas.scrollToElement(element, { top: 400 });
  this._selection.select(element);
  this._eventBus.fire("searchPad.preselected", element);
};
SearchPad.prototype._select = function(node2) {
  var id = attr$1(node2, SearchPad.RESULT_ID_ATTRIBUTE);
  var element = this._results[id].element;
  this.close();
  this._resetOverlay();
  this._canvas.scrollToElement(element, { top: 400 });
  this._selection.select(element);
  this._eventBus.fire("searchPad.selected", element);
};
SearchPad.prototype._resetOverlay = function(element) {
  if (this._overlayId) {
    this._overlays.remove(this._overlayId);
  }
  if (element) {
    var box = getBBox(element);
    var overlay = constructOverlay(box);
    this._overlayId = this._overlays.add(element, overlay);
  }
};
SearchPad.prototype._getBoxHtml = function() {
  const box = domify$1(SearchPad.BOX_HTML);
  const input = query(SearchPad.INPUT_SELECTOR, box);
  if (input) {
    input.setAttribute("aria-label", this._translate("Search in diagram"));
  }
  return box;
};
function constructOverlay(box) {
  var offset = 6;
  var w2 = box.width + offset * 2;
  var h2 = box.height + offset * 2;
  var styles = {
    width: w2 + "px",
    height: h2 + "px"
  };
  var html = domify$1('<div class="' + SearchPad.OVERLAY_CLASS + '"></div>');
  assign$1(html, styles);
  return {
    position: {
      bottom: h2 - offset,
      right: w2 - offset
    },
    show: true,
    html
  };
}
function createInnerTextNode(parentNode, tokens, template) {
  var text = createHtmlText(tokens);
  var childNode = domify$1(template);
  childNode.innerHTML = text;
  parentNode.appendChild(childNode);
}
function createHtmlText(tokens) {
  var htmlText = "";
  tokens.forEach(function(t2) {
    if (t2.matched) {
      htmlText += '<strong class="' + SearchPad.RESULT_HIGHLIGHT_CLASS + '">' + escapeHTML$1(t2.matched) + "</strong>";
    } else {
      htmlText += escapeHTML$1(t2.normal);
    }
  });
  return htmlText !== "" ? htmlText : null;
}
SearchPad.CONTAINER_SELECTOR = ".djs-search-container";
SearchPad.INPUT_SELECTOR = ".djs-search-input input";
SearchPad.RESULTS_CONTAINER_SELECTOR = ".djs-search-results";
SearchPad.RESULT_SELECTOR = ".djs-search-result";
SearchPad.RESULT_SELECTED_CLASS = "djs-search-result-selected";
SearchPad.RESULT_SELECTED_SELECTOR = "." + SearchPad.RESULT_SELECTED_CLASS;
SearchPad.RESULT_ID_ATTRIBUTE = "data-result-id";
SearchPad.RESULT_HIGHLIGHT_CLASS = "djs-search-highlight";
SearchPad.OVERLAY_CLASS = "djs-search-overlay";
SearchPad.BOX_HTML = '<div class="djs-search-container djs-draggable djs-scrollable"><div class="djs-search-input"><input type="text"/></div><div class="djs-search-results"></div></div>';
SearchPad.RESULT_HTML = '<div class="djs-search-result"></div>';
SearchPad.RESULT_PRIMARY_HTML = '<div class="djs-search-result-primary"></div>';
SearchPad.RESULT_SECONDARY_HTML = '<p class="djs-search-result-secondary"></p>';
const SearchPadModule = {
  __depends__: [
    TranslateModule,
    OverlaysModule,
    SelectionModule
  ],
  searchPad: ["type", SearchPad]
};
function BpmnSearchProvider(elementRegistry, searchPad, canvas) {
  this._elementRegistry = elementRegistry;
  this._canvas = canvas;
  searchPad.registerProvider(this);
}
BpmnSearchProvider.$inject = [
  "elementRegistry",
  "searchPad",
  "canvas"
];
BpmnSearchProvider.prototype.find = function(pattern) {
  var rootElement = this._canvas.getRootElement();
  var elements = this._elementRegistry.filter(function(element) {
    if (element.labelTarget) {
      return false;
    }
    return true;
  });
  elements = filter$1(elements, function(element) {
    return element !== rootElement;
  });
  elements = map$2(elements, function(element) {
    return {
      primaryTokens: matchAndSplit(getLabel(element), pattern),
      secondaryTokens: matchAndSplit(element.id, pattern),
      element
    };
  });
  elements = filter$1(elements, function(element) {
    return hasMatched(element.primaryTokens) || hasMatched(element.secondaryTokens);
  });
  elements = sortBy$1(elements, function(element) {
    return getLabel(element.element) + element.element.id;
  });
  return elements;
};
function hasMatched(tokens) {
  var matched = filter$1(tokens, function(token) {
    return !!token.matched;
  });
  return matched.length > 0;
}
function matchAndSplit(text, pattern) {
  var tokens = [], originalText = text;
  if (!text) {
    return tokens;
  }
  text = text.toLowerCase();
  pattern = pattern.toLowerCase();
  var i2 = text.indexOf(pattern);
  if (i2 > -1) {
    if (i2 !== 0) {
      tokens.push({
        normal: originalText.substr(0, i2)
      });
    }
    tokens.push({
      matched: originalText.substr(i2, pattern.length)
    });
    if (pattern.length + i2 < text.length) {
      tokens.push({
        normal: originalText.substr(pattern.length + i2, text.length)
      });
    }
  } else {
    tokens.push({
      normal: originalText
    });
  }
  return tokens;
}
const SearchModule = {
  __depends__: [
    SearchPadModule
  ],
  __init__: ["bpmnSearch"],
  bpmnSearch: ["type", BpmnSearchProvider]
};
var initialDiagram = '<?xml version="1.0" encoding="UTF-8"?><bpmn:definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" targetNamespace="http://bpmn.io/schema/bpmn" id="Definitions_1"><bpmn:process id="Process_1" isExecutable="false"><bpmn:startEvent id="StartEvent_1"/></bpmn:process><bpmndi:BPMNDiagram id="BPMNDiagram_1"><bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_1"><bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1"><dc:Bounds height="36.0" width="36.0" x="173.0" y="102.0"/></bpmndi:BPMNShape></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></bpmn:definitions>';
function Modeler(options) {
  BaseModeler.call(this, options);
}
e$3(Modeler, BaseModeler);
Modeler.Viewer = Viewer;
Modeler.NavigatedViewer = NavigatedViewer;
Modeler.prototype.createDiagram = function createDiagram() {
  return this.importXML(initialDiagram);
};
Modeler.prototype._interactionModules = [
  // non-modeling components
  KeyboardMoveModule,
  MoveCanvasModule,
  ZoomScrollModule
];
Modeler.prototype._modelingModules = [
  // modeling components
  AlignElementsModule,
  AutoPlaceModule,
  AutoScrollModule,
  AutoResizeModule,
  BendpointsModule,
  ConnectModule,
  ConnectionPreviewModule,
  ContextPadModule,
  CopyPasteModule,
  CreateModule,
  DistributeElementsModule,
  EditorActionsModule,
  GridSnappingModule,
  InteractionEventsModule,
  KeyboardModule,
  KeyboardMoveSelectionModule,
  LabelEditingModule,
  ModelingModule,
  ModelingFeedbackModule,
  MoveModule,
  PaletteModule,
  ReplacePreviewModule,
  ResizeModule,
  SnappingModule,
  SearchModule
];
Modeler.prototype._modules = [].concat(
  Viewer.prototype._modules,
  Modeler.prototype._interactionModules,
  Modeler.prototype._modelingModules
);
const name = "Camunda";
const uri = "http://camunda.org/schema/1.0/bpmn";
const prefix = "camunda";
const xml$1 = {
  tagAlias: "lowerCase"
};
const associations = [];
const types = [
  {
    name: "Definitions",
    isAbstract: true,
    "extends": [
      "bpmn:Definitions"
    ],
    properties: [
      {
        name: "diagramRelationId",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "InOutBinding",
    superClass: [
      "Element"
    ],
    isAbstract: true,
    properties: [
      {
        name: "source",
        isAttr: true,
        type: "String"
      },
      {
        name: "sourceExpression",
        isAttr: true,
        type: "String"
      },
      {
        name: "target",
        isAttr: true,
        type: "String"
      },
      {
        name: "businessKey",
        isAttr: true,
        type: "String"
      },
      {
        name: "local",
        isAttr: true,
        type: "Boolean",
        "default": false
      },
      {
        name: "variables",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "In",
    superClass: [
      "InOutBinding"
    ],
    meta: {
      allowedIn: [
        "bpmn:CallActivity",
        "bpmn:SignalEventDefinition"
      ]
    }
  },
  {
    name: "Out",
    superClass: [
      "InOutBinding"
    ],
    meta: {
      allowedIn: [
        "bpmn:CallActivity"
      ]
    }
  },
  {
    name: "AsyncCapable",
    isAbstract: true,
    "extends": [
      "bpmn:Activity",
      "bpmn:Gateway",
      "bpmn:Event"
    ],
    properties: [
      {
        name: "async",
        isAttr: true,
        type: "Boolean",
        "default": false
      },
      {
        name: "asyncBefore",
        isAttr: true,
        type: "Boolean",
        "default": false
      },
      {
        name: "asyncAfter",
        isAttr: true,
        type: "Boolean",
        "default": false
      },
      {
        name: "exclusive",
        isAttr: true,
        type: "Boolean",
        "default": true
      }
    ]
  },
  {
    name: "JobPriorized",
    isAbstract: true,
    "extends": [
      "bpmn:Process",
      "camunda:AsyncCapable"
    ],
    properties: [
      {
        name: "jobPriority",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "SignalEventDefinitionExtension",
    isAbstract: true,
    "extends": [
      "bpmn:SignalEventDefinition"
    ],
    properties: [
      {
        name: "async",
        isAttr: true,
        type: "Boolean",
        "default": false
      }
    ]
  },
  {
    name: "ErrorEventDefinitionExtension",
    isAbstract: true,
    "extends": [
      "bpmn:ErrorEventDefinition"
    ],
    properties: [
      {
        name: "errorCodeVariable",
        isAttr: true,
        type: "String"
      },
      {
        name: "errorMessageVariable",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "ErrorEventDefinition",
    superClass: [
      "bpmn:ErrorEventDefinition",
      "Element"
    ],
    properties: [
      {
        name: "expression",
        isAttr: true,
        type: "String"
      }
    ],
    meta: {
      allowedIn: [
        "bpmn:ServiceTask"
      ]
    }
  },
  {
    name: "Error",
    isAbstract: true,
    "extends": [
      "bpmn:Error"
    ],
    properties: [
      {
        name: "camunda:errorMessage",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "PotentialStarter",
    superClass: [
      "Element"
    ],
    properties: [
      {
        name: "resourceAssignmentExpression",
        type: "bpmn:ResourceAssignmentExpression"
      }
    ]
  },
  {
    name: "FormSupported",
    isAbstract: true,
    "extends": [
      "bpmn:StartEvent",
      "bpmn:UserTask"
    ],
    properties: [
      {
        name: "formHandlerClass",
        isAttr: true,
        type: "String"
      },
      {
        name: "formKey",
        isAttr: true,
        type: "String"
      },
      {
        name: "formRef",
        isAttr: true,
        type: "String"
      },
      {
        name: "formRefBinding",
        isAttr: true,
        type: "String"
      },
      {
        name: "formRefVersion",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "TemplateSupported",
    isAbstract: true,
    "extends": [
      "bpmn:Collaboration",
      "bpmn:Process",
      "bpmn:FlowElement"
    ],
    properties: [
      {
        name: "modelerTemplate",
        isAttr: true,
        type: "String"
      },
      {
        name: "modelerTemplateVersion",
        isAttr: true,
        type: "Integer"
      }
    ]
  },
  {
    name: "Initiator",
    isAbstract: true,
    "extends": [
      "bpmn:StartEvent"
    ],
    properties: [
      {
        name: "initiator",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "ScriptTask",
    isAbstract: true,
    "extends": [
      "bpmn:ScriptTask"
    ],
    properties: [
      {
        name: "resultVariable",
        isAttr: true,
        type: "String"
      },
      {
        name: "resource",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "Process",
    isAbstract: true,
    "extends": [
      "bpmn:Process"
    ],
    properties: [
      {
        name: "candidateStarterGroups",
        isAttr: true,
        type: "String"
      },
      {
        name: "candidateStarterUsers",
        isAttr: true,
        type: "String"
      },
      {
        name: "versionTag",
        isAttr: true,
        type: "String"
      },
      {
        name: "historyTimeToLive",
        isAttr: true,
        type: "String"
      },
      {
        name: "isStartableInTasklist",
        isAttr: true,
        type: "Boolean",
        "default": true
      }
    ]
  },
  {
    name: "EscalationEventDefinitionExtension",
    isAbstract: true,
    "extends": [
      "bpmn:EscalationEventDefinition"
    ],
    properties: [
      {
        name: "escalationCodeVariable",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "FormalExpression",
    isAbstract: true,
    "extends": [
      "bpmn:FormalExpression"
    ],
    properties: [
      {
        name: "resource",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "Assignable",
    "extends": [
      "bpmn:UserTask"
    ],
    properties: [
      {
        name: "assignee",
        isAttr: true,
        type: "String"
      },
      {
        name: "candidateUsers",
        isAttr: true,
        type: "String"
      },
      {
        name: "candidateGroups",
        isAttr: true,
        type: "String"
      },
      {
        name: "dueDate",
        isAttr: true,
        type: "String"
      },
      {
        name: "followUpDate",
        isAttr: true,
        type: "String"
      },
      {
        name: "priority",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "CallActivity",
    "extends": [
      "bpmn:CallActivity"
    ],
    properties: [
      {
        name: "calledElementBinding",
        isAttr: true,
        type: "String",
        "default": "latest"
      },
      {
        name: "calledElementVersion",
        isAttr: true,
        type: "String"
      },
      {
        name: "calledElementVersionTag",
        isAttr: true,
        type: "String"
      },
      {
        name: "calledElementTenantId",
        isAttr: true,
        type: "String"
      },
      {
        name: "caseRef",
        isAttr: true,
        type: "String"
      },
      {
        name: "caseBinding",
        isAttr: true,
        type: "String",
        "default": "latest"
      },
      {
        name: "caseVersion",
        isAttr: true,
        type: "String"
      },
      {
        name: "caseTenantId",
        isAttr: true,
        type: "String"
      },
      {
        name: "variableMappingClass",
        isAttr: true,
        type: "String"
      },
      {
        name: "variableMappingDelegateExpression",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "ServiceTaskLike",
    "extends": [
      "bpmn:ServiceTask",
      "bpmn:BusinessRuleTask",
      "bpmn:SendTask",
      "bpmn:MessageEventDefinition"
    ],
    properties: [
      {
        name: "expression",
        isAttr: true,
        type: "String"
      },
      {
        name: "class",
        isAttr: true,
        type: "String"
      },
      {
        name: "delegateExpression",
        isAttr: true,
        type: "String"
      },
      {
        name: "resultVariable",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "DmnCapable",
    "extends": [
      "bpmn:BusinessRuleTask"
    ],
    properties: [
      {
        name: "decisionRef",
        isAttr: true,
        type: "String"
      },
      {
        name: "decisionRefBinding",
        isAttr: true,
        type: "String",
        "default": "latest"
      },
      {
        name: "decisionRefVersion",
        isAttr: true,
        type: "String"
      },
      {
        name: "mapDecisionResult",
        isAttr: true,
        type: "String",
        "default": "resultList"
      },
      {
        name: "decisionRefTenantId",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "ExternalCapable",
    "extends": [
      "camunda:ServiceTaskLike"
    ],
    properties: [
      {
        name: "type",
        isAttr: true,
        type: "String"
      },
      {
        name: "topic",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "TaskPriorized",
    "extends": [
      "bpmn:Process",
      "camunda:ExternalCapable"
    ],
    properties: [
      {
        name: "taskPriority",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "Properties",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "*"
      ]
    },
    properties: [
      {
        name: "values",
        type: "Property",
        isMany: true
      }
    ]
  },
  {
    name: "Property",
    superClass: [
      "Element"
    ],
    properties: [
      {
        name: "id",
        type: "String",
        isAttr: true
      },
      {
        name: "name",
        type: "String",
        isAttr: true
      },
      {
        name: "value",
        type: "String",
        isAttr: true
      }
    ]
  },
  {
    name: "Connector",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "camunda:ServiceTaskLike"
      ]
    },
    properties: [
      {
        name: "inputOutput",
        type: "InputOutput"
      },
      {
        name: "connectorId",
        type: "String"
      }
    ]
  },
  {
    name: "InputOutput",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "bpmn:FlowNode",
        "camunda:Connector"
      ]
    },
    properties: [
      {
        name: "inputOutput",
        type: "InputOutput"
      },
      {
        name: "connectorId",
        type: "String"
      },
      {
        name: "inputParameters",
        isMany: true,
        type: "InputParameter"
      },
      {
        name: "outputParameters",
        isMany: true,
        type: "OutputParameter"
      }
    ]
  },
  {
    name: "InputOutputParameter",
    properties: [
      {
        name: "name",
        isAttr: true,
        type: "String"
      },
      {
        name: "value",
        isBody: true,
        type: "String"
      },
      {
        name: "definition",
        type: "InputOutputParameterDefinition"
      }
    ]
  },
  {
    name: "InputOutputParameterDefinition",
    isAbstract: true
  },
  {
    name: "List",
    superClass: [
      "InputOutputParameterDefinition"
    ],
    properties: [
      {
        name: "items",
        isMany: true,
        type: "InputOutputParameterDefinition"
      }
    ]
  },
  {
    name: "Map",
    superClass: [
      "InputOutputParameterDefinition"
    ],
    properties: [
      {
        name: "entries",
        isMany: true,
        type: "Entry"
      }
    ]
  },
  {
    name: "Entry",
    properties: [
      {
        name: "key",
        isAttr: true,
        type: "String"
      },
      {
        name: "value",
        isBody: true,
        type: "String"
      },
      {
        name: "definition",
        type: "InputOutputParameterDefinition"
      }
    ]
  },
  {
    name: "Value",
    superClass: [
      "InputOutputParameterDefinition"
    ],
    properties: [
      {
        name: "id",
        isAttr: true,
        type: "String"
      },
      {
        name: "name",
        isAttr: true,
        type: "String"
      },
      {
        name: "value",
        isBody: true,
        type: "String"
      }
    ]
  },
  {
    name: "Script",
    superClass: [
      "InputOutputParameterDefinition"
    ],
    properties: [
      {
        name: "scriptFormat",
        isAttr: true,
        type: "String"
      },
      {
        name: "resource",
        isAttr: true,
        type: "String"
      },
      {
        name: "value",
        isBody: true,
        type: "String"
      }
    ]
  },
  {
    name: "Field",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "camunda:ServiceTaskLike",
        "camunda:ExecutionListener",
        "camunda:TaskListener"
      ]
    },
    properties: [
      {
        name: "name",
        isAttr: true,
        type: "String"
      },
      {
        name: "expression",
        type: "String"
      },
      {
        name: "stringValue",
        isAttr: true,
        type: "String"
      },
      {
        name: "string",
        type: "String"
      }
    ]
  },
  {
    name: "InputParameter",
    superClass: [
      "InputOutputParameter"
    ]
  },
  {
    name: "OutputParameter",
    superClass: [
      "InputOutputParameter"
    ]
  },
  {
    name: "Collectable",
    isAbstract: true,
    "extends": [
      "bpmn:MultiInstanceLoopCharacteristics"
    ],
    superClass: [
      "camunda:AsyncCapable"
    ],
    properties: [
      {
        name: "collection",
        isAttr: true,
        type: "String"
      },
      {
        name: "elementVariable",
        isAttr: true,
        type: "String"
      }
    ]
  },
  {
    name: "FailedJobRetryTimeCycle",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "camunda:AsyncCapable",
        "bpmn:MultiInstanceLoopCharacteristics"
      ]
    },
    properties: [
      {
        name: "body",
        isBody: true,
        type: "String"
      }
    ]
  },
  {
    name: "ExecutionListener",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "bpmn:Task",
        "bpmn:ServiceTask",
        "bpmn:UserTask",
        "bpmn:BusinessRuleTask",
        "bpmn:ScriptTask",
        "bpmn:ReceiveTask",
        "bpmn:ManualTask",
        "bpmn:ExclusiveGateway",
        "bpmn:SequenceFlow",
        "bpmn:ParallelGateway",
        "bpmn:InclusiveGateway",
        "bpmn:EventBasedGateway",
        "bpmn:StartEvent",
        "bpmn:IntermediateCatchEvent",
        "bpmn:IntermediateThrowEvent",
        "bpmn:EndEvent",
        "bpmn:BoundaryEvent",
        "bpmn:CallActivity",
        "bpmn:SubProcess",
        "bpmn:Process"
      ]
    },
    properties: [
      {
        name: "expression",
        isAttr: true,
        type: "String"
      },
      {
        name: "class",
        isAttr: true,
        type: "String"
      },
      {
        name: "delegateExpression",
        isAttr: true,
        type: "String"
      },
      {
        name: "event",
        isAttr: true,
        type: "String"
      },
      {
        name: "script",
        type: "Script"
      },
      {
        name: "fields",
        type: "Field",
        isMany: true
      }
    ]
  },
  {
    name: "TaskListener",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "bpmn:UserTask"
      ]
    },
    properties: [
      {
        name: "expression",
        isAttr: true,
        type: "String"
      },
      {
        name: "class",
        isAttr: true,
        type: "String"
      },
      {
        name: "delegateExpression",
        isAttr: true,
        type: "String"
      },
      {
        name: "event",
        isAttr: true,
        type: "String"
      },
      {
        name: "script",
        type: "Script"
      },
      {
        name: "fields",
        type: "Field",
        isMany: true
      },
      {
        name: "id",
        type: "String",
        isAttr: true
      },
      {
        name: "eventDefinitions",
        type: "bpmn:TimerEventDefinition",
        isMany: true
      }
    ]
  },
  {
    name: "FormProperty",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "bpmn:StartEvent",
        "bpmn:UserTask"
      ]
    },
    properties: [
      {
        name: "id",
        type: "String",
        isAttr: true
      },
      {
        name: "name",
        type: "String",
        isAttr: true
      },
      {
        name: "type",
        type: "String",
        isAttr: true
      },
      {
        name: "required",
        type: "String",
        isAttr: true
      },
      {
        name: "readable",
        type: "String",
        isAttr: true
      },
      {
        name: "writable",
        type: "String",
        isAttr: true
      },
      {
        name: "variable",
        type: "String",
        isAttr: true
      },
      {
        name: "expression",
        type: "String",
        isAttr: true
      },
      {
        name: "datePattern",
        type: "String",
        isAttr: true
      },
      {
        name: "default",
        type: "String",
        isAttr: true
      },
      {
        name: "values",
        type: "Value",
        isMany: true
      }
    ]
  },
  {
    name: "FormData",
    superClass: [
      "Element"
    ],
    meta: {
      allowedIn: [
        "bpmn:StartEvent",
        "bpmn:UserTask"
      ]
    },
    properties: [
      {
        name: "fields",
        type: "FormField",
        isMany: true
      },
      {
        name: "businessKey",
        type: "String",
        isAttr: true
      }
    ]
  },
  {
    name: "FormField",
    superClass: [
      "Element"
    ],
    properties: [
      {
        name: "id",
        type: "String",
        isAttr: true
      },
      {
        name: "label",
        type: "String",
        isAttr: true
      },
      {
        name: "type",
        type: "String",
        isAttr: true
      },
      {
        name: "datePattern",
        type: "String",
        isAttr: true
      },
      {
        name: "defaultValue",
        type: "String",
        isAttr: true
      },
      {
        name: "properties",
        type: "Properties"
      },
      {
        name: "validation",
        type: "Validation"
      },
      {
        name: "values",
        type: "Value",
        isMany: true
      }
    ]
  },
  {
    name: "Validation",
    superClass: [
      "Element"
    ],
    properties: [
      {
        name: "constraints",
        type: "Constraint",
        isMany: true
      }
    ]
  },
  {
    name: "Constraint",
    superClass: [
      "Element"
    ],
    properties: [
      {
        name: "name",
        type: "String",
        isAttr: true
      },
      {
        name: "config",
        type: "String",
        isAttr: true
      }
    ]
  },
  {
    name: "ConditionalEventDefinitionExtension",
    isAbstract: true,
    "extends": [
      "bpmn:ConditionalEventDefinition"
    ],
    properties: [
      {
        name: "variableName",
        isAttr: true,
        type: "String"
      },
      {
        name: "variableEvents",
        isAttr: true,
        type: "String"
      }
    ]
  }
];
const emumerations = [];
const camundaModdleDescriptors = {
  name,
  uri,
  prefix,
  xml: xml$1,
  associations,
  types,
  emumerations
};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function getAugmentedNamespace(n2) {
  if (n2.__esModule)
    return n2;
  var f2 = n2.default;
  if (typeof f2 == "function") {
    var a2 = function a3() {
      if (this instanceof a3) {
        return Reflect.construct(f2, arguments, this.constructor);
      }
      return f2.apply(this, arguments);
    };
    a2.prototype = f2.prototype;
  } else
    a2 = {};
  Object.defineProperty(a2, "__esModule", { value: true });
  Object.keys(n2).forEach(function(k2) {
    var d2 = Object.getOwnPropertyDescriptor(n2, k2);
    Object.defineProperty(a2, k2, d2.get ? d2 : {
      enumerable: true,
      get: function() {
        return n2[k2];
      }
    });
  });
  return a2;
}
var conditionalFlows = function() {
  function check(node2, reporter) {
    if (!isConditionalForking(node2)) {
      return;
    }
    const outgoing = node2.outgoing || [];
    outgoing.forEach((flow) => {
      const missingCondition = !hasCondition$2(flow) && !isDefaultFlow$2(node2, flow);
      if (missingCondition) {
        reporter.report(flow.id, "Sequence flow is missing condition", ["conditionExpression"]);
      }
    });
  }
  return {
    check
  };
};
function isConditionalForking(node2) {
  const defaultFlow = node2["default"];
  const outgoing = node2.outgoing || [];
  return defaultFlow || outgoing.find(hasCondition$2);
}
function hasCondition$2(flow) {
  return !!flow.conditionExpression;
}
function isDefaultFlow$2(node2, flow) {
  return node2["default"] === flow;
}
const rule_0 = /* @__PURE__ */ getDefaultExportFromCjs(conditionalFlows);
function is$d(node2, type) {
  if (type.indexOf(":") === -1) {
    type = "bpmn:" + type;
  }
  return typeof node2.$instanceOf === "function" ? node2.$instanceOf(type) : node2.$type === type;
}
function isAny$6(node2, types2) {
  return types2.some(function(type) {
    return is$d(node2, type);
  });
}
const index_esm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  is: is$d,
  isAny: isAny$6
}, Symbol.toStringTag, { value: "Module" }));
const require$$0 = /* @__PURE__ */ getAugmentedNamespace(index_esm);
const {
  is: is$c,
  isAny: isAny$5
} = require$$0;
var endEventRequired = function() {
  function hasEndEvent(node2) {
    const flowElements = node2.flowElements || [];
    return flowElements.some((node3) => is$c(node3, "bpmn:EndEvent"));
  }
  function check(node2, reporter) {
    if (!isAny$5(node2, [
      "bpmn:Process",
      "bpmn:SubProcess"
    ])) {
      return;
    }
    if (!hasEndEvent(node2)) {
      const type = is$c(node2, "bpmn:SubProcess") ? "Sub process" : "Process";
      reporter.report(node2.id, type + " is missing end event");
    }
  }
  return { check };
};
const rule_1 = /* @__PURE__ */ getDefaultExportFromCjs(endEventRequired);
const {
  is: is$b
} = require$$0;
var eventSubProcessTypedStartEvent = function() {
  function check(node2, reporter) {
    if (!is$b(node2, "bpmn:SubProcess") || !node2.triggeredByEvent) {
      return;
    }
    const flowElements = node2.flowElements || [];
    flowElements.forEach(function(flowElement) {
      if (!is$b(flowElement, "bpmn:StartEvent")) {
        return false;
      }
      const eventDefinitions = flowElement.eventDefinitions || [];
      if (eventDefinitions.length === 0) {
        reporter.report(flowElement.id, "Start event is missing event definition", ["eventDefinitions"]);
      }
    });
  }
  return {
    check
  };
};
const rule_2 = /* @__PURE__ */ getDefaultExportFromCjs(eventSubProcessTypedStartEvent);
const {
  isAny: isAny$4
} = require$$0;
var fakeJoin = function() {
  function check(node2, reporter) {
    if (!isAny$4(node2, [
      "bpmn:Activity",
      "bpmn:Event"
    ])) {
      return;
    }
    const incoming = node2.incoming || [];
    if (incoming.length > 1) {
      reporter.report(node2.id, "Incoming flows do not join");
    }
  }
  return {
    check
  };
};
const rule_3 = /* @__PURE__ */ getDefaultExportFromCjs(fakeJoin);
const {
  is: is$a,
  isAny: isAny$3
} = require$$0;
var labelRequired = function() {
  function check(node2, reporter) {
    if (isAny$3(node2, [
      "bpmn:ParallelGateway",
      "bpmn:EventBasedGateway"
    ])) {
      return;
    }
    if (is$a(node2, "bpmn:Gateway") && !isForking(node2)) {
      return;
    }
    if (is$a(node2, "bpmn:BoundaryEvent")) {
      return;
    }
    if (is$a(node2, "bpmn:SubProcess")) {
      return;
    }
    if (is$a(node2, "bpmn:SequenceFlow") && !hasCondition$1(node2)) {
      return;
    }
    if (isAny$3(node2, [
      "bpmn:FlowNode",
      "bpmn:SequenceFlow",
      "bpmn:Participant",
      "bpmn:Lane"
    ])) {
      const name2 = (node2.name || "").trim();
      if (name2.length === 0) {
        reporter.report(node2.id, "Element is missing label/name", ["name"]);
      }
    }
  }
  return { check };
};
function isForking(node2) {
  const outgoing = node2.outgoing || [];
  return outgoing.length > 1;
}
function hasCondition$1(node2) {
  return node2.conditionExpression;
}
const rule_4 = /* @__PURE__ */ getDefaultExportFromCjs(labelRequired);
var dist = {};
function flatten$1(arr) {
  return Array.prototype.concat.apply([], arr);
}
const nativeToString = Object.prototype.toString;
const nativeHasOwnProperty = Object.prototype.hasOwnProperty;
function isUndefined(obj) {
  return obj === void 0;
}
function isDefined(obj) {
  return obj !== void 0;
}
function isNil(obj) {
  return obj == null;
}
function isArray(obj) {
  return nativeToString.call(obj) === "[object Array]";
}
function isObject(obj) {
  return nativeToString.call(obj) === "[object Object]";
}
function isNumber(obj) {
  return nativeToString.call(obj) === "[object Number]";
}
function isFunction(obj) {
  const tag = nativeToString.call(obj);
  return tag === "[object Function]" || tag === "[object AsyncFunction]" || tag === "[object GeneratorFunction]" || tag === "[object AsyncGeneratorFunction]" || tag === "[object Proxy]";
}
function isString(obj) {
  return nativeToString.call(obj) === "[object String]";
}
function ensureArray(obj) {
  if (isArray(obj)) {
    return;
  }
  throw new Error("must supply array");
}
function has(target, key) {
  return nativeHasOwnProperty.call(target, key);
}
function find(collection, matcher) {
  const matchFn = toMatcher(matcher);
  let match;
  forEach(collection, function(val, key) {
    if (matchFn(val, key)) {
      match = val;
      return false;
    }
  });
  return match;
}
function findIndex(collection, matcher) {
  const matchFn = toMatcher(matcher);
  let idx = isArray(collection) ? -1 : void 0;
  forEach(collection, function(val, key) {
    if (matchFn(val, key)) {
      idx = key;
      return false;
    }
  });
  return idx;
}
function filter(collection, matcher) {
  const matchFn = toMatcher(matcher);
  let result = [];
  forEach(collection, function(val, key) {
    if (matchFn(val, key)) {
      result.push(val);
    }
  });
  return result;
}
function forEach(collection, iterator) {
  let val, result;
  if (isUndefined(collection)) {
    return;
  }
  const convertKey = isArray(collection) ? toNum : identity;
  for (let key in collection) {
    if (has(collection, key)) {
      val = collection[key];
      result = iterator(val, convertKey(key));
      if (result === false) {
        return val;
      }
    }
  }
}
function without(arr, matcher) {
  if (isUndefined(arr)) {
    return [];
  }
  ensureArray(arr);
  const matchFn = toMatcher(matcher);
  return arr.filter(function(el, idx) {
    return !matchFn(el, idx);
  });
}
function reduce(collection, iterator, result) {
  forEach(collection, function(value, idx) {
    result = iterator(result, value, idx);
  });
  return result;
}
function every(collection, matcher) {
  return !!reduce(collection, function(matches2, val, key) {
    return matches2 && matcher(val, key);
  }, true);
}
function some(collection, matcher) {
  return !!find(collection, matcher);
}
function map(collection, fn) {
  let result = [];
  forEach(collection, function(val, key) {
    result.push(fn(val, key));
  });
  return result;
}
function keys(collection) {
  return collection && Object.keys(collection) || [];
}
function size(collection) {
  return keys(collection).length;
}
function values(collection) {
  return map(collection, (val) => val);
}
function groupBy(collection, extractor, grouped = {}) {
  extractor = toExtractor(extractor);
  forEach(collection, function(val) {
    let discriminator = extractor(val) || "_";
    let group = grouped[discriminator];
    if (!group) {
      group = grouped[discriminator] = [];
    }
    group.push(val);
  });
  return grouped;
}
function uniqueBy(extractor, ...collections) {
  extractor = toExtractor(extractor);
  let grouped = {};
  forEach(collections, (c2) => groupBy(c2, extractor, grouped));
  let result = map(grouped, function(val, key) {
    return val[0];
  });
  return result;
}
const unionBy = uniqueBy;
function sortBy(collection, extractor) {
  extractor = toExtractor(extractor);
  let sorted = [];
  forEach(collection, function(value, key) {
    let disc = extractor(value, key);
    let entry = {
      d: disc,
      v: value
    };
    for (var idx = 0; idx < sorted.length; idx++) {
      let { d: d2 } = sorted[idx];
      if (disc < d2) {
        sorted.splice(idx, 0, entry);
        return;
      }
    }
    sorted.push(entry);
  });
  return map(sorted, (e2) => e2.v);
}
function matchPattern(pattern) {
  return function(el) {
    return every(pattern, function(val, key) {
      return el[key] === val;
    });
  };
}
function toExtractor(extractor) {
  return isFunction(extractor) ? extractor : (e2) => {
    return e2[extractor];
  };
}
function toMatcher(matcher) {
  return isFunction(matcher) ? matcher : (e2) => {
    return e2 === matcher;
  };
}
function identity(arg) {
  return arg;
}
function toNum(arg) {
  return Number(arg);
}
function debounce(fn, timeout) {
  let timer;
  let lastArgs;
  let lastThis;
  let lastNow;
  function fire(force) {
    let now = Date.now();
    let scheduledDiff = force ? 0 : lastNow + timeout - now;
    if (scheduledDiff > 0) {
      return schedule(scheduledDiff);
    }
    fn.apply(lastThis, lastArgs);
    clear2();
  }
  function schedule(timeout2) {
    timer = setTimeout(fire, timeout2);
  }
  function clear2() {
    if (timer) {
      clearTimeout(timer);
    }
    timer = lastNow = lastArgs = lastThis = void 0;
  }
  function flush() {
    if (timer) {
      fire(true);
    }
    clear2();
  }
  function callback(...args) {
    lastNow = Date.now();
    lastArgs = args;
    lastThis = this;
    if (!timer) {
      schedule(timeout);
    }
  }
  callback.flush = flush;
  callback.cancel = clear2;
  return callback;
}
function throttle(fn, interval) {
  let throttling = false;
  return function(...args) {
    if (throttling) {
      return;
    }
    fn(...args);
    throttling = true;
    setTimeout(() => {
      throttling = false;
    }, interval);
  };
}
function bind(fn, target) {
  return fn.bind(target);
}
function assign(target, ...others) {
  return Object.assign(target, ...others);
}
function set(target, path, value) {
  let currentTarget = target;
  forEach(path, function(key, idx) {
    if (typeof key !== "number" && typeof key !== "string") {
      throw new Error("illegal key type: " + typeof key + ". Key should be of type number or string.");
    }
    if (key === "constructor") {
      throw new Error("illegal key: constructor");
    }
    if (key === "__proto__") {
      throw new Error("illegal key: __proto__");
    }
    let nextKey = path[idx + 1];
    let nextTarget = currentTarget[key];
    if (isDefined(nextKey) && isNil(nextTarget)) {
      nextTarget = currentTarget[key] = isNaN(+nextKey) ? {} : [];
    }
    if (isUndefined(nextKey)) {
      if (isUndefined(value)) {
        delete currentTarget[key];
      } else {
        currentTarget[key] = value;
      }
    } else {
      currentTarget = nextTarget;
    }
  });
  return target;
}
function get(target, path, defaultValue) {
  let currentTarget = target;
  forEach(path, function(key) {
    if (isNil(currentTarget)) {
      currentTarget = void 0;
      return false;
    }
    currentTarget = currentTarget[key];
  });
  return isUndefined(currentTarget) ? defaultValue : currentTarget;
}
function pick(target, properties) {
  let result = {};
  let obj = Object(target);
  forEach(properties, function(prop) {
    if (prop in obj) {
      result[prop] = target[prop];
    }
  });
  return result;
}
function omit(target, properties) {
  let result = {};
  let obj = Object(target);
  forEach(obj, function(prop, key) {
    if (properties.indexOf(key) === -1) {
      result[key] = prop;
    }
  });
  return result;
}
function merge(target, ...sources) {
  if (!sources.length) {
    return target;
  }
  forEach(sources, function(source2) {
    if (!source2 || !isObject(source2)) {
      return;
    }
    forEach(source2, function(sourceVal, key) {
      if (key === "__proto__") {
        return;
      }
      let targetVal = target[key];
      if (isObject(sourceVal)) {
        if (!isObject(targetVal)) {
          targetVal = {};
        }
        target[key] = merge(targetVal, sourceVal);
      } else {
        target[key] = sourceVal;
      }
    });
  });
  return target;
}
dist.assign = assign;
dist.bind = bind;
dist.debounce = debounce;
dist.ensureArray = ensureArray;
dist.every = every;
dist.filter = filter;
dist.find = find;
dist.findIndex = findIndex;
dist.flatten = flatten$1;
dist.forEach = forEach;
dist.get = get;
dist.groupBy = groupBy;
dist.has = has;
dist.isArray = isArray;
dist.isDefined = isDefined;
dist.isFunction = isFunction;
dist.isNil = isNil;
dist.isNumber = isNumber;
dist.isObject = isObject;
dist.isString = isString;
dist.isUndefined = isUndefined;
dist.keys = keys;
dist.map = map;
dist.matchPattern = matchPattern;
dist.merge = merge;
dist.omit = omit;
dist.pick = pick;
dist.reduce = reduce;
dist.set = set;
dist.size = size;
dist.some = some;
dist.sortBy = sortBy;
dist.throttle = throttle;
dist.unionBy = unionBy;
dist.uniqueBy = uniqueBy;
dist.values = values;
dist.without = without;
const {
  is: is$9
} = require$$0;
const {
  flatten
} = dist;
var noBpmndi = function() {
  function check(node2, reporter) {
    if (!is$9(node2, "bpmn:Definitions")) {
      return false;
    }
    const bpmnElements = getAllBpmnElements(node2.rootElements);
    const visualBpmnElements = bpmnElements.filter(hasVisualRepresentation);
    const diBpmnReferences = getAllDiBpmnReferences(node2);
    visualBpmnElements.forEach((element) => {
      if (diBpmnReferences.indexOf(element.id) === -1) {
        reporter.report(element.id, "Element is missing bpmndi");
      }
    });
  }
  return {
    check
  };
};
function getAllBpmnElements(rootElements) {
  return flatten(rootElements.map((rootElement) => {
    const laneSet = rootElement.laneSets && rootElement.laneSets[0] || rootElement.childLaneSet;
    const elements = flatten([].concat(
      rootElement.flowElements || [],
      rootElement.flowElements && getAllBpmnElements(rootElement.flowElements.filter(hasFlowElements)) || [],
      rootElement.participants || [],
      rootElement.artifacts || [],
      laneSet && laneSet.lanes || [],
      laneSet && laneSet.lanes && getAllBpmnElements(laneSet.lanes.filter(hasChildLaneSet)) || [],
      rootElement.messageFlows || []
    ));
    if (elements.length > 0) {
      return elements.map((element) => {
        return {
          id: element.id,
          $type: element.$type
        };
      });
    } else {
      return [];
    }
  }));
}
function getAllDiBpmnReferences(definitionsNode) {
  return flatten(
    definitionsNode.diagrams.map((diagram) => {
      const diElements = diagram.plane.planeElement || [];
      return diElements.map((element) => {
        return element.bpmnElement.id;
      });
    })
  );
}
function hasVisualRepresentation(element) {
  const noVisRepresentation = ["bpmn:DataObject"];
  return noVisRepresentation.includes(element.$type) ? false : true;
}
function hasFlowElements(element) {
  return element.flowElements ? true : false;
}
function hasChildLaneSet(element) {
  return element.childLaneSet ? true : false;
}
const rule_5 = /* @__PURE__ */ getDefaultExportFromCjs(noBpmndi);
var helper = {};
const {
  is: is$8
} = require$$0;
function disallowNodeType$2(type) {
  return function() {
    function check(node2, reporter) {
      if (is$8(node2, type)) {
        reporter.report(node2.id, "Element has disallowed type <" + type + ">");
      }
    }
    return {
      check
    };
  };
}
helper.disallowNodeType = disallowNodeType$2;
const disallowNodeType$1 = helper.disallowNodeType;
var noComplexGateway = disallowNodeType$1("bpmn:ComplexGateway");
const rule_6 = /* @__PURE__ */ getDefaultExportFromCjs(noComplexGateway);
const {
  isAny: isAny$2,
  is: is$7
} = require$$0;
var noDisconnected = function() {
  function check(node2, reporter) {
    if (!isAny$2(node2, [
      "bpmn:Task",
      "bpmn:Gateway",
      "bpmn:SubProcess",
      "bpmn:Event"
    ]) || node2.triggeredByEvent) {
      return;
    }
    if (isCompensationLinked(node2)) {
      return;
    }
    const incoming = node2.incoming || [];
    const outgoing = node2.outgoing || [];
    if (!incoming.length && !outgoing.length) {
      reporter.report(node2.id, "Element is not connected");
    }
  }
  return {
    check
  };
};
function isCompensationBoundary(node2) {
  var eventDefinitions = node2.eventDefinitions;
  if (!is$7(node2, "bpmn:BoundaryEvent")) {
    return false;
  }
  if (!eventDefinitions || eventDefinitions.length !== 1) {
    return false;
  }
  return is$7(eventDefinitions[0], "bpmn:CompensateEventDefinition");
}
function isCompensationActivity(node2) {
  return node2.isForCompensation;
}
function isCompensationLinked(node2) {
  var source2 = isCompensationBoundary(node2);
  var target = isCompensationActivity(node2);
  return source2 || target;
}
const rule_7 = /* @__PURE__ */ getDefaultExportFromCjs(noDisconnected);
const {
  is: is$6
} = require$$0;
var noDuplicateSequenceFlows = function() {
  const keyed = {};
  const outgoingReported = {};
  const incomingReported = {};
  function check(node2, reporter) {
    if (!is$6(node2, "bpmn:SequenceFlow")) {
      return;
    }
    const key = flowKey(node2);
    if (key in keyed) {
      reporter.report(node2.id, "SequenceFlow is a duplicate");
      const sourceId = node2.sourceRef.id;
      const targetId = node2.targetRef.id;
      if (!outgoingReported[sourceId]) {
        reporter.report(sourceId, "Duplicate outgoing sequence flows");
        outgoingReported[sourceId] = true;
      }
      if (!incomingReported[targetId]) {
        reporter.report(targetId, "Duplicate incoming sequence flows");
        incomingReported[targetId] = true;
      }
    } else {
      keyed[key] = node2;
    }
  }
  return {
    check
  };
};
function flowKey(flow) {
  const conditionExpression = flow.conditionExpression;
  const condition = conditionExpression ? conditionExpression.body : "";
  const source2 = flow.sourceRef ? flow.sourceRef.id : flow.id;
  const target = flow.targetRef ? flow.targetRef.id : flow.id;
  return source2 + "#" + target + "#" + condition;
}
const rule_8 = /* @__PURE__ */ getDefaultExportFromCjs(noDuplicateSequenceFlows);
const {
  is: is$5
} = require$$0;
var noGatewayJoinFork = function() {
  function check(node2, reporter) {
    if (!is$5(node2, "bpmn:Gateway")) {
      return;
    }
    const incoming = node2.incoming || [];
    const outgoing = node2.outgoing || [];
    if (incoming.length > 1 && outgoing.length > 1) {
      reporter.report(node2.id, "Gateway forks and joins");
    }
  }
  return {
    check
  };
};
const rule_9 = /* @__PURE__ */ getDefaultExportFromCjs(noGatewayJoinFork);
const {
  isAny: isAny$1
} = require$$0;
var noImplicitSplit = function() {
  function check(node2, reporter) {
    if (!isAny$1(node2, [
      "bpmn:Activity",
      "bpmn:Event"
    ])) {
      return;
    }
    const outgoing = node2.outgoing || [];
    const outgoingWithoutCondition = outgoing.filter((flow) => {
      return !hasCondition(flow) && !isDefaultFlow$1(node2, flow);
    });
    if (outgoingWithoutCondition.length > 1) {
      reporter.report(node2.id, "Flow splits implicitly");
    }
  }
  return {
    check
  };
};
function hasCondition(flow) {
  return !!flow.conditionExpression;
}
function isDefaultFlow$1(node2, flow) {
  return node2["default"] === flow;
}
const rule_10 = /* @__PURE__ */ getDefaultExportFromCjs(noImplicitSplit);
const disallowNodeType = helper.disallowNodeType;
var noInclusiveGateway = disallowNodeType("bpmn:InclusiveGateway");
const rule_11 = /* @__PURE__ */ getDefaultExportFromCjs(noInclusiveGateway);
const {
  is: is$4
} = require$$0;
var singleBlankStartEvent = function() {
  function check(node2, reporter) {
    if (!is$4(node2, "bpmn:FlowElementsContainer")) {
      return;
    }
    const flowElements = node2.flowElements || [];
    const blankStartEvents = flowElements.filter(function(flowElement) {
      if (!is$4(flowElement, "bpmn:StartEvent")) {
        return false;
      }
      const eventDefinitions = flowElement.eventDefinitions || [];
      return eventDefinitions.length === 0;
    });
    if (blankStartEvents.length > 1) {
      const type = is$4(node2, "bpmn:SubProcess") ? "Sub process" : "Process";
      reporter.report(node2.id, type + " has multiple blank start events");
    }
  }
  return {
    check
  };
};
const rule_12 = /* @__PURE__ */ getDefaultExportFromCjs(singleBlankStartEvent);
const {
  is: is$3
} = require$$0;
var singleEventDefinition = function() {
  function check(node2, reporter) {
    if (!is$3(node2, "bpmn:Event")) {
      return;
    }
    const eventDefinitions = node2.eventDefinitions || [];
    if (eventDefinitions.length > 1) {
      reporter.report(node2.id, "Event has multiple event definitions", ["eventDefinitions"]);
    }
  }
  return {
    check
  };
};
const rule_13 = /* @__PURE__ */ getDefaultExportFromCjs(singleEventDefinition);
const {
  is: is$2,
  isAny
} = require$$0;
var startEventRequired = function() {
  function hasStartEvent(node2) {
    const flowElements = node2.flowElements || [];
    return flowElements.some((node3) => is$2(node3, "bpmn:StartEvent"));
  }
  function check(node2, reporter) {
    if (!isAny(node2, [
      "bpmn:Process",
      "bpmn:SubProcess"
    ])) {
      return;
    }
    if (!hasStartEvent(node2)) {
      const type = is$2(node2, "bpmn:SubProcess") ? "Sub process" : "Process";
      reporter.report(node2.id, type + " is missing start event");
    }
  }
  return { check };
};
const rule_14 = /* @__PURE__ */ getDefaultExportFromCjs(startEventRequired);
const {
  is: is$1
} = require$$0;
var subProcessBlankStartEvent = function() {
  function check(node2, reporter) {
    if (!is$1(node2, "bpmn:SubProcess") || node2.triggeredByEvent) {
      return;
    }
    const flowElements = node2.flowElements || [];
    flowElements.forEach(function(flowElement) {
      if (!is$1(flowElement, "bpmn:StartEvent")) {
        return false;
      }
      const eventDefinitions = flowElement.eventDefinitions || [];
      if (eventDefinitions.length > 0) {
        reporter.report(flowElement.id, "Start event must be blank", ["eventDefinitions"]);
      }
    });
  }
  return {
    check
  };
};
const rule_15 = /* @__PURE__ */ getDefaultExportFromCjs(subProcessBlankStartEvent);
const {
  is
} = require$$0;
var superfluousGateway = function() {
  function check(node2, reporter) {
    if (!is(node2, "bpmn:Gateway")) {
      return;
    }
    const incoming = node2.incoming || [];
    const outgoing = node2.outgoing || [];
    if (incoming.length === 1 && outgoing.length === 1) {
      reporter.report(node2.id, "Gateway is superfluous. It only has one source and target.");
    }
  }
  return {
    check
  };
};
const rule_16 = /* @__PURE__ */ getDefaultExportFromCjs(superfluousGateway);
const cache = {};
class Resolver {
  constructor() {
  }
  resolveRule(pkg, ruleName) {
    const rule = cache[pkg + "/" + ruleName];
    if (!rule) {
      throw new Error("cannot resolve rule <" + pkg + "/" + ruleName + ">");
    }
    return rule;
  }
  resolveConfig(pkg, configName) {
    throw new Error("cannot resolve config <" + configName + "> in <" + pkg + ">");
  }
}
const resolver = new Resolver();
const rules = {
  "conditional-flows": "error",
  "end-event-required": "error",
  "event-sub-process-typed-start-event": "error",
  "fake-join": "warn",
  "label-required": "off",
  "no-bpmndi": "error",
  "no-complex-gateway": "error",
  "no-disconnected": "error",
  "no-duplicate-sequence-flows": "error",
  "no-gateway-join-fork": "error",
  "no-implicit-split": "error",
  "no-inclusive-gateway": "error",
  "single-blank-start-event": "error",
  "single-event-definition": "error",
  "start-event-required": "error",
  "sub-process-blank-start-event": "error",
  "superfluous-gateway": "warning"
};
const config = {
  rules
};
const bundle = {
  resolver,
  config
};
cache["bpmnlint/conditional-flows"] = rule_0;
cache["bpmnlint/end-event-required"] = rule_1;
cache["bpmnlint/event-sub-process-typed-start-event"] = rule_2;
cache["bpmnlint/fake-join"] = rule_3;
cache["bpmnlint/label-required"] = rule_4;
cache["bpmnlint/no-bpmndi"] = rule_5;
cache["bpmnlint/no-complex-gateway"] = rule_6;
cache["bpmnlint/no-disconnected"] = rule_7;
cache["bpmnlint/no-duplicate-sequence-flows"] = rule_8;
cache["bpmnlint/no-gateway-join-fork"] = rule_9;
cache["bpmnlint/no-implicit-split"] = rule_10;
cache["bpmnlint/no-inclusive-gateway"] = rule_11;
cache["bpmnlint/single-blank-start-event"] = rule_12;
cache["bpmnlint/single-event-definition"] = rule_13;
cache["bpmnlint/start-event-required"] = rule_14;
cache["bpmnlint/sub-process-blank-start-event"] = rule_15;
cache["bpmnlint/superfluous-gateway"] = rule_16;
const BpmnIconAssociation = "data:image/svg+xml,%3csvg%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%20xmlns='http://www.w3.org/2000/svg'%3e%3cline%20x1='1.5'%20y1='30.5'%20x2='30.5'%20y2='1.5'%20stroke='%23000'%20stroke-width='2'%20fill='none'%20stroke-dasharray='3.3,6'%20stroke-linecap='square'/%3e%3c/svg%3e";
const BpmnIconBusinessRuleTask = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cg%20transform='translate(0%203)'%3e%3cpath%20d='M6.49417317,0%20C2.91556567,0%200,2.90326667%200,6.475%20L0,19.8583333%20C0,23.4300667%202.91556567,26.3333333%206.49417317,26.3333333%20L25.5058267,26.3333333%20C29.084435,26.3333333%2032,23.4300667%2032,19.8583333%20L32,6.475%20C32,2.90326667%2029.084435,0%2025.5058267,0%20L6.49417317,0%20Z%20M6.49417317,2%20L25.5058267,2%20C28.0147767,2%2030,3.98043383%2030,6.475%20L30,19.8583333%20C30,22.3529%2028.0147767,24.3333333%2025.5058267,24.3333333%20L6.49417317,24.3333333%20C3.98522267,24.3333333%202,22.3529%202,19.8583333%20L2,6.475%20C2,3.98043383%203.98522267,2%206.49417317,2%20Z%20M5.29550783,4.39847%20L5.29550783,17.0631183%20L22.1658533,17.0631183%20L22.1658533,4.39847%20L5.29550783,4.39847%20Z%20M6.01393233,8.78356117%20L21.4474617,8.78356117%20L21.4474617,12.223405%20L9.984668,12.223405%20L9.984668,8.79205733%20L9.2662435,8.79205733%20L9.2662435,12.223405%20L6.01393233,12.223405%20L6.01393233,8.78356117%20Z%20M6.01393233,12.9418295%20L9.2662435,12.9418295%20L9.2662435,16.3446933%20L6.01393233,16.3446933%20L6.01393233,12.9418295%20Z%20M9.984668,12.9418295%20L21.4474617,12.9418295%20L21.4474617,16.3446933%20L9.984668,16.3446933%20L9.984668,12.9418295%20Z'/%3e%3cpolygon%20points='6.079%205.209%206.079%208.796%2021.44%208.796%2021.44%205.209'/%3e%3c/g%3e%3c/svg%3e";
const BpmnIconCallActivity = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M24.9777017,3%20C28.7394332,3%2031.8671909,5.97871378%2031.9958815,9.6951347%20L32,9.93333333%20L32,22.4%20C32,26.1467982%2028.9506116,29.2035703%2025.2169284,29.3293096%20L24.9777017,29.3333333%20L7.02229817,29.3333333%20C3.26056733,29.3333333%200.132809099,26.3546196%200.00411853569,22.6381986%20L0,22.4%20L0,9.93333333%20C0,6.18653511%203.04938883,3.12976304%206.78307145,3.00402375%20L7.02229817,3%20L24.9777017,3%20Z%20M24.9777017,6.66666667%20L7.02229817,6.66666667%20C5.18048424,6.66666667%203.76707783,8.01129037%203.67179155,9.74602016%20L3.66666667,9.93333333%20L3.66666667,22.4%20C3.66666667,24.1613769%205.01656225,25.5667378%206.8266408,25.6615649%20L7.02229817,25.6666667%20L10,25.666%20L10,15%20L22,15%20L22,25.666%20L24.9777017,25.6666667%20C26.8195159,25.6666667%2028.2329222,24.3220428%2028.3282084,22.5873132%20L28.3333333,22.4%20L28.3333333,9.93333333%20C28.3333333,8.17195632%2026.9834379,6.76659548%2025.1733591,6.67176843%20L24.9777017,6.66666667%20Z%20M21.2457143,15.7542857%20L10.7542857,15.7542857%20L10.754,25.666%20L21.245,25.666%20L21.2457143,15.7542857%20Z%20M16.7714286,17.5714286%20L16.7714286,20.2285714%20L19.4285714,20.2285714%20L19.4285714,21.7714286%20L16.7714286,21.7714286%20L16.7714286,24.4285714%20L15.2285714,24.4285714%20L15.2285714,21.7714286%20L12.5714286,21.7714286%20L12.5714286,20.2285714%20L15.2285714,20.2285714%20L15.2285714,17.5714286%20L16.7714286,17.5714286%20Z'/%3e%3c/svg%3e";
const BpmnIconCollaboration = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cg%20fill-rule='evenodd'%3e%3cpath%20fill-rule='nonzero'%20d='M0%200L0%208.62%2032%208.62%2032%200%200%200zM1.65517241%207.05446983L1.65517241%201.68446983%2030.2758621%201.68446983%2030.2758621%201.68446983%2030.2758621%207.05446983%201.65517241%207.05446983zM0%2023.38L0%2032%2032%2032%2032%2023.38%200%2023.38zM1.65517241%2030.43447L1.65517241%2025.06447%2030.2758621%2025.06447%2030.2758621%2025.06447%2030.2758621%2030.43447%201.65517241%2030.43447z'/%3e%3cpath%20d='M24,8%20L28,15%20L20,15%20L24,8%20Z%20M24,10%20L21.72,14%20L26.28,14%20L24,10%20Z'/%3e%3crect%20width='1'%20height='3'%20x='23.5'%20y='21'/%3e%3crect%20width='1'%20height='3'%20x='23.5'%20y='15'/%3e%3cpath%20d='M8,24%20L4,17%20L12,17%20L8,24%20Z%20M8,22%20L10.28,18%20L5.72,18%20L8,22%20Z'/%3e%3crect%20width='1'%20height='3'%20x='7.5'%20y='8'/%3e%3crect%20width='1'%20height='3'%20x='7.5'%20y='14'/%3e%3c/g%3e%3c/svg%3e";
const BpmnIconConditionalFlow = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M32,0%20C32,0%2020.4194917,5.90888659%2014.5369837,8.67185832%20C15.7971407,9.82263411%2016.9692569,11.063825%2018.1852343,12.2601495%20C12.4817021,18.0397893%2015.0344038,15.563022%2010.0977868,20.5757277%20L1.62601217,21.952516%20L2.2487726e-15,31.9588947%20L10.0064183,30.3329207%20L10.1035819,29.7348341%20L11.3828572,21.8619573%20C16.358497,16.8101278%2013.785979,19.3071147%2019.500632,13.516206%20C20.7188624,14.7301375%2021.9302072,15.9509081%2023.1488826,17.1644564%20C26.290901,10.9765251%2032,0%2032,0%20Z%20M9.60269704,22.3561195%20L8.5411608,28.8675083%20L2.02969487,29.9290837%20L3.09126968,23.413909%20L9.60269704,22.3561195%20Z'%20transform='translate(0%20.041)'/%3e%3c/svg%3e";
const BpmnIconConnection = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M32,0%20C32,0%2020.3308185,5.95413115%2014.4032705,8.73825818%20C15.6730764,9.89784518%2016.8541675,11.1485404%2018.0794556,12.3540247%20C12.0529976,18.4608998%206.02645794,24.5676573%202.26599131e-15,30.6745304%20C0.441940276,31.0962868%200.883529352,31.517826%201.32546963,31.9395825%20C7.35192757,25.8327074%2013.3784672,19.7265738%2019.4049252,13.6196987%20C20.6324835,14.842925%2021.8531035,16.0730433%2023.0811102,17.2958838%20C26.2471868,11.0605729%2032,0%2032,0%20Z'%20transform='translate(0%20.06)'/%3e%3c/svg%3e";
const BpmnIconDataInputOutputAssociation = "data:image/svg+xml,%3csvg%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%20xmlns='http://www.w3.org/2000/svg'%3e%3cline%20x1='1.5'%20y1='30.5'%20x2='27'%20y2='5'%20stroke='%23000'%20stroke-width='2'%20stroke-linecap='round'%20stroke-dasharray='1.1,4.3'/%3e%3cpolygon%20fill='%23000'%20points='31.8033009%200.196699141%2026.5%2016.1066017%2024.9797204%2014.5863221%2028.7627417%203.2372583%2017.4136779%207.02027958%2015.8933983%205.5'/%3e%3c/svg%3e";
const BpmnIconDataInput = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M17.3449687,0%20C11.5633135,0%205.78165617,0%200,0%20L0,32%20L24.5120942,32%20L24.5120942,7.35976687%20C22.1230517,4.90651118%2019.7340112,2.45325569%2017.3449687,0%20Z%20M15.2400597,1.81793745%20L15.2400597,9.32497766%20L22.6941567,9.32497766%20L22.6941567,30.1820625%20L1.81793745,30.1820625%20L1.81793745,1.81793745%20C6.29197828,1.81793745%2010.7660193,1.81793745%2015.2400597,1.81793745%20Z%20M17.0579972,2.31104511%20L22.1180019,7.5070402%20L17.0579972,7.5070402%20L17.0579972,2.31104511%20Z%20M7.87619038,3.17164599%20L7.87619038,4.10546936%20L7.87619038,6.91463256%20L3.59322751,6.91463256%20L3.59322751,10.1373685%20L7.87619038,10.1373685%20L7.87619038,13.8803944%20L13.575433,8.52600041%20L7.87619038,3.17164599%20Z%20M8.68416258,5.03933211%20L12.39543,8.52600041%20L8.68416258,12.0126689%20L8.68416258,9.32939625%20L4.40119971,9.32939625%20L4.40119971,7.72260476%20L8.68416258,7.72260476%20L8.68416258,5.03933211%20Z'%20transform='translate(3.488)'/%3e%3c/svg%3e";
const BpmnIconDataObject = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M17.3449683,0%20C11.5633122,0%205.78165602,0%200,0%20C0,10.6666936%200,21.3333472%200,32%20C8.17069786,32%2016.3413961,32%2024.5120936,32%20C24.5120936,23.7865891%2024.5120936,15.5731784%2024.5120936,7.35976749%20C22.1230511,4.90651186%2019.7340107,2.45325644%2017.3449683,0%20L17.3449683,0%20Z%20M15.2400593,1.8179366%20C15.2400593,4.32028401%2015.2400593,6.82263082%2015.2400593,9.32497742%20C17.7247576,9.32497742%2020.2094579,9.32497742%2022.6941562,9.32497742%20C22.6941562,16.2773393%2022.6941562,23.2296995%2022.6941562,30.1820618%20C15.735417,30.1820618%208.77667699,30.1820618%201.81793741,30.1820618%20C1.81793741,20.7273673%201.81793741,11.2726719%201.81793741,1.8179366%20C6.29197812,1.8179366%2010.7660186,1.8179366%2015.2400593,1.8179366%20L15.2400593,1.8179366%20Z%20M17.0579967,2.31104505%20C18.7446649,4.0430433%2020.4313331,5.77504176%2022.1180013,7.50704001%20C20.4313331,7.50704001%2018.7446649,7.50704001%2017.0579967,7.50704001%20C17.0579967,5.77504176%2017.0579967,4.0430433%2017.0579967,2.31104505%20Z'%20transform='translate(4)'/%3e%3c/svg%3e";
const BpmnIconDataOutput = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M17.3449683,0%20C11.5633133,0%205.78165602,0%200,0%20L0,32%20L24.5120936,32%20L24.5120936,7.35976749%20C22.1230511,4.90651105%2019.7340107,2.45325563%2017.3449683,0%20Z%20M15.2400593,1.8179366%20L15.2400593,9.32497742%20L22.6941562,9.32497742%20L22.6941562,30.1820618%20L1.81793741,30.1820618%20L1.81793741,1.8179366%20C6.29197812,1.8179366%2010.766019,1.8179366%2015.2400593,1.8179366%20L15.2400593,1.8179366%20Z%20M17.0579967,2.31104505%20L22.1180013,7.50704001%20L17.0579967,7.50704001%20L17.0579967,2.31104505%20Z%20M7.87619018,3.17164591%20L7.87619018,6.91463239%20L3.59322742,6.91463239%20L3.59322742,10.1373682%20L7.87619018,10.1373682%20L7.87619018,13.8803941%20L13.5754326,8.52600019%20L7.87619018,3.17164591%20Z'%20transform='translate(3.488)'/%3e%3c/svg%3e";
const BpmnIconDataStore = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M16.0078109,0%20C12.2964473,0%208.59117925,0.305974556%205.68922055,0.938863674%20C4.23824131,1.25530823%202.98862738,1.64864241%202.00895727,2.16489846%20C1.06533717,2.66215753%200.297462857,3.30350779%200.0606771022,4.23035283%20C0.0443721653,4.27876248%200.032608698,4.3285846%200.0255386238,4.3791748%20L0,4.50310112%20L0.017316661,4.58706598%20C0.00519690322,11.996058%200.017316661,19.0463354%200.017316661,26.6669929%20L0.034265743,26.7492122%20C0.237292558,27.7344019%201.02928692,28.4050202%202.00895727,28.9212765%20C2.98862738,29.4375328%204.23824131,29.8308206%205.68922055,30.1472654%20C8.59117925,30.7801546%2012.2964473,31.086175%2016.0078109,31.086175%20C19.7191754,31.086175%2023.4244441,30.7801546%2026.3264012,30.1472654%20C27.7773809,29.8308206%2029.0269965,29.4375328%2030.0066661,28.9212765%20C30.9863358,28.4050202%2031.7783755,27.7344019%2031.9814023,26.7492122%20L31.9983067,26.6669929%20C31.9983067,19.3798953%2031.9985419,11.4433168%2031.9983067,4.54058218%20C32.0005644,4.5053882%2032.0005644,4.4700851%2031.9983067,4.43489112%20L31.9983067,4.41918211%20L31.9955034,4.40567788%20C31.9883612,4.33832415%2031.9729337,4.27210938%2031.9495714,4.20853491%20C31.7063931,3.29337267%2030.942906,2.65826891%2030.0066661,2.16489846%20C29.0269965,1.64864241%2027.7773809,1.25530823%2026.3264012,0.938863674%20C23.4244441,0.305974556%2019.7191754,0%2016.0078109,0%20L16.0078109,0%20Z%20M16.0078109,1.64622692%20C19.6273559,1.64622692%2023.2529967,1.9535114%2025.9756138,2.54728805%20C27.3369235,2.84417638%2028.4730153,3.21754276%2029.2391763,3.62128579%20C29.8506344,3.94350508%2030.1707173,4.26362825%2030.3016912,4.50310112%20C30.1707103,4.74257187%2029.8506156,5.06270727%2029.2391763,5.38491668%20C28.4730153,5.78865971%2027.3369235,6.16198%2025.9756138,6.45886832%20C23.2529967,7.05264497%2019.6273559,7.35997555%2016.0078109,7.35997555%20C12.3882673,7.35997555%208.76262579,7.05264497%206.04000846,6.45886832%20C4.67869967,6.16198%203.54260649,5.78865971%202.77644613,5.38491668%20C2.16500806,5.06270727%201.84491311,4.74257187%201.71393177,4.50310112%20C1.84490535,4.26362825%202.16498877,3.94350508%202.77644613,3.62128579%20C3.54260649,3.21754276%204.67869967,2.84417638%206.04000846,2.54728805%20C8.76262579,1.9535114%2012.3882673,1.64622692%2016.0078109,1.64622692%20L16.0078109,1.64622692%20Z%20M1.66354358,6.6470544%20C1.77560343,6.71413674%201.89072596,6.77899949%202.00895727,6.84130377%20C2.98862738,7.35756006%204.23824131,7.75084814%205.68922055,8.0672927%20C8.59117925,8.70018182%2012.2964473,9.00620247%2016.0078109,9.00620247%20C19.7191754,9.00620247%2023.4244441,8.70018182%2026.3264012,8.0672927%20C27.7773809,7.75084814%2029.0269965,7.35756006%2030.0066661,6.84130377%20C30.1248958,6.77899949%2030.2400188,6.71413674%2030.3520798,6.6470544%20L30.3520798,8.5769615%20C30.2716381,8.82175568%2029.9536529,9.19563168%2029.2391763,9.57213883%20C28.4730153,9.97588186%2027.3369235,10.3492024%2025.9756138,10.6460907%20C23.2529967,11.2398671%2019.6273559,11.5471977%2016.0078109,11.5471977%20C12.3882673,11.5471977%208.76262579,11.2398671%206.04000846,10.6460907%20C4.67869967,10.3492024%203.54260649,9.97588186%202.77644613,9.57213883%20C2.06197024,9.19563168%201.74398387,8.82175568%201.66354358,8.5769615%20L1.66354358,6.6470544%20Z%20M1.66354358,10.8342768%20C1.77560343,10.9013589%201.89072596,10.9662216%202.00895727,11.0285259%20C2.98862738,11.5447822%204.23824131,11.9380703%205.68922055,12.2545149%20C8.59117925,12.8874042%2012.2964473,13.1934247%2016.0078109,13.1934247%20C19.7191754,13.1934247%2023.4244441,12.8874042%2026.3264012,12.2545149%20C27.7773809,11.9380703%2029.0269965,11.5447822%2030.0066661,11.0285259%20C30.1248958,10.9662216%2030.2400188,10.9013589%2030.3520798,10.8342768%20L30.3520798,12.7641839%20C30.2716381,13.0089779%2029.9536529,13.382854%2029.2391763,13.7593611%20C28.4730153,14.1631042%2027.3369235,14.5364246%2025.9756138,14.8333129%20C23.2529967,15.4270894%2019.6273559,15.73442%2016.0078109,15.73442%20C12.3882673,15.73442%208.76262579,15.4270894%206.04000846,14.8333129%20C4.67869967,14.5364246%203.54260649,14.1631042%202.77644613,13.7593611%20C2.06197024,13.382854%201.74398387,13.0089779%201.66354358,12.7641839%20L1.66354358,10.8342768%20Z%20M1.66354358,15.021545%20C1.77560319,15.088627%201.89072619,15.1534441%202.00895727,15.2157483%20C2.98862738,15.7320046%204.23824131,16.1252926%205.68922055,16.4417372%20C8.59117925,17.0746264%2012.2964473,17.380647%2016.0078109,17.380647%20C19.7191754,17.380647%2023.4244441,17.0746264%2026.3264012,16.4417372%20C27.7773809,16.1252926%2029.0269965,15.7320046%2030.0066661,15.2157483%20C30.1248958,15.1534441%2030.2400188,15.088627%2030.3520798,15.021545%20L30.3520798,26.4697121%20C30.2716381,26.714506%2029.9536529,27.088382%2029.2391763,27.4648892%20C28.4730153,27.8686322%2027.3369235,28.2419986%2025.9756138,28.5388869%20C23.2529967,29.1326636%2019.6273559,29.439948%2016.0078109,29.439948%20C12.3882673,29.439948%208.76262579,29.1326636%206.04000846,28.5388869%20C4.67869967,28.2419986%203.54260649,27.8686322%202.77644613,27.4648892%20C2.06197024,27.088382%201.74398387,26.714506%201.66354358,26.4697121%20L1.66354358,15.021545%20Z'%20transform='translate(0%201)'/%3e%3c/svg%3e";
const BpmnIconDefaultFlow = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M32,0%20C32,0%2020.3308205,5.95413055%2014.4032705,8.73825818%20C15.6730764,9.89784538%2016.8541675,11.14854%2018.0794556,12.3540247%20C14.3329441,16.1505303%2010.5863993,19.9469862%206.83986397,23.7434562%20L0.0452748534,23.7434562%20L0.0452748534,25.4987447%20L5.10769841,25.4987447%20C3.40513247,27.2240078%201.70255657,28.949257%202.26599131e-15,30.6745322%20C0.441940276,31.0962886%200.883529352,31.5178657%201.32546963,31.9396222%20C3.44423622,29.7925826%205.56301137,27.6456666%207.68179092,25.4987447%20L14.8274846,25.4987447%20L14.8274846,23.7434562%20L9.41403442,23.7434562%20C12.7443361,20.36894%2016.0746459,16.9944179%2019.4049252,13.6196987%20C20.6324835,14.8429252%2021.8531035,16.0730431%2023.0811102,17.2958836%20C26.2471868,11.0605717%2032,0%2032,0%20Z'%20transform='translate(0%20.06)'/%3e%3c/svg%3e";
const BpmnIconEndEventCancel = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M12.0378921,8.92442293%20C11.0057084,9.95660658%209.97352494,10.9887901%208.94134129,12.0209737%20C10.2695818,13.3492256%2011.5978224,14.6774776%2012.9260629,16.0057295%20C11.6218151,17.3099879%2010.3175672,18.6142481%209.01331947,19.9185066%20C10.0291254,20.9343122%2011.0449314,21.9501178%2012.0607374,22.9659235%20C13.3649964,21.661665%2014.6692552,20.3574048%2015.9735141,19.0531464%20C17.3025312,20.3821635%2018.6315466,21.7111806%2019.9605637,23.0401977%20C20.9927484,22.008013%2022.0249313,20.97583%2023.057116,19.9436453%20C21.7280989,18.6146282%2020.3990818,17.2856129%2019.0700647,15.9565958%20C20.3743578,14.6522919%2021.6786508,13.347988%2022.9829438,12.0436841%20C21.9671381,11.0278781%2020.9513308,10.0120722%2019.9355251,8.99626618%20C18.6312321,10.300559%2017.3269409,11.6048517%2016.0226479,12.9091445%20C14.694396,11.580904%2013.3661439,10.2526634%2012.0378921,8.92442293%20Z'%20transform='translate(0%20.051)'/%3e%3c/svg%3e";
const BpmnIconEndEventCompensation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M15.4338292,10.7502348%20C12.9644534,12.4936971%2010.4950777,14.2371595%208.02570189,15.9806219%20C10.495248,17.724969%2012.9644275,19.4698344%2015.4338292,21.2143854%20C15.4338292,19.5285934%2015.4338292,17.8427997%2015.4338292,16.1570077%20C17.8184162,17.844194%2020.2051438,19.5283619%2022.5905548,21.2143854%20C22.5905548,17.7263356%2022.5905548,14.238285%2022.5905548,10.7502348%20C20.2049796,12.4349698%2017.8194045,14.1197049%2015.4338292,15.8044399%20C15.4338292,14.1197049%2015.4338292,12.4349698%2015.4338292,10.7502348%20Z'%20transform='translate(0%20.051)'/%3e%3c/svg%3e";
const BpmnIconEndEventError = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M22.1246034,9.17217932%20C20.9138179,11.6266059%2019.7030341,14.0810324%2018.4922486,16.535459%20C16.9867679,14.577254%2015.4812863,12.6190489%2013.9758051,10.660844%20C12.6084878,14.7047094%2011.2411703,18.7485754%209.87385302,22.7924402%20C11.4067913,20.8220759%2012.9397295,18.8517116%2014.4726678,16.8813473%20C16.0539184,18.6907131%2017.6351678,20.5000806%2019.2164172,22.3094464%20C20.185812,17.9303568%2021.1552086,13.5512683%2022.1246034,9.17217932%20L22.1246034,9.17217932%20Z'%20transform='translate(0%20.051)'/%3e%3c/svg%3e";
const BpmnIconEndEventEscalation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M15.9992282,8.90549182%20C14.3270372,13.5588473%2013.26567,18.4057762%2011.5934692,23.0591286%20C13.1276101,21.5340103%2014.4651747,19.825495%2015.9992282,18.3002937%20C17.4678146,19.8865726%2018.9364009,21.4728497%2020.4049873,23.0591286%20C18.9084546,18.3499786%2017.4957575,13.614642%2015.9992282,8.90549182%20Z'%20transform='translate(0%20.051)'/%3e%3c/svg%3e";
const BpmnIconEndEventLink = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M17.7727691,9.07131526%20C17.7727691,10.2562291%2017.7727691,11.441143%2017.7727691,12.6260569%20C15.1082904,12.6260569%2012.4438118,12.6260569%209.77933308,12.6260569%20C9.77933308,14.8636714%209.77933308,17.1012863%209.77933308,19.3389005%20C12.4438118,19.3389005%2015.1082904,19.3389005%2017.7727691,19.3389005%20C17.7727691,20.5237024%2017.7727691,21.7085026%2017.7727691,22.8933045%20C19.7156208,20.589673%2021.6584707,18.2860433%2023.6013223,15.9824118%20C21.6584707,13.678713%2019.7156208,11.3750141%2017.7727691,9.07131526%20Z'/%3e%3c/svg%3e";
const BpmnIconEndEventMessage = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M10.0830388,10.4535142%20C12.0966761,12.0870465%2014.1103136,13.7205789%2016.1239509,15.3541112%20C18.1375884,13.7205789%2020.1512242,12.0870465%2022.1648617,10.4535142%20C18.1375867,10.4535142%2014.1103131,10.4535142%2010.0830388,10.4535142%20Z%20M8.74265019,11.5908925%20C8.74265019,14.8976301%208.74265019,18.2043674%208.74265019,21.5111055%20C13.5803692,21.5111055%2018.4180884,21.5111055%2023.2558071,21.5111055%20C23.2558071,18.2717911%2023.2558071,15.0324755%2023.2558071,11.7931606%20C20.8785217,13.7217375%2018.5012363,15.6503143%2016.1239509,17.5788913%20C13.6635173,15.5828924%2011.2030838,13.5868921%208.74265019,11.5908925%20Z'/%3e%3c/svg%3e";
const BpmnIconEndEventMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761678,0.000432469172%20C7.94295029,0.00694366922%200.833733852,6.45086545%200.104143226,14.1590413%20C-0.678757795,20.7242843%203.01600922,27.5863335%209.04641452,30.3749951%20C14.6466893,33.1121457%2021.8348031,32.2459363%2026.4795818,28.0313449%20C31.20543,23.9419274%2033.2703198,16.9714965%2031.194464,11.0247392%20C29.2203883,4.95775982%2023.3943587,0.313084431%2016.9778359,0.0319113726%20C16.5445317,0.00358286648%2016.1102582,-0.00173718791%2015.6761678,0.000432469172%20Z%20M15.9929335,5.00628542%20C21.6880825,4.8406802%2026.9093286,9.86360887%2026.9761545,15.5610758%20C27.2224436,20.773235%2023.3066857,25.8914311%2018.1124997,26.7652702%20C13.0862375,27.7721167%207.5116575,24.8672569%205.75233922,19.9876217%20C3.85834437,15.1621901%205.79065002,9.05998293%2010.4007533,6.5273089%20C12.0863312,5.53759405%2014.0377829,5.00384946%2015.9929335,5.00628542%20Z%20M16.004138,8.04466265%20C13.4643603,9.88821393%2010.924724,11.7319596%208.38502805,13.5756235%20C9.35508317,16.5586298%2010.3251865,19.5416219%2011.2952413,22.5246279%20C14.4344828,22.5246279%2017.5737249,22.5246279%2020.7129662,22.5246279%20C21.683022,19.5416219%2022.6531227,16.5586298%2023.6231785,13.5756235%20C21.0835012,11.7319649%2018.5438153,9.88832122%2016.004138,8.04466265%20Z'/%3e%3c/svg%3e";
const BpmnIconEndEventNone = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.8403486,0.000390732616%20C8.65426372,-0.0531133165%201.9126915,5.39460208%200.400717567,12.4124941%20C-1.05756055,18.5769966%201.55345144,25.4532701%206.78285744,29.0470702%20C11.8587045,32.6825031%2019.0927303,32.9674122%2024.372744,29.5909723%20C29.6819273,26.3397653%2032.8083579,19.8473833%2031.8177003,13.6695049%20C30.9105425,7.2654046%2025.7948231,1.69563309%2019.4421569,0.37926628%20C18.261065,0.115758838%2017.0501882,-0.00763487475%2015.8403486,0.000390732616%20L15.8403486,0.000390732616%20Z%20M16.2219171,5.00987453%20C21.5023286,4.99315451%2026.3528034,9.36326492%2026.8910123,14.6202049%20C27.5780227,19.644904%2024.3385398,24.901008%2019.4681164,26.4116614%20C14.7144786,28.0293229%208.98238566,25.9649026%206.50595141,21.5555001%20C3.76577197,16.9807367%204.93164827,10.4616027%209.2737856,7.28546862%20C11.2429122,5.76612082%2013.7358126,4.95269208%2016.2219171,5.00987453%20L16.2219171,5.00987453%20Z'%20transform='translate(0%20.042)'/%3e%3c/svg%3e";
const BpmnIconEndEventSignal = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M15.9992282,8.49791868%20C13.7378369,12.5685329%2011.4667822,16.6337834%209.20161712,20.7023032%20C13.7333579,20.7023032%2018.265098,20.7023032%2022.7968393,20.7023032%20C20.5309695,16.6341756%2018.265098,12.5660468%2015.9992282,8.49791868%20Z'%20transform='translate(0%20.051)'/%3e%3c/svg%3e";
const BpmnIconEndEventTerminate = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.6761859,0.000432365742%20C7.94297348,0.00694746402%200.833735786,6.45084717%200.104143122,14.1590269%20C-0.678757135,20.7242629%203.01600638,27.5863052%209.04640534,30.3749641%20C14.6466754,33.1121136%2021.8347822,32.2459016%2026.4795563,28.0313162%20C31.205405,23.9419062%2033.270329,16.971484%2031.1944649,11.0247262%20C29.2203773,4.9577629%2023.3943587,0.313022163%2016.9778199,0.0319034629%20C16.5445282,0.00358118766%2016.1102637,-0.00173664991%2015.6761859,0.000432365742%20Z%20M15.9929513,5.00628033%20C21.6880929,4.84062189%2026.9092975,9.86363263%2026.9761285,15.56106%20C27.2224174,20.7732135%2023.3066634,25.8914062%2018.1124808,26.7652445%20C13.0862248,27.77209%207.51165001,24.8672331%205.75233349,19.9876027%20C3.85834087,15.1621756%205.79064373,9.05997034%2010.400746,6.5273023%20C12.0863331,5.53758826%2014.0377933,5.00384576%2015.9929513,5.00628033%20Z%20M15.9992282,7.86482699%20C10.735097,7.66495533%206.50408419,13.4160692%208.24430304,18.3811921%20C9.61001008,23.4659132%2016.3520345,25.817424%2020.582707,22.6819524%20C25.0384964,19.8745267%2025.2911728,12.7392406%2021.0451285,9.62366406%20C19.6248967,8.49068355%2017.8157521,7.86030876%2015.9992282,7.86482699%20Z'%20transform='translate(0%20.051)'/%3e%3c/svg%3e";
const BpmnIconEventSubprocessExpanded = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M7.29489949,1.7806361%20L9.07379463,1.7806361%20L9.07379463,0.00174095966%20L7.29489949,0.00174095966%20L7.29489949,1.7806361%20Z%20M10.8526898,1.7806361%20L12.6315849,1.7806361%20L12.6315849,0.00174095966%20L10.8526898,0.00174095966%20L10.8526898,1.7806361%20Z%20M14.41048,1.7806361%20L16.1893757,1.7806361%20L16.1893757,0.00174095966%20L14.41048,0.00174095966%20L14.41048,1.7806361%20Z%20M17.9682708,1.7806361%20L19.747166,1.7806361%20L19.747166,0.00174095966%20L17.9682708,0.00174095966%20L17.9682708,1.7806361%20Z%20M21.5260611,1.7806361%20L23.3049563,1.7806361%20L23.3049563,0.00174095966%20L21.5260611,0.00174095966%20L21.5260611,1.7806361%20Z%20M25.0838514,1.7806361%20C25.6348375,1.79369728%2026.189988,1.74617872%2026.7375977,1.82517821%20C26.8193166,1.23786495%2026.9010337,0.650551512%2026.9827526,0.063238254%20C26.3543347,-0.0331357026%2025.7166578,0.0122951445%2025.0838514,0.0017368682%20L25.0838514,1.7806361%20Z%20M5.7316607,0.00344336231%20C5.4248728,0.0106619409%205.11860043,0.041331694%204.81660665,0.0958996581%20C4.92817344,0.678263674%205.04254466,1.26012942%205.13246478,1.84633941%20C5.48966443,1.74476272%206.07852586,1.94447839%205.87772151,1.36325678%20C5.78188247,0.981126975%206.04180751,0.154981213%205.7316607,0.00344336231%20Z%20M28.1042552,2.28411198%20C28.5314978,2.51802157%2028.9155008,2.83066844%2029.2334054,3.19916354%20C29.6531481,2.79972332%2030.235932,2.42226383%2030.5643107,2.018804%20C30.1139851,1.50053732%2029.572292,1.06158124%2028.9707408,0.730460016%20L28.1042552,2.28411198%20Z%20M2.83327768,0.844214489%20C2.2474635,1.19801716%201.72389908,1.65495751%201.2954714,2.18870486%20C1.7647772,2.52165941%202.25503928,3.04816932%202.71188197,3.26601353%20C3.01098397,2.90355885%203.37260969,2.59255265%203.77692587,2.35290524%20C3.44898727,1.85972488%203.2275118,1.29754848%202.83327768,0.844214489%20L2.83327768,0.844214489%20Z%20M30.5157699,4.25906787%20C29.9533011,4.30513556%2029.9589687,4.60143776%2030.1379291,5.0426155%20C30.2924368,5.29212102%2030.0407605,5.90491357%2030.3880435,5.89217686%20C30.913136,5.86952743%2031.52765,5.9362995%2032,5.86090726%20C31.9989682,5.17102985%2031.8773879,4.48115937%2031.638388,3.83383544%20C31.2641814,3.97557958%2030.8899766,4.11732373%2030.5157699,4.25906787%20L30.5157699,4.25906787%20Z%20M0.267777176,4.11411567%20C0.0708150603,4.73947736%20-0.0121527868,5.39756841%200.00142640925,6.05231229%20L1.78032155,6.05231229%20C1.76773497,5.55249576%201.82826508,5.0486271%201.98868193,4.57384888%20L0.29609096,4.02656058%20L0.270408162,4.10598007%20L0.267777176,4.11411567%20Z%20M30.2211049,9.44996713%20L32,9.44996713%20L32,7.67107199%20L30.2211049,7.67107199%20L30.2211049,9.44996713%20Z%20M0.00142943337,9.61010256%20L1.78032457,9.61010256%20L1.78032457,7.83120742%20L0.00142943337,7.83120742%20L0.00142943337,9.61010256%20Z%20M30.2211049,13.0077569%20L32,13.0077569%20L32,11.2288623%20L30.2211049,11.2288623%20L30.2211049,13.0077569%20Z%20M0.00142943337,13.167893%20L1.78032457,13.167893%20L1.78032457,11.3889977%20L0.00142943337,11.3889977%20L0.00142943337,13.167893%20Z%20M30.2211049,16.5655471%20L32,16.5655471%20L32,14.786652%20L30.2211049,14.786652%20L30.2211049,16.5655471%20Z%20M0.00142943337,16.7256833%20L1.78032457,16.7256833%20L1.78032457,14.9467881%20L0.00142943337,14.9467881%20L0.00142943337,16.7256833%20Z%20M30.2211049,20.1233374%20L32,20.1233374%20L32,18.3444423%20L30.2211049,18.3444423%20L30.2211049,20.1233374%20Z%20M0.00142943337,20.2834736%20L1.78032457,20.2834736%20L1.78032457,18.5045784%20L0.00142943337,18.5045784%20L0.00142943337,20.2834736%20Z%20M30.1379291,21.7537019%20C30.0430126,22.2195483%2029.8660018,22.6686855%2029.6161418,23.0732116%20C30.121549,23.355734%2030.6616838,23.7879646%2031.146374,23.9811775%20C31.5049957,23.3923134%2031.7586573,22.7395496%2031.8900002,22.0626462%20C31.3138108,21.9693716%2030.6811254,21.7991136%2030.1379291,21.7537019%20Z%20M0.15392095,22.2627025%20C0.310683237,22.9394725%200.58921321,23.5879919%200.973324522,24.1668852%20L2.45998757,23.190021%20C2.18762609,22.781085%201.99170232,22.3218508%201.88254149,21.8428904%20C1.30633458,21.9828272%200.730127854,22.1227657%200.15392095,22.2627025%20Z%20M28.5809778,24.2056242%20C28.2095178,24.4831906%2027.7903354,24.6965317%2027.3472873,24.8334141%20L27.8945751,26.52604%20C28.5569734,26.3188716%2029.1818103,25.9922487%2029.7298594,25.5664096%20C29.3693325,25.0956393%2029.0088038,24.6248689%2028.6482769,24.1540985%20L28.5820024,24.2048398%20L28.5809707,24.2056225%20L28.5809778,24.2056242%20Z%20M2.41676593,25.6753314%20C2.98374695,26.0885385%203.62622535,26.3979933%204.30284644,26.5834716%20C4.4425541,26.014154%204.64641975,25.4078781%204.74729236,24.8609319%20C4.28734461,24.7307061%203.85042075,24.5190407%203.46409044,24.2374149%20L2.41676593,25.6753314%20Z%20M6.2968767,26.7946122%20L8.07577184,26.7946122%20L8.07577184,25.0157171%20L6.2968767,25.0157171%20L6.2968767,26.7946122%20Z%20M9.84613735,26.7946122%20L11.6335621,26.7946122%20L11.6335621,25.0157171%20L9.84613735,25.0157171%20L9.84613735,26.7946122%20Z%20M13.4124572,26.7946122%20L15.1913524,26.7946122%20L15.1913524,25.0157171%20L13.4124572,25.0157171%20L13.4124572,26.7946122%20Z%20M16.9702484,26.7946122%20L18.7491435,26.7946122%20L18.7491435,25.0157171%20L16.9702484,25.0157171%20L16.9702484,26.7946122%20Z%20M20.421305,26.7946122%20L22.164222,26.7946122%20L22.164222,25.0157171%20L20.421305,25.0157171%20L20.421305,26.7946122%20Z%20M24.085829,26.7946122%20L25.8647241,26.7946122%20L25.8647241,25.0157171%20L24.085829,25.0157171%20L24.085829,26.7946122%20Z%20M22.164222,26.2495463%20L22.164222,13.7757397%20L9.84613735,13.7757397%20L9.84613735,26.2495463%20L22.164222,26.2495463%20Z%20M10.9666502,14.90513%20L21.0347801,14.90513%20L21.0347801,24.9687418%20L10.9666502,24.9687418%20L10.9666502,14.90513%20Z%20M12.3028367,18.9028143%20L12.3028367,20.614236%20L19.6985577,20.614236%20L19.6985577,18.9028143%20L12.3028367,18.9028143%20Z'%20opacity='.97'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconGatewayComplex = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9990822,0%20C15.6646851,0%2015.3303034,0.123717979%2015.0822395,0.372943099%20L0.370948941,15.0843688%20C-0.125179101,15.5804749%20-0.122880975,16.4219818%200.373247257,16.9180882%20L15.0822395,31.6269781%20C15.5783675,32.1232524%2016.419831,32.1254277%2016.9159582,31.6269781%20L31.627283,16.9157554%20C32.1234101,16.419649%2032.1211137,15.5781089%2031.6249502,15.0820028%20L16.9159253,0.372943099%20C16.6678608,0.124890066%2016.3334793,0%2015.9990822,0%20Z%20M15.997966,2.18124481%20L29.8190148,16.0023942%20L15.997966,29.8233755%20L2.17691859,16.0023942%20L15.997966,2.18124481%20Z%20M15.6712611,8.97117261%20L15.6712282,8.97837179%20C15.6712282,8.9785393%2015.5264355,9.00517474%2015.5263636,9.00517474%20C15.5261905,9.00517474%2015.4077842,9.0855497%2015.4076939,9.0855497%20C15.4075208,9.0855497%2015.3252615,9.20776833%2015.3251895,9.20776833%20C15.3251895,9.20793584%2015.2973232,9.35344377%2015.2972712,9.35344377%20L15.2972712,14.3069487%20L11.7905158,10.8002272%20L11.7906848,10.8002272%20C11.7905116,10.8002272%2011.6661589,10.7198522%2011.6661002,10.7198522%20C11.6658932,10.7198522%2011.5273665,10.6916986%2011.5263058,10.6914946%20C11.5249645,10.6917055%2011.3824092,10.7181959%2011.3823542,10.7181959%20C11.3821813,10.7180286%2011.2600777,10.8002272%2011.2600343,10.8002272%20L10.7991455,11.2608455%20C10.7991455,11.2608455%2010.715034,11.3847539%2010.7150188,11.3847539%20C10.7148459,11.3847539%2010.6889899,11.5270495%2010.6889934,11.5270495%20C10.6889968,11.5272168%2010.7169203,11.6676887%2010.7169454,11.6676887%20C10.716949,11.6678563%2010.7967648,11.7915974%2010.7968135,11.7915974%20L14.3018113,15.2966629%20L9.34458841,15.2966629%20L9.34360823,15.2954799%20C9.34360823,15.2956472%209.19942763,15.3272851%209.19935235,15.3272851%20C9.19917947,15.3274524%209.08079517,15.40766%209.08071643,15.40766%20L9.08071643,15.406815%20C9.08054355,15.4069825%208.99828907,15.5290674%208.99821206,15.5290674%20C8.99803918,15.5290674%208.97026003,15.6747098%208.97026003,15.6747098%20L8.97026003,16.326531%20C8.97026003,16.326531%208.99795941,16.4738959%208.99895567,16.4738959%20C8.99895567,16.4742316%209.08107984,16.5927677%209.08108832,16.5927677%20C9.08126138,16.5927677%209.20039534,16.6731439%209.20043393,16.6731439%20C9.20060698,16.6734779%209.34523286,16.7049493%209.3452981,16.7049493%20L14.3008311,16.7049493%20L10.7988076,20.2069712%20L10.7988076,20.2056543%20C10.7986345,20.2058222%2010.7147026,20.3295619%2010.7146808,20.3295619%20C10.7145078,20.3297298%2010.6886215,20.4718582%2010.6886215,20.4718582%20C10.6886251,20.4721922%2010.7165873,20.6124965%2010.7166074,20.6124965%20C10.7166074,20.6124965%2010.7967417,20.7364059%2010.7964755,20.7364059%20L11.2574316,21.1970244%20C11.2576046,21.1971922%2011.3833805,21.2790549%2011.3834357,21.2790549%20C11.3834357,21.2790549%2011.5236785,21.3075152%2011.5237372,21.3075152%20C11.5239447,21.3075152%2011.6658576,21.2807456%2011.6659311,21.2807456%20C11.6659311,21.2807456%2011.7900329,21.1970244%2011.7900764,21.1970244%20L15.297305,17.6897952%20L15.297305,22.6540141%20L15.2963925,22.6530346%20C15.2963925,22.6532025%2015.32512,22.8003667%2015.3250881,22.8003667%20C15.3250881,22.8005345%2015.4071869,22.9192385%2015.4071869,22.9192385%20C15.4073597,22.9194063%2015.5265023,22.9996129%2015.5265325,22.9996129%20C15.5265325,22.9996129%2015.6703145,23.0297449%2015.6713961,23.0314183%20L16.3230148,23.0312504%20C16.3231879,23.0312504%2016.4706514,23.001134%2016.4707518,23.001134%20C16.4707518,23.001134%2016.5893052,22.9207596%2016.5893883,22.9207596%20C16.5895613,22.9205917%2016.6714378,22.8018878%2016.6715209,22.8018878%20C16.6715209,22.8018878%2016.6997787,22.6545211%2016.6998445,22.6545211%20L16.6998445,17.6931421%20L20.204573,21.1976993%20C20.2043999,21.198035%2020.3304759,21.2797315%2020.3305434,21.2797315%20C20.3307147,21.2798994%2020.470827,21.306534%2020.4708772,21.306534%20C20.4710849,21.306534%2020.6129883,21.2797315%2020.6130714,21.2797315%20C20.6130714,21.2797315%2020.7371676,21.1960103%2020.7372507,21.1960103%20L21.1980041,20.7350872%20C21.1981789,20.7350872%2021.279673,20.6128357%2021.2807113,20.6128357%20C21.2807078,20.6125%2021.3090972,20.4688678%2021.3083928,20.4671944%20C21.3083894,20.4670265%2021.2804067,20.3265214%2021.2803738,20.3265214%20C21.2801662,20.3266875%2021.1988053,20.2009559%2021.1977341,20.2009559%20L17.701795,16.7047797%20L22.6503647,16.7047797%20C22.6505377,16.7049475%2022.7980013,16.6746304%2022.7980671,16.6746304%20C22.7982401,16.6746304%2022.9166533,16.594256%2022.9167035,16.594256%20C22.9168766,16.5939202%2022.9987358,16.4753824%2022.9988362,16.4753824%20C22.9988362,16.4753824%2023.0271597,16.3280521%2023.0271597,16.3280521%20L23.0271597,15.6763988%20C23.0271597,15.6762309%2022.9990231,15.532398%2022.9990733,15.5307237%20C22.9988985,15.5305562%2022.9173698,15.4085051%2022.9163661,15.4085051%20C22.9161913,15.4083375%2022.7970374,15.3281301%2022.7969872,15.3281301%20C22.7969872,15.3282975%2022.6497555,15.2963405%2022.649688,15.2980147%20L17.6861112,15.2980147%20L21.1978016,11.7864261%20C21.1979747,11.7862586%2021.2794376,11.6641737%2021.2804742,11.6641737%20C21.2804708,11.6638388%2021.3088999,11.5201881%2021.3088999,11.5201881%20C21.3088964,11.5200208%2021.2809311,11.3795489%2021.2809138,11.3795489%20C21.2807407,11.3793815%2021.1970575,11.2556402%2021.1970246,11.2556402%20L20.7361691,10.7946841%20C20.735996,10.7946841%2020.6143052,10.7126529%2020.614255,10.7126529%20C20.6140803,10.7124855%2020.4739697,10.6858838%2020.4738866,10.6858838%20C20.473679,10.6858838%2020.3294445,10.7126529%2020.3293943,10.7126529%20C20.3292196,10.7128204%2020.2071065,10.7946841%2020.2070736,10.7946841%20L16.699777,14.3019465%20L16.699777,9.34806978%20C16.699777,9.34790227%2016.6716403,9.20406863%2016.6716905,9.20239434%20C16.6715174,9.20205949%2016.5899974,9.08017571%2016.5899974,9.08017571%20C16.5898243,9.0800082%2016.4706843,8.99980076%2016.4706514,8.99980076%20C16.4704784,8.99980076%2016.3230148,8.97134151%2016.3229819,8.97134151%20L15.6712611,8.97117261%20Z'%20transform='translate(.002)'/%3e%3c/svg%3e";
const BpmnIconGatewayEventbased = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9990822,0%20C15.6646851,0%2015.3303034,0.123717979%2015.0822395,0.372943099%20L0.370948941,15.0843688%20C-0.125179101,15.5804749%20-0.122880975,16.4219818%200.373247257,16.9180882%20L15.0822395,31.6269781%20C15.5783675,32.1232524%2016.419831,32.1254277%2016.9159582,31.6269781%20L31.627283,16.9157554%20C32.1234101,16.419649%2032.1211137,15.5781089%2031.6249502,15.0820028%20L16.9159253,0.372943099%20C16.6678608,0.124890066%2016.3334793,0%2015.9990822,0%20Z%20M15.997966,2.18124481%20L29.8190148,16.0023942%20L15.997966,29.8233755%20L2.17691859,16.0023942%20L15.997966,2.18124481%20Z%20M15.9987448,8.05733823%20L15.7443016,8.24201807%20L8.36741388,13.5971952%20L11.2823079,22.5607628%20L20.715112,22.5607628%20L23.6300069,13.5971952%20L15.9987448,8.05733823%20Z%20M15.9986755,9.12637946%20L22.6123744,13.9275504%20L20.0862065,21.6959706%20L11.9112134,21.6959706%20L9.38504628,13.9275504%20L15.9986755,9.12637946%20Z'/%3e%3c/svg%3e";
const BpmnIconGatewayNone = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M0.370943724,15.0843572%20C-0.125184379,15.5804634%20-0.122875702,16.4219854%200.373252636,16.9180916%20L15.0822519,31.6269781%20C15.57838,32.1232517%2016.419839,32.1254284%2016.915967,31.6269781%20L31.6272863,16.9157475%20C32.1234143,16.4196413%2032.1211054,15.5781193%2031.6249423,15.0820132%20L16.9159435,0.372959172%20C16.4198156,-0.123146997%2015.5783567,-0.12549107%2015.0822286,0.372959172%20L0.370908798,15.0843572%20L0.370943724,15.0843572%20Z%20M2.17690676,16.0023964%20L15.997966,2.18124356%20L29.8190151,16.0023964%20L15.9979543,29.8233819%20L2.17690676,16.0023964%20Z'%20transform='translate(.002)'/%3e%3c/svg%3e";
const BpmnIconGatewayOr = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9990822,0%20C15.6646851,0%2015.3303034,0.123717979%2015.0822395,0.372943099%20L0.370948941,15.0843688%20C-0.125179101,15.5804749%20-0.122880975,16.4219818%200.373247257,16.9180882%20L15.0822395,31.6269781%20C15.5783675,32.1232524%2016.419831,32.1254277%2016.9159582,31.6269781%20L31.627283,16.9157554%20C32.1234101,16.419649%2032.1211137,15.5781089%2031.6249502,15.0820028%20L16.9159253,0.372943099%20C16.6678608,0.124890066%2016.3334793,0%2015.9990822,0%20Z%20M15.997966,2.18124481%20L29.8190148,16.0023942%20L15.997966,29.8233755%20L2.17691859,16.0023942%20L15.997966,2.18124481%20Z%20M15.9987101,8.55996908%20C11.893344,8.55996908%208.55743414,11.8960729%208.55743414,16.0013801%20C8.55743414,20.1066871%2011.893344,23.4426561%2015.9987101,23.4426561%20C20.104076,23.4426561%2023.4399862,20.1066871%2023.4399862,16.0013801%20C23.4399862,11.8960729%2020.104076,8.55996908%2015.9987101,8.55996908%20Z%20M15.9987101,9.38524899%20C19.6571754,9.38524899%2022.6149096,12.3429536%2022.6149096,16.0013801%20C22.6149096,19.6598073%2019.6571754,22.6177145%2015.9987101,22.6177145%20C12.3402464,22.6177145%209.38251123,19.6598073%209.38251123,16.0013801%20C9.38251123,12.3429536%2012.3402464,9.38524899%2015.9987101,9.38524899%20Z'%20transform='translate(.002)'/%3e%3c/svg%3e";
const BpmnIconGatewayParallel = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9990822,0%20C15.6646851,0%2015.3303034,0.123717979%2015.0822395,0.372943099%20L0.370948941,15.0843688%20C-0.125179101,15.5804749%20-0.122880975,16.4219818%200.373247257,16.9180882%20L15.0822395,31.6269781%20C15.5783675,32.1232524%2016.419831,32.1254277%2016.9159582,31.6269781%20L31.627283,16.9157554%20C32.1234101,16.419649%2032.1211137,15.5781089%2031.6249502,15.0820028%20L16.9159253,0.372943099%20C16.6678608,0.124890066%2016.3334793,0%2015.9990822,0%20Z%20M15.997966,2.18124481%20L29.8190148,16.0023942%20L15.997966,29.8233755%20L2.17691859,16.0023942%20L15.997966,2.18124481%20Z%20M15.6206639,7.88888193%20C15.6206639,7.88904945%2015.453542,7.92068716%2015.4534583,7.92068716%20C15.4532857,7.92068716%2015.3166035,8.0127906%2015.316503,8.0127906%20C15.3163306,8.01295794%2015.2213739,8.15342985%2015.2212901,8.15342985%20C15.2212901,8.15359737%2015.1891125,8.32087206%2015.1890455,8.32087206%20L15.1890455,15.1885048%20L8.31840478,15.1885048%20L8.31725553,15.1871527%20C8.31725553,15.1873202%208.15080959,15.2239941%208.150726,15.2239941%20C8.15055347,15.2241615%208.01388838,15.3160974%208.01380462,15.3160974%20L8.01393978,15.3144075%20C8.01376724,15.3145749%207.9188105,15.4550468%207.91872692,15.4550468%20C7.91855438,15.4550468%207.88644839,15.6224893%207.88644839,15.6224893%20L7.88644839,16.3747625%20C7.88644839,16.3747625%207.91843325,16.5440412%207.91957176,16.5452128%20C7.91957176,16.5453806%208.01437916,16.682506%208.01437916,16.682506%20C8.01455325,16.6826739%208.15207824,16.77461%208.15211164,16.77461%20C8.15228417,16.7747761%208.31921657,16.8114166%208.31928354,16.8114166%20L15.1891132,16.8114166%20L15.1891132,23.6779008%20L15.1880316,23.6768867%20C15.1880316,23.6770528%2015.2211883,23.8473369%2015.221155,23.8473369%20C15.221155,23.8475048%2015.3159284,23.9846302%2015.3159284,23.9846302%20C15.3161025,23.9847963%2015.4536613,24.0766995%2015.4536948,24.0766995%20C15.4536948,24.0766995%2015.6196619,24.1118656%2015.620901,24.1135408%20L16.3730046,24.1133712%20C16.373195,24.1133712%2016.5433977,24.0782207%2016.5434894,24.0782207%20C16.5434894,24.0782207%2016.6803431,23.9861513%2016.6804435,23.9861513%20C16.6806166,23.9859835%2016.7751173,23.8488234%2016.7752177,23.8488234%20C16.7752177,23.8488234%2016.8078676,23.6788803%2016.8079351,23.6788803%20L16.8079351,16.8120933%20L23.6760407,16.8120933%20C23.6762328,16.8122594%2023.8464408,16.776941%2023.8465256,16.776941%20C23.8466986,16.776941%2023.9833966,16.6848388%2023.9834797,16.6848388%20C23.9836527,16.6846709%2024.0781535,16.5475455%2024.0782538,16.5475455%20C24.0782538,16.5475455%2024.1109712,16.3776006%2024.1109712,16.3776006%20L24.1109712,15.625497%20C24.1109712,15.6253291%2024.0784736,15.4597292%2024.0785238,15.458055%20C24.0783525,15.4578874%2023.9842134,15.3174157%2023.9830418,15.3174157%20C23.9828688,15.3172482%2023.8453246,15.225346%2023.8452744,15.225346%20C23.8452744,15.2255135%2023.6753468,15.1884866%2023.6752637,15.1901609%20L16.8078676,15.1901609%20L16.8078676,8.32269725%20C16.8078676,8.32252991%2016.77537,8.15696325%2016.7754202,8.15528879%20C16.7752471,8.15512144%2016.6811202,8.01461579%2016.6811202,8.01461579%20C16.6809471,8.01444827%2016.5434202,7.92254627%2016.5433873,7.92254627%20C16.5432143,7.92254627%2016.3729752,7.88905101%2016.3729025,7.88905101%20L15.6206639,7.88888193%20Z'%20transform='translate(.002)'/%3e%3c/svg%3e";
const BpmnIconGatewayXor = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9990822,0%20C15.6646851,0%2015.3303034,0.123717979%2015.0822395,0.372943099%20L0.370948941,15.0843688%20C-0.125179101,15.5804749%20-0.122880975,16.4219818%200.373247257,16.9180882%20L15.0822395,31.6269781%20C15.5783675,32.1232524%2016.419831,32.1254277%2016.9159582,31.6269781%20L31.627283,16.9157554%20C32.1234101,16.419649%2032.1211137,15.5781089%2031.6249502,15.0820028%20L16.9159253,0.372943099%20C16.6678608,0.124890066%2016.3334793,0%2015.9990822,0%20Z%20M15.997966,2.18124481%20L29.8190148,16.0023942%20L15.997966,29.8233755%20L2.17691859,16.0023942%20L15.997966,2.18124481%20Z%20M10.8362912,9.87148723%20C10.836053,9.87148723%2010.6699563,9.90329246%2010.6698291,9.90329246%20C10.6696559,9.90329246%2010.5288796,9.99870813%2010.5287842,9.99870813%20L9.99695054,10.5306431%20C9.99677766,10.5306431%209.89985798,10.6729881%209.89981108,10.6746624%20C9.89981108,10.6748297%209.86976338,10.8387247%209.86976338,10.8387247%20C9.86976338,10.838892%209.90208465,11.0011307%209.90214332,11.0011307%20C9.90214332,11.0012982%209.99451136,11.1451501%209.99461848,11.1451501%20L14.8523359,16.0027316%20L9.99695054,20.8581521%20L9.99695054,20.856631%20C9.99695054,20.8567971%209.89985798,21.0006162%209.89981108,21.0006162%20C9.89981108,21.0007841%209.86976338,21.1647119%209.86976338,21.1647119%20C9.86976338,21.1650476%209.90209469,21.3271186%209.90214332,21.3271186%20C9.90214332,21.3271186%209.99452641,21.4694287%209.99461848,21.4711039%20L10.5264858,22.0028696%20C10.526659,22.0030374%2010.672034,22.0983186%2010.6721612,22.0983186%20C10.6723342,22.0983186%2010.8338826,22.130124%2010.8340266,22.130124%20C10.8341997,22.130124%2010.9980597,22.1000094%2010.9981903,22.1000094%20C10.9983632,22.1000094%2011.1414719,22.0028696%2011.1415673,22.0028696%20L15.9970194,17.1473158%20L20.8535215,22.0038836%20C20.8536945,22.0040515%2020.9990953,22.0993327%2020.9991957,22.0993327%20C20.9993705,22.0993327%2021.1609275,22.1311381%2021.1610608,22.1311381%20C21.1612356,22.1311381%2021.3251253,22.1009888%2021.3252586,22.1009888%20C21.3254334,22.1009888%2021.4684685,22.0038836%2021.4685689,22.0038836%20L22.0004367,21.4721179%20C22.000608,21.4719501%2022.0951936,21.3314778%2022.0952766,21.3314778%20C22.0952766,21.33131%2022.1276566,21.1657104%2022.1276566,21.1640353%20C22.1276566,21.1638691%2022.0953095,21.0016303%2022.0952438,21.0016303%20C22.0952438,21.0016303%2022.0005527,20.8559543%2022.0004367,20.8559543%20L17.1444763,15.9998936%20L22.0004696,11.1439671%20C22.0006426,11.1439671%2022.0951936,11.0033278%2022.0952766,11.0033278%20C22.0952766,11.0031603%2022.1276566,10.8375755%2022.1276566,10.8375755%20C22.1276566,10.8372406%2022.0953268,10.6751694%2022.0952766,10.6751694%20C22.0952766,10.6750019%2021.9982718,10.5311501%2021.9981714,10.5311501%20L21.4663036,9.99921518%20C21.4661323,9.99921518%2021.3253763,9.9037995%2021.3252586,9.9037995%20C21.3250873,9.9037995%2021.1635441,9.87196036%2021.1633935,9.87196036%20C21.1632205,9.87196036%2020.9970481,9.9037995%2020.9969322,9.9037995%20C20.9967591,9.9037995%2020.8559702,9.99921518%2020.8558871,9.99921518%20L15.9997917,14.8553102%20L11.1415335,9.99688294%20L11.1415335,9.99536198%20C11.1413605,9.99536198%2010.998277,9.90329246%2010.9981564,9.90329246%20C10.9979835,9.90329246%2010.8365203,9.87148723%2010.8363249,9.87148723%20L10.8362912,9.87148723%20Z'/%3e%3c/svg%3e";
const BpmnIconGroup = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M5.55185225,0.0157706511%20C3.21751962,0.0412563718%200.867165679,1.78585198%200.261795121,4.18562665%20C-0.182433342,5.8484719%200.0907918162,7.60796685%200.0144518884,9.3135497%20L0.0144518884,12.2363698%20L2.0554774,12.2363698%20C2.09258265,9.90403424%201.97890261,7.56346486%202.1167039,5.23642252%20C2.35203611,3.3549882%204.08019636,1.93759004%205.85403703,2.0385527%20L14.809814,2.0385527%20L14.809814,0.00871306691%20C11.7239151,0.00871306691%208.6373516,-0.0108913336%205.55185186,0.00871306691%20L5.55185225,0.0157706511%20Z%20M18.6454863,2.03894479%20L20.5649375,2.03894479%20L20.5649375,0.00890911092%20L18.6454863,0.00890911092%20L18.6454863,2.03894479%20Z%20M24.400611,2.03894479%20C25.6663162,1.97032939%2027.0608732,2.08403491%2028.0032725,3.09424967%20C29.039018,4.07701827%2029.2039636,5.61674789%2029.1249088,7.00493549%20L29.1249088,13.3165722%20L31.2032282,13.3165722%20C31.1724297,10.6399834%2031.2652173,7.95731727%2031.156158,5.28464934%20C30.9859918,2.54218975%2028.5369121,0.17378212%2025.9406425,0.049294176%20C25.429795,-0.0154003458%2024.9137895,0.0296897755%2024.4005306,0.0159666951%20C24.4005306,0.690358074%2024.4005306,1.36455341%2024.4006188,2.03874874%20L24.400611,2.03894479%20Z%20M0.0144518884,18.3192232%20L2.0554776,18.3192232%20L2.0554776,16.2927163%20L0.0144518884,16.2927163%20L0.0144518884,18.3192232%20Z%20M29.1249167,19.4025624%20L31.203236,19.4025624%20L31.203236,17.3725267%20L29.1249167,17.3725267%20L29.1249167,19.4025624%20Z%20M0.0144518884,26.1484366%20C0.0181963289,28.3656943%201.40736788,30.5137485%203.32719291,31.4284898%20C5.05523887,32.2810852%207.00811751,31.8762543%208.84797579,31.9715317%20C9.27745567,31.8597866%2010.1385997,32.2030596%2010.2826231,31.7892107%20L10.2826231,29.9420841%20C8.49534811,29.8989544%206.69939525,30.0361853%204.91849857,29.8597456%20C3.24749749,29.5064744%201.9991418,27.8124581%202.05547779,26.0159108%20L2.05547779,22.3722369%20L0.0144518884,22.3722369%20L0.0144518884,26.1488287%20L0.0144518884,26.1484366%20Z%20M29.1249167,26.0798212%20C29.163851,28.0410454%2027.616113,29.8668032%2025.7425871,29.9220876%20C23.7887243,29.9828613%2021.8294056,29.941692%2019.8734256,29.9475734%20L19.8734256,31.977609%20C21.9906224,31.9364398%2024.1152964,32.0579871%2026.2276098,31.914875%20C28.7516391,31.6506076%2031.0461283,29.2712215%2031.1675795,26.5918881%20C31.2475851,25.553247%2031.1818908,24.5071562%2031.2033184,23.4655744%20L29.124999,23.4655744%20L29.1249108,26.0794291%20L29.1249167,26.0798212%20Z%20M14.118295,31.9781972%20L16.0377462,31.9781972%20L16.0377462,29.9481615%20L14.118295,29.9481615%20L14.118295,31.9781972%20Z'%20transform='translate(.789)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchCancel = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749497,0.00291311058%20C8.19459426,-0.156397006%200.934430576,6.23964383%200.125121325,13.9849156%20C-0.730147068,20.5353696%202.86607419,27.4446668%208.86565826,30.2993656%20C14.5308467,33.1460873%2021.8770104,32.2887598%2026.5754169,27.9685412%20C31.3201139,23.8072587%2033.3024634,16.7264499%2031.1073745,10.7625724%20C29.0891658,4.88433641%2023.4445334,0.407560824%2017.2012601,0.0494092676%20C16.7932624,0.0185971184%2016.3841086,0.00316192869%2015.9749497,0.00291311058%20Z%20M15.7938239,1.72666556%20C22.9282168,1.45799522%2029.6335055,7.40712814%2030.1925618,14.5309763%20C30.8791581,20.8137263%2026.9261347,27.3225161%2020.9104626,29.3931251%20C15.0626785,31.5554444%207.88454823,29.4526497%204.35270436,24.2519986%20C0.727774864,19.1744227%200.871744999,11.6794189%204.98477735,6.91580463%20C7.61726798,3.74484846%2011.6564691,1.74209919%2015.7938239,1.72666556%20Z%20M16.0771396,3.28046262%20C9.47736152,3.07057245%203.40557181,8.86469601%203.28634094,15.4648382%20C2.99540086,21.4290085%207.41566311,27.2820261%2013.3206268,28.4179223%20C18.7919198,29.6156584%2024.9052322,26.8047619%2027.3462934,21.7157161%20C29.8708918,16.7454879%2028.7418209,10.1311451%2024.4343405,6.50053377%20C22.1519751,4.47881869%2019.1330529,3.28389631%2016.0771396,3.28046262%20Z%20M15.9994842,4.97465185%20C21.8174703,4.82058972%2027.1162507,10.0565596%2027.0229422,15.880254%20C27.1257853,21.2639402%2022.7926662,26.3806601%2017.3871394,26.9234568%20C12.312026,27.5898159%206.96107172,24.335586%205.50197207,19.3707194%20C3.97252929,14.6402976%205.98191836,8.94289159%2010.389583,6.50727795%20C12.0795309,5.51160946%2014.0371674,4.97133505%2015.9994842,4.97465185%20Z%20M12.0434967,8.92139284%20C11.0112205,9.95366904%209.97894446,10.9859451%208.94666826,12.0182213%20C10.2750278,13.3465922%2011.6033875,14.6749634%2012.9317471,16.0033343%20C11.6273824,17.3077097%2010.3230176,18.6120868%209.01865289,19.9164622%20C10.0345499,20.9323589%2011.050447,21.9482557%2012.0663441,22.9641524%20C13.37072,21.659777%2014.6750957,20.3553999%2015.9794716,19.0510245%20C17.3086079,20.3801607%2018.6377424,21.709297%2019.9668786,23.0384332%20C20.9991559,22.006156%2022.0314314,20.9738805%2023.0637086,19.9416032%20C21.7345724,18.612467%2020.4054361,17.2833325%2019.0762999,15.9541962%20C20.3807098,14.6497754%2021.6851198,13.3453545%2022.9895297,12.0409337%20C21.973633,11.0250366%2020.9577346,10.0091396%2019.9418379,8.99324253%20C18.6374279,10.2976523%2017.3330197,11.6020619%2016.0286097,12.9064717%20C14.7002388,11.5781121%2013.3718676,10.2497524%2012.0434967,8.92139284%20Z%20M12.0413029,10.1426696%20C13.3704387,11.4718055%2014.6995742,12.8009412%2016.02871,14.1300771%20C17.3330836,12.82571%2018.6374625,11.5213481%2019.9418379,10.2169831%20C20.5506094,10.8257541%2021.1593792,11.4345251%2021.7681507,12.0432961%20C20.4637753,13.3476609%2019.1593982,14.6520258%2017.8550228,15.9563906%20C19.1833936,17.2847614%2020.5117661,18.6131322%2021.8401369,19.941503%20C21.2157296,20.5659103%2020.5913205,21.1903177%2019.9669132,21.814725%20C18.6385528,20.4863542%2017.3101941,19.1579834%2015.9818337,17.8296126%20C14.6774579,19.133988%2013.3730822,20.4383651%2012.0687064,21.7427405%20C11.4599354,21.133969%2010.8511644,20.5251992%2010.2423934,19.9164277%20C11.5467693,18.6120523%2012.8511452,17.3076752%2014.1555212,16.0032998%20C12.8263854,14.674164%2011.4972495,13.3450283%2010.1681138,12.0158926%20C10.7925102,11.3914849%2011.4169065,10.7670772%2012.0413029,10.1426696%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchCompensation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M15.4397379,10.7473637%20C12.9701408,12.4908801%2010.5005436,14.2345637%208.03094645,15.9782473%20C10.5007481,17.7225997%2012.9701097,19.4676207%2015.4397379,21.2124746%20C15.4397379,19.526468%2015.4397379,17.8404613%2015.4397379,16.1546219%20C17.8245426,17.8419659%2020.2114782,19.5263008%2022.5971049,21.2124746%20C22.5971049,17.7241043%2022.5971049,14.235734%2022.5971049,10.7473637%20C20.2113161,12.4322001%2017.8255272,14.1170364%2015.4397379,15.8018728%20C15.4397379,14.1170364%2015.4397379,12.4322001%2015.4397379,10.7473637%20Z%20M14.5744363,12.4124729%20C14.5744363,14.7874268%2014.5744363,17.1623807%2014.5744363,19.5371675%20C12.8917552,18.3498577%2011.2090741,17.1623807%209.52639304,15.9749038%20C11.2090741,14.7874268%2012.8917552,13.5999498%2014.5744363,12.4124729%20Z%20M21.7351117,12.4124729%20C21.7351117,14.7896001%2021.7351117,17.1667274%2021.7351117,19.5438546%20C20.0524302,18.3553746%2018.3697488,17.1667274%2016.687069,15.9782473%20C18.3697488,14.7896001%2020.0524302,13.6011201%2021.7351117,12.4124729%20L21.7351117,12.4124729%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchCondition = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9697517,1.96477901e-15%20C15.9275067,1.96477901e-15%2015.8852478,1.96477901e-15%2015.8430027,0.00047534434%20C8.71301457,-0.0580488395%202.00378562,5.29441308%200.437449914,12.2459184%20C-1.0736376,18.369056%201.41645935,25.2509892%206.5727957,28.9110929%20C11.6979842,32.6992815%2019.1189606,33.0161591%2024.4845983,29.5341365%20C29.7567453,26.2576169%2032.8144025,19.7679315%2031.8101321,13.6175385%20C30.9062153,7.3768516%2026.0204004,1.91790598%2019.8595693,0.475200638%20C18.5888824,0.157220939%2017.2793551,0.000866323598%2015.9697517,1.96477901e-15%20Z%20M15.7885909,1.7240544%20C15.9042204,1.72369991%2016.0199242,1.72477349%2016.1356902,1.72743049%20C22.7610682,1.66054561%2028.9589095,6.87590889%2030.0266045,13.4177447%20C31.1568064,19.3271842%2028.1180716,25.7656878%2022.7644953,28.5552867%20C17.2909118,31.5676105%209.89807887,30.4394272%205.64808716,25.8290588%20C1.29080643,21.3318901%200.44426211,13.8738987%203.80201178,8.56240897%20C6.29466208,4.44954844%2010.9706905,1.74317439%2015.7885909,1.7240544%20Z%20M16.0719614,3.2782432%20C15.9550133,3.2782432%2015.8379839,3.27967448%2015.7209459,3.28301344%20C9.62025807,3.28301344%204.02995271,8.33199079%203.37457673,14.3974396%20C2.59419402,20.0813112%206.16965328,26.0094713%2011.5934956,27.9176948%20C16.7319305,29.8595274%2023.0093831,28.0180329%2026.2168855,23.5372529%20C29.6781882,18.953636%2029.4791143,11.998785%2025.6205432,7.70578349%20C23.2613135,4.95897611%2019.6973517,3.28316777%2016.0719614,3.2782432%20Z%20M15.994291,4.97275911%20C16.0722656,4.97275911%2016.1502281,4.97387352%2016.2282114,4.9757077%20C21.6282964,4.9757077%2026.5494417,9.53240858%2026.9615469,14.9183075%20C27.5245308,20.0487063%2024.0037161,25.2822461%2018.9905906,26.5960318%20C14.1591782,28.005294%208.5344596,25.6613403%206.24544308,21.1504614%20C3.78174768,16.5914268%205.04515594,10.3550768%209.2586191,7.26683803%20C11.1712218,5.78806194%2013.5770772,4.96914938%2015.994291,4.97275911%20Z%20M10.6423571,9.23942577%20L10.6423571,9.67367941%20L10.6423571,22.7208973%20L12.4320285,22.7208973%20L19.5646887,22.7208973%20L21.3576353,22.7208973%20L21.3576353,9.23942577%20L10.6423571,9.23942577%20Z%20M11.5045183,10.10476%20L20.4921649,10.10476%20L20.4921649,21.855394%20L19.5646887,21.855394%20L12.4320285,21.855394%20L11.5045183,21.855394%20L11.5045183,10.10476%20Z%20M12.4320285,11.4275708%20L12.4320285,12.2896982%20L19.5646887,12.2896982%20L19.5646887,11.4275708%20L12.4320285,11.4275708%20Z%20M12.4320285,14.0303916%20L12.4320285,14.8958608%20L19.5646887,14.8958608%20L19.5646887,14.0303916%20L12.4320285,14.0303916%20Z%20M12.4320285,17.0382005%20L12.4320285,17.9004962%20L19.5646887,17.9004962%20L19.5646887,17.0382005%20L12.4320285,17.0382005%20Z%20M12.4320285,19.7553828%20L12.4320285,20.6177113%20L19.5646887,20.6177113%20L19.5646887,19.7553828%20L12.4320285,19.7553828%20Z'%20transform='translate(0%20.04)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchError = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M22.1311117,9.16918792%20C20.9202179,11.6237193%2019.7093258,14.078418%2018.498432,16.5329494%20C16.9928155,14.5746071%2015.4871992,12.6162648%2013.9815831,10.6579226%20C12.6141433,14.7021652%2011.2467031,18.7464078%209.87926328,22.7906504%20C11.4123278,20.820104%2012.9453922,18.8495576%2014.4784567,16.8790112%20C16.0598478,18.6883964%2017.6412401,20.4979488%2019.2226324,22.3075012%20C20.1921255,17.9280634%2021.1616186,13.5486257%2022.1311117,9.16918792%20Z%20M14.3832531,13.0544427%20C15.8148711,14.8693448%2017.2464872,16.6844141%2018.6781049,18.4993163%20C19.0356554,17.703374%2019.3932058,16.9075989%2019.7507562,16.1116567%20C19.4084493,17.4888825%2019.0661406,18.8661084%2018.7238353,20.2433342%20C17.2626317,18.5243932%2015.801428,16.805285%2014.3402244,15.086344%20C13.747405,16.0028228%2013.1545855,16.9193015%2012.5617662,17.8359475%20C13.1689284,16.2420568%2013.7760907,14.6481662%2014.3832531,13.0544427%20L14.3832531,13.0544427%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchEscalation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M16.0051684,8.90236922%20C14.3328247,13.5561488%2013.2713682,18.4035223%2011.5990151,23.0573019%20C13.1333225,21.5321221%2014.4709481,19.823379%2016.0051684,18.298032%20C17.4738866,19.8843996%2018.9426049,21.4709343%2020.4113231,23.0573019%20C18.9146541,18.3478515%2017.5018357,13.6119868%2016.0051684,8.90236922%20Z%20M16.0372,11.8310221%20C16.8588846,14.4167895%2017.6345763,17.0167672%2018.4562643,19.6023675%20C17.6499084,18.7313616%2016.8435542,17.8605229%2016.0372,16.989517%20C15.3554219,17.5873513%2013.5850405,19.8743688%2013.698514,19.3778453%20C14.5698909,16.8912153%2015.1464371,14.3114664%2016.0372,11.8310221%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchLink = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M17.7788875,9.06821142%20C17.7788875,10.2531807%2017.7788875,11.4381499%2017.7788875,12.6232864%20C15.1141699,12.6232864%2012.4494524,12.6232864%209.7847349,12.6232864%20C9.7847349,14.8609858%209.7847349,17.0988525%209.7847349,19.3367191%20C12.4494524,19.3367191%2015.1141699,19.3367191%2017.7788875,19.3367191%20C17.7788875,20.5215212%2017.7788875,21.7064904%2017.7788875,22.8912925%20C19.7219127,20.5875571%2021.664938,18.2838217%2023.6079633,15.9799191%20C21.664938,13.6760166%2019.7219127,11.372114%2017.7788875,9.06821142%20L17.7788875,9.06821142%20Z%20M18.7526554,11.6524742%20C19.9562384,13.0838663%2021.1598198,14.5152583%2022.3634012,15.9466504%20C21.1598198,17.3780424%2019.9562384,18.8094345%2018.7526554,20.2408265%20C18.7526554,19.5965162%2018.7526554,18.9522059%2018.7526554,18.3077284%20C16.1258487,18.3077284%2013.4990415,18.3077284%2010.8722341,18.3077284%20C10.8722341,16.7452675%2010.8722341,15.1828066%2010.8722341,13.6203457%20C13.4990415,13.6203457%2016.1258487,13.6203457%2018.7526554,13.6203457%20C18.7526554,12.9645%2018.7526554,12.3084871%2018.7526554,11.6524742%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchMessage = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M8.75447233,10.4496168%20C8.75447233,14.1364293%208.75447233,17.8232418%208.75447233,21.5098872%20C13.5882825,21.5098872%2018.4220927,21.5098872%2023.255903,21.5098872%20C23.255903,17.8232418%2023.255903,14.1364293%2023.255903,10.4496168%20C18.4220927,10.4496168%2013.5882825,10.4496168%208.75447233,10.4496168%20Z%20M11.9758649,12.1775855%20C14.6616861,12.1775855%2017.3475072,12.1775855%2020.0333283,12.1775855%20C18.6061408,13.0559473%2017.1788129,14.9836957%2015.7518043,15.1941748%20C14.4932023,14.1885893%2013.2345349,13.183171%2011.9758649,12.1775855%20Z%20M21.5300909,13.1948736%20C21.5300909,15.3904437%2021.5300909,17.5861811%2021.5300909,19.7817513%20C17.8468209,19.7817513%2014.1635529,19.7817513%2010.4802836,19.7817513%20C10.4802836,17.5863483%2010.4802836,15.3907781%2010.4802836,13.1953751%20C12.3213662,14.6667231%2014.1623693,16.1380711%2016.0035334,17.6092519%20C17.8457911,16.1379039%2019.6879151,14.6663887%2021.5300909,13.1948736%20L21.5300909,13.1948736%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M16.0051684,8.04808127%20C13.4652225,9.89173831%2010.9253389,11.7357297%208.38541693,13.5793867%20C9.35557407,16.5627074%2010.3257312,19.546028%2011.2958882,22.5293486%20C14.4353853,22.5293486%2017.5748832,22.5293486%2020.7143797,22.5293486%20C21.6845365,19.546028%2022.654695,16.5627074%2023.6248518,13.5793867%20C21.0849584,11.7355625%2018.5450617,9.89190549%2016.0051684,8.04808127%20L16.0051684,8.04808127%20Z%20M16.0050998,9.11535607%20C18.2063207,10.7134262%2020.4075415,12.3113292%2022.608764,13.9092322%20C21.7679842,16.4948324%2020.9272077,19.0804327%2020.0864279,21.6658658%20C17.3655659,21.6658658%2014.6447024,21.6658658%2011.9238395,21.6658658%20C11.0830615,19.0804327%2010.2422833,16.4948324%209.40150534,13.9092322%20C11.6027034,12.3113292%2013.8039014,10.7134262%2016.0050998,9.11535607%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchNonInterruptingCondition = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M10.6376825,9.2535016%20L10.6376825,9.6881286%20L10.6376825,22.7465403%20L12.4288901,22.7465403%20L19.5676733,22.7465403%20L21.3621568,22.7465403%20L21.3621568,9.2535016%20L10.6376825,9.2535016%20L10.6376825,9.2535016%20Z%20M11.5005832,10.1195781%20L20.4959437,10.1195781%20L20.4959437,21.8802943%20L19.5676716,21.8802943%20L12.4288899,21.8802943%20L11.5005832,21.8802943%20L11.5005832,10.1195781%20Z%20M12.4288899,11.4435239%20L12.4288899,12.3063918%20L19.5676733,12.3063918%20L19.5676733,11.4435239%20L12.4288899,11.4435239%20L12.4288899,11.4435239%20Z%20M12.4288899,14.0485789%20L12.4288899,14.9147903%20L19.5676733,14.9147903%20L19.5676733,14.0485789%20L12.4288899,14.0485789%20L12.4288899,14.0485789%20Z%20M12.4288899,17.0589681%20L12.4288899,17.9220038%20L19.5676733,17.9220038%20L19.5676733,17.0589681%20L12.4288899,17.0589681%20L12.4288899,17.0589681%20Z%20M12.4288899,19.7784805%20L12.4288899,20.6415511%20L19.5676733,20.6415511%20L19.5676733,19.7784805%20L12.4288899,19.7784805%20L12.4288899,19.7784805%20Z%20M15.9999196,0%20L15.9945488,3.45944207e-05%20L15.8065091,0.00121772361%20L15.8011712,0.00125231803%20L15.7957986,0.00135610129%20L15.6080305,0.0048357811%20L15.602658,0.00493956436%20L15.5972872,0.00511253646%20L15.4098212,0.0109233613%20L15.4044496,0.0110963334%20L15.3991117,0.0113333052%20L15.2119168,0.0194413725%20L15.206579,0.0196783443%20L15.2012074,0.0199827752%20L15.0143501,0.0304218147%20L15.0090124,0.0307262456%20L15.0036746,0.0310635412%20L14.8171214,0.0437999961%20L14.8118174,0.0441718861%20L14.8064797,0.0445766408%20L14.620298,0.0596103382%20L14.614994,0.0600496874%20L14.6096563,0.0605236309%20L14.4238464,0.0778208413%20L14.4185423,0.0783276495%20L14.4132383,0.0788673225%20L14.2278339,0.0984280458%20L14.2225298,0.0990023132%20L14.2172595,0.0996094453%20L14.0322605,0.121433682%20L14.0269565,0.122075408%20L14.0216862,0.122751729%20L13.8371264,0.146839478%20L13.8318561,0.147548664%20L13.826586,0.148292444%20L13.642499,0.174609803%20L13.6372287,0.175353583%20L13.6319584,0.176197687%20L13.4483446,0.20474483%20L13.4430743,0.205588934%20L13.4378379,0.206467632%20L13.2546969,0.237244386%20L13.2494941,0.238123084%20L13.2442577,0.239069242%20L13.0616236,0.272109681%20L13.0564208,0.273055838%20L13.0512181,0.274069455%20L12.8690908,0.309305775%20L12.8638881,0.310319392%20L12.8587192,0.311367602%20L12.6771659,0.348833706%20L12.6719633,0.349880187%20L12.6667943,0.351028722%20L12.4858155,0.390656804%20L12.4806468,0.391805339%20L12.4755116,0.392988468%20L12.295107,0.434846333%20L12.289972,0.436029462%20L12.2848368,0.437280051%20L12.1050405,0.481333797%20L12.0999054,0.482584385%20L12.0947702,0.483902433%20L11.9246698,0.527753628%20L11.7730151,0.582381678%20L11.6340969,0.664205613%20L11.5128137,0.770387479%20L11.413321,0.897244874%20L11.3390984,1.04035231%20L11.2927472,1.1947434%20L11.2758217,1.35504668%20L11.2889634,1.51572151%20L11.3316998,1.67115995%20L11.4025103,1.81599035%20L11.4989962,1.94514516%20L11.6177457,2.05413108%20L11.7547045,2.13919824%20L11.9050415,2.1973736%20L12.0635541,2.22666401%20L12.2247697,2.22598769%20L12.3565933,2.2026771%20L12.5219978,2.16004207%20L12.6903416,2.11882611%20L12.8611515,2.07916412%20L13.0324683,2.04166429%20L13.2044269,2.00622542%20L13.3737166,1.97345516%20L13.5471279,1.94207024%20L13.7173634,1.91345546%20L13.8937477,1.8859894%20L14.0652671,1.86146264%20L14.2399284,1.83869242%20L14.4145559,1.81808435%20L14.5899267,1.79957098%20L14.7656014,1.78321975%20L14.94131,1.76906441%20L15.1175928,1.75707121%20L15.2940109,1.74724017%20L15.470902,1.73957128%20L15.6451244,1.7341659%20L15.8224208,1.73088894%20L15.9999196,1.72977327%20L16.1774183,1.73088894%20L16.3547147,1.7341659%20L16.5289374,1.73957128%20L16.7058274,1.74724017%20L16.8822468,1.75707121%20L17.0585296,1.76906441%20L17.2342381,1.78321975%20L17.409912,1.79957098%20L17.5852833,1.81808435%20L17.7599107,1.83869242%20L17.9345728,1.86146264%20L18.1060919,1.8859894%20L18.282475,1.91345546%20L18.4527107,1.94207024%20L18.6261221,1.97345516%20L18.7954117,2.00622542%20L18.9673702,2.04166429%20L19.1211873,2.07534663%20L19.2811865,2.09504244%20L19.4420644,2.08467086%20L19.5982115,2.04463733%20L19.7442259,1.97629311%20L19.8750344,1.88207054%20L19.9860478,1.76521301%20L20.0734801,1.62974074%20L20.1342227,1.48045094%20L20.1662156,1.32244507%20L20.1683449,1.16122954%20L20.1405067,1.00244668%20L20.0836837,0.851602725%20L19.9998649,0.713900671%20L19.8919268,0.59417163%20L19.7636507,0.496503277%20L19.6194957,0.424375121%20L19.4913546,0.385693023%20L19.3330453,0.351030971%20L19.3278752,0.349882436%20L19.3226739,0.348835955%20L19.1411206,0.311369851%20L19.1359505,0.31032164%20L19.1307492,0.309308024%20L18.9486217,0.274071703%20L18.9434187,0.273058087%20L18.9382157,0.27211193%20L18.7555814,0.23907149%20L18.7503455,0.238125333%20L18.7451425,0.237246635%20L18.5620014,0.206469881%20L18.5567655,0.205591183%20L18.5514951,0.204747079%20L18.36788,0.176199936%20L18.3626113,0.175355832%20L18.3573408,0.174612052%20L18.1732535,0.148294692%20L18.167983,0.147550912%20L18.1627126,0.146841727%20L17.9781531,0.122753978%20L17.9728826,0.122077657%20L17.9675793,0.12143593%20L17.7825787,0.0996116939%20L17.77731,0.0990045618%20L17.7720049,0.0984302944%20L17.5866013,0.0788695711%20L17.5812963,0.0783298982%20L17.5759929,0.0778230899%20L17.3901828,0.0605258796%20L17.3848449,0.060051936%20L17.3795416,0.0596125868%20L17.1933596,0.0445788894%20L17.1880217,0.0441741347%20L17.1827184,0.0438022447%20L16.9961645,0.0310657898%20L16.9908266,0.0307284942%20L16.9854887,0.0304240633%20L16.7986321,0.0199850239%20L16.7932596,0.019680593%20L16.7879217,0.0194436212%20L16.6007278,0.0113355538%20L16.5953899,0.0110985821%20L16.5900173,0.0109256099%20L16.4025519,0.0051147851%20L16.3971811,0.004941813%20L16.3918086,0.00483802974%20L16.2040405,0.00135834993%20L16.198668,0.00125456667%20L16.19333,0.00121997225%20L16.0052903,3.68430581e-05%20L15.9999196,0%20L15.9999196,0%20Z%20M25.0154816,2.93532311%20L24.854301,2.93890415%20L24.6965989,2.97234986%20L24.5478498,3.03447798%20L24.4132221,3.12312618%20L24.2973775,3.23522024%20L24.2043376,3.36687501%20L24.1373455,3.51352958%20L24.0987294,3.67001537%20L24.0898456,3.83099428%20L24.1109932,3.99079075%20L24.161399,4.14393195%20L24.2393713,4.28501232%20L24.3421756,4.40920076%20L24.4437967,4.49629498%20L24.4893696,4.5296056%20L24.6308228,4.63561865%20L24.7675451,4.74078707%20L24.907848,4.85149596%20L25.0438611,4.96152905%20L25.1786237,5.07331919%20L25.3134209,5.1880144%20L25.4471698,5.30470311%20L25.5764924,5.4203782%20L25.708823,5.5416614%20L25.8369988,5.6621337%20L25.9637544,5.78426152%20L26.0904773,5.90939594%20L26.214327,6.03480071%20L26.3377738,6.16290818%20L26.4594285,6.29236707%20L26.5769613,6.420542%20L26.6952379,6.55277104%20L26.8118246,6.68641915%20L26.9252026,6.81966163%20L27.0383436,6.95604616%20L27.1484438,7.0920927%20L27.2567209,7.22932185%20L27.3655377,7.37080749%20L27.4703346,7.51057033%20L27.5732737,7.65144798%20L27.674388,7.79347434%20L27.7738124,7.93671686%20L27.8725967,8.08289853%20L27.9683385,8.22843829%20L28.0622243,8.37495795%20L28.1554321,8.52445047%20L28.2467838,8.6750578%20L28.3344184,8.82363807%20L28.4209391,8.97448185%20L28.5054982,9.1261028%20L28.5893153,9.28089934%20L28.6695519,9.43343237%20L28.7484704,9.58805991%20L28.7887746,9.66934331%20L28.8734358,9.80653856%20L28.9821177,9.92559197%20L29.1110026,10.0224159%20L29.2556298,10.0936655%20L29.4109328,10.1368409%20L29.5715737,10.150422%20L29.7319448,10.1339355%20L29.8864712,10.0880237%20L30.029782,10.0142064%20L30.156875,9.91505157%20L30.2633947,9.79407246%20L30.3456239,9.65539069%20L30.4006584,9.5038711%20L30.4266371,9.34478416%20L30.4226518,9.18360253%20L30.3887995,9.02600194%20L30.3388676,8.90181333%20L30.2970101,8.81725298%20L30.2946455,8.81252323%20L30.2922464,8.80782738%20L30.2082944,8.64330116%20L30.2058953,8.63860531%20L30.2034287,8.63394302%20L30.1174166,8.47043042%20L30.1149829,8.46573457%20L30.1124506,8.46110618%20L30.0244441,8.29860702%20L30.0219101,8.29394473%20L30.0193431,8.28935025%20L29.9293423,8.12786453%20L29.9267408,8.12327004%20L29.9241393,8.11867539%20L29.832113,7.95823701%20L29.8294786,7.95367626%20L29.826775,7.9491155%20L29.7327889,7.78975821%20L29.7300871,7.78523118%20L29.7273507,7.78070416%20L29.6313719,7.62246166%20L29.6286009,7.61793464%20L29.6258316,7.61344151%20L29.5278585,7.45631383%20L29.5250546,7.45182071%20L29.5221833,7.44736131%20L29.4222504,7.29134843%20L29.4194136,7.28688904%20L29.4164731,7.28246337%20L29.3145821,7.12759937%20L29.3116762,7.12317371%20L29.3087046,7.11878177%20L29.2048867,6.96510021%20L29.2019133,6.96070828%20L29.1988742,6.95635024%20L29.0930966,6.80385095%20L29.0900557,6.79949291%20L29.086982,6.79516861%20L28.9792792,6.64391938%20L28.9761726,6.63956118%20L28.9730643,6.63530451%20L28.8634017,6.48523772%20L28.8602605,6.48094714%20L28.8570848,6.47669047%20L28.7455316,6.32790731%20L28.7423212,6.32365064%20L28.739078,6.31942769%20L28.6255997,6.1718946%20L28.6223564,6.16767166%20L28.6190786,6.16348262%20L28.503708,6.01723332%20L28.5003973,6.01307784%20L28.497052,6.00892253%20L28.3797561,5.86399076%20L28.3764109,5.85983545%20L28.3729999,5.8557476%20L28.2538446,5.71213354%20L28.2504318,5.70801178%20L28.2469862,5.70395784%20L28.1259403,5.56169503%20L28.122493,5.55760718%20L28.1189799,5.55358696%20L27.9960746,5.41267558%20L27.9925615,5.40865519%20L27.9890139,5.4046687%20L27.864218,5.26514249%20L27.8606703,5.261156%20L27.8570552,5.25723714%20L27.7304344,5.11912964%20L27.7268193,5.11517706%20L27.7231385,5.11125803%20L27.5946583,4.97456959%20L27.5910103,4.97068446%20L27.5872931,4.96679934%20L27.4569898,4.83156352%20L27.4532743,4.8277123%20L27.4494897,4.82389463%20L27.3173632,4.6901116%20L27.3135786,4.68629411%20L27.3097611,4.68251017%20L27.1759775,4.55038249%20L27.1721601,4.54659872%20L27.1683097,4.54288259%20L27.0330403,4.41257925%20L27.0291882,4.40886294%20L27.0253033,4.40518054%20L26.8885809,4.27673526%20L26.884696,4.27305286%20L26.8807436,4.26943809%20L26.7426357,4.14281697%20L26.7386833,4.1392022%20L26.7346963,4.13562116%20L26.5951701,4.01085828%20L26.5912177,4.00731097%20L26.5871632,4.00379739%20L26.4462861,3.88089275%20L26.4422316,3.87737917%20L26.4381771,3.87389949%20L26.2959145,3.75288648%20L26.2918618,3.7494068%20L26.2877398,3.74599475%20L26.1441246,3.62683998%20L26.1400372,3.62346148%20L26.1358824,3.62008317%20L25.9909509,3.50282019%20L25.9867943,3.4994756%20L25.9826067,3.49616491%20L25.836357,3.3807939%20L25.8322005,3.37748304%20L25.8279783,3.37423982%20L25.6804452,3.2607606%20L25.6762229,3.25751738%20L25.6719661,3.25434178%20L25.5231824,3.14278827%20L25.5189256,3.13957877%20L25.5146358,3.13647081%20L25.4643321,3.09971424%20L25.325887,3.01714704%20L25.1745018,2.9617081%20L25.0154816,2.93532311%20L25.0154816,2.93532311%20Z%20M6.63395306,3.27934161%20L6.47290669,3.28684151%20L6.31604936,3.32403743%20L6.16885408,3.38974642%20L6.05767228,3.46427318%20L6.0172333,3.49616491%20L6.01304409,3.4994756%20L6.00888861,3.50282019%20L5.86395702,3.62008317%20L5.85980153,3.62346148%20L5.85571386,3.62683998%20L5.71209962,3.74599475%20L5.70797804,3.7494068%20L5.70392409,3.75288648%20L5.56166128,3.87389949%20L5.55760716,3.87737917%20L5.55355321,3.88089275%20L5.41267557,4.00379739%20L5.40862144,4.00731097%20L5.40466869,4.01085828%20L5.26514247,4.13562116%20L5.26115598,4.1392022%20L5.25720322,4.14281697%20L5.11909589,4.26943809%20L5.11514314,4.27305286%20L5.11125801,4.27673526%20L4.97453584,4.40518054%20L4.97065072,4.40886294%20L4.96679932,4.41257925%20L4.83152977,4.54288259%20L4.82767838,4.54659872%20L4.82386088,4.55038249%20L4.69007768,4.68251017%20L4.68626019,4.68629411%20L4.68247642,4.6901116%20L4.55034874,4.82389463%20L4.54656498,4.8277123%20L4.54284885,4.83156352%20L4.41254533,4.96679934%20L4.40882919,4.97068446%20L4.40518052,4.97456959%20L4.27670151,5.11125803%20L4.27301911,5.11517706%20L4.26940417,5.11912964%20L4.14278322,5.25723714%20L4.13916845,5.261156%20L4.13562114,5.26514249%20L4.01082436,5.4046687%20L4.00727722,5.40865519%20L4.00376364,5.41267558%20L3.88085883,5.55358696%20L3.87734542,5.55760718%20L3.87389947,5.56169503%20L3.75285273,5.70395784%20L3.74940678,5.70801178%20L3.74599473,5.71213354%20L3.62683978,5.8557476%20L3.62342774,5.85983545%20L3.62008315,5.86399076%20L3.50278644,6.00892253%20L3.49944185,6.01307784%20L3.49613099,6.01723332%20L3.38075998,6.16348262%20L3.37748303,6.16767166%20L3.3742398,6.1718946%20L3.26076059,6.31942769%20L3.25751736,6.32365064%20L3.25430786,6.32790731%20L3.14275452,6.47669047%20L3.13957875,6.48094714%20L3.13643689,6.48523772%20L3.02677534,6.63530451%20L3.02366721,6.63956118%20L3.02055907,6.64391938%20L2.91285695,6.79516861%20L2.90978272,6.79949291%20L2.90674222,6.80385095%20L2.80096562,6.95635024%20L2.79792512,6.96070828%20L2.79495207,6.96510021%20L2.69113508,7.11878177%20L2.68816221,7.12317371%20L2.6852568,7.12759937%20L2.58336533,7.28246337%20L2.58042619,7.28688904%20L2.57758841,7.29134843%20L2.47765637,7.44736131%20L2.47478486,7.45182071%20L2.47198081,7.45631383%20L2.37400837,7.61344151%20L2.37123805,7.61793464%20L2.36846773,7.62246166%20L2.27248862,7.78070416%20L2.26975203,7.78523118%20L2.26704934,7.78975821%20L2.17306339,7.9491155%20L2.17036071,7.95367626%20L2.16772565,7.95823701%20L2.07569895,8.11867539%20L2.07309763,8.12327004%20L2.0704963,8.12786453%20L1.98049684,8.28935025%20L1.97792924,8.29394473%20L1.97539537,8.29860702%20L1.88738907,8.46110618%20L1.88485537,8.46573457%20L1.88242287,8.47043042%20L1.79640989,8.63394302%20L1.79394366,8.63860531%20L1.79154505,8.64330116%20L1.7075927,8.80782738%20L1.70519409,8.81252323%20L1.70282922,8.81725298%20L1.62090392,8.98275891%20L1.61853922,8.98748866%20L1.61627571,8.99225214%20L1.53634357,9.15870406%20L1.53408006,9.16346754%20L1.53185045,9.16823102%20L1.4539791,9.33562875%20L1.45178322,9.34042596%20L1.44958733,9.34522334%20L1.40462133,9.44512148%20L1.35239189,9.59762077%20L1.32938521,9.75718062%20L1.33641221,9.91826089%20L1.37316878,10.0751859%20L1.43843876,10.2226176%20L1.52992475,10.3553534%20L1.64445113,10.4687988%20L1.77806534,10.5590009%20L1.92607134,10.622852%20L2.08336785,10.658156%20L2.24448202,10.6636288%20L2.40380541,10.6391019%20L2.55583181,10.5854536%20L2.69525666,10.504508%20L2.81721549,10.3991031%20L2.91748534,10.2728876%20L2.98174171,10.1554558%20L3.02454556,10.0603886%20L3.09873433,9.90092995%20L3.17380163,9.74461316%20L3.25140262,9.58799228%20L3.33028724,9.43343237%20L3.41052347,9.28089934%20L3.49434056,9.1261028%20L3.57890091,8.97448185%20L3.66542069,8.82363807%20L3.75305545,8.6750578%20L3.84440635,8.52445047%20L3.9376153,8.37495795%20L4.03150006,8.22843829%20L4.12724272,8.08289853%20L4.22602605,7.93671686%20L4.32545128,7.79347434%20L4.42656558,7.65144798%20L4.52950422,7.51057033%20L4.6343011,7.37080749%20L4.74311802,7.22932185%20L4.85139458,7.0920927%20L4.9614953,6.95604616%20L5.0746367,6.81966163%20L5.18801438,6.68641915%20L5.30460173,6.55277104%20L5.42287815,6.420542%20L5.54041131,6.29236707%20L5.66206605,6.16290818%20L5.7855114,6.03480071%20L5.90936219,5.90939594%20L6.0360845,5.78426152%20L6.1628407,5.6621337%20L6.29101563,5.5416614%20L6.42334603,5.4203782%20L6.55266966,5.30470311%20L6.68641913,5.1880144%20L6.82121577,5.07331919%20L6.95597851,4.96152905%20L7.09209268,4.8513946%20L7.12901825,4.82223929%20L7.24570678,4.71105749%20L7.33976037,4.58011207%20L7.40786813,4.43399804%20L7.44766521,4.27778261%20L7.45780033,4.11690506%20L7.4379018,3.95693959%20L7.38864522,3.80342685%20L7.31175376,3.66173831%20L7.2098962,3.53677271%20L7.08665357,3.43288809%20L6.94624883,3.35366565%20L6.79358071,3.30190911%20L6.63395306,3.27934161%20L6.63395306,3.27934161%20Z%20M15.9999196,3.28646806%20L15.9945488,3.28650456%20L15.847353,3.28741612%20L15.8419805,3.28745072%20L15.8366097,3.2875545%20L15.6896163,3.29029092%20L15.6842801,3.2903947%20L15.6789076,3.29056768%20L15.5321179,3.29512843%20L15.52678,3.2953014%20L15.5214085,3.29553838%20L15.3748888,3.30188974%20L15.3695174,3.30212671%20L15.3641794,3.30239655%20L15.2178964,3.31057225%20L15.2125587,3.31087668%20L15.2072209,3.31124857%20L15.0611744,3.3212147%20L15.0558703,3.321552%20L15.0505324,3.32199135%20L14.9047899,3.33374791%20L14.8994522,3.33418726%20L14.8941482,3.33466121%20L14.7486759,3.34820838%20L14.7433718,3.34871519%20L14.7380678,3.34925486%20L14.6882033,3.35452498%20L14.5301635,3.38631535%20L14.3807723,3.44685558%20L14.2451987,3.5341188%20L14.1281722,3.64499651%20L14.0337808,3.77563784%20L13.9652338,3.92158306%20L13.9249976,4.0776634%20L13.9144233,4.23854094%20L13.9338826,4.39857387%20L13.9827,4.55218797%20L14.059186,4.69411297%20L14.1606721,4.81934875%20L14.2836443,4.92360492%20L14.4238126,5.00319924%20L14.5763457,5.05539496%20L14.7359057,5.07840146%20L14.8697226,5.07468532%20L14.9145872,5.06998948%20L15.050127,5.05735438%20L15.1827277,5.04664499%20L15.3185717,5.03738821%20L15.4544493,5.02978696%20L15.5906312,5.02384104%20L15.7268122,5.0196181%20L15.8632647,5.01708423%20L15.9999196,5.01624013%20L16.1365744,5.01708423%20L16.2730269,5.0196181%20L16.4092079,5.02384104%20L16.5453905,5.02978696%20L16.6812671,5.03738821%20L16.8171107,5.04664499%20L16.9497128,5.05735438%20L17.0850825,5.06995558%20L17.2198797,5.08417855%20L17.3546423,5.1000906%20L17.4892025,5.11762427%20L17.6207564,5.13644173%20L17.7547077,5.15728625%20L17.8882889,5.17971866%20L18.0209222,5.20373877%20L18.153827,5.22944814%20L18.2837602,5.2562723%20L18.4158192,5.28519099%20L18.5480495,5.31586656%20L18.6766975,5.34735284%20L18.8076079,5.38113654%20L18.9355122,5.41576469%20L19.0645666,5.4524199%20L19.1946001,5.49110217%20L19.3210185,5.53035871%20L19.4493275,5.57191249%20L19.5754086,5.61447989%20L19.7026037,5.65917571%20L19.8300685,5.70569569%20L19.9561842,5.75349947%20L20.0768253,5.80089798%20L20.2025674,5.85208008%20L20.325708,5.90393798%20L20.3315198,5.90640404%20L20.3317274,5.90593183%20L20.4788557,5.95427615%20L20.6386854,5.97535712%20L20.7996308,5.9663707%20L20.9561152,5.92768843%20L21.1027367,5.86062801%20L21.2343235,5.76752042%20L21.3463852,5.65160887%20L21.4349642,5.51694732%20L21.496992,5.36816433%20L21.5303705,5.21042864%20L21.5338835,5.04928074%20L21.5074309,4.89026126%20L21.4518913,4.73891067%20L21.3692556,4.60049925%20L21.2623986,4.47982423%20L21.1349666,4.38107463%20L21.0167575,4.31823715%20L21.0128725,4.31654721%20L21.0080414,4.31445269%20L21.0031774,4.3123919%20L20.870001,4.25627733%20L20.8651699,4.25425027%20L20.8602713,4.25225694%20L20.7264549,4.19776398%20L20.7215564,4.19580455%20L20.7166578,4.19384513%20L20.5821651,4.14100751%20L20.5772665,4.13908198%20L20.5723351,4.13722374%20L20.4371989,4.08600792%20L20.4322674,4.08414985%20L20.4273014,4.08232551%20L20.2915252,4.03276485%20L20.2865921,4.03097442%20L20.2815932,4.02921754%20L20.145241,3.9813124%20L20.1402421,3.97955569%20L20.1352415,3.97786576%20L19.9982822,3.93161613%20L19.9932833,3.92992619%20L19.9882498,3.92830544%20L19.8506816,3.88371099%20L19.8456827,3.88209024%20L19.8406492,3.88053695%20L19.7025068,3.83759801%20L19.6974733,3.83604472%20L19.6924069,3.83452429%20L19.5537248,3.79330833%20L19.5486567,3.7917879%20L19.5435887,3.79036953%20L19.4043669,3.75080891%20L19.3992988,3.74935594%20L19.3941978,3.74797044%20L19.2544347,3.71009906%20L19.2493337,3.70874815%20L19.2442328,3.70739724%20L19.1039628,3.67124883%20L19.0988618,3.66993079%20L19.0937263,3.6686802%20L18.9529841,3.63422104%20L18.9478485,3.63293759%20L18.9426801,3.63175446%20L18.801464,3.59898437%20L18.7963302,3.59780125%20L18.79116,3.59665271%20L18.6494716,3.56563933%20L18.6443032,3.5644908%20L18.6391002,3.56344259%20L18.4969725,3.53411845%20L18.4918041,3.53303738%20L18.4866011,3.53202376%20L18.344034,3.50445633%20L18.3388328,3.50344271%20L18.3335952,3.50249656%20L18.1906234,3.4766521%20L18.1854204,3.47570595%20L18.1801845,3.47482725%20L18.0368062,3.45070577%20L18.0315703,3.44982707%20L18.0263327,3.44901583%20L17.8825497,3.42665123%20L17.8773138,3.42580713%20L17.8720433,3.42506335%20L17.727923,3.40445528%20L17.7226525,3.4037115%20L17.7173821,3.40300231%20L17.5728898,3.38415095%20L17.5676194,3.38347463%20L17.562316,3.3828329%20L17.4175194,3.36577214%20L17.4122143,3.36513041%20L17.406911,3.36459074%20L17.261777,3.34925296%20L17.2564719,3.34871329%20L17.2511686,3.34820648%20L17.1056956,3.3346593%20L17.1003923,3.33418536%20L17.0950544,3.33374601%20L16.9493115,3.32198944%20L16.9439736,3.32155009%20L16.9386703,3.3212128%20L16.792623,3.31124666%20L16.7872851,3.31087477%20L16.7819472,3.31057034%20L16.6356647,3.30239464%20L16.6303268,3.30212481%20L16.624956,3.30188784%20L16.4784365,3.29553647%20L16.473064,3.2952995%20L16.4677261,3.29512653%20L16.3209368,3.29056577%20L16.3155642,3.2903928%20L16.3102281,3.29028902%20L16.1632346,3.2875526%20L16.1578638,3.28744882%20L16.1524913,3.28741422%20L16.0052955,3.28650266%20L15.9999247,3.28646806%20L15.9999196,3.28646806%20Z%20M10.5184606,4.65173273%20L10.3574479,4.65963876%20L10.2007257,4.69734132%20L10.0777872,4.75028012%20L10.0179565,4.78173268%20L10.0132942,4.78419891%20L10.008666,4.78669888%20L9.88143684,4.85561754%20L9.87677473,4.85811751%20L9.87218007,4.8606851%20L9.74576185,4.93119147%20L9.74113346,4.93375907%20L9.73657271,4.9363604%20L9.61096521,5.00842075%20L9.60640445,5.01105598%20L9.6018437,5.01372477%20L9.47711455,5.08733927%20L9.4725538,5.09000823%20L9.46802677,5.09274465%20L9.34414225,5.16791314%20L9.33961522,5.17064973%20L9.33512192,5.17345378%20L9.21211575,5.25014252%20L9.20762263,5.25294657%20L9.20316324,5.25581825%20L9.08103542,5.33402724%20L9.07657602,5.33689893%20L9.07215036,5.33980416%20L8.9509348,5.41956731%20L8.94650913,5.42247272%20L8.9421172,5.42544577%20L8.82177999,5.50676289%20L8.81738805,5.50970204%20L8.81303002,5.51274254%20L8.69367252,5.59554619%20L8.68931449,5.59858669%20L8.68499019,5.6016611%20L8.56654477,5.685985%20L8.56222047,5.68905923%20L8.5579299,5.6922011%20L8.44046437,5.77804525%20L8.43617379,5.78118711%20L8.43191712,5.78436288%20L8.31543114,5.87169338%20L8.31117447,5.87490288%20L8.30695153,5.87814611%20L8.19144525,5.9669633%20L8.18725604,5.97020653%20L8.183067,5.97351722%20L8.06857435,6.06382094%20L8.06438513,6.06713162%20L8.06026355,6.07047621%20L7.94678434,6.16230018%20L7.94262903,6.16564477%20L7.93854118,6.16905682%20L7.82610932,6.26233341%20L7.82198774,6.26574563%20L7.81793362,6.26919141%20L7.70654909,6.36395452%20L7.70249497,6.36740047%20L7.69847476,6.37091388%20L7.58817131,6.46712961%20L7.58415109,6.47064319%20L7.58016461,6.47422424%20L7.47094224,6.57189259%20L7.46695575,6.57547363%20L7.46300299,6.57908857%20L7.35486169,6.67820972%20L7.35094284,6.68182449%20L7.34702381,6.68547316%20L7.24003122,6.78604693%20L7.23611219,6.78972933%20L7.23226097,6.79344564%20L7.12638302,6.89547202%20L7.12249789,6.89918833%20L7.1186804,6.90293836%20L7.01395115,7.00638364%20L7.01013365,7.0101674%20L7.00638362,7.01398507%20L6.90293817,7.11871432%20L6.89915458,7.12253181%20L6.89543827,7.12638303%20L6.79341172,7.23226099%20L6.78969558,7.23614611%20L6.78604691,7.24003124%20L6.68547315,7.34705773%20L6.68179074,7.35094286%20L6.6781758,7.35489544%20L6.57905483,7.46303674%20L6.57543988,7.46695576%20L6.57185884,7.47094225%20L6.47419049,7.58016462%20L6.47064318,7.58415111%20L6.46712959,7.58817133%20L6.37091386,7.69850868%20L6.36740045,7.70252889%20L6.36392077,7.70658284%20L6.26919139,7.81796754%20L6.26571171,7.82202148%20L6.26229966,7.82614306%20L6.16902307,7.93857493%20L6.16561085,7.94266278%20L6.16226626,7.94681826%20L6.07047619,8.06026357%20L6.06709788,8.06441888%20L6.06382092,8.06860809%20L5.97348347,8.18310075%20L5.97020651,8.18725623%20L5.96696329,8.19147917%20L5.87811236,8.30698527%20L5.87486913,8.31120821%20L5.87169337,8.31546506%20L5.78432896,8.43195087%20L5.78115337,8.43620754%20L5.7780115,8.44049811%20L5.69216735,8.55796382%20L5.68905921,8.56225422%20L5.68595108,8.56657852%20L5.60162718,8.6849902%20L5.59855294,8.68931451%20L5.59554617,8.69367254%20L5.51270879,8.81306377%20L5.50970202,8.81742197%20L5.50672915,8.82181373%20L5.42544575,8.94211721%20L5.42247271,8.94650915%20L5.41953356,8.95093481%20L5.35179734,9.05390718%20L5.27612205,9.19627135%20L5.22818317,9.35015564%20L5.20963589,9.51032383%20L5.22112245,9.67110002%20L5.26223706,9.82697763%20L5.33159489,9.9725174%20L5.42672955,10.1026182%20L5.5443978,10.212854%20L5.68044434,10.2993063%20L5.83017332,10.3590358%20L5.98841581,10.389914%20L6.14959744,10.390893%20L6.30821147,10.3619406%20L6.45864998,10.3040691%20L6.5957776,10.2192723%20L6.71472982,10.1104891%20L6.79675631,10.0047125%20L6.86155339,9.90626701%20L6.93658678,9.7952203%20L7.0142215,9.68329524%20L7.09070752,9.57589721%20L7.1711802,9.46566122%20L7.25161897,9.35839828%20L7.3348618,9.25018935%20L7.41780054,9.1449872%20L7.50371232,9.03880516%20L7.58965783,8.93525852%20L7.67806941,8.83130627%20L7.76685288,8.72955007%20L7.85779832,8.62779386%20L7.95036538,8.52684838%20L8.04289871,8.42840287%20L8.13685093,8.33090334%20L8.23195186,8.23458624%20L8.32962021,8.13810033%20L8.42840354,8.04293194%20L8.52681516,7.95039861%20L8.62765928,7.85796664%20L8.72971956,7.76671711%20L8.83107049,7.67827146%20L8.9352253,7.58969089%20L9.03880584,7.50374537%20L9.14464989,7.41807022%20L9.25052784,7.33459077%20L9.35704752,7.25266564%20L9.46579699,7.17114562%20L9.57410727,7.09195691%20L9.68329592,7.01422083%20L9.79343054,6.93780227%20L9.90623395,6.86155271%20L10.0180239,6.78800566%20L10.1307936,6.71577632%20L10.2443065,6.64496586%20L10.3593397,6.57516903%20L10.4744743,6.50723008%20L10.5923792,6.43952776%20L10.7089663,6.37452813%20L10.8283915,6.30986632%20L10.8829183,6.28118391%20L11.0179852,6.19317761%20L11.1343696,6.08165799%20L11.2280179,5.95044239%20L11.2957202,5.80412564%20L11.3350781,5.64780884%20L11.3447065,5.48689739%20L11.324335,5.32696583%20L11.274673,5.17362191%20L11.1973761,5.03213626%20L11.095147,4.90747458%20L10.9716003,4.80392794%20L10.8309591,4.72514451%20L10.6781557,4.67379342%20L10.5184606,4.65173273%20L10.5184606,4.65173273%20Z%20M24.4271066,6.76800646%20L24.2660938,6.77581061%20L24.1093378,6.81334417%20L23.9622441,6.87932352%20L23.829981,6.9714853%20L23.7170769,7.08655223%20L23.6275171,7.22060561%20L23.5644082,7.3689157%20L23.5298813,7.52638102%20L23.5251851,7.68752893%20L23.5504892,7.84675113%20L23.6049148,7.99850717%20L23.6865369,8.13749285%20L23.7729555,8.23972213%20L23.8629875,8.33090403%20L23.9569408,8.42840356%20L24.0494739,8.52684908%20L24.1420417,8.62779456%20L24.2329869,8.72955076%20L24.3217701,8.83130696%20L24.4101813,8.93525922%20L24.4961277,9.03880585%20L24.5820377,9.14498789%20L24.6649778,9.25019004%20L24.7482207,9.35839897%20L24.8286596,9.46566191%20L24.9091314,9.5758979%20L24.985618,9.68329593%20L25.063253,9.79522099%20L25.1382866,9.90623397%20L25.2130832,10.0199496%20L25.2852108,10.1325842%20L25.356055,10.2461985%20L25.4253788,10.3604885%20L25.4943981,10.477515%20L25.5608851,10.5934265%20L25.626426,10.7109934%20L25.6900053,10.8284591%20L25.7515592,10.9454855%20L25.8133154,11.0664646%20L25.8719979,11.1849437%20L25.9307825,11.3073756%20L25.9869984,11.4282871%20L26.0413221,11.5487933%20L26.0955436,11.6732184%20L26.1472675,11.7959542%20L26.198078,11.9207847%20L26.2464566,12.0438246%20L26.2944961,12.1706483%20L26.3407126,12.2972355%20L26.3845298,12.4219984%20L26.4277054,12.5498356%20L26.4695629,12.6789566%20L26.5087861,12.8051722%20L26.5472655,12.9346309%20L26.5689544,13.0109819%20L26.6272651,13.1612514%20L26.7124677,13.2981088%20L26.8215542,13.4167907%20L26.9508111,13.5131415%20L27.0956752,13.5838506%20L27.251146,13.626418%20L27.4118561,13.6393909%20L27.572158,13.6223301%20L27.726482,13.5758439%20L27.8695213,13.5014861%20L27.9962787,13.4018921%20L28.1023591,13.2804738%20L28.1840469,13.1415218%20L28.23854,12.9897995%20L28.2639115,12.8306112%20L28.2593174,12.6694633%20L28.2328319,12.5382477%20L28.2095205,12.4562887%20L28.2080675,12.4511874%20L28.2065799,12.4461537%20L28.1653295,12.307472%20L28.163842,12.3024044%20L28.1622506,12.2973706%20L28.1193449,12.1592293%20L28.1177882,12.1541957%20L28.1161622,12.1491619%20L28.0715683,12.0115951%20L28.0699078,12.0065951%20L28.0682126,12.001595%20L28.0219633,11.8646025%20L28.0202682,11.8596026%20L28.0185126,11.8546364%20L27.9706062,11.7182518%20L27.9688505,11.7132858%20L27.9670603,11.7083196%20L27.9174986,11.572577%20L27.9156754,11.5676108%20L27.913816,11.5626783%20L27.8626007,11.4275439%20L27.860743,11.4226116%20L27.8588178,11.4177128%20L27.8059454,11.2832203%20L27.8040202,11.2783217%20L27.8020276,11.2734231%20L27.7475673,11.1396062%20L27.7455747,11.1347076%20L27.7435129,11.1298428%20L27.687399,10.9967015%20L27.6853717,10.9918366%20L27.6832442,10.9870055%20L27.6255407,10.85454%20L27.6234131,10.8497089%20L27.621251,10.844878%20L27.5618921,10.7131218%20L27.55973,10.7083246%20L27.557535,10.7035273%20L27.4965554,10.5724807%20L27.4943258,10.5677172%20L27.4920616,10.5629537%20L27.4294941,10.4326503%20L27.4272316,10.4278869%20L27.4248671,10.4231571%20L27.3607118,10.2935969%20L27.3583801,10.2888673%20L27.355981,10.2841713%20L27.2902395,10.1553882%20L27.2878403,10.1506584%20L27.2853738,10.1459963%20L27.2180426,10.0179902%20L27.2156106,10.0133281%20L27.2130766,10.008666%20L27.1441922,9.88143686%20L27.1416582,9.87680847%20L27.1390912,9.87218009%20L27.0686189,9.7457956%20L27.0660503,9.74116721%20L27.0634159,9.73657272%20L26.9913886,9.61099896%20L26.9887543,9.60640447%20L26.9860853,9.60187744%20L26.9124701,9.47711457%20L26.9097683,9.47255381%20L26.9070319,9.46806052%20L26.8318962,9.34417599%20L26.8291598,9.33964897%20L26.826356,9.33515584%20L26.749667,9.21214967%20L26.7468632,9.20765638%20L26.7439918,9.20319698%20L26.6657479,9.08106916%20L26.6629112,9.07660977%20L26.6600052,9.07218411%20L26.5802426,8.95093481%20L26.5773038,8.94650915%20L26.5743304,8.94211721%20L26.4930474,8.82181373%20L26.490074,8.81742197%20L26.4870677,8.81306377%20L26.4042296,8.69367254%20L26.4012234,8.68931451%20L26.3981479,8.6849902%20L26.313824,8.56657852%20L26.3107175,8.56225422%20L26.3076092,8.55796382%20L26.2217648,8.44049811%20L26.2186219,8.43620754%20L26.2154462,8.43195087%20L26.1280831,8.31546506%20L26.1249074,8.31120821%20L26.1216641,8.30698527%20L26.0328118,8.19147917%20L26.0295703,8.18725623%20L26.0262925,8.18310075%20L25.9359544,8.06860809%20L25.9326783,8.06441888%20L25.9293001,8.06026357%20L25.837509,7.94681826%20L25.8341655,7.94266278%20L25.8307527,7.93857493%20L25.7374758,7.82614306%20L25.7340648,7.82202148%20L25.7305846,7.81796754%20L25.6358547,7.70658284%20L25.6323762,7.70252889%20L25.6288614,7.69850868%20L25.5326457,7.58817133%20L25.5291326,7.58415111%20L25.525585,7.58016462%20L25.4279163,7.47094225%20L25.4243358,7.46695576%20L25.4207206,7.46303674%20L25.3216007,7.35489544%20L25.3179856,7.35094286%20L25.314303,7.34705773%20L25.2137284,7.24003124%20L25.2100804,7.23614611%20L25.206365,7.23226099%20L25.1043374,7.12638303%20L25.1006219,7.12253181%20L25.0968373,7.11871432%20L25.0035275,7.02425529%20L24.8800825,6.92060712%20L24.7395081,6.84168859%20L24.5867391,6.79023614%20L24.4270772,6.76800646%20L24.4271066,6.76800646%20Z%20M4.44980871,12.8263883%20L4.28862707,12.8282464%20L4.13058731,12.8599691%20L3.98116241,12.9204419%20L3.84555505,13.0076373%20L3.7284948,13.1184475%20L3.63403577,13.2490889%20L3.5654551,13.3949664%20L3.52991469,13.5240199%20L3.50440805,13.6558435%20L3.50339444,13.6610461%20L3.50244828,13.6662488%20L3.47660383,13.8092211%20L3.47565767,13.8144575%20L3.47477897,13.8196941%20L3.45065749,13.9630717%20L3.44977879,13.9683083%20L3.44896755,13.9735446%20L3.42660278,14.117294%20L3.42579154,14.1225641%20L3.4250149,14.1278344%20L3.40440683,14.2719552%20L3.40366305,14.2772255%20L3.40298673,14.2824958%20L3.38413536,14.4269882%20L3.38342618,14.4322585%20L3.38281731,14.4375288%20L3.36572283,14.5823592%20L3.3650811,14.5876632%20L3.36454143,14.5929673%20L3.34923755,14.7381016%20L3.34866328,14.7434056%20L3.34815647,14.7487096%20L3.33464303,14.8941819%20L3.33413622,14.8994859%20L3.33369687,14.9047899%20L3.32194013,15.0505663%20L3.32153537,15.0558704%20L3.32116348,15.0612081%20L3.31119735,15.2072547%20L3.31082546,15.2125924%20L3.31052103,15.2179303%20L3.30237923,15.3642134%20L3.3020748,15.3695511%20L3.30183783,15.374889%20L3.29548647,15.5214422%20L3.29524949,15.52678%20L3.29507652,15.5321516%20L3.29051577,15.6789415%20L3.2903428,15.6842794%20L3.29023901,15.6896502%20L3.28750259,15.8366436%20L3.2874334,15.8420144%20L3.28736422,15.8473869%20L3.28641806,15.994581%20L3.28641806,15.9999535%20L3.28641806,16.0053243%20L3.28736422,16.1525201%20L3.2874334,16.1578926%20L3.28750259,16.1632288%20L3.29023901,16.3102551%20L3.2903428,16.315593%20L3.29051577,16.3209655%20L3.29507652,16.4677219%20L3.29524949,16.4730927%20L3.29548647,16.4784306%20L3.30183783,16.6249847%20L3.3020748,16.6303226%20L3.30237923,16.6356588%20L3.31052103,16.7819759%20L3.31082546,16.7873138%20L3.31119735,16.7926518%20L3.32116348,16.9386644%20L3.32153537,16.9440024%20L3.32194013,16.9493403%20L3.33369687,17.0950831%20L3.33413622,17.1003864%20L3.33464303,17.1057244%20L3.34815647,17.2511628%20L3.34866328,17.2564678%20L3.34923755,17.2617711%20L3.36454143,17.4069397%20L3.3650811,17.412243%20L3.36572283,17.4175135%20L3.38281731,17.5623448%20L3.38342618,17.5676481%20L3.38413536,17.5729185%20L3.40298673,17.7174108%20L3.40366305,17.7226813%20L3.40440683,17.7279517%20L3.4250149,17.8720721%20L3.42579154,17.8773425%20L3.42660278,17.8825784%20L3.44896755,18.0263286%20L3.44977879,18.0315991%20L3.45065749,18.0368349%20L3.47477897,18.1801786%20L3.47565767,18.1854162%20L3.47660383,18.1906521%20L3.50244828,18.3336239%20L3.50339444,18.3388269%20L3.50440805,18.3440628%20L3.53200921,18.486597%20L3.53298823,18.4917983%20L3.53406931,18.4970013%20L3.56339362,18.639129%20L3.56447469,18.6442974%20L3.56559036,18.6495004%20L3.59663747,18.7911559%20L3.59775141,18.7963243%20L3.59896741,18.8014927%20L3.63170359,18.9427088%20L3.63291958,18.9478773%20L3.63417017,18.9530128%20L3.6686295,19.093755%20L3.66988009,19.0988906%20L3.67119813,19.1039915%20L3.70738027,19.2442615%20L3.70869831,19.2493624%20L3.71008382,19.2544634%20L3.74792147,19.3941937%20L3.74930697,19.3992947%20L3.75075994,19.4043956%20L3.79032056,19.5436174%20L3.79177353,19.5486855%20L3.79325936,19.5537536%20L3.83450905,19.6924357%20L3.83599488,19.697502%20L3.83758277,19.7025355%20L3.88048798,19.8406434%20L3.88204127,19.8457114%20L3.88366202,19.8507103%20L3.90129704,19.9051031%20L3.96508051,20.0531431%20L4.05521523,20.1867899%20L4.16862681,20.301384%20L4.30129503,20.3929381%20L4.44865914,20.4582749%20L4.6055841,20.4951335%20L4.76666437,20.5022617%20L4.92622439,20.4793221%20L5.07875742,20.4271952%20L5.21899317,20.3476678%20L5.34199934,20.2434798%20L5.44355282,20.1182774%20L5.52010646,19.9764195%20L5.56899132,19.8228065%20L5.58855204,19.6627727%20L5.57804537,19.5019294%20L5.54676181,19.371761%20L5.53027532,19.3209158%20L5.49108641,19.1947344%20L5.45260687,19.0652752%20L5.41622184,18.9372014%20L5.38088416,18.8068652%20L5.34797898,18.6793311%20L5.31507381,18.5449405%20L5.28517523,18.4158531%20L5.25618891,18.2837249%20L5.22953357,18.1543677%20L5.20379047,18.0214975%20L5.17963527,17.887816%20L5.15723676,17.7546742%20L5.13679769,17.6234593%20L5.11723696,17.4865345%20L5.10004111,17.3546762%20L5.08416279,17.220218%20L5.06990609,17.0851165%20L5.05754118,16.9524486%20L5.04639261,16.8142058%20L5.03733873,16.6813356%20L5.0297373,16.5453553%20L5.02372392,16.4067424%20L5.01960234,16.2731612%20L5.01706847,16.1366084%20L5.01622437,15.9999535%20L5.01706847,15.8633332%20L5.01960234,15.7268132%20L5.02372392,15.5931646%20L5.0297373,15.4543818%20L5.03733873,15.3184027%20L5.04642651,15.1854981%20L5.05757508,15.0472217%20L5.06990609,14.91479%20L5.08412889,14.7799933%20L5.10007484,14.6448926%20L5.11723696,14.5133729%20L5.13679769,14.3764143%20L5.1571354,14.2456379%20L5.17970273,14.1115845%20L5.20372302,13.9788149%20L5.22811468,13.8526669%20L5.24385791,13.6922622%20L5.22956747,13.5316888%20L5.18571627,13.3765544%20L5.11382474,13.2322646%20L5.01642657,13.1038193%20L4.89686635,12.995678%20L4.75933329,12.9115905%20L4.60855697,12.85453%20L4.44980784,12.8263883%20L4.44980871,12.8263883%20Z%20M31.1476817,14.4273261%20L30.9867692,14.4368532%20L30.8303851,14.4761097%20L30.6840352,14.543677%20L30.5527857,14.6372575%20L30.4411304,14.7535744%20L30.3530565,14.8885738%20L30.2915372,15.0375595%20L30.2587331,15.1953966%20L30.2541718,15.3291798%20L30.260186,15.4681994%20L30.2656917,15.6452586%20L30.2690024,15.8224547%20L30.2700749,15.9999535%20L30.2690024,16.1773848%20L30.2656917,16.3546138%20L30.260186,16.5316057%20L30.2525165,16.708295%20L30.2426519,16.8848476%20L30.2306251,17.0608934%20L30.2164016,17.2371434%20L30.2003204,17.409946%20L30.1818418,17.5849799%20L30.1611664,17.7602819%20L30.1384292,17.93447%20L30.1134971,18.1086927%20L30.0869441,18.2794006%20L30.0576876,18.4532514%20L30.0265042,18.6257167%20L29.9935651,18.7959524%20L29.9581266,18.967878%20L29.9206937,19.138688%20L29.8815397,19.3075727%20L29.8392083,19.4803753%20L29.7960673,19.6475702%20L29.7511343,19.8135161%20L29.7030948,19.982669%20L29.6531958,20.1504053%20L29.6012696,20.3176001%20L29.5481291,20.4815517%20L29.4918786,20.648072%20L29.4335679,20.8140162%20L29.374818,20.9749287%20L29.3124875,21.1393871%20L29.2504268,21.2973591%20L29.1835696,21.4615805%20L29.1162731,21.6212424%20L29.0460032,21.7824922%20L28.9752593,21.939518%20L28.9011044,22.0989775%20L28.8265448,22.2542131%20L28.7484704,22.4118806%20L28.6677945,22.5698872%20L28.6082004,22.7196827%20L28.5774581,22.8779263%20L28.5766105,23.0391414%20L28.6056629,23.1976877%20L28.6636708,23.3481267%20L28.748569,23.4851517%20L28.8574532,23.6040372%20L28.9864731,23.7006577%20L29.1312006,23.7716714%20L29.2866056,23.8145754%20L29.4472466,23.8279202%20L29.6075848,23.8111972%20L29.7620437,23.7650154%20L29.9052179,23.6909626%20L30.0322105,23.5916386%20L30.1385278,23.470456%20L30.2084259,23.3563014%20L30.292243,23.1920453%20L30.2946421,23.1873491%20L30.2970066,23.1826201%20L30.3789314,23.0171135%20L30.3812959,23.0123844%20L30.3835601,23.0076553%20L30.4634923,22.8411697%20L30.4657547,22.8364389%20L30.4679861,22.8316424%20L30.5458564,22.6642434%20L30.5480531,22.6594815%20L30.5502482,22.6546504%20L30.6260255,22.4863399%20L30.6282205,22.4815417%20L30.6303152,22.4767105%20L30.7040653,22.3074885%20L30.70616,22.3026574%20L30.7082201,22.2977934%20L30.7798755,22.1277272%20L30.7819356,22.1228615%20L30.78393,22.1179629%20L30.8535236,21.9470181%20L30.8554834,21.9421195%20L30.8574431,21.9372209%20L30.9249421,21.765432%20L30.926869,21.7605317%20L30.9287267,21.7556002%20L30.9941309,21.5829654%20L30.9960232,21.578034%20L30.9978135,21.5731008%20L31.0611247,21.3996565%20L31.0629478,21.3947233%20L31.0646776,21.3897244%20L31.1258941,21.2155346%20L31.1276515,21.2105357%20L31.1293466,21.2055697%20L31.1884011,21.0305704%20L31.1900962,21.0255697%20L31.1917567,21.0205708%20L31.2487164,20.8448623%20L31.2503424,20.8398271%20L31.2519337,20.8347936%20L31.3067295,20.6583413%20L31.3083209,20.6533078%20L31.3098084,20.6482415%20L31.3624767,20.4711128%20L31.3639989,20.4660465%20L31.3654518,20.4609438%20L31.415958,20.2831406%20L31.4174109,20.2780397%20L31.4187947,20.2729387%20L31.4671404,20.0944592%20L31.4685242,20.0893582%20L31.4698388,20.0842227%20L31.5160552,19.9050686%20L31.5173698,19.8999676%20L31.5186152,19.8948321%20L31.5626366,19.7150362%20L31.5638474,19.7099007%20L31.5650582,19.7047651%20L31.6068811,19.5243621%20L31.6080919,19.519192%20L31.6091989,19.5140236%20L31.6488614,19.3330446%20L31.6499685,19.3278762%20L31.6510236,19.3227078%20L31.6884548,19.1411546%20L31.6895272,19.1359516%20L31.6905477,19.1307486%20L31.7257839,18.9486556%20L31.726839,18.9434526%20L31.7277903,18.9382496%20L31.7607969,18.7556153%20L31.7617482,18.7503794%20L31.7626304,18.7451418%20L31.7934402,18.5620007%20L31.7943223,18.5567648%20L31.7951353,18.551529%20L31.8237155,18.367881%20L31.8245284,18.3626434%20L31.8252722,18.3573747%20L31.8516245,18.1732874%20L31.8523683,18.168017%20L31.8530775,18.1627465%20L31.877131,17.978187%20L31.8778402,17.9728819%20L31.8784456,17.9676132%20L31.9002695,17.7826126%20L31.9009095,17.7773093%20L31.9014457,17.7720388%20L31.9210071,17.5866006%20L31.9215779,17.5812973%20L31.9220795,17.5759923%20L31.9393439,17.3901822%20L31.9398455,17.3848788%20L31.9402606,17.3795755%20L31.9552608,17.1933935%20L31.9556932,17.1880556%20L31.9560737,17.1827177%20L31.9687751,16.9961984%20L31.9691902,16.9908605%20L31.969467,16.9855226%20L31.9799404,16.7986314%20L31.9802172,16.7932935%20L31.9804593,16.7879556%20L31.9886011,16.6007617%20L31.9888433,16.5954238%20L31.9890163,16.5900513%20L31.9948264,16.402553%20L31.9949994,16.397215%20L31.9951723,16.3918425%20L31.9986508,16.2040744%20L31.9988238,16.1987019%20L31.9988238,16.1933311%20L32,16.0053243%20L31.9995676,16.0004932%20L32,15.994581%20L31.9988238,15.806543%20L31.9988238,15.8011705%20L31.9986508,15.7957997%20L31.9951723,15.6080298%20L31.9949994,15.6026919%20L31.9948264,15.5973211%20L31.9890163,15.4098213%20L31.9888433,15.4044833%20L31.9886011,15.3991456%20L31.9823171,15.2541801%20L31.9603237,15.0944511%20L31.9091083,14.9416142%20L31.8303922,14.8009391%20L31.7269462,14.6772912%20L31.6023527,14.5749942%20L31.4609342,14.497596%20L31.3076238,14.447799%20L31.1477267,14.4273261%20L31.1476817,14.4273261%20Z%20M0.9380021,14.9987422%20L0.776786565,15.0002961%20L0.618679338,15.0317487%20L0.469153084,15.091985%20L0.333410458,15.178944%20L0.21614748,15.2895515%20L0.121485902,15.4200239%20L0.0526348749,15.5658001%20L0.0120607394,15.7218126%20L0.000878352342,15.8551914%20L0,15.994581%20L0,15.9999535%20L0,16.0053243%20L0.0011824373,16.1933311%20L0.00121703172,16.1987019%20L0.00131908526,16.2040744%20L0.00479879966,16.3918425%20L0.0049008532,16.397215%20L0.00507036587,16.402553%20L0.0108811388,16.5900513%20L0.0110506515,16.5954238%20L0.0112871043,16.6007617%20L0.019429005,16.7879556%20L0.0196659768,16.7932935%20L0.0199358133,16.7986314%20L0.0303750257,16.9855226%20L0.0306794566,16.9908605%20L0.0310513466,16.9961984%20L0.043754072,17.1827177%20L0.044125962,17.1880556%20L0.0445653111,17.1933935%20L0.059565279,17.3795755%20L0.0600046281,17.3848788%20L0.0605114364,17.3901822%20L0.0777747442,17.5759923%20L0.0782815525,17.5812973%20L0.0788558198,17.5866006%20L0.0984165431,17.7720388%20L0.0989562161,17.7773093%20L0.0995979426,17.7826126%20L0.121422179,17.9676132%20L0.122031041,17.9728819%20L0.122740226,17.978187%20L0.146794246,18.1627465%20L0.147503432,18.168017%20L0.148247212,18.1732874%20L0.174598474,18.3573747%20L0.175342254,18.3626434%20L0.176153493,18.367881%20L0.204734538,18.551529%20L0.205545778,18.5567648%20L0.206424476,18.5620007%20L0.237235132,18.7451418%20L0.23811383,18.7503794%20L0.239059988,18.7556153%20L0.272066697,18.9382496%20L0.273012855,18.9434526%20L0.274026471,18.9486556%20L0.309262791,19.1307486%20L0.310276408,19.1359516%20L0.311357484,19.1411546%20L0.348789685,19.3227078%20L0.34987076,19.3278762%20L0.35098643,19.3330446%20L0.390648242,19.5140236%20L0.391763912,19.519192%20L0.392979906,19.5243621%20L0.434804041,19.7047651%20L0.436020035,19.7099007%20L0.437270624,19.7150362%20L0.48129064,19.8948321%20L0.482541229,19.8999676%20L0.483859276,19.9050686%20L0.530075173,20.0842227%20L0.531393221,20.0893582%20L0.532778727,20.0944592%20L0.581123047,20.2729387%20L0.582508553,20.2780397%20L0.583961519,20.2831406%20L0.634467989,20.4609438%20L0.635920955,20.4660465%20L0.63744138,20.4711128%20L0.690110001,20.6482415%20L0.691595832,20.6533078%20L0.693183716,20.6583413%20L0.747980759,20.8347936%20L0.749568643,20.8398271%20L0.751189392,20.8448623%20L0.808148587,21.0205708%20L0.809769335,21.0255697%20L0.811459273,21.0305704%20L0.870512987,21.2055697%20L0.872202924,21.2105357%20L0.873959629,21.2155346%20L0.935175494,21.3897244%20L0.936898296,21.3947233%20L0.938722633,21.3996565%20L1.00203319,21.5731008%20L1.00382362,21.578034%20L1.00571559,21.5829654%20L1.07112067,21.7556002%20L1.07297874,21.7605317%20L1.07490443,21.765432%20L1.14240403,21.9372209%20L1.14436346,21.9421195%20L1.14632289,21.9470181%20L1.21591717,22.1179629%20L1.21791051,22.1228615%20L1.21997129,22.1277272%20L1.29162637,22.2977934%20L1.29368716,22.3026574%20L1.29578168,22.3074885%20L1.36953128,22.4767105%20L1.37162597,22.4815417%20L1.37382185,22.4863399%20L1.44959851,22.6546504%20L1.45179439,22.6594815%20L1.45399027,22.6642434%20L1.53186162,22.8316424%20L1.53409123,22.8364389%20L1.53635474,22.8411697%20L1.61628688,23.0076553%20L1.61855039,23.0123844%20L1.6209151,23.0171135%20L1.70284039,23.1826201%20L1.70520527,23.1873491%20L1.70760387,23.1920453%20L1.72807685,23.2321472%20L1.81442764,23.3682953%20L1.92452853,23.4860304%20L2.05459542,23.5812672%20L2.20006773,23.6507258%20L2.35587771,23.6920091%20L2.51668763,23.7036311%20L2.67682209,23.6852182%20L2.83077401,23.637381%20L2.97317191,23.5618407%20L3.09908349,23.4611657%20L3.20411665,23.3388692%20L3.28462306,23.1992081%20L3.33783222,23.0470117%20L3.36185233,22.8876213%20L3.35590642,22.7265411%20L3.32012956,22.5693458%20L3.26867711,22.4457658%20L3.2514138,22.4119152%20L3.173306,22.2542131%20L3.09874551,22.0989775%20L3.02459063,21.939518%20L2.95384764,21.7824922%20L2.88357772,21.6212424%20L2.81628085,21.4615805%20L2.74942298,21.2973591%20L2.68736249,21.1393871%20L2.62503182,20.9749287%20L2.56628202,20.8140162%20L2.50797157,20.648072%20L2.45172173,20.4815517%20L2.3985802,20.3176001%20L2.34665484,20.1504053%20L2.29675637,19.982669%20L2.24871613,19.8135161%20L2.20378386,19.6475702%20L2.1606422,19.4803753%20L2.11831126,19.3075727%20L2.07915608,19.138688%20L2.04172388,18.967878%20L2.00628483,18.7959524%20L1.97334576,18.6257167%20L1.94216356,18.4532514%20L1.91290688,18.2794006%20L1.88635307,18.1086927%20L1.8614207,17.93447%20L1.83868438,17.7602819%20L1.81800885,17.5849799%20L1.7995292,17.409946%20L1.78344816,17.2371434%20L1.76922518,17.0608934%20L1.75719826,16.8848476%20L1.74733349,16.708295%20L1.7396646,16.5316057%20L1.73415786,16.3546138%20L1.730847,16.1773848%20L1.72976592,15.9999189%20L1.73057716,15.865933%20L1.71655691,15.7053266%20L1.67297607,15.5501245%20L1.60132099,15.4057334%20L1.50412554,15.2771191%20L1.38476804,15.1687751%20L1.24737008,15.0844512%20L1.09669511,15.0271205%20L0.93801362,14.9987422%20L0.9380021,14.9987422%20Z%20M27.7364815,17.0226839%20L27.5753338,17.0304555%20L27.4185778,17.0679888%20L27.2714512,17.1339344%20L27.1391535,17.2260628%20L27.0262494,17.341129%20L26.9366551,17.4751149%20L26.8735133,17.6234593%20L26.843648,17.749978%20L26.8434058,17.7499434%20L26.8428004,17.7536588%20L26.8428004,17.753728%20L26.8428004,17.7541674%20L26.8203002,17.887816%20L26.7961464,18.0214975%20L26.7704029,18.1543677%20L26.7437479,18.2837249%20L26.7147613,18.4158531%20L26.684863,18.5449405%20L26.6519568,18.6793311%20L26.6190523,18.8068652%20L26.5837141,18.9372014%20L26.5473295,19.0652752%20L26.5088501,19.1947344%20L26.4696615,19.3209833%20L26.4280738,19.4492611%20L26.3849311,19.5770633%20L26.3408094,19.7026376%20L26.2945947,19.8292583%20L26.2468908,19.9551699%20L26.1978047,20.0800004%20L26.1469942,20.2048309%20L26.0956422,20.3266552%20L26.0418254,20.4501331%20L25.9870953,20.5716529%20L25.9313862,20.6914845%20L25.8726033,20.8138813%20L25.813414,20.9334085%20L25.7516578,21.0543869%20L25.6894951,21.1725632%20L25.6265228,21.2888125%20L25.5603403,21.4075959%20L25.493855,21.5235063%20L25.4254774,21.6394183%20L25.3561536,21.7537079%20L25.2853769,21.8672209%20L25.2131801,21.9799572%20L25.1391601,22.0924565%20L25.0633499,22.204686%20L24.9857148,22.316611%20L24.90923,22.4240769%20L24.8287911,22.5341771%20L24.7483175,22.6414734%20L24.6640957,22.7509665%20L24.6198044,22.8071149%20L24.5322045,22.9424189%20L24.4711903,23.0916402%20L24.4389621,23.2496122%20L24.4366304,23.4107945%20L24.4642316,23.5696106%20L24.5208194,23.7205564%20L24.6044341,23.8583944%20L24.7121698,23.9782918%20L24.840311,24.0761282%20L24.9843639,24.14846%20L25.1393642,24.1928169%20L25.2998685,24.2076493%20L25.4603745,24.1924122%20L25.6152399,24.1476833%20L25.7591233,24.0749797%20L25.8869946,23.9768388%20L25.977805,23.8784609%20L26.0264534,23.8168067%20L26.0297312,23.8126173%20L26.0329744,23.8083934%20L26.121825,23.6928878%20L26.1250682,23.6886984%20L26.128244,23.6844416%20L26.2156088,23.5679552%20L26.2187828,23.5636984%20L26.2219257,23.5594087%20L26.30777,23.4419433%20L26.3108783,23.4376519%20L26.3139866,23.4333276%20L26.3983105,23.3148832%20L26.4013842,23.3105589%20L26.4043905,23.3062%20L26.4872286,23.1868095%20L26.4902348,23.1824506%20L26.4932082,23.1780588%20L26.5744913,23.057755%20L26.5774647,23.0533632%20L26.5804035,23.0489386%20L26.6601661,22.9277232%20L26.663072,22.9232968%20L26.6659105,22.9188376%20L26.7441527,22.7967089%20L26.747024,22.7922497%20L26.7498279,22.7877576%20L26.8265168,22.6647502%20L26.8293207,22.6602582%20L26.8320571,22.6557315%20L26.9071927,22.5318454%20L26.9099292,22.5273187%20L26.912631,22.5227592%20L26.9862462,22.398029%20L26.9889151,22.3934677%20L26.9915495,22.3888736%20L27.0635768,22.263301%20L27.0662112,22.2587052%20L27.0687798,22.254111%20L27.1392521,22.1276926%20L27.141819,22.1230639%20L27.1443531,22.1184369%20L27.2132375,21.9912073%20L27.2157715,21.9865785%20L27.2182035,21.9818823%20L27.2855346,21.8538761%20L27.2880012,21.8492145%20L27.2904003,21.8445183%20L27.3561436,21.7157025%20L27.358541,21.7110063%20L27.3608726,21.7062755%20L27.425028,21.5767159%20L27.4273925,21.5719869%20L27.4296567,21.5672561%20L27.4922224,21.4369199%20L27.4944866,21.4321891%20L27.4967163,21.4273926%20L27.5576958,21.2963455%20L27.5598926,21.2915818%20L27.5620547,21.2867507%20L27.6214118,21.1549944%20L27.623574,21.1501979%20L27.6257016,21.1453668%20L27.683405,21.0129013%20L27.6855326,21.0080355%20L27.6875598,21.0032044%20L27.7436754,20.8700298%20L27.7457355,20.8651658%20L27.7477282,20.8603001%20L27.8021885,20.7264491%20L27.8041811,20.7215851%20L27.8061063,20.7166519%20L27.8589787,20.5821592%20L27.8609038,20.5772606%20L27.8627616,20.5723292%20L27.9139786,20.4371947%20L27.9158363,20.4322616%20L27.9176594,20.4273301%20L27.9672211,20.291554%20L27.9690114,20.2865879%20L27.9707688,20.2816202%20L28.0186734,20.1452369%20L28.0204308,20.1402708%20L28.0221259,20.1352702%20L28.0683752,19.998278%20L28.0700703,19.993312%20L28.0716963,19.9882785%20L28.116292,19.8507103%20L28.1179525,19.8457114%20L28.1195092,19.8406434%20L28.162415,19.7025355%20L28.1640063,19.697502%20L28.1654939,19.6924357%20L28.2067443,19.5537536%20L28.2082318,19.5486855%20L28.2096848,19.5436174%20L28.2492452,19.4043956%20L28.2506982,19.3992947%20L28.252082,19.3941937%20L28.2899196,19.2544634%20L28.2913034,19.2493624%20L28.292618,19.2442615%20L28.3288003,19.1039915%20L28.3301149,19.0988906%20L28.3313257,19.093755%20L28.3657852,18.9530128%20L28.3670306,18.9478773%20L28.3682414,18.9427088%20L28.4009781,18.8014927%20L28.4021889,18.7963243%20L28.4032959,18.7911559%20L28.4343427,18.6495004%20L28.435467,18.6442974%20L28.4365394,18.639129%20L28.4658634,18.4970013%20L28.4669185,18.4917983%20L28.4679391,18.486597%20L28.4955402,18.3440628%20L28.4965607,18.3388269%20L28.4975121,18.3336239%20L28.5233576,18.1906521%20L28.5243089,18.1854162%20L28.5251911,18.1801786%20L28.5493138,18.0368349%20L28.5501959,18.0315991%20L28.5510089,18.0263286%20L28.5520813,18.0196398%20L28.5619131,17.8587273%20L28.5417099,17.6987955%20L28.4921828,17.5453848%20L28.4150217,17.4038314%20L28.3129612,17.2790683%20L28.1895162,17.1753871%20L28.0489418,17.096434%20L27.8962074,17.0449489%20L27.7365109,17.0226839%20L27.7364815,17.0226839%20Z%20M6.84064123,22.7102229%20L6.68121648,22.7340757%20L6.52895363,22.7871159%20L6.38922469,22.8674528%20L6.26679279,22.97235%20L6.16598257,23.0981267%20L6.09023964,23.2404568%20L6.04226687,23.3943414%20L6.02365213,23.5544755%20L6.03510478,23.7152859%20L6.07618566,23.8711632%20L6.14547586,24.0167037%20L6.22270514,24.1260272%20L6.26229966,24.1737641%20L6.26571171,24.1778514%20L6.26919139,24.1819387%20L6.36392077,24.2932895%20L6.36740045,24.2973786%20L6.37091386,24.3013985%20L6.46712959,24.411701%20L6.47064318,24.4157226%20L6.47419049,24.4197079%20L6.57185884,24.5289311%20L6.57543988,24.5329164%20L6.57905483,24.5368706%20L6.6781758,24.6449781%20L6.68179074,24.6489305%20L6.68547315,24.6528484%20L6.78604691,24.759842%20L6.78969558,24.7637598%20L6.79341172,24.7676119%20L6.89543827,24.8734898%20L6.89915458,24.8773419%20L6.90293817,24.8811594%20L7.00638362,24.9858871%20L7.01013365,24.9897063%20L7.01395115,24.9934892%20L7.1186804,25.0969352%20L7.12249789,25.1007181%20L7.12638302,25.1044353%20L7.23226097,25.2064266%20L7.23611219,25.2101437%20L7.24003122,25.2138263%20L7.34702381,25.3143992%20L7.35094284,25.3180489%20L7.35486169,25.3216969%20L7.46300299,25.4208186%20L7.46695575,25.4244337%20L7.47094224,25.4279796%20L7.58016461,25.5256829%20L7.58415109,25.5292306%20L7.58817131,25.5327436%20L7.69847476,25.6289593%20L7.70249497,25.6324724%20L7.70654909,25.635918%20L7.81793362,25.7306808%20L7.82198774,25.7341281%20L7.82610932,25.7375391%20L7.93854118,25.8308507%20L7.94262903,25.8342288%20L7.94678434,25.8376069%20L8.06026355,25.9293963%20L8.06438513,25.9327416%20L8.06857435,25.9360523%20L8.183067,26.0263887%20L8.18725604,26.0296665%20L8.19144525,26.0329098%20L8.30695153,26.1217603%20L8.31117447,26.1250036%20L8.31543114,26.1281793%20L8.43191712,26.2155095%20L8.43617379,26.2187198%20L8.44046437,26.221861%20L8.5579299,26.3076725%20L8.56222047,26.3108137%20L8.56654477,26.3138874%20L8.68499019,26.3982113%20L8.68931449,26.4013196%20L8.69367252,26.4043276%20L8.81303002,26.487131%20L8.81738805,26.4901702%20L8.82177999,26.4931435%20L8.9421172,26.5744266%20L8.94650913,26.5774%20L8.9509348,26.5803059%20L9.07215036,26.6600685%20L9.07657602,26.6630073%20L9.08103542,26.6658458%20L9.20316324,26.744088%20L9.20762263,26.7469265%20L9.21211575,26.7497304%20L9.33512192,26.8264193%20L9.33961522,26.8292232%20L9.34414225,26.8319942%20L9.46802677,26.9071281%20L9.4725538,26.9098645%20L9.47711455,26.912568%20L9.6018437,26.9861486%20L9.60640445,26.9888505%20L9.61096521,26.9914866%20L9.73657271,27.0635121%20L9.74113346,27.0661482%20L9.74576185,27.0687151%20L9.87218007,27.1391874%20L9.87677473,27.1417561%20L9.88143684,27.1442555%20L10.008666,27.2131745%20L10.0132942,27.215674%20L10.0179565,27.2181406%20L10.1459963,27.2854717%20L10.1506584,27.2879365%20L10.1553544,27.2903356%20L10.2841375,27.3560789%20L10.2888334,27.358478%20L10.2935631,27.3608079%20L10.4231232,27.4249633%20L10.427853,27.427295%20L10.4326164,27.429592%20L10.5629199,27.4921595%20L10.5676834,27.494422%20L10.5724806,27.4966516%20L10.7035272,27.5575983%20L10.7082907,27.5598279%20L10.7130881,27.5619901%20L10.844878,27.6213472%20L10.8496752,27.6235093%20L10.8545063,27.625604%20L10.9869718,27.6833404%20L10.9918029,27.6854351%20L10.9966677,27.6874952%20L11.1298428,27.7436108%20L11.1346737,27.745638%20L11.1395724,27.7476306%20L11.2733892,27.8021238%20L11.2782879,27.8041164%20L11.2831865,27.8060433%20L11.412071,27.8566844%20L11.5669351,27.9014132%20L11.727441,27.9165829%20L11.887947,27.9017522%20L12.0429462,27.8573607%20L12.1869658,27.7849961%20L12.3151069,27.687125%20L12.4228092,27.5672259%20L12.5064236,27.4293897%20L12.5629774,27.278411%20L12.5905785,27.1195932%20L12.5881799,26.9584126%20L12.5559166,26.8004735%20L12.4949033,26.6512504%20L12.4072687,26.5159482%20L12.296053,26.3992595%20L12.1651078,26.3052388%20L12.0446692,26.2467932%20L11.9207171,26.1981119%20L11.7950082,26.1468949%20L11.6731846,26.0955775%20L11.5509892,26.0423021%20L11.4304493,25.9880442%20L11.3051121,25.9297354%20L11.1860248,25.8725733%20L11.0664308,25.8133493%20L10.9464991,25.7521345%20L10.8283577,25.6900064%20L10.7109934,25.6264582%20L10.5923115,25.5602773%20L10.4763663,25.4937903%20L10.3612317,25.425852%20L10.2461309,25.3560543%20L10.1326856,25.2853451%20L10.0180239,25.2118665%20L9.90616632,25.1382859%20L9.79518724,25.0632869%20L9.68505262,24.9869353%20L9.57410727,24.9079148%20L9.46407401,24.8275104%20L9.35542591,24.746025%20L9.24893996,24.6640656%20L9.14468379,24.5818018%20L9.03880584,24.4961599%20L8.93367132,24.4088972%20L8.8326582,24.3229525%20L8.72823321,24.2319052%20L8.62765928,24.1419061%20L8.52823422,24.0507913%20L8.42833591,23.9568726%20L8.33097164,23.8630889%20L8.23188423,23.7652178%20L8.13813473,23.6702872%20L8.04164882,23.570152%20L7.94921685,23.4717741%20L7.85661589,23.3707601%20L7.76803532,23.2717076%20L7.67803568,23.1685315%20L7.58965783,23.0646479%20L7.55388098,23.0215398%20L7.43982749,22.9075875%20L7.30661874,22.8168118%20L7.15888292,22.7523174%20L7.0017215,22.716372%20L6.84064123,22.7102229%20L6.84064123,22.7102229%20Z%20M21.9041805,25.4112463%20L21.7435724,25.4251429%20L21.5883369,25.4685208%20L21.4674259,25.5259527%20L21.4076295,25.5602099%20L21.2888461,25.6264582%20L21.171481,25.6900064%20L21.0533393,25.7521345%20L20.9334091,25.8133493%20L20.8138145,25.8725733%20L20.6947267,25.9297354%20L20.5693893,25.9880442%20L20.4488503,26.0423021%20L20.3266541,26.0955775%20L20.2048316,26.1468949%20L20.0791224,26.1980774%20L19.9537176,26.2473675%20L19.8300685,26.2942256%20L19.7026037,26.3407465%20L19.5778752,26.3845638%20L19.4492272,26.4280092%20L19.3234505,26.4687856%20L19.1921664,26.5095621%20L19.064532,26.5475018%20L18.9378784,26.5834817%20L18.8075751,26.6187853%20L18.6767978,26.652501%20L18.5480495,26.6840217%20L18.4157517,26.7147312%20L18.2863271,26.7430744%20L18.1512947,26.7709471%20L18.0184573,26.7966214%20L17.8882889,26.8201698%20L17.7573092,26.8421961%20L17.6207564,26.8634457%20L17.489135,26.8822633%20L17.3545419,26.899865%20L17.2225141,26.9154394%20L17.0851171,26.9299656%20L16.9497803,26.9425337%20L16.8171107,26.9532424%20L16.6786656,26.9626677%20L16.5428565,26.9702369%20L16.4093099,26.9760125%20L16.2730269,26.9802693%20L16.1324871,26.9828708%20L15.9722838,27.0008772%20L15.8181968,27.0483096%20L15.6756315,27.1235127%20L15.5494488,27.2238504%20L15.4441116,27.3458753%20L15.3632336,27.485334%20L15.3096528,27.6373609%20L15.2851935,27.7967184%20L15.2907677,27.9578333%20L15.3261392,28.1150943%20L15.3900578,28.2631014%20L15.4803613,28.3966479%20L15.5938399,28.511107%20L15.7266444,28.6025245%20L15.8740754,28.6677281%20L16.0310338,28.7044172%20L16.1646478,28.7122874%20L16.3102229,28.7095856%20L16.3155591,28.7094472%20L16.3209316,28.7092742%20L16.4677209,28.7047476%20L16.4730588,28.7045746%20L16.4784313,28.7043394%20L16.6249508,28.6979878%20L16.6303216,28.6977508%20L16.6356595,28.6974464%20L16.781942,28.6892718%20L16.7872799,28.6889673%20L16.7926178,28.68863%20L16.9386651,28.6786634%20L16.9439684,28.6782915%20L16.9493064,28.6778521%20L17.0950492,28.6660952%20L17.1003871,28.6656905%20L17.1056904,28.6651837%20L17.2511634,28.6516365%20L17.2564668,28.6511625%20L17.2617718,28.6505883%20L17.4069058,28.6352854%20L17.4122091,28.6347112%20L17.4175142,28.6341023%20L17.5623108,28.6170075%20L17.5676142,28.6164003%20L17.5728846,28.6156911%20L17.7173769,28.5968389%20L17.7226473,28.5961643%20L17.7279178,28.595386%20L17.8720381,28.5747781%20L17.8773086,28.574036%20L17.8825445,28.5732248%20L18.0263275,28.5508595%20L18.0315651,28.5500482%20L18.036801,28.5491713%20L18.1801793,28.5250486%20L18.1854152,28.5241699%20L18.1906182,28.5232255%20L18.33359,28.4973471%20L18.3388276,28.4964338%20L18.3440289,28.4954202%20L18.4865959,28.467819%20L18.4917989,28.4668054%20L18.4969673,28.4657589%20L18.6390951,28.436435%20L18.6442981,28.4353539%20L18.6494665,28.4342382%20L18.7911548,28.4031915%20L18.796325,28.4020429%20L18.8014588,28.4008598%20L18.9426749,28.3680902%20L18.9478433,28.3669071%20L18.9529789,28.3656582%20L19.0937211,28.3311987%20L19.0988566,28.3299482%20L19.1039576,28.3285972%20L19.2442276,28.2924495%20L19.2493285,28.2911315%20L19.2544295,28.289746%20L19.3941927,28.2518755%20L19.3992936,28.25049%20L19.4043617,28.2490699%20L19.5435835,28.2095094%20L19.5486516,28.2080564%20L19.5537196,28.2065706%20L19.6924018,28.1653202%20L19.6974681,28.1638015%20L19.7025016,28.1622465%20L19.840644,28.1193408%20L19.8456775,28.1177529%20L19.8506764,28.1161321%20L19.9882446,28.0715711%20L19.9932781,28.0699157%20L19.998277,28.0682275%20L20.1352363,28.0219765%20L20.1402369,28.0202883%20L20.1452358,28.0185655%20L20.281588,27.9706591%20L20.2865869,27.9689035%20L20.29152,27.9670786%20L20.4272962,27.9175187%20L20.4322623,27.9157284%20L20.4371937,27.9138361%20L20.5723299,27.8626536%20L20.5772613,27.8607613%20L20.5821599,27.8588361%20L20.7166526,27.8059984%20L20.7215512,27.8040732%20L20.7264497,27.8020788%20L20.8602662,27.7475874%20L20.8651647,27.745593%20L20.8699958,27.7435658%20L21.0031722,27.6874519%20L21.0080362,27.6853918%20L21.0128673,27.6832971%20L21.1453328,27.6255608%20L21.1501639,27.6234661%20L21.1549605,27.6213039%20L21.2867514,27.5619451%20L21.2915479,27.5597829%20L21.2963115,27.5575533%20L21.4273587,27.4966083%20L21.4321552,27.4943787%20L21.4369188,27.4921145%20L21.5672222,27.4295471%20L21.5719858,27.42725%20L21.5767166,27.4249201%20L21.7062762,27.3607647%20L21.7110052,27.358433%20L21.7157014,27.3560339%20L21.8444843,27.2902924%20L21.8491805,27.2878933%20L21.8538421,27.2854267%20L21.981883,27.2180956%20L21.9865446,27.215629%20L21.9911733,27.2131295%20L22.118403,27.1442105%20L22.1230646,27.1417111%20L22.1276587,27.1391442%20L22.2540771,27.0686719%20L22.2587058,27.0661033%20L22.2632671,27.0634689%20L22.328097,27.026273%20L22.4598188,26.9334008%20L22.5720483,26.8176582%20L22.6608314,26.6830981%20L22.723129,26.5344164%20L22.7567444,26.3767489%20L22.7604944,26.2156012%20L22.7342771,26.0565481%20L22.6790073,25.9050955%20L22.5965757,25.76655%20L22.4898865,25.6457048%20L22.3625911,25.5467872%20L22.2191782,25.473172%20L22.0645844,25.4274624%20L21.9041805,25.4112463%20L21.9041805,25.4112463%20Z%20M6.32983299,26.8178035%20L6.17037433,26.8414869%20L6.01807793,26.8943247%20L5.87821372,26.9745266%20L5.75571436,27.0792889%20L5.65473515,27.2049653%20L5.57885713,27.3471933%20L5.53071536,27.5010433%20L5.5119318,27.6611792%20L5.52318173,27.8219879%20L5.56412734,27.9778998%20L5.63324873,28.1235405%20L5.72821439,28.253811%20L5.82429503,28.3469859%20L5.85571386,28.3730338%20L5.85980153,28.3764448%20L5.86395702,28.3797901%20L6.00888861,28.497053%20L6.01304409,28.5004312%20L6.0172333,28.5037073%20L6.16348243,28.6190797%20L6.16763791,28.6223904%20L6.17186085,28.6256336%20L6.31939395,28.7391119%20L6.32361689,28.7423552%20L6.32787356,28.7455309%20L6.47665655,28.8571187%20L6.4809134,28.8602945%20L6.4852038,28.8634356%20L6.63527076,28.9730636%20L6.63956116,28.9762065%20L6.64388546,28.9792802%20L6.79516859,29.0870159%20L6.7994929,29.0900896%20L6.80385093,29.0931305%20L6.95635023,29.1989081%20L6.96067453,29.2019144%20L6.96510019,29.2048878%20L7.11878176,29.3087385%20L7.12317369,29.3117101%20L7.12759936,29.3146161%20L7.28242963,29.416507%20L7.28685529,29.4194129%20L7.29131468,29.4222843%20L7.44732739,29.5222172%20L7.45178679,29.5250539%20L7.45628008,29.5278578%20L7.6134076,29.6258309%20L7.61790089,29.6286348%20L7.62242792,29.6313712%20L7.78067041,29.7273846%20L7.78519726,29.730121%20L7.78975819,29.73279%20L7.94908158,29.826809%20L7.95364251,29.8295125%20L7.958237,29.8321469%20L8.11864164,29.9241404%20L8.12323612,29.9267747%20L8.12783078,29.9293434%20L8.2893165,30.0193753%20L8.29394471,30.021944%20L8.2985731,30.024478%20L8.46107226,30.1124845%20L8.46573438,30.1149839%20L8.47039667,30.1174505%20L8.63390928,30.2034626%20L8.6386053,30.2058946%20L8.64330114,30.2082937%20L8.80782736,30.2922803%20L8.81252321,30.2946795%20L8.81725296,30.2970094%20L8.98272517,30.3789688%20L8.98745474,30.3813004%20L8.99221822,30.3835975%20L9.15867014,30.463495%20L9.16343362,30.4657921%20L9.1681971,30.4680217%20L9.335595,30.5458592%20L9.34039221,30.5480905%20L9.34518942,30.5502527%20L9.51349941,30.6260629%20L9.51833052,30.628225%20L9.52316163,30.6303526%20L9.69234997,30.7040681%20L9.69721481,30.7061974%20L9.70204575,30.7082246%20L9.87214634,30.7799129%20L9.87701118,30.7819402%20L9.88187602,30.7839328%20L10.0528548,30.8535281%20L10.0577196,30.8555208%20L10.0626521,30.8574459%20L10.2344418,30.9249466%20L10.2393403,30.9269046%20L10.2442728,30.9287641%20L10.4169071,30.9941683%20L10.4218057,30.996026%20L10.4267719,30.9978508%20L10.6001832,31.0611621%20L10.6051494,31.0629524%20L10.6101156,31.064708%20L10.7843377,31.1259246%20L10.7893039,31.1276474%20L10.7943039,31.1293373%20L10.9692691,31.1884246%20L10.9742691,31.1901128%20L10.9793029,31.1917353%20L11.1550114,31.248695%20L11.1600452,31.2503157%20L11.1650791,31.2518708%20L11.341497,31.3067012%20L11.3465645,31.3082545%20L11.3515984,31.3097749%20L11.5287597,31.3624432%20L11.5338271,31.3639636%20L11.5388946,31.3653837%20L11.7167316,31.4159227%20L11.721833,31.4173757%20L11.7269343,31.4187612%20L11.9054132,31.4671051%20L11.9105145,31.4684906%20L11.9156495,31.4698087%20L12.0947702,31.5160234%20L12.0999054,31.5173414%20L12.1050405,31.518592%20L12.2848368,31.5626117%20L12.289972,31.5638623%20L12.295107,31.5650783%20L12.4755116,31.6069012%20L12.4806468,31.6080843%20L12.4858155,31.6092329%20L12.6446323,31.6440297%20L12.8046654,31.6636914%20L12.9655092,31.65332%20L13.1216907,31.6132873%20L13.2677036,31.5449772%20L13.39848,31.4507195%20L13.5095267,31.333863%20L13.5969248,31.1984241%20L13.6577015,31.0491008%20L13.6896946,30.8910942%20L13.6917893,30.7299136%20L13.6639853,30.5711304%20L13.6071613,30.420252%20L13.5233103,30.2825507%20L13.4154055,30.1628211%20L13.2871292,30.065187%20L13.1429407,29.9930594%20L13.0147995,29.9543759%20L12.8611178,29.9206947%20L12.6928754,29.8817086%20L12.5219641,29.8398493%20L12.3529446,29.796269%20L12.1838576,29.7504591%20L12.0172031,29.703127%20L11.8494337,29.6532297%20L11.6839954,29.6018103%20L11.5182528,29.5481284%20L11.3517672,29.4919125%20L11.1891667,29.434785%20L11.0239648,29.3744471%20L10.8628508,29.3134001%20L10.6992029,29.2491098%20L10.5382917,29.1836035%20L10.3786303,29.116307%20L10.217381,29.0460371%20L10.0603549,28.9752932%20L9.90309209,28.902152%20L9.74559286,28.8265441%20L9.59008696,28.7495508%20L9.43657421,28.6712065%20L9.28079796,28.5893164%20L9.12816357,28.5066478%20L8.97434674,28.4209384%20L8.82370568,28.3345198%20L8.67188202,28.2449254%20L8.52445045,28.1555006%20L8.37684973,28.0634397%20L8.22830319,27.968305%20L8.08286478,27.8726307%20L7.93854118,27.7750969%20L7.79350805,27.6744548%20L7.65138051,27.573273%20L7.51043523,27.4702681%20L7.37077374,27.3655716%20L7.23063936,27.2578031%20L7.09202522,27.1484103%20L6.95601224,27.0383776%20L6.92881653,27.0158099%20L6.79567523,26.9248992%20L6.64800704,26.8602371%20L6.49091326,26.8241222%20L6.32983299,26.8178035%20L6.32983299,26.8178035%20Z%20M25.5452087,26.905068%20L25.3842979,26.9145607%20L25.2279138,26.9537164%20L25.0815293,27.0212153%20L24.9712595,27.0970929%20L24.9078134,27.1484103%20L24.7692005,27.2578031%20L24.6290654,27.3655716%20L24.4894042,27.4702681%20L24.3484579,27.573273%20L24.2063302,27.6744548%20L24.0612983,27.7750969%20L23.9169738,27.8726307%20L23.7715354,27.968305%20L23.6229887,28.0634397%20L23.4753881,28.1555006%20L23.3279571,28.2449254%20L23.1761343,28.3345198%20L23.0254929,28.4209384%20L22.8716757,28.5066478%20L22.7190417,28.5893164%20L22.5632647,28.6712065%20L22.409752,28.7495508%20L22.2542466,28.8265441%20L22.0967469,28.902152%20L21.9394841,28.9752932%20L21.7824583,29.0460371%20L21.6212085,29.116307%20L21.4615483,29.1836035%20L21.3006358,29.2491098%20L21.1369887,29.3134001%20L20.9758738,29.3744471%20L20.8106716,29.434785%20L20.6480726,29.4919125%20L20.481587,29.5481284%20L20.3158434,29.6018103%20L20.1504059,29.6532297%20L19.9826368,29.703127%20L19.8159817,29.7504591%20L19.6468945,29.796269%20L19.4778748,29.8398493%20L19.3069646,29.8817086%20L19.1386869,29.9207276%20L18.9698713,29.9577212%20L18.8589599,29.9805933%20L18.7048054,30.0277212%20L18.5620688,30.1026528%20L18.4357179,30.202788%20L18.3301444,30.3246106%20L18.2489963,30.4639015%20L18.1951448,30.6158593%20L18.170415,30.7751493%20L18.1756526,30.9362641%20L18.2107193,31.0936272%20L18.2744007,31.2417346%20L18.3644344,31.3754507%20L18.4777103,31.4901122%20L18.6103125,31.5818012%20L18.7576415,31.64724%20L18.9145341,31.6842318%20L19.0755798,31.6914621%20L19.2083826,31.6746388%20L19.3226739,31.6510904%20L19.3278752,31.6500093%20L19.3330453,31.6488608%20L19.5140243,31.6092329%20L19.5191927,31.6080843%20L19.5243282,31.6069012%20L19.7047312,31.5650783%20L19.7098667,31.5638623%20L19.7150023,31.5626117%20L19.8947981,31.518592%20L19.8999337,31.5173414%20L19.9050692,31.5160234%20L20.0841888,31.4698087%20L20.0893243,31.4684561%20L20.0944252,31.4670723%20L20.2729048,31.4187266%20L20.2780057,31.4173428%20L20.2831067,31.4158898%20L20.4609445,31.3653491%20L20.4660126,31.3639307%20L20.4710789,31.3624103%20L20.6482404,31.309742%20L20.6532739,31.3082216%20L20.658342,31.3066666%20L20.8347597,31.2518362%20L20.8397932,31.2502829%20L20.8448284,31.2486604%20L21.0205369,31.1917007%20L21.0255704,31.1901128%20L21.0305693,31.18839%20L21.2055358,31.1293027%20L21.2105347,31.1276145%20L21.2155007,31.1258917%20L21.3897234,31.0646752%20L21.3946894,31.0629178%20L21.3996554,31.0611275%20L21.5730669,30.997818%20L21.5780329,30.9959931%20L21.5829315,30.9941354%20L21.7555663,30.9287295%20L21.7604995,30.9268717%20L21.765398,30.924912%20L21.937187,30.8574131%20L21.9421202,30.8554862%20L21.9469842,30.8534935%20L22.1179636,30.7838999%20L22.1228276,30.7819056%20L22.1276933,30.7798783%20L22.2977941,30.70819%20L22.3026252,30.7061628%20L22.3074892,30.7040352%20L22.4766784,30.6303197%20L22.4815095,30.6281904%20L22.4863388,30.6260283%20L22.6546494,30.5502181%20L22.6594476,30.5480559%20L22.6642441,30.5458263%20L22.8316413,30.4679889%20L22.836405,30.4657593%20L22.8411686,30.4634622%20L23.0076214,30.3835629%20L23.0123851,30.3812658%20L23.0171141,30.3789359%20L23.1825862,30.2969765%20L23.1873152,30.2946449%20L23.1920114,30.2922457%20L23.3565373,30.2082609%20L23.3612335,30.2058617%20L23.3659297,30.2034298%20L23.5294419,30.1174159%20L23.5341053,30.1149493%20L23.5387669,30.1124499%20L23.7012655,30.0244434%20L23.7058942,30.0219094%20L23.710523,30.0193425%20L23.872008,29.9293088%20L23.8766021,29.9267419%20L23.881198,29.9241058%20L24.0416019,29.832114%20L24.0461961,29.8294779%20L24.0507574,29.8267761%20L24.2100802,29.7327554%20L24.2146415,29.7300864%20L24.2191682,29.72735%20L24.3774117,29.6313384%20L24.3819384,29.6286002%20L24.3864322,29.6257963%20L24.5435583,29.5278249%20L24.5480522,29.5250211%20L24.5525114,29.5221826%20L24.7085253,29.4222514%20L24.7129845,29.4193784%20L24.7174091,29.4164741%20L24.8722399,29.3145832%20L24.8766663,29.3116773%20L24.8810581,29.3087039%20L25.0347386,29.2048532%20L25.0391649,29.2018798%20L25.0434892,29.1988735%20L25.1959884,29.0930976%20L25.2003455,29.0900568%20L25.2046698,29.086983%20L25.355953,28.9792456%20L25.3602773,28.9761719%20L25.3645687,28.9730308%20L25.5146358,28.8634028%20L25.5189256,28.8602599%20L25.5231824,28.8570841%20L25.6719661,28.7454981%20L25.6762229,28.7423223%20L25.6804452,28.7390791%20L25.8279783,28.625599%20L25.8322005,28.6223558%20L25.836357,28.6190451%20L25.9826067,28.5036744%20L25.9867943,28.5003966%20L25.9909509,28.4970184%20L26.059261,28.4417487%20L26.1745642,28.3291144%20L26.266997,28.1970537%20L26.3332799,28.0500949%20L26.371185,27.8934063%20L26.3793268,27.7323935%20L26.3574355,27.5726988%20L26.3062859,27.4198278%20L26.2276718,27.2790855%20L26.124295,27.1553707%20L25.9997672,27.0530058%20L25.8583833,26.9755403%20L25.7051075,26.9256413%20L25.5452087,26.905068%20L25.5452087,26.905068%20Z'%20transform='translate(0%20.309)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchNonInterruptingEscalation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M16.0124198,8.91135521%20C14.3390213,13.5680716%2013.2768954,18.4185036%2011.6034878,23.0752171%20C13.1387385,21.5489938%2014.4772558,19.839228%2016.0124198,18.3129221%20C17.4820638,19.9003538%2018.9517079,21.4877854%2020.4213519,23.0752171%20C18.9237397,18.3626654%2017.5100303,13.6239064%2016.0124198,8.91135521%20Z%20M16.0444667,11.8419291%20C16.8666859,14.4292196%2017.642836,17.030887%2018.4650569,19.6181769%20C17.6581929,18.7466447%2016.8513307,17.8751122%2016.0444667,17.0035799%20C15.3622737,17.6018079%2013.5906867,19.8902001%2013.7043066,19.3934054%20C14.576246,16.9051721%2015.1531276,14.3237824%2016.0444667,11.8419291%20Z%20M16.0124198,0%20C14.5636987,0.0207684905%2013.0826288,0.156985298%2011.7097152,0.627831403%20C10.8578501,1.07485233%2011.4545148,2.49127171%2012.3706271,2.20174994%20C14.6249715,1.59380403%2017.0181941,1.59499271%2019.2923056,2.09416059%20C20.2260085,2.16942797%2020.5198958,0.718081204%2019.6304725,0.424196491%20C18.4512612,0.128147598%2017.2270737,0.00557911446%2016.0124198,0%20Z%20M25.024187,2.93408756%20C24.111481,2.82953881%2023.7518245,4.1920577%2024.5703436,4.58169577%20C26.4035188,5.94125619%2027.862571,7.76666539%2028.8805173,9.80241074%20C29.4055865,10.5781649%2030.7219968,9.9000921%2030.3952431,9.02220267%20C29.2589092,6.63656413%2027.4995724,4.53264061%2025.3344617,3.01587705%20C25.2349927,2.97173154%2025.1320917,2.94622993%2025.024187,2.93408756%20L25.024187,2.93408756%20Z%20M6.6503957,3.27796126%20C5.88841121,3.36661745%205.41032184,4.08702259%204.84488132,4.54468495%20C3.38067707,5.98370331%202.16287748,7.69629953%201.37105767,9.5935809%20C1.10499193,10.4917357%202.46470968,11.0783941%202.93549233,10.2685635%20C3.90059026,8.0987752%205.40305073,6.18412126%207.26189192,4.70907449%20C7.73759321,4.19422897%207.35167403,3.29037871%206.6503957,3.27796126%20L6.6503957,3.27796126%20Z%20M16.0124198,3.28508661%20C15.3139133,3.35125396%2014.3231087,3.12417114%2013.9785906,3.91993237%20C13.6971613,4.65275617%2014.5142774,5.27775047%2015.195572,5.04452073%20C17.0021888,4.89829496%2018.8268884,5.24771786%2020.4894707,5.95176985%20C21.390793,6.20686339%2021.9607901,4.84013042%2021.1453054,4.37923053%20C19.5450498,3.6437209%2017.7709959,3.29025302%2016.0124198,3.28508661%20Z%20M10.5332681,4.64977539%20C9.69786681,4.80075797%209.01625646,5.40964739%208.32268996,5.87567185%20C7.11977717,6.81528477%206.00490644,7.93717954%205.2663569,9.27836232%20C4.93549957,10.1817089%206.32885194,10.8302763%206.81313042,10.0005013%20C7.85797279,8.34494801%209.40851655,7.0758983%2011.0975921,6.12827859%20C11.6426196,5.6294164%2011.2692555,4.66508891%2010.5332681,4.64977539%20L10.5332681,4.64977539%20Z%20M24.4360597,6.76515764%20C23.5613362,6.69543375%2023.2155618,7.93794341%2023.9346534,8.39223095%20C25.2601358,9.7325909%2026.123377,11.4535264%2026.6828774,13.2321458%20C27.1505682,14.0728429%2028.5519188,13.4417262%2028.2401831,12.5329701%20C27.6362769,10.4154534%2026.4889674,8.43581869%2024.8888449,6.91769406%20C24.753316,6.82784228%2024.5980611,6.77610026%2024.4360597,6.76515764%20Z%20M4.46717071,12.8209893%20C3.64522734,12.7509916%203.47127163,13.6473541%203.42078936,14.276484%20C3.16465219,16.2056304%203.3270833,18.2085233%203.98264654,20.0447022%20C4.38894363,20.8887277%205.79019473,20.4098697%205.59493247,19.4937205%20C4.98094788,17.627158%204.87943231,15.6112102%205.26088567,13.6864988%20C5.26710814,13.2465272%204.90597753,12.8528077%204.46717071,12.8209893%20L4.46717071,12.8209893%20Z%20M31.1538059,14.4212532%20C30.4082347,14.3841039%2030.1399435,15.2062756%2030.2754965,15.8157946%20C30.3179727,18.2086263%2029.7049392,20.5871002%2028.6153935,22.7101195%20C28.3058744,23.5942433%2029.6353472,24.2464708%2030.1450768,23.4605767%20C31.5100856,20.9142155%2032.1610325,17.9719282%2031.9661058,15.0880975%20C31.8795853,14.7151593%2031.5366136,14.4334233%2031.1538059,14.4212532%20L31.1538059,14.4212532%20Z%20M0.956842305,14.9924288%20C0.174967659,14.9192009%20-0.0866143305,15.7672919%200.0243032647,16.3956487%20C0.0918399252,18.8103983%200.685349262,21.2286841%201.832899,23.358459%20C2.36735458,24.1277471%203.67541677,23.433665%203.33796714,22.5598458%20C2.2559739,20.4450417%201.71506813,18.071703%201.73506947,15.6987159%20C1.66713111,15.3219719%201.33855727,15.0235722%200.956842305,14.9924288%20Z%20M27.7440416,17.0155186%20C26.9670304,16.9683171%2026.7917797,17.8132668%2026.7227514,18.4081014%20C26.3694058,20.0999873%2025.5206137,21.6394971%2024.5070366,23.0161009%20C24.099838,23.8877044%2025.4323556,24.6535421%2025.9861053,23.8684099%20C27.3480746,22.1349757%2028.2826782,20.0411782%2028.5691257,17.8512101%20C28.55912,17.411306%2028.1837435,17.0311257%2027.7440416,17.0155186%20Z%20M6.85699687,22.7006636%20C6.0493215,22.7190649%205.77461097,23.8228656%206.38746722,24.2911694%20C7.77950556,25.8979618%209.57444489,27.1772937%2011.5813014,27.8896688%20C12.4913672,28.1115783%2013.0110005,26.7249718%2012.1792222,26.2941662%20C10.3435195,25.5940553%208.70971327,24.4083497%207.45593092,22.8979451%20C7.28717862,22.7620738%207.07337653,22.6918348%206.85699687,22.7006636%20L6.85699687,22.7006636%20Z%20M21.9141955,25.4005604%20C21.1036125,25.5949698%2020.410314,26.1608512%2019.5888694,26.3734579%20C18.3861145,26.8308128%2017.0897087,26.9093234%2015.8307736,27.0369243%20C14.9620723,27.3444389%2015.2580339,28.765064%2016.1770787,28.7002017%20C18.3783721,28.6664592%2020.5890503,28.0744439%2022.4695999,26.9220639%20C23.0738829,26.4272693%2022.6967377,25.390076%2021.9141955,25.4005604%20Z%20M6.34640364,26.8065153%20C5.51340198,26.8152041%205.23670501,28.0248885%205.95071893,28.4244768%20C7.93656451,30.0256932%2010.3091955,31.1729061%2012.8185106,31.6503634%20C13.7522056,31.725656%2014.0460999,30.2742399%2013.1566436,29.9804345%20C10.8324188,29.4900183%208.64414692,28.4231878%206.8120498,26.9135659%20C6.66829959,26.8375261%206.50881089,26.8013534%206.34640364,26.8065153%20Z%20M25.5536911,26.893743%20C24.7882382,26.9841096%2024.3126666,27.7351633%2023.6322802,28.0516271%20C22.1158981,29.0434324%2020.380641,29.6319716%2018.6364485,30.0569316%20C17.7637358,30.4617385%2018.2903438,31.9056274%2019.2195323,31.6613062%20C21.7634083,31.1351707%2024.1996631,30.0008446%2026.1827817,28.31719%20C26.6521117,27.7965551%2026.2550432,26.8974795%2025.5536911,26.893743%20L25.5536911,26.893743%20Z'%20transform='translate(0%20.311)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchNonInterruptingMessage = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M8.74159358,10.4640692%20L8.74159358,21.5359727%20L23.2582459,21.5359727%20L23.2582459,10.4640692%20L8.74159358,10.4640692%20Z%20M11.9663748,12.1938584%20L20.0322816,12.1938584%20C18.6876172,13.2674443%2017.3429476,14.3410355%2015.9982798,15.4147875%20C14.6543113,14.3410355%2013.3103438,13.2674443%2011.9663748,12.1938584%20Z%20M21.5306195,13.212197%20L21.5306195,19.8061842%20L10.4691871,19.8061842%20L10.4691871,13.2127038%20C12.3122169,14.6856011%2014.1552503,16.1586696%2015.9982798,17.6313973%20C17.842389,16.1585018%2019.6865103,14.6852603%2021.5306195,13.212197%20Z%20M15.9999196,0%20L15.9945488,3.45944207e-05%20L15.8065091,0.00121772361%20L15.8011712,0.00125231803%20L15.7957986,0.00135610129%20L15.6080305,0.0048357811%20L15.602658,0.00493956436%20L15.5972872,0.00511253646%20L15.4098212,0.0109233613%20L15.4044496,0.0110963334%20L15.3991117,0.0113333052%20L15.2119168,0.0194413725%20L15.206579,0.0196783443%20L15.2012074,0.0199827752%20L15.0143501,0.0304218147%20L15.0090124,0.0307262456%20L15.0036746,0.0310635412%20L14.8171214,0.0437999961%20L14.8118174,0.0441718861%20L14.8064797,0.0445766408%20L14.620298,0.0596103382%20L14.614994,0.0600496874%20L14.6096563,0.0605236309%20L14.4238464,0.0778208413%20L14.4185423,0.0783276495%20L14.4132383,0.0788673225%20L14.2278339,0.0984280458%20L14.2225298,0.0990023132%20L14.2172595,0.0996094453%20L14.0322605,0.121433682%20L14.0269565,0.122075408%20L14.0216862,0.122751729%20L13.8371264,0.146839478%20L13.8318561,0.147548664%20L13.826586,0.148292444%20L13.642499,0.174609803%20L13.6372287,0.175353583%20L13.6319584,0.176197687%20L13.4483446,0.20474483%20L13.4430743,0.205588934%20L13.4378379,0.206467632%20L13.2546969,0.237244386%20L13.2494941,0.238123084%20L13.2442577,0.239069242%20L13.0616236,0.272109681%20L13.0564208,0.273055838%20L13.0512181,0.274069455%20L12.8690908,0.309305775%20L12.8638881,0.310319392%20L12.8587192,0.311367602%20L12.6771659,0.348833706%20L12.6719633,0.349880187%20L12.6667943,0.351028722%20L12.4858155,0.390656804%20L12.4806468,0.391805339%20L12.4755116,0.392988468%20L12.295107,0.434846333%20L12.289972,0.436029462%20L12.2848368,0.437280051%20L12.1050405,0.481333797%20L12.0999054,0.482584385%20L12.0947702,0.483902433%20L11.9246698,0.527753628%20L11.7730151,0.582381678%20L11.6340969,0.664205613%20L11.5128137,0.770387479%20L11.413321,0.897244874%20L11.3390984,1.04035231%20L11.2927472,1.1947434%20L11.2758217,1.35504668%20L11.2889634,1.51572151%20L11.3316998,1.67115995%20L11.4025103,1.81599035%20L11.4989962,1.94514516%20L11.6177457,2.05413108%20L11.7547045,2.13919824%20L11.9050415,2.1973736%20L12.0635541,2.22666401%20L12.2247697,2.22598769%20L12.3565933,2.2026771%20L12.5219978,2.16004207%20L12.6903416,2.11882611%20L12.8611515,2.07916412%20L13.0324683,2.04166429%20L13.2044269,2.00622542%20L13.3737166,1.97345516%20L13.5471279,1.94207024%20L13.7173634,1.91345546%20L13.8937477,1.8859894%20L14.0652671,1.86146264%20L14.2399284,1.83869242%20L14.4145559,1.81808435%20L14.5899267,1.79957098%20L14.7656014,1.78321975%20L14.94131,1.76906441%20L15.1175928,1.75707121%20L15.2940109,1.74724017%20L15.470902,1.73957128%20L15.6451244,1.7341659%20L15.8224208,1.73088894%20L15.9999196,1.72977327%20L16.1774183,1.73088894%20L16.3547147,1.7341659%20L16.5289374,1.73957128%20L16.7058274,1.74724017%20L16.8822468,1.75707121%20L17.0585296,1.76906441%20L17.2342381,1.78321975%20L17.409912,1.79957098%20L17.5852833,1.81808435%20L17.7599107,1.83869242%20L17.9345728,1.86146264%20L18.1060919,1.8859894%20L18.282475,1.91345546%20L18.4527107,1.94207024%20L18.6261221,1.97345516%20L18.7954117,2.00622542%20L18.9673702,2.04166429%20L19.1211873,2.07534663%20L19.2811865,2.09504244%20L19.4420644,2.08467086%20L19.5982115,2.04463733%20L19.7442259,1.97629311%20L19.8750344,1.88207054%20L19.9860478,1.76521301%20L20.0734801,1.62974074%20L20.1342227,1.48045094%20L20.1662156,1.32244507%20L20.1683449,1.16122954%20L20.1405067,1.00244668%20L20.0836837,0.851602725%20L19.9998649,0.713900671%20L19.8919268,0.59417163%20L19.7636507,0.496503277%20L19.6194957,0.424375121%20L19.4913546,0.385693023%20L19.3330453,0.351030971%20L19.3278752,0.349882436%20L19.3226739,0.348835955%20L19.1411206,0.311369851%20L19.1359505,0.31032164%20L19.1307492,0.309308024%20L18.9486217,0.274071703%20L18.9434187,0.273058087%20L18.9382157,0.27211193%20L18.7555814,0.23907149%20L18.7503455,0.238125333%20L18.7451425,0.237246635%20L18.5620014,0.206469881%20L18.5567655,0.205591183%20L18.5514951,0.204747079%20L18.36788,0.176199936%20L18.3626113,0.175355832%20L18.3573408,0.174612052%20L18.1732535,0.148294692%20L18.167983,0.147550912%20L18.1627126,0.146841727%20L17.9781531,0.122753978%20L17.9728826,0.122077657%20L17.9675793,0.12143593%20L17.7825787,0.0996116939%20L17.77731,0.0990045618%20L17.7720049,0.0984302944%20L17.5866013,0.0788695711%20L17.5812963,0.0783298982%20L17.5759929,0.0778230899%20L17.3901828,0.0605258796%20L17.3848449,0.060051936%20L17.3795416,0.0596125868%20L17.1933596,0.0445788894%20L17.1880217,0.0441741347%20L17.1827184,0.0438022447%20L16.9961645,0.0310657898%20L16.9908266,0.0307284942%20L16.9854887,0.0304240633%20L16.7986321,0.0199850239%20L16.7932596,0.019680593%20L16.7879217,0.0194436212%20L16.6007278,0.0113355538%20L16.5953899,0.0110985821%20L16.5900173,0.0109256099%20L16.4025519,0.0051147851%20L16.3971811,0.004941813%20L16.3918086,0.00483802974%20L16.2040405,0.00135834993%20L16.198668,0.00125456667%20L16.19333,0.00121997225%20L16.0052903,3.68430581e-05%20L15.9999196,0%20L15.9999196,0%20Z%20M25.0154816,2.93532311%20L24.854301,2.93890415%20L24.6965989,2.97234986%20L24.5478498,3.03447798%20L24.4132221,3.12312618%20L24.2973775,3.23522024%20L24.2043376,3.36687501%20L24.1373455,3.51352958%20L24.0987294,3.67001537%20L24.0898456,3.83099428%20L24.1109932,3.99079075%20L24.161399,4.14393195%20L24.2393713,4.28501232%20L24.3421756,4.40920076%20L24.4437967,4.49629498%20L24.4893696,4.5296056%20L24.6308228,4.63561865%20L24.7675451,4.74078707%20L24.907848,4.85149596%20L25.0438611,4.96152905%20L25.1786237,5.07331919%20L25.3134209,5.1880144%20L25.4471698,5.30470311%20L25.5764924,5.4203782%20L25.708823,5.5416614%20L25.8369988,5.6621337%20L25.9637544,5.78426152%20L26.0904773,5.90939594%20L26.214327,6.03480071%20L26.3377738,6.16290818%20L26.4594285,6.29236707%20L26.5769613,6.420542%20L26.6952379,6.55277104%20L26.8118246,6.68641915%20L26.9252026,6.81966163%20L27.0383436,6.95604616%20L27.1484438,7.0920927%20L27.2567209,7.22932185%20L27.3655377,7.37080749%20L27.4703346,7.51057033%20L27.5732737,7.65144798%20L27.674388,7.79347434%20L27.7738124,7.93671686%20L27.8725967,8.08289853%20L27.9683385,8.22843829%20L28.0622243,8.37495795%20L28.1554321,8.52445047%20L28.2467838,8.6750578%20L28.3344184,8.82363807%20L28.4209391,8.97448185%20L28.5054982,9.1261028%20L28.5893153,9.28089934%20L28.6695519,9.43343237%20L28.7484704,9.58805991%20L28.7887746,9.66934331%20L28.8734358,9.80653856%20L28.9821177,9.92559197%20L29.1110026,10.0224159%20L29.2556298,10.0936655%20L29.4109328,10.1368409%20L29.5715737,10.150422%20L29.7319448,10.1339355%20L29.8864712,10.0880237%20L30.029782,10.0142064%20L30.156875,9.91505157%20L30.2633947,9.79407246%20L30.3456239,9.65539069%20L30.4006584,9.5038711%20L30.4266371,9.34478416%20L30.4226518,9.18360253%20L30.3887995,9.02600194%20L30.3388676,8.90181333%20L30.2970101,8.81725298%20L30.2946455,8.81252323%20L30.2922464,8.80782738%20L30.2082944,8.64330116%20L30.2058953,8.63860531%20L30.2034287,8.63394302%20L30.1174166,8.47043042%20L30.1149829,8.46573457%20L30.1124506,8.46110618%20L30.0244441,8.29860702%20L30.0219101,8.29394473%20L30.0193431,8.28935025%20L29.9293423,8.12786453%20L29.9267408,8.12327004%20L29.9241393,8.11867539%20L29.832113,7.95823701%20L29.8294786,7.95367626%20L29.826775,7.9491155%20L29.7327889,7.78975821%20L29.7300871,7.78523118%20L29.7273507,7.78070416%20L29.6313719,7.62246166%20L29.6286009,7.61793464%20L29.6258316,7.61344151%20L29.5278585,7.45631383%20L29.5250546,7.45182071%20L29.5221833,7.44736131%20L29.4222504,7.29134843%20L29.4194136,7.28688904%20L29.4164731,7.28246337%20L29.3145821,7.12759937%20L29.3116762,7.12317371%20L29.3087046,7.11878177%20L29.2048867,6.96510021%20L29.2019133,6.96070828%20L29.1988742,6.95635024%20L29.0930966,6.80385095%20L29.0900557,6.79949291%20L29.086982,6.79516861%20L28.9792792,6.64391938%20L28.9761726,6.63956118%20L28.9730643,6.63530451%20L28.8634017,6.48523772%20L28.8602605,6.48094714%20L28.8570848,6.47669047%20L28.7455316,6.32790731%20L28.7423212,6.32365064%20L28.739078,6.31942769%20L28.6255997,6.1718946%20L28.6223564,6.16767166%20L28.6190786,6.16348262%20L28.503708,6.01723332%20L28.5003973,6.01307784%20L28.497052,6.00892253%20L28.3797561,5.86399076%20L28.3764109,5.85983545%20L28.3729999,5.8557476%20L28.2538446,5.71213354%20L28.2504318,5.70801178%20L28.2469862,5.70395784%20L28.1259403,5.56169503%20L28.122493,5.55760718%20L28.1189799,5.55358696%20L27.9960746,5.41267558%20L27.9925615,5.40865519%20L27.9890139,5.4046687%20L27.864218,5.26514249%20L27.8606703,5.261156%20L27.8570552,5.25723714%20L27.7304344,5.11912964%20L27.7268193,5.11517706%20L27.7231385,5.11125803%20L27.5946583,4.97456959%20L27.5910103,4.97068446%20L27.5872931,4.96679934%20L27.4569898,4.83156352%20L27.4532743,4.8277123%20L27.4494897,4.82389463%20L27.3173632,4.6901116%20L27.3135786,4.68629411%20L27.3097611,4.68251017%20L27.1759775,4.55038249%20L27.1721601,4.54659872%20L27.1683097,4.54288259%20L27.0330403,4.41257925%20L27.0291882,4.40886294%20L27.0253033,4.40518054%20L26.8885809,4.27673526%20L26.884696,4.27305286%20L26.8807436,4.26943809%20L26.7426357,4.14281697%20L26.7386833,4.1392022%20L26.7346963,4.13562116%20L26.5951701,4.01085828%20L26.5912177,4.00731097%20L26.5871632,4.00379739%20L26.4462861,3.88089275%20L26.4422316,3.87737917%20L26.4381771,3.87389949%20L26.2959145,3.75288648%20L26.2918618,3.7494068%20L26.2877398,3.74599475%20L26.1441246,3.62683998%20L26.1400372,3.62346148%20L26.1358824,3.62008317%20L25.9909509,3.50282019%20L25.9867943,3.4994756%20L25.9826067,3.49616491%20L25.836357,3.3807939%20L25.8322005,3.37748304%20L25.8279783,3.37423982%20L25.6804452,3.2607606%20L25.6762229,3.25751738%20L25.6719661,3.25434178%20L25.5231824,3.14278827%20L25.5189256,3.13957877%20L25.5146358,3.13647081%20L25.4643321,3.09971424%20L25.325887,3.01714704%20L25.1745018,2.9617081%20L25.0154816,2.93532311%20L25.0154816,2.93532311%20Z%20M6.63395306,3.27934161%20L6.47290669,3.28684151%20L6.31604936,3.32403743%20L6.16885408,3.38974642%20L6.05767228,3.46427318%20L6.0172333,3.49616491%20L6.01304409,3.4994756%20L6.00888861,3.50282019%20L5.86395702,3.62008317%20L5.85980153,3.62346148%20L5.85571386,3.62683998%20L5.71209962,3.74599475%20L5.70797804,3.7494068%20L5.70392409,3.75288648%20L5.56166128,3.87389949%20L5.55760716,3.87737917%20L5.55355321,3.88089275%20L5.41267557,4.00379739%20L5.40862144,4.00731097%20L5.40466869,4.01085828%20L5.26514247,4.13562116%20L5.26115598,4.1392022%20L5.25720322,4.14281697%20L5.11909589,4.26943809%20L5.11514314,4.27305286%20L5.11125801,4.27673526%20L4.97453584,4.40518054%20L4.97065072,4.40886294%20L4.96679932,4.41257925%20L4.83152977,4.54288259%20L4.82767838,4.54659872%20L4.82386088,4.55038249%20L4.69007768,4.68251017%20L4.68626019,4.68629411%20L4.68247642,4.6901116%20L4.55034874,4.82389463%20L4.54656498,4.8277123%20L4.54284885,4.83156352%20L4.41254533,4.96679934%20L4.40882919,4.97068446%20L4.40518052,4.97456959%20L4.27670151,5.11125803%20L4.27301911,5.11517706%20L4.26940417,5.11912964%20L4.14278322,5.25723714%20L4.13916845,5.261156%20L4.13562114,5.26514249%20L4.01082436,5.4046687%20L4.00727722,5.40865519%20L4.00376364,5.41267558%20L3.88085883,5.55358696%20L3.87734542,5.55760718%20L3.87389947,5.56169503%20L3.75285273,5.70395784%20L3.74940678,5.70801178%20L3.74599473,5.71213354%20L3.62683978,5.8557476%20L3.62342774,5.85983545%20L3.62008315,5.86399076%20L3.50278644,6.00892253%20L3.49944185,6.01307784%20L3.49613099,6.01723332%20L3.38075998,6.16348262%20L3.37748303,6.16767166%20L3.3742398,6.1718946%20L3.26076059,6.31942769%20L3.25751736,6.32365064%20L3.25430786,6.32790731%20L3.14275452,6.47669047%20L3.13957875,6.48094714%20L3.13643689,6.48523772%20L3.02677534,6.63530451%20L3.02366721,6.63956118%20L3.02055907,6.64391938%20L2.91285695,6.79516861%20L2.90978272,6.79949291%20L2.90674222,6.80385095%20L2.80096562,6.95635024%20L2.79792512,6.96070828%20L2.79495207,6.96510021%20L2.69113508,7.11878177%20L2.68816221,7.12317371%20L2.6852568,7.12759937%20L2.58336533,7.28246337%20L2.58042619,7.28688904%20L2.57758841,7.29134843%20L2.47765637,7.44736131%20L2.47478486,7.45182071%20L2.47198081,7.45631383%20L2.37400837,7.61344151%20L2.37123805,7.61793464%20L2.36846773,7.62246166%20L2.27248862,7.78070416%20L2.26975203,7.78523118%20L2.26704934,7.78975821%20L2.17306339,7.9491155%20L2.17036071,7.95367626%20L2.16772565,7.95823701%20L2.07569895,8.11867539%20L2.07309763,8.12327004%20L2.0704963,8.12786453%20L1.98049684,8.28935025%20L1.97792924,8.29394473%20L1.97539537,8.29860702%20L1.88738907,8.46110618%20L1.88485537,8.46573457%20L1.88242287,8.47043042%20L1.79640989,8.63394302%20L1.79394366,8.63860531%20L1.79154505,8.64330116%20L1.7075927,8.80782738%20L1.70519409,8.81252323%20L1.70282922,8.81725298%20L1.62090392,8.98275891%20L1.61853922,8.98748866%20L1.61627571,8.99225214%20L1.53634357,9.15870406%20L1.53408006,9.16346754%20L1.53185045,9.16823102%20L1.4539791,9.33562875%20L1.45178322,9.34042596%20L1.44958733,9.34522334%20L1.40462133,9.44512148%20L1.35239189,9.59762077%20L1.32938521,9.75718062%20L1.33641221,9.91826089%20L1.37316878,10.0751859%20L1.43843876,10.2226176%20L1.52992475,10.3553534%20L1.64445113,10.4687988%20L1.77806534,10.5590009%20L1.92607134,10.622852%20L2.08336785,10.658156%20L2.24448202,10.6636288%20L2.40380541,10.6391019%20L2.55583181,10.5854536%20L2.69525666,10.504508%20L2.81721549,10.3991031%20L2.91748534,10.2728876%20L2.98174171,10.1554558%20L3.02454556,10.0603886%20L3.09873433,9.90092995%20L3.17380163,9.74461316%20L3.25140262,9.58799228%20L3.33028724,9.43343237%20L3.41052347,9.28089934%20L3.49434056,9.1261028%20L3.57890091,8.97448185%20L3.66542069,8.82363807%20L3.75305545,8.6750578%20L3.84440635,8.52445047%20L3.9376153,8.37495795%20L4.03150006,8.22843829%20L4.12724272,8.08289853%20L4.22602605,7.93671686%20L4.32545128,7.79347434%20L4.42656558,7.65144798%20L4.52950422,7.51057033%20L4.6343011,7.37080749%20L4.74311802,7.22932185%20L4.85139458,7.0920927%20L4.9614953,6.95604616%20L5.0746367,6.81966163%20L5.18801438,6.68641915%20L5.30460173,6.55277104%20L5.42287815,6.420542%20L5.54041131,6.29236707%20L5.66206605,6.16290818%20L5.7855114,6.03480071%20L5.90936219,5.90939594%20L6.0360845,5.78426152%20L6.1628407,5.6621337%20L6.29101563,5.5416614%20L6.42334603,5.4203782%20L6.55266966,5.30470311%20L6.68641913,5.1880144%20L6.82121577,5.07331919%20L6.95597851,4.96152905%20L7.09209268,4.8513946%20L7.12901825,4.82223929%20L7.24570678,4.71105749%20L7.33976037,4.58011207%20L7.40786813,4.43399804%20L7.44766521,4.27778261%20L7.45780033,4.11690506%20L7.4379018,3.95693959%20L7.38864522,3.80342685%20L7.31175376,3.66173831%20L7.2098962,3.53677271%20L7.08665357,3.43288809%20L6.94624883,3.35366565%20L6.79358071,3.30190911%20L6.63395306,3.27934161%20L6.63395306,3.27934161%20Z%20M15.9999196,3.28646806%20L15.9945488,3.28650456%20L15.847353,3.28741612%20L15.8419805,3.28745072%20L15.8366097,3.2875545%20L15.6896163,3.29029092%20L15.6842801,3.2903947%20L15.6789076,3.29056768%20L15.5321179,3.29512843%20L15.52678,3.2953014%20L15.5214085,3.29553838%20L15.3748888,3.30188974%20L15.3695174,3.30212671%20L15.3641794,3.30239655%20L15.2178964,3.31057225%20L15.2125587,3.31087668%20L15.2072209,3.31124857%20L15.0611744,3.3212147%20L15.0558703,3.321552%20L15.0505324,3.32199135%20L14.9047899,3.33374791%20L14.8994522,3.33418726%20L14.8941482,3.33466121%20L14.7486759,3.34820838%20L14.7433718,3.34871519%20L14.7380678,3.34925486%20L14.6882033,3.35452498%20L14.5301635,3.38631535%20L14.3807723,3.44685558%20L14.2451987,3.5341188%20L14.1281722,3.64499651%20L14.0337808,3.77563784%20L13.9652338,3.92158306%20L13.9249976,4.0776634%20L13.9144233,4.23854094%20L13.9338826,4.39857387%20L13.9827,4.55218797%20L14.059186,4.69411297%20L14.1606721,4.81934875%20L14.2836443,4.92360492%20L14.4238126,5.00319924%20L14.5763457,5.05539496%20L14.7359057,5.07840146%20L14.8697226,5.07468532%20L14.9145872,5.06998948%20L15.050127,5.05735438%20L15.1827277,5.04664499%20L15.3185717,5.03738821%20L15.4544493,5.02978696%20L15.5906312,5.02384104%20L15.7268122,5.0196181%20L15.8632647,5.01708423%20L15.9999196,5.01624013%20L16.1365744,5.01708423%20L16.2730269,5.0196181%20L16.4092079,5.02384104%20L16.5453905,5.02978696%20L16.6812671,5.03738821%20L16.8171107,5.04664499%20L16.9497128,5.05735438%20L17.0850825,5.06995558%20L17.2198797,5.08417855%20L17.3546423,5.1000906%20L17.4892025,5.11762427%20L17.6207564,5.13644173%20L17.7547077,5.15728625%20L17.8882889,5.17971866%20L18.0209222,5.20373877%20L18.153827,5.22944814%20L18.2837602,5.2562723%20L18.4158192,5.28519099%20L18.5480495,5.31586656%20L18.6766975,5.34735284%20L18.8076079,5.38113654%20L18.9355122,5.41576469%20L19.0645666,5.4524199%20L19.1946001,5.49110217%20L19.3210185,5.53035871%20L19.4493275,5.57191249%20L19.5754086,5.61447989%20L19.7026037,5.65917571%20L19.8300685,5.70569569%20L19.9561842,5.75349947%20L20.0768253,5.80089798%20L20.2025674,5.85208008%20L20.325708,5.90393798%20L20.3315198,5.90640404%20L20.3317274,5.90593183%20L20.4788557,5.95427615%20L20.6386854,5.97535712%20L20.7996308,5.9663707%20L20.9561152,5.92768843%20L21.1027367,5.86062801%20L21.2343235,5.76752042%20L21.3463852,5.65160887%20L21.4349642,5.51694732%20L21.496992,5.36816433%20L21.5303705,5.21042864%20L21.5338835,5.04928074%20L21.5074309,4.89026126%20L21.4518913,4.73891067%20L21.3692556,4.60049925%20L21.2623986,4.47982423%20L21.1349666,4.38107463%20L21.0167575,4.31823715%20L21.0128725,4.31654721%20L21.0080414,4.31445269%20L21.0031774,4.3123919%20L20.870001,4.25627733%20L20.8651699,4.25425027%20L20.8602713,4.25225694%20L20.7264549,4.19776398%20L20.7215564,4.19580455%20L20.7166578,4.19384513%20L20.5821651,4.14100751%20L20.5772665,4.13908198%20L20.5723351,4.13722374%20L20.4371989,4.08600792%20L20.4322674,4.08414985%20L20.4273014,4.08232551%20L20.2915252,4.03276485%20L20.2865921,4.03097442%20L20.2815932,4.02921754%20L20.145241,3.9813124%20L20.1402421,3.97955569%20L20.1352415,3.97786576%20L19.9982822,3.93161613%20L19.9932833,3.92992619%20L19.9882498,3.92830544%20L19.8506816,3.88371099%20L19.8456827,3.88209024%20L19.8406492,3.88053695%20L19.7025068,3.83759801%20L19.6974733,3.83604472%20L19.6924069,3.83452429%20L19.5537248,3.79330833%20L19.5486567,3.7917879%20L19.5435887,3.79036953%20L19.4043669,3.75080891%20L19.3992988,3.74935594%20L19.3941978,3.74797044%20L19.2544347,3.71009906%20L19.2493337,3.70874815%20L19.2442328,3.70739724%20L19.1039628,3.67124883%20L19.0988618,3.66993079%20L19.0937263,3.6686802%20L18.9529841,3.63422104%20L18.9478485,3.63293759%20L18.9426801,3.63175446%20L18.801464,3.59898437%20L18.7963302,3.59780125%20L18.79116,3.59665271%20L18.6494716,3.56563933%20L18.6443032,3.5644908%20L18.6391002,3.56344259%20L18.4969725,3.53411845%20L18.4918041,3.53303738%20L18.4866011,3.53202376%20L18.344034,3.50445633%20L18.3388328,3.50344271%20L18.3335952,3.50249656%20L18.1906234,3.4766521%20L18.1854204,3.47570595%20L18.1801845,3.47482725%20L18.0368062,3.45070577%20L18.0315703,3.44982707%20L18.0263327,3.44901583%20L17.8825497,3.42665123%20L17.8773138,3.42580713%20L17.8720433,3.42506335%20L17.727923,3.40445528%20L17.7226525,3.4037115%20L17.7173821,3.40300231%20L17.5728898,3.38415095%20L17.5676194,3.38347463%20L17.562316,3.3828329%20L17.4175194,3.36577214%20L17.4122143,3.36513041%20L17.406911,3.36459074%20L17.261777,3.34925296%20L17.2564719,3.34871329%20L17.2511686,3.34820648%20L17.1056956,3.3346593%20L17.1003923,3.33418536%20L17.0950544,3.33374601%20L16.9493115,3.32198944%20L16.9439736,3.32155009%20L16.9386703,3.3212128%20L16.792623,3.31124666%20L16.7872851,3.31087477%20L16.7819472,3.31057034%20L16.6356647,3.30239464%20L16.6303268,3.30212481%20L16.624956,3.30188784%20L16.4784365,3.29553647%20L16.473064,3.2952995%20L16.4677261,3.29512653%20L16.3209368,3.29056577%20L16.3155642,3.2903928%20L16.3102281,3.29028902%20L16.1632346,3.2875526%20L16.1578638,3.28744882%20L16.1524913,3.28741422%20L16.0052955,3.28650266%20L15.9999247,3.28646806%20L15.9999196,3.28646806%20Z%20M10.5184606,4.65173273%20L10.3574479,4.65963876%20L10.2007257,4.69734132%20L10.0777872,4.75028012%20L10.0179565,4.78173268%20L10.0132942,4.78419891%20L10.008666,4.78669888%20L9.88143684,4.85561754%20L9.87677473,4.85811751%20L9.87218007,4.8606851%20L9.74576185,4.93119147%20L9.74113346,4.93375907%20L9.73657271,4.9363604%20L9.61096521,5.00842075%20L9.60640445,5.01105598%20L9.6018437,5.01372477%20L9.47711455,5.08733927%20L9.4725538,5.09000823%20L9.46802677,5.09274465%20L9.34414225,5.16791314%20L9.33961522,5.17064973%20L9.33512192,5.17345378%20L9.21211575,5.25014252%20L9.20762263,5.25294657%20L9.20316324,5.25581825%20L9.08103542,5.33402724%20L9.07657602,5.33689893%20L9.07215036,5.33980416%20L8.9509348,5.41956731%20L8.94650913,5.42247272%20L8.9421172,5.42544577%20L8.82177999,5.50676289%20L8.81738805,5.50970204%20L8.81303002,5.51274254%20L8.69367252,5.59554619%20L8.68931449,5.59858669%20L8.68499019,5.6016611%20L8.56654477,5.685985%20L8.56222047,5.68905923%20L8.5579299,5.6922011%20L8.44046437,5.77804525%20L8.43617379,5.78118711%20L8.43191712,5.78436288%20L8.31543114,5.87169338%20L8.31117447,5.87490288%20L8.30695153,5.87814611%20L8.19144525,5.9669633%20L8.18725604,5.97020653%20L8.183067,5.97351722%20L8.06857435,6.06382094%20L8.06438513,6.06713162%20L8.06026355,6.07047621%20L7.94678434,6.16230018%20L7.94262903,6.16564477%20L7.93854118,6.16905682%20L7.82610932,6.26233341%20L7.82198774,6.26574563%20L7.81793362,6.26919141%20L7.70654909,6.36395452%20L7.70249497,6.36740047%20L7.69847476,6.37091388%20L7.58817131,6.46712961%20L7.58415109,6.47064319%20L7.58016461,6.47422424%20L7.47094224,6.57189259%20L7.46695575,6.57547363%20L7.46300299,6.57908857%20L7.35486169,6.67820972%20L7.35094284,6.68182449%20L7.34702381,6.68547316%20L7.24003122,6.78604693%20L7.23611219,6.78972933%20L7.23226097,6.79344564%20L7.12638302,6.89547202%20L7.12249789,6.89918833%20L7.1186804,6.90293836%20L7.01395115,7.00638364%20L7.01013365,7.0101674%20L7.00638362,7.01398507%20L6.90293817,7.11871432%20L6.89915458,7.12253181%20L6.89543827,7.12638303%20L6.79341172,7.23226099%20L6.78969558,7.23614611%20L6.78604691,7.24003124%20L6.68547315,7.34705773%20L6.68179074,7.35094286%20L6.6781758,7.35489544%20L6.57905483,7.46303674%20L6.57543988,7.46695576%20L6.57185884,7.47094225%20L6.47419049,7.58016462%20L6.47064318,7.58415111%20L6.46712959,7.58817133%20L6.37091386,7.69850868%20L6.36740045,7.70252889%20L6.36392077,7.70658284%20L6.26919139,7.81796754%20L6.26571171,7.82202148%20L6.26229966,7.82614306%20L6.16902307,7.93857493%20L6.16561085,7.94266278%20L6.16226626,7.94681826%20L6.07047619,8.06026357%20L6.06709788,8.06441888%20L6.06382092,8.06860809%20L5.97348347,8.18310075%20L5.97020651,8.18725623%20L5.96696329,8.19147917%20L5.87811236,8.30698527%20L5.87486913,8.31120821%20L5.87169337,8.31546506%20L5.78432896,8.43195087%20L5.78115337,8.43620754%20L5.7780115,8.44049811%20L5.69216735,8.55796382%20L5.68905921,8.56225422%20L5.68595108,8.56657852%20L5.60162718,8.6849902%20L5.59855294,8.68931451%20L5.59554617,8.69367254%20L5.51270879,8.81306377%20L5.50970202,8.81742197%20L5.50672915,8.82181373%20L5.42544575,8.94211721%20L5.42247271,8.94650915%20L5.41953356,8.95093481%20L5.35179734,9.05390718%20L5.27612205,9.19627135%20L5.22818317,9.35015564%20L5.20963589,9.51032383%20L5.22112245,9.67110002%20L5.26223706,9.82697763%20L5.33159489,9.9725174%20L5.42672955,10.1026182%20L5.5443978,10.212854%20L5.68044434,10.2993063%20L5.83017332,10.3590358%20L5.98841581,10.389914%20L6.14959744,10.390893%20L6.30821147,10.3619406%20L6.45864998,10.3040691%20L6.5957776,10.2192723%20L6.71472982,10.1104891%20L6.79675631,10.0047125%20L6.86155339,9.90626701%20L6.93658678,9.7952203%20L7.0142215,9.68329524%20L7.09070752,9.57589721%20L7.1711802,9.46566122%20L7.25161897,9.35839828%20L7.3348618,9.25018935%20L7.41780054,9.1449872%20L7.50371232,9.03880516%20L7.58965783,8.93525852%20L7.67806941,8.83130627%20L7.76685288,8.72955007%20L7.85779832,8.62779386%20L7.95036538,8.52684838%20L8.04289871,8.42840287%20L8.13685093,8.33090334%20L8.23195186,8.23458624%20L8.32962021,8.13810033%20L8.42840354,8.04293194%20L8.52681516,7.95039861%20L8.62765928,7.85796664%20L8.72971956,7.76671711%20L8.83107049,7.67827146%20L8.9352253,7.58969089%20L9.03880584,7.50374537%20L9.14464989,7.41807022%20L9.25052784,7.33459077%20L9.35704752,7.25266564%20L9.46579699,7.17114562%20L9.57410727,7.09195691%20L9.68329592,7.01422083%20L9.79343054,6.93780227%20L9.90623395,6.86155271%20L10.0180239,6.78800566%20L10.1307936,6.71577632%20L10.2443065,6.64496586%20L10.3593397,6.57516903%20L10.4744743,6.50723008%20L10.5923792,6.43952776%20L10.7089663,6.37452813%20L10.8283915,6.30986632%20L10.8829183,6.28118391%20L11.0179852,6.19317761%20L11.1343696,6.08165799%20L11.2280179,5.95044239%20L11.2957202,5.80412564%20L11.3350781,5.64780884%20L11.3447065,5.48689739%20L11.324335,5.32696583%20L11.274673,5.17362191%20L11.1973761,5.03213626%20L11.095147,4.90747458%20L10.9716003,4.80392794%20L10.8309591,4.72514451%20L10.6781557,4.67379342%20L10.5184606,4.65173273%20L10.5184606,4.65173273%20Z%20M24.4271066,6.76800646%20L24.2660938,6.77581061%20L24.1093378,6.81334417%20L23.9622441,6.87932352%20L23.829981,6.9714853%20L23.7170769,7.08655223%20L23.6275171,7.22060561%20L23.5644082,7.3689157%20L23.5298813,7.52638102%20L23.5251851,7.68752893%20L23.5504892,7.84675113%20L23.6049148,7.99850717%20L23.6865369,8.13749285%20L23.7729555,8.23972213%20L23.8629875,8.33090403%20L23.9569408,8.42840356%20L24.0494739,8.52684908%20L24.1420417,8.62779456%20L24.2329869,8.72955076%20L24.3217701,8.83130696%20L24.4101813,8.93525922%20L24.4961277,9.03880585%20L24.5820377,9.14498789%20L24.6649778,9.25019004%20L24.7482207,9.35839897%20L24.8286596,9.46566191%20L24.9091314,9.5758979%20L24.985618,9.68329593%20L25.063253,9.79522099%20L25.1382866,9.90623397%20L25.2130832,10.0199496%20L25.2852108,10.1325842%20L25.356055,10.2461985%20L25.4253788,10.3604885%20L25.4943981,10.477515%20L25.5608851,10.5934265%20L25.626426,10.7109934%20L25.6900053,10.8284591%20L25.7515592,10.9454855%20L25.8133154,11.0664646%20L25.8719979,11.1849437%20L25.9307825,11.3073756%20L25.9869984,11.4282871%20L26.0413221,11.5487933%20L26.0955436,11.6732184%20L26.1472675,11.7959542%20L26.198078,11.9207847%20L26.2464566,12.0438246%20L26.2944961,12.1706483%20L26.3407126,12.2972355%20L26.3845298,12.4219984%20L26.4277054,12.5498356%20L26.4695629,12.6789566%20L26.5087861,12.8051722%20L26.5472655,12.9346309%20L26.5689544,13.0109819%20L26.6272651,13.1612514%20L26.7124677,13.2981088%20L26.8215542,13.4167907%20L26.9508111,13.5131415%20L27.0956752,13.5838506%20L27.251146,13.626418%20L27.4118561,13.6393909%20L27.572158,13.6223301%20L27.726482,13.5758439%20L27.8695213,13.5014861%20L27.9962787,13.4018921%20L28.1023591,13.2804738%20L28.1840469,13.1415218%20L28.23854,12.9897995%20L28.2639115,12.8306112%20L28.2593174,12.6694633%20L28.2328319,12.5382477%20L28.2095205,12.4562887%20L28.2080675,12.4511874%20L28.2065799,12.4461537%20L28.1653295,12.307472%20L28.163842,12.3024044%20L28.1622506,12.2973706%20L28.1193449,12.1592293%20L28.1177882,12.1541957%20L28.1161622,12.1491619%20L28.0715683,12.0115951%20L28.0699078,12.0065951%20L28.0682126,12.001595%20L28.0219633,11.8646025%20L28.0202682,11.8596026%20L28.0185126,11.8546364%20L27.9706062,11.7182518%20L27.9688505,11.7132858%20L27.9670603,11.7083196%20L27.9174986,11.572577%20L27.9156754,11.5676108%20L27.913816,11.5626783%20L27.8626007,11.4275439%20L27.860743,11.4226116%20L27.8588178,11.4177128%20L27.8059454,11.2832203%20L27.8040202,11.2783217%20L27.8020276,11.2734231%20L27.7475673,11.1396062%20L27.7455747,11.1347076%20L27.7435129,11.1298428%20L27.687399,10.9967015%20L27.6853717,10.9918366%20L27.6832442,10.9870055%20L27.6255407,10.85454%20L27.6234131,10.8497089%20L27.621251,10.844878%20L27.5618921,10.7131218%20L27.55973,10.7083246%20L27.557535,10.7035273%20L27.4965554,10.5724807%20L27.4943258,10.5677172%20L27.4920616,10.5629537%20L27.4294941,10.4326503%20L27.4272316,10.4278869%20L27.4248671,10.4231571%20L27.3607118,10.2935969%20L27.3583801,10.2888673%20L27.355981,10.2841713%20L27.2902395,10.1553882%20L27.2878403,10.1506584%20L27.2853738,10.1459963%20L27.2180426,10.0179902%20L27.2156106,10.0133281%20L27.2130766,10.008666%20L27.1441922,9.88143686%20L27.1416582,9.87680847%20L27.1390912,9.87218009%20L27.0686189,9.7457956%20L27.0660503,9.74116721%20L27.0634159,9.73657272%20L26.9913886,9.61099896%20L26.9887543,9.60640447%20L26.9860853,9.60187744%20L26.9124701,9.47711457%20L26.9097683,9.47255381%20L26.9070319,9.46806052%20L26.8318962,9.34417599%20L26.8291598,9.33964897%20L26.826356,9.33515584%20L26.749667,9.21214967%20L26.7468632,9.20765638%20L26.7439918,9.20319698%20L26.6657479,9.08106916%20L26.6629112,9.07660977%20L26.6600052,9.07218411%20L26.5802426,8.95093481%20L26.5773038,8.94650915%20L26.5743304,8.94211721%20L26.4930474,8.82181373%20L26.490074,8.81742197%20L26.4870677,8.81306377%20L26.4042296,8.69367254%20L26.4012234,8.68931451%20L26.3981479,8.6849902%20L26.313824,8.56657852%20L26.3107175,8.56225422%20L26.3076092,8.55796382%20L26.2217648,8.44049811%20L26.2186219,8.43620754%20L26.2154462,8.43195087%20L26.1280831,8.31546506%20L26.1249074,8.31120821%20L26.1216641,8.30698527%20L26.0328118,8.19147917%20L26.0295703,8.18725623%20L26.0262925,8.18310075%20L25.9359544,8.06860809%20L25.9326783,8.06441888%20L25.9293001,8.06026357%20L25.837509,7.94681826%20L25.8341655,7.94266278%20L25.8307527,7.93857493%20L25.7374758,7.82614306%20L25.7340648,7.82202148%20L25.7305846,7.81796754%20L25.6358547,7.70658284%20L25.6323762,7.70252889%20L25.6288614,7.69850868%20L25.5326457,7.58817133%20L25.5291326,7.58415111%20L25.525585,7.58016462%20L25.4279163,7.47094225%20L25.4243358,7.46695576%20L25.4207206,7.46303674%20L25.3216007,7.35489544%20L25.3179856,7.35094286%20L25.314303,7.34705773%20L25.2137284,7.24003124%20L25.2100804,7.23614611%20L25.206365,7.23226099%20L25.1043374,7.12638303%20L25.1006219,7.12253181%20L25.0968373,7.11871432%20L25.0035275,7.02425529%20L24.8800825,6.92060712%20L24.7395081,6.84168859%20L24.5867391,6.79023614%20L24.4270772,6.76800646%20L24.4271066,6.76800646%20Z%20M4.44980871,12.8263883%20L4.28862707,12.8282464%20L4.13058731,12.8599691%20L3.98116241,12.9204419%20L3.84555505,13.0076373%20L3.7284948,13.1184475%20L3.63403577,13.2490889%20L3.5654551,13.3949664%20L3.52991469,13.5240199%20L3.50440805,13.6558435%20L3.50339444,13.6610461%20L3.50244828,13.6662488%20L3.47660383,13.8092211%20L3.47565767,13.8144575%20L3.47477897,13.8196941%20L3.45065749,13.9630717%20L3.44977879,13.9683083%20L3.44896755,13.9735446%20L3.42660278,14.117294%20L3.42579154,14.1225641%20L3.4250149,14.1278344%20L3.40440683,14.2719552%20L3.40366305,14.2772255%20L3.40298673,14.2824958%20L3.38413536,14.4269882%20L3.38342618,14.4322585%20L3.38281731,14.4375288%20L3.36572283,14.5823592%20L3.3650811,14.5876632%20L3.36454143,14.5929673%20L3.34923755,14.7381016%20L3.34866328,14.7434056%20L3.34815647,14.7487096%20L3.33464303,14.8941819%20L3.33413622,14.8994859%20L3.33369687,14.9047899%20L3.32194013,15.0505663%20L3.32153537,15.0558704%20L3.32116348,15.0612081%20L3.31119735,15.2072547%20L3.31082546,15.2125924%20L3.31052103,15.2179303%20L3.30237923,15.3642134%20L3.3020748,15.3695511%20L3.30183783,15.374889%20L3.29548647,15.5214422%20L3.29524949,15.52678%20L3.29507652,15.5321516%20L3.29051577,15.6789415%20L3.2903428,15.6842794%20L3.29023901,15.6896502%20L3.28750259,15.8366436%20L3.2874334,15.8420144%20L3.28736422,15.8473869%20L3.28641806,15.994581%20L3.28641806,15.9999535%20L3.28641806,16.0053243%20L3.28736422,16.1525201%20L3.2874334,16.1578926%20L3.28750259,16.1632288%20L3.29023901,16.3102551%20L3.2903428,16.315593%20L3.29051577,16.3209655%20L3.29507652,16.4677219%20L3.29524949,16.4730927%20L3.29548647,16.4784306%20L3.30183783,16.6249847%20L3.3020748,16.6303226%20L3.30237923,16.6356588%20L3.31052103,16.7819759%20L3.31082546,16.7873138%20L3.31119735,16.7926518%20L3.32116348,16.9386644%20L3.32153537,16.9440024%20L3.32194013,16.9493403%20L3.33369687,17.0950831%20L3.33413622,17.1003864%20L3.33464303,17.1057244%20L3.34815647,17.2511628%20L3.34866328,17.2564678%20L3.34923755,17.2617711%20L3.36454143,17.4069397%20L3.3650811,17.412243%20L3.36572283,17.4175135%20L3.38281731,17.5623448%20L3.38342618,17.5676481%20L3.38413536,17.5729185%20L3.40298673,17.7174108%20L3.40366305,17.7226813%20L3.40440683,17.7279517%20L3.4250149,17.8720721%20L3.42579154,17.8773425%20L3.42660278,17.8825784%20L3.44896755,18.0263286%20L3.44977879,18.0315991%20L3.45065749,18.0368349%20L3.47477897,18.1801786%20L3.47565767,18.1854162%20L3.47660383,18.1906521%20L3.50244828,18.3336239%20L3.50339444,18.3388269%20L3.50440805,18.3440628%20L3.53200921,18.486597%20L3.53298823,18.4917983%20L3.53406931,18.4970013%20L3.56339362,18.639129%20L3.56447469,18.6442974%20L3.56559036,18.6495004%20L3.59663747,18.7911559%20L3.59775141,18.7963243%20L3.59896741,18.8014927%20L3.63170359,18.9427088%20L3.63291958,18.9478773%20L3.63417017,18.9530128%20L3.6686295,19.093755%20L3.66988009,19.0988906%20L3.67119813,19.1039915%20L3.70738027,19.2442615%20L3.70869831,19.2493624%20L3.71008382,19.2544634%20L3.74792147,19.3941937%20L3.74930697,19.3992947%20L3.75075994,19.4043956%20L3.79032056,19.5436174%20L3.79177353,19.5486855%20L3.79325936,19.5537536%20L3.83450905,19.6924357%20L3.83599488,19.697502%20L3.83758277,19.7025355%20L3.88048798,19.8406434%20L3.88204127,19.8457114%20L3.88366202,19.8507103%20L3.90129704,19.9051031%20L3.96508051,20.0531431%20L4.05521523,20.1867899%20L4.16862681,20.301384%20L4.30129503,20.3929381%20L4.44865914,20.4582749%20L4.6055841,20.4951335%20L4.76666437,20.5022617%20L4.92622439,20.4793221%20L5.07875742,20.4271952%20L5.21899317,20.3476678%20L5.34199934,20.2434798%20L5.44355282,20.1182774%20L5.52010646,19.9764195%20L5.56899132,19.8228065%20L5.58855204,19.6627727%20L5.57804537,19.5019294%20L5.54676181,19.371761%20L5.53027532,19.3209158%20L5.49108641,19.1947344%20L5.45260687,19.0652752%20L5.41622184,18.9372014%20L5.38088416,18.8068652%20L5.34797898,18.6793311%20L5.31507381,18.5449405%20L5.28517523,18.4158531%20L5.25618891,18.2837249%20L5.22953357,18.1543677%20L5.20379047,18.0214975%20L5.17963527,17.887816%20L5.15723676,17.7546742%20L5.13679769,17.6234593%20L5.11723696,17.4865345%20L5.10004111,17.3546762%20L5.08416279,17.220218%20L5.06990609,17.0851165%20L5.05754118,16.9524486%20L5.04639261,16.8142058%20L5.03733873,16.6813356%20L5.0297373,16.5453553%20L5.02372392,16.4067424%20L5.01960234,16.2731612%20L5.01706847,16.1366084%20L5.01622437,15.9999535%20L5.01706847,15.8633332%20L5.01960234,15.7268132%20L5.02372392,15.5931646%20L5.0297373,15.4543818%20L5.03733873,15.3184027%20L5.04642651,15.1854981%20L5.05757508,15.0472217%20L5.06990609,14.91479%20L5.08412889,14.7799933%20L5.10007484,14.6448926%20L5.11723696,14.5133729%20L5.13679769,14.3764143%20L5.1571354,14.2456379%20L5.17970273,14.1115845%20L5.20372302,13.9788149%20L5.22811468,13.8526669%20L5.24385791,13.6922622%20L5.22956747,13.5316888%20L5.18571627,13.3765544%20L5.11382474,13.2322646%20L5.01642657,13.1038193%20L4.89686635,12.995678%20L4.75933329,12.9115905%20L4.60855697,12.85453%20L4.44980784,12.8263883%20L4.44980871,12.8263883%20Z%20M31.1476817,14.4273261%20L30.9867692,14.4368532%20L30.8303851,14.4761097%20L30.6840352,14.543677%20L30.5527857,14.6372575%20L30.4411304,14.7535744%20L30.3530565,14.8885738%20L30.2915372,15.0375595%20L30.2587331,15.1953966%20L30.2541718,15.3291798%20L30.260186,15.4681994%20L30.2656917,15.6452586%20L30.2690024,15.8224547%20L30.2700749,15.9999535%20L30.2690024,16.1773848%20L30.2656917,16.3546138%20L30.260186,16.5316057%20L30.2525165,16.708295%20L30.2426519,16.8848476%20L30.2306251,17.0608934%20L30.2164016,17.2371434%20L30.2003204,17.409946%20L30.1818418,17.5849799%20L30.1611664,17.7602819%20L30.1384292,17.93447%20L30.1134971,18.1086927%20L30.0869441,18.2794006%20L30.0576876,18.4532514%20L30.0265042,18.6257167%20L29.9935651,18.7959524%20L29.9581266,18.967878%20L29.9206937,19.138688%20L29.8815397,19.3075727%20L29.8392083,19.4803753%20L29.7960673,19.6475702%20L29.7511343,19.8135161%20L29.7030948,19.982669%20L29.6531958,20.1504053%20L29.6012696,20.3176001%20L29.5481291,20.4815517%20L29.4918786,20.648072%20L29.4335679,20.8140162%20L29.374818,20.9749287%20L29.3124875,21.1393871%20L29.2504268,21.2973591%20L29.1835696,21.4615805%20L29.1162731,21.6212424%20L29.0460032,21.7824922%20L28.9752593,21.939518%20L28.9011044,22.0989775%20L28.8265448,22.2542131%20L28.7484704,22.4118806%20L28.6677945,22.5698872%20L28.6082004,22.7196827%20L28.5774581,22.8779263%20L28.5766105,23.0391414%20L28.6056629,23.1976877%20L28.6636708,23.3481267%20L28.748569,23.4851517%20L28.8574532,23.6040372%20L28.9864731,23.7006577%20L29.1312006,23.7716714%20L29.2866056,23.8145754%20L29.4472466,23.8279202%20L29.6075848,23.8111972%20L29.7620437,23.7650154%20L29.9052179,23.6909626%20L30.0322105,23.5916386%20L30.1385278,23.470456%20L30.2084259,23.3563014%20L30.292243,23.1920453%20L30.2946421,23.1873491%20L30.2970066,23.1826201%20L30.3789314,23.0171135%20L30.3812959,23.0123844%20L30.3835601,23.0076553%20L30.4634923,22.8411697%20L30.4657547,22.8364389%20L30.4679861,22.8316424%20L30.5458564,22.6642434%20L30.5480531,22.6594815%20L30.5502482,22.6546504%20L30.6260255,22.4863399%20L30.6282205,22.4815417%20L30.6303152,22.4767105%20L30.7040653,22.3074885%20L30.70616,22.3026574%20L30.7082201,22.2977934%20L30.7798755,22.1277272%20L30.7819356,22.1228615%20L30.78393,22.1179629%20L30.8535236,21.9470181%20L30.8554834,21.9421195%20L30.8574431,21.9372209%20L30.9249421,21.765432%20L30.926869,21.7605317%20L30.9287267,21.7556002%20L30.9941309,21.5829654%20L30.9960232,21.578034%20L30.9978135,21.5731008%20L31.0611247,21.3996565%20L31.0629478,21.3947233%20L31.0646776,21.3897244%20L31.1258941,21.2155346%20L31.1276515,21.2105357%20L31.1293466,21.2055697%20L31.1884011,21.0305704%20L31.1900962,21.0255697%20L31.1917567,21.0205708%20L31.2487164,20.8448623%20L31.2503424,20.8398271%20L31.2519337,20.8347936%20L31.3067295,20.6583413%20L31.3083209,20.6533078%20L31.3098084,20.6482415%20L31.3624767,20.4711128%20L31.3639989,20.4660465%20L31.3654518,20.4609438%20L31.415958,20.2831406%20L31.4174109,20.2780397%20L31.4187947,20.2729387%20L31.4671404,20.0944592%20L31.4685242,20.0893582%20L31.4698388,20.0842227%20L31.5160552,19.9050686%20L31.5173698,19.8999676%20L31.5186152,19.8948321%20L31.5626366,19.7150362%20L31.5638474,19.7099007%20L31.5650582,19.7047651%20L31.6068811,19.5243621%20L31.6080919,19.519192%20L31.6091989,19.5140236%20L31.6488614,19.3330446%20L31.6499685,19.3278762%20L31.6510236,19.3227078%20L31.6884548,19.1411546%20L31.6895272,19.1359516%20L31.6905477,19.1307486%20L31.7257839,18.9486556%20L31.726839,18.9434526%20L31.7277903,18.9382496%20L31.7607969,18.7556153%20L31.7617482,18.7503794%20L31.7626304,18.7451418%20L31.7934402,18.5620007%20L31.7943223,18.5567648%20L31.7951353,18.551529%20L31.8237155,18.367881%20L31.8245284,18.3626434%20L31.8252722,18.3573747%20L31.8516245,18.1732874%20L31.8523683,18.168017%20L31.8530775,18.1627465%20L31.877131,17.978187%20L31.8778402,17.9728819%20L31.8784456,17.9676132%20L31.9002695,17.7826126%20L31.9009095,17.7773093%20L31.9014457,17.7720388%20L31.9210071,17.5866006%20L31.9215779,17.5812973%20L31.9220795,17.5759923%20L31.9393439,17.3901822%20L31.9398455,17.3848788%20L31.9402606,17.3795755%20L31.9552608,17.1933935%20L31.9556932,17.1880556%20L31.9560737,17.1827177%20L31.9687751,16.9961984%20L31.9691902,16.9908605%20L31.969467,16.9855226%20L31.9799404,16.7986314%20L31.9802172,16.7932935%20L31.9804593,16.7879556%20L31.9886011,16.6007617%20L31.9888433,16.5954238%20L31.9890163,16.5900513%20L31.9948264,16.402553%20L31.9949994,16.397215%20L31.9951723,16.3918425%20L31.9986508,16.2040744%20L31.9988238,16.1987019%20L31.9988238,16.1933311%20L32,16.0053243%20L31.9995676,16.0004932%20L32,15.994581%20L31.9988238,15.806543%20L31.9988238,15.8011705%20L31.9986508,15.7957997%20L31.9951723,15.6080298%20L31.9949994,15.6026919%20L31.9948264,15.5973211%20L31.9890163,15.4098213%20L31.9888433,15.4044833%20L31.9886011,15.3991456%20L31.9823171,15.2541801%20L31.9603237,15.0944511%20L31.9091083,14.9416142%20L31.8303922,14.8009391%20L31.7269462,14.6772912%20L31.6023527,14.5749942%20L31.4609342,14.497596%20L31.3076238,14.447799%20L31.1477267,14.4273261%20L31.1476817,14.4273261%20Z%20M0.9380021,14.9987422%20L0.776786565,15.0002961%20L0.618679338,15.0317487%20L0.469153084,15.091985%20L0.333410458,15.178944%20L0.21614748,15.2895515%20L0.121485902,15.4200239%20L0.0526348749,15.5658001%20L0.0120607394,15.7218126%20L0.000878352342,15.8551914%20L0,15.994581%20L0,15.9999535%20L0,16.0053243%20L0.0011824373,16.1933311%20L0.00121703172,16.1987019%20L0.00131908526,16.2040744%20L0.00479879966,16.3918425%20L0.0049008532,16.397215%20L0.00507036587,16.402553%20L0.0108811388,16.5900513%20L0.0110506515,16.5954238%20L0.0112871043,16.6007617%20L0.019429005,16.7879556%20L0.0196659768,16.7932935%20L0.0199358133,16.7986314%20L0.0303750257,16.9855226%20L0.0306794566,16.9908605%20L0.0310513466,16.9961984%20L0.043754072,17.1827177%20L0.044125962,17.1880556%20L0.0445653111,17.1933935%20L0.059565279,17.3795755%20L0.0600046281,17.3848788%20L0.0605114364,17.3901822%20L0.0777747442,17.5759923%20L0.0782815525,17.5812973%20L0.0788558198,17.5866006%20L0.0984165431,17.7720388%20L0.0989562161,17.7773093%20L0.0995979426,17.7826126%20L0.121422179,17.9676132%20L0.122031041,17.9728819%20L0.122740226,17.978187%20L0.146794246,18.1627465%20L0.147503432,18.168017%20L0.148247212,18.1732874%20L0.174598474,18.3573747%20L0.175342254,18.3626434%20L0.176153493,18.367881%20L0.204734538,18.551529%20L0.205545778,18.5567648%20L0.206424476,18.5620007%20L0.237235132,18.7451418%20L0.23811383,18.7503794%20L0.239059988,18.7556153%20L0.272066697,18.9382496%20L0.273012855,18.9434526%20L0.274026471,18.9486556%20L0.309262791,19.1307486%20L0.310276408,19.1359516%20L0.311357484,19.1411546%20L0.348789685,19.3227078%20L0.34987076,19.3278762%20L0.35098643,19.3330446%20L0.390648242,19.5140236%20L0.391763912,19.519192%20L0.392979906,19.5243621%20L0.434804041,19.7047651%20L0.436020035,19.7099007%20L0.437270624,19.7150362%20L0.48129064,19.8948321%20L0.482541229,19.8999676%20L0.483859276,19.9050686%20L0.530075173,20.0842227%20L0.531393221,20.0893582%20L0.532778727,20.0944592%20L0.581123047,20.2729387%20L0.582508553,20.2780397%20L0.583961519,20.2831406%20L0.634467989,20.4609438%20L0.635920955,20.4660465%20L0.63744138,20.4711128%20L0.690110001,20.6482415%20L0.691595832,20.6533078%20L0.693183716,20.6583413%20L0.747980759,20.8347936%20L0.749568643,20.8398271%20L0.751189392,20.8448623%20L0.808148587,21.0205708%20L0.809769335,21.0255697%20L0.811459273,21.0305704%20L0.870512987,21.2055697%20L0.872202924,21.2105357%20L0.873959629,21.2155346%20L0.935175494,21.3897244%20L0.936898296,21.3947233%20L0.938722633,21.3996565%20L1.00203319,21.5731008%20L1.00382362,21.578034%20L1.00571559,21.5829654%20L1.07112067,21.7556002%20L1.07297874,21.7605317%20L1.07490443,21.765432%20L1.14240403,21.9372209%20L1.14436346,21.9421195%20L1.14632289,21.9470181%20L1.21591717,22.1179629%20L1.21791051,22.1228615%20L1.21997129,22.1277272%20L1.29162637,22.2977934%20L1.29368716,22.3026574%20L1.29578168,22.3074885%20L1.36953128,22.4767105%20L1.37162597,22.4815417%20L1.37382185,22.4863399%20L1.44959851,22.6546504%20L1.45179439,22.6594815%20L1.45399027,22.6642434%20L1.53186162,22.8316424%20L1.53409123,22.8364389%20L1.53635474,22.8411697%20L1.61628688,23.0076553%20L1.61855039,23.0123844%20L1.6209151,23.0171135%20L1.70284039,23.1826201%20L1.70520527,23.1873491%20L1.70760387,23.1920453%20L1.72807685,23.2321472%20L1.81442764,23.3682953%20L1.92452853,23.4860304%20L2.05459542,23.5812672%20L2.20006773,23.6507258%20L2.35587771,23.6920091%20L2.51668763,23.7036311%20L2.67682209,23.6852182%20L2.83077401,23.637381%20L2.97317191,23.5618407%20L3.09908349,23.4611657%20L3.20411665,23.3388692%20L3.28462306,23.1992081%20L3.33783222,23.0470117%20L3.36185233,22.8876213%20L3.35590642,22.7265411%20L3.32012956,22.5693458%20L3.26867711,22.4457658%20L3.2514138,22.4119152%20L3.173306,22.2542131%20L3.09874551,22.0989775%20L3.02459063,21.939518%20L2.95384764,21.7824922%20L2.88357772,21.6212424%20L2.81628085,21.4615805%20L2.74942298,21.2973591%20L2.68736249,21.1393871%20L2.62503182,20.9749287%20L2.56628202,20.8140162%20L2.50797157,20.648072%20L2.45172173,20.4815517%20L2.3985802,20.3176001%20L2.34665484,20.1504053%20L2.29675637,19.982669%20L2.24871613,19.8135161%20L2.20378386,19.6475702%20L2.1606422,19.4803753%20L2.11831126,19.3075727%20L2.07915608,19.138688%20L2.04172388,18.967878%20L2.00628483,18.7959524%20L1.97334576,18.6257167%20L1.94216356,18.4532514%20L1.91290688,18.2794006%20L1.88635307,18.1086927%20L1.8614207,17.93447%20L1.83868438,17.7602819%20L1.81800885,17.5849799%20L1.7995292,17.409946%20L1.78344816,17.2371434%20L1.76922518,17.0608934%20L1.75719826,16.8848476%20L1.74733349,16.708295%20L1.7396646,16.5316057%20L1.73415786,16.3546138%20L1.730847,16.1773848%20L1.72976592,15.9999189%20L1.73057716,15.865933%20L1.71655691,15.7053266%20L1.67297607,15.5501245%20L1.60132099,15.4057334%20L1.50412554,15.2771191%20L1.38476804,15.1687751%20L1.24737008,15.0844512%20L1.09669511,15.0271205%20L0.93801362,14.9987422%20L0.9380021,14.9987422%20Z%20M27.7364815,17.0226839%20L27.5753338,17.0304555%20L27.4185778,17.0679888%20L27.2714512,17.1339344%20L27.1391535,17.2260628%20L27.0262494,17.341129%20L26.9366551,17.4751149%20L26.8735133,17.6234593%20L26.843648,17.749978%20L26.8434058,17.7499434%20L26.8428004,17.7536588%20L26.8428004,17.753728%20L26.8428004,17.7541674%20L26.8203002,17.887816%20L26.7961464,18.0214975%20L26.7704029,18.1543677%20L26.7437479,18.2837249%20L26.7147613,18.4158531%20L26.684863,18.5449405%20L26.6519568,18.6793311%20L26.6190523,18.8068652%20L26.5837141,18.9372014%20L26.5473295,19.0652752%20L26.5088501,19.1947344%20L26.4696615,19.3209833%20L26.4280738,19.4492611%20L26.3849311,19.5770633%20L26.3408094,19.7026376%20L26.2945947,19.8292583%20L26.2468908,19.9551699%20L26.1978047,20.0800004%20L26.1469942,20.2048309%20L26.0956422,20.3266552%20L26.0418254,20.4501331%20L25.9870953,20.5716529%20L25.9313862,20.6914845%20L25.8726033,20.8138813%20L25.813414,20.9334085%20L25.7516578,21.0543869%20L25.6894951,21.1725632%20L25.6265228,21.2888125%20L25.5603403,21.4075959%20L25.493855,21.5235063%20L25.4254774,21.6394183%20L25.3561536,21.7537079%20L25.2853769,21.8672209%20L25.2131801,21.9799572%20L25.1391601,22.0924565%20L25.0633499,22.204686%20L24.9857148,22.316611%20L24.90923,22.4240769%20L24.8287911,22.5341771%20L24.7483175,22.6414734%20L24.6640957,22.7509665%20L24.6198044,22.8071149%20L24.5322045,22.9424189%20L24.4711903,23.0916402%20L24.4389621,23.2496122%20L24.4366304,23.4107945%20L24.4642316,23.5696106%20L24.5208194,23.7205564%20L24.6044341,23.8583944%20L24.7121698,23.9782918%20L24.840311,24.0761282%20L24.9843639,24.14846%20L25.1393642,24.1928169%20L25.2998685,24.2076493%20L25.4603745,24.1924122%20L25.6152399,24.1476833%20L25.7591233,24.0749797%20L25.8869946,23.9768388%20L25.977805,23.8784609%20L26.0264534,23.8168067%20L26.0297312,23.8126173%20L26.0329744,23.8083934%20L26.121825,23.6928878%20L26.1250682,23.6886984%20L26.128244,23.6844416%20L26.2156088,23.5679552%20L26.2187828,23.5636984%20L26.2219257,23.5594087%20L26.30777,23.4419433%20L26.3108783,23.4376519%20L26.3139866,23.4333276%20L26.3983105,23.3148832%20L26.4013842,23.3105589%20L26.4043905,23.3062%20L26.4872286,23.1868095%20L26.4902348,23.1824506%20L26.4932082,23.1780588%20L26.5744913,23.057755%20L26.5774647,23.0533632%20L26.5804035,23.0489386%20L26.6601661,22.9277232%20L26.663072,22.9232968%20L26.6659105,22.9188376%20L26.7441527,22.7967089%20L26.747024,22.7922497%20L26.7498279,22.7877576%20L26.8265168,22.6647502%20L26.8293207,22.6602582%20L26.8320571,22.6557315%20L26.9071927,22.5318454%20L26.9099292,22.5273187%20L26.912631,22.5227592%20L26.9862462,22.398029%20L26.9889151,22.3934677%20L26.9915495,22.3888736%20L27.0635768,22.263301%20L27.0662112,22.2587052%20L27.0687798,22.254111%20L27.1392521,22.1276926%20L27.141819,22.1230639%20L27.1443531,22.1184369%20L27.2132375,21.9912073%20L27.2157715,21.9865785%20L27.2182035,21.9818823%20L27.2855346,21.8538761%20L27.2880012,21.8492145%20L27.2904003,21.8445183%20L27.3561436,21.7157025%20L27.358541,21.7110063%20L27.3608726,21.7062755%20L27.425028,21.5767159%20L27.4273925,21.5719869%20L27.4296567,21.5672561%20L27.4922224,21.4369199%20L27.4944866,21.4321891%20L27.4967163,21.4273926%20L27.5576958,21.2963455%20L27.5598926,21.2915818%20L27.5620547,21.2867507%20L27.6214118,21.1549944%20L27.623574,21.1501979%20L27.6257016,21.1453668%20L27.683405,21.0129013%20L27.6855326,21.0080355%20L27.6875598,21.0032044%20L27.7436754,20.8700298%20L27.7457355,20.8651658%20L27.7477282,20.8603001%20L27.8021885,20.7264491%20L27.8041811,20.7215851%20L27.8061063,20.7166519%20L27.8589787,20.5821592%20L27.8609038,20.5772606%20L27.8627616,20.5723292%20L27.9139786,20.4371947%20L27.9158363,20.4322616%20L27.9176594,20.4273301%20L27.9672211,20.291554%20L27.9690114,20.2865879%20L27.9707688,20.2816202%20L28.0186734,20.1452369%20L28.0204308,20.1402708%20L28.0221259,20.1352702%20L28.0683752,19.998278%20L28.0700703,19.993312%20L28.0716963,19.9882785%20L28.116292,19.8507103%20L28.1179525,19.8457114%20L28.1195092,19.8406434%20L28.162415,19.7025355%20L28.1640063,19.697502%20L28.1654939,19.6924357%20L28.2067443,19.5537536%20L28.2082318,19.5486855%20L28.2096848,19.5436174%20L28.2492452,19.4043956%20L28.2506982,19.3992947%20L28.252082,19.3941937%20L28.2899196,19.2544634%20L28.2913034,19.2493624%20L28.292618,19.2442615%20L28.3288003,19.1039915%20L28.3301149,19.0988906%20L28.3313257,19.093755%20L28.3657852,18.9530128%20L28.3670306,18.9478773%20L28.3682414,18.9427088%20L28.4009781,18.8014927%20L28.4021889,18.7963243%20L28.4032959,18.7911559%20L28.4343427,18.6495004%20L28.435467,18.6442974%20L28.4365394,18.639129%20L28.4658634,18.4970013%20L28.4669185,18.4917983%20L28.4679391,18.486597%20L28.4955402,18.3440628%20L28.4965607,18.3388269%20L28.4975121,18.3336239%20L28.5233576,18.1906521%20L28.5243089,18.1854162%20L28.5251911,18.1801786%20L28.5493138,18.0368349%20L28.5501959,18.0315991%20L28.5510089,18.0263286%20L28.5520813,18.0196398%20L28.5619131,17.8587273%20L28.5417099,17.6987955%20L28.4921828,17.5453848%20L28.4150217,17.4038314%20L28.3129612,17.2790683%20L28.1895162,17.1753871%20L28.0489418,17.096434%20L27.8962074,17.0449489%20L27.7365109,17.0226839%20L27.7364815,17.0226839%20Z%20M6.84064123,22.7102229%20L6.68121648,22.7340757%20L6.52895363,22.7871159%20L6.38922469,22.8674528%20L6.26679279,22.97235%20L6.16598257,23.0981267%20L6.09023964,23.2404568%20L6.04226687,23.3943414%20L6.02365213,23.5544755%20L6.03510478,23.7152859%20L6.07618566,23.8711632%20L6.14547586,24.0167037%20L6.22270514,24.1260272%20L6.26229966,24.1737641%20L6.26571171,24.1778514%20L6.26919139,24.1819387%20L6.36392077,24.2932895%20L6.36740045,24.2973786%20L6.37091386,24.3013985%20L6.46712959,24.411701%20L6.47064318,24.4157226%20L6.47419049,24.4197079%20L6.57185884,24.5289311%20L6.57543988,24.5329164%20L6.57905483,24.5368706%20L6.6781758,24.6449781%20L6.68179074,24.6489305%20L6.68547315,24.6528484%20L6.78604691,24.759842%20L6.78969558,24.7637598%20L6.79341172,24.7676119%20L6.89543827,24.8734898%20L6.89915458,24.8773419%20L6.90293817,24.8811594%20L7.00638362,24.9858871%20L7.01013365,24.9897063%20L7.01395115,24.9934892%20L7.1186804,25.0969352%20L7.12249789,25.1007181%20L7.12638302,25.1044353%20L7.23226097,25.2064266%20L7.23611219,25.2101437%20L7.24003122,25.2138263%20L7.34702381,25.3143992%20L7.35094284,25.3180489%20L7.35486169,25.3216969%20L7.46300299,25.4208186%20L7.46695575,25.4244337%20L7.47094224,25.4279796%20L7.58016461,25.5256829%20L7.58415109,25.5292306%20L7.58817131,25.5327436%20L7.69847476,25.6289593%20L7.70249497,25.6324724%20L7.70654909,25.635918%20L7.81793362,25.7306808%20L7.82198774,25.7341281%20L7.82610932,25.7375391%20L7.93854118,25.8308507%20L7.94262903,25.8342288%20L7.94678434,25.8376069%20L8.06026355,25.9293963%20L8.06438513,25.9327416%20L8.06857435,25.9360523%20L8.183067,26.0263887%20L8.18725604,26.0296665%20L8.19144525,26.0329098%20L8.30695153,26.1217603%20L8.31117447,26.1250036%20L8.31543114,26.1281793%20L8.43191712,26.2155095%20L8.43617379,26.2187198%20L8.44046437,26.221861%20L8.5579299,26.3076725%20L8.56222047,26.3108137%20L8.56654477,26.3138874%20L8.68499019,26.3982113%20L8.68931449,26.4013196%20L8.69367252,26.4043276%20L8.81303002,26.487131%20L8.81738805,26.4901702%20L8.82177999,26.4931435%20L8.9421172,26.5744266%20L8.94650913,26.5774%20L8.9509348,26.5803059%20L9.07215036,26.6600685%20L9.07657602,26.6630073%20L9.08103542,26.6658458%20L9.20316324,26.744088%20L9.20762263,26.7469265%20L9.21211575,26.7497304%20L9.33512192,26.8264193%20L9.33961522,26.8292232%20L9.34414225,26.8319942%20L9.46802677,26.9071281%20L9.4725538,26.9098645%20L9.47711455,26.912568%20L9.6018437,26.9861486%20L9.60640445,26.9888505%20L9.61096521,26.9914866%20L9.73657271,27.0635121%20L9.74113346,27.0661482%20L9.74576185,27.0687151%20L9.87218007,27.1391874%20L9.87677473,27.1417561%20L9.88143684,27.1442555%20L10.008666,27.2131745%20L10.0132942,27.215674%20L10.0179565,27.2181406%20L10.1459963,27.2854717%20L10.1506584,27.2879365%20L10.1553544,27.2903356%20L10.2841375,27.3560789%20L10.2888334,27.358478%20L10.2935631,27.3608079%20L10.4231232,27.4249633%20L10.427853,27.427295%20L10.4326164,27.429592%20L10.5629199,27.4921595%20L10.5676834,27.494422%20L10.5724806,27.4966516%20L10.7035272,27.5575983%20L10.7082907,27.5598279%20L10.7130881,27.5619901%20L10.844878,27.6213472%20L10.8496752,27.6235093%20L10.8545063,27.625604%20L10.9869718,27.6833404%20L10.9918029,27.6854351%20L10.9966677,27.6874952%20L11.1298428,27.7436108%20L11.1346737,27.745638%20L11.1395724,27.7476306%20L11.2733892,27.8021238%20L11.2782879,27.8041164%20L11.2831865,27.8060433%20L11.412071,27.8566844%20L11.5669351,27.9014132%20L11.727441,27.9165829%20L11.887947,27.9017522%20L12.0429462,27.8573607%20L12.1869658,27.7849961%20L12.3151069,27.687125%20L12.4228092,27.5672259%20L12.5064236,27.4293897%20L12.5629774,27.278411%20L12.5905785,27.1195932%20L12.5881799,26.9584126%20L12.5559166,26.8004735%20L12.4949033,26.6512504%20L12.4072687,26.5159482%20L12.296053,26.3992595%20L12.1651078,26.3052388%20L12.0446692,26.2467932%20L11.9207171,26.1981119%20L11.7950082,26.1468949%20L11.6731846,26.0955775%20L11.5509892,26.0423021%20L11.4304493,25.9880442%20L11.3051121,25.9297354%20L11.1860248,25.8725733%20L11.0664308,25.8133493%20L10.9464991,25.7521345%20L10.8283577,25.6900064%20L10.7109934,25.6264582%20L10.5923115,25.5602773%20L10.4763663,25.4937903%20L10.3612317,25.425852%20L10.2461309,25.3560543%20L10.1326856,25.2853451%20L10.0180239,25.2118665%20L9.90616632,25.1382859%20L9.79518724,25.0632869%20L9.68505262,24.9869353%20L9.57410727,24.9079148%20L9.46407401,24.8275104%20L9.35542591,24.746025%20L9.24893996,24.6640656%20L9.14468379,24.5818018%20L9.03880584,24.4961599%20L8.93367132,24.4088972%20L8.8326582,24.3229525%20L8.72823321,24.2319052%20L8.62765928,24.1419061%20L8.52823422,24.0507913%20L8.42833591,23.9568726%20L8.33097164,23.8630889%20L8.23188423,23.7652178%20L8.13813473,23.6702872%20L8.04164882,23.570152%20L7.94921685,23.4717741%20L7.85661589,23.3707601%20L7.76803532,23.2717076%20L7.67803568,23.1685315%20L7.58965783,23.0646479%20L7.55388098,23.0215398%20L7.43982749,22.9075875%20L7.30661874,22.8168118%20L7.15888292,22.7523174%20L7.0017215,22.716372%20L6.84064123,22.7102229%20L6.84064123,22.7102229%20Z%20M21.9041805,25.4112463%20L21.7435724,25.4251429%20L21.5883369,25.4685208%20L21.4674259,25.5259527%20L21.4076295,25.5602099%20L21.2888461,25.6264582%20L21.171481,25.6900064%20L21.0533393,25.7521345%20L20.9334091,25.8133493%20L20.8138145,25.8725733%20L20.6947267,25.9297354%20L20.5693893,25.9880442%20L20.4488503,26.0423021%20L20.3266541,26.0955775%20L20.2048316,26.1468949%20L20.0791224,26.1980774%20L19.9537176,26.2473675%20L19.8300685,26.2942256%20L19.7026037,26.3407465%20L19.5778752,26.3845638%20L19.4492272,26.4280092%20L19.3234505,26.4687856%20L19.1921664,26.5095621%20L19.064532,26.5475018%20L18.9378784,26.5834817%20L18.8075751,26.6187853%20L18.6767978,26.652501%20L18.5480495,26.6840217%20L18.4157517,26.7147312%20L18.2863271,26.7430744%20L18.1512947,26.7709471%20L18.0184573,26.7966214%20L17.8882889,26.8201698%20L17.7573092,26.8421961%20L17.6207564,26.8634457%20L17.489135,26.8822633%20L17.3545419,26.899865%20L17.2225141,26.9154394%20L17.0851171,26.9299656%20L16.9497803,26.9425337%20L16.8171107,26.9532424%20L16.6786656,26.9626677%20L16.5428565,26.9702369%20L16.4093099,26.9760125%20L16.2730269,26.9802693%20L16.1324871,26.9828708%20L15.9722838,27.0008772%20L15.8181968,27.0483096%20L15.6756315,27.1235127%20L15.5494488,27.2238504%20L15.4441116,27.3458753%20L15.3632336,27.485334%20L15.3096528,27.6373609%20L15.2851935,27.7967184%20L15.2907677,27.9578333%20L15.3261392,28.1150943%20L15.3900578,28.2631014%20L15.4803613,28.3966479%20L15.5938399,28.511107%20L15.7266444,28.6025245%20L15.8740754,28.6677281%20L16.0310338,28.7044172%20L16.1646478,28.7122874%20L16.3102229,28.7095856%20L16.3155591,28.7094472%20L16.3209316,28.7092742%20L16.4677209,28.7047476%20L16.4730588,28.7045746%20L16.4784313,28.7043394%20L16.6249508,28.6979878%20L16.6303216,28.6977508%20L16.6356595,28.6974464%20L16.781942,28.6892718%20L16.7872799,28.6889673%20L16.7926178,28.68863%20L16.9386651,28.6786634%20L16.9439684,28.6782915%20L16.9493064,28.6778521%20L17.0950492,28.6660952%20L17.1003871,28.6656905%20L17.1056904,28.6651837%20L17.2511634,28.6516365%20L17.2564668,28.6511625%20L17.2617718,28.6505883%20L17.4069058,28.6352854%20L17.4122091,28.6347112%20L17.4175142,28.6341023%20L17.5623108,28.6170075%20L17.5676142,28.6164003%20L17.5728846,28.6156911%20L17.7173769,28.5968389%20L17.7226473,28.5961643%20L17.7279178,28.595386%20L17.8720381,28.5747781%20L17.8773086,28.574036%20L17.8825445,28.5732248%20L18.0263275,28.5508595%20L18.0315651,28.5500482%20L18.036801,28.5491713%20L18.1801793,28.5250486%20L18.1854152,28.5241699%20L18.1906182,28.5232255%20L18.33359,28.4973471%20L18.3388276,28.4964338%20L18.3440289,28.4954202%20L18.4865959,28.467819%20L18.4917989,28.4668054%20L18.4969673,28.4657589%20L18.6390951,28.436435%20L18.6442981,28.4353539%20L18.6494665,28.4342382%20L18.7911548,28.4031915%20L18.796325,28.4020429%20L18.8014588,28.4008598%20L18.9426749,28.3680902%20L18.9478433,28.3669071%20L18.9529789,28.3656582%20L19.0937211,28.3311987%20L19.0988566,28.3299482%20L19.1039576,28.3285972%20L19.2442276,28.2924495%20L19.2493285,28.2911315%20L19.2544295,28.289746%20L19.3941927,28.2518755%20L19.3992936,28.25049%20L19.4043617,28.2490699%20L19.5435835,28.2095094%20L19.5486516,28.2080564%20L19.5537196,28.2065706%20L19.6924018,28.1653202%20L19.6974681,28.1638015%20L19.7025016,28.1622465%20L19.840644,28.1193408%20L19.8456775,28.1177529%20L19.8506764,28.1161321%20L19.9882446,28.0715711%20L19.9932781,28.0699157%20L19.998277,28.0682275%20L20.1352363,28.0219765%20L20.1402369,28.0202883%20L20.1452358,28.0185655%20L20.281588,27.9706591%20L20.2865869,27.9689035%20L20.29152,27.9670786%20L20.4272962,27.9175187%20L20.4322623,27.9157284%20L20.4371937,27.9138361%20L20.5723299,27.8626536%20L20.5772613,27.8607613%20L20.5821599,27.8588361%20L20.7166526,27.8059984%20L20.7215512,27.8040732%20L20.7264497,27.8020788%20L20.8602662,27.7475874%20L20.8651647,27.745593%20L20.8699958,27.7435658%20L21.0031722,27.6874519%20L21.0080362,27.6853918%20L21.0128673,27.6832971%20L21.1453328,27.6255608%20L21.1501639,27.6234661%20L21.1549605,27.6213039%20L21.2867514,27.5619451%20L21.2915479,27.5597829%20L21.2963115,27.5575533%20L21.4273587,27.4966083%20L21.4321552,27.4943787%20L21.4369188,27.4921145%20L21.5672222,27.4295471%20L21.5719858,27.42725%20L21.5767166,27.4249201%20L21.7062762,27.3607647%20L21.7110052,27.358433%20L21.7157014,27.3560339%20L21.8444843,27.2902924%20L21.8491805,27.2878933%20L21.8538421,27.2854267%20L21.981883,27.2180956%20L21.9865446,27.215629%20L21.9911733,27.2131295%20L22.118403,27.1442105%20L22.1230646,27.1417111%20L22.1276587,27.1391442%20L22.2540771,27.0686719%20L22.2587058,27.0661033%20L22.2632671,27.0634689%20L22.328097,27.026273%20L22.4598188,26.9334008%20L22.5720483,26.8176582%20L22.6608314,26.6830981%20L22.723129,26.5344164%20L22.7567444,26.3767489%20L22.7604944,26.2156012%20L22.7342771,26.0565481%20L22.6790073,25.9050955%20L22.5965757,25.76655%20L22.4898865,25.6457048%20L22.3625911,25.5467872%20L22.2191782,25.473172%20L22.0645844,25.4274624%20L21.9041805,25.4112463%20L21.9041805,25.4112463%20Z%20M6.32983299,26.8178035%20L6.17037433,26.8414869%20L6.01807793,26.8943247%20L5.87821372,26.9745266%20L5.75571436,27.0792889%20L5.65473515,27.2049653%20L5.57885713,27.3471933%20L5.53071536,27.5010433%20L5.5119318,27.6611792%20L5.52318173,27.8219879%20L5.56412734,27.9778998%20L5.63324873,28.1235405%20L5.72821439,28.253811%20L5.82429503,28.3469859%20L5.85571386,28.3730338%20L5.85980153,28.3764448%20L5.86395702,28.3797901%20L6.00888861,28.497053%20L6.01304409,28.5004312%20L6.0172333,28.5037073%20L6.16348243,28.6190797%20L6.16763791,28.6223904%20L6.17186085,28.6256336%20L6.31939395,28.7391119%20L6.32361689,28.7423552%20L6.32787356,28.7455309%20L6.47665655,28.8571187%20L6.4809134,28.8602945%20L6.4852038,28.8634356%20L6.63527076,28.9730636%20L6.63956116,28.9762065%20L6.64388546,28.9792802%20L6.79516859,29.0870159%20L6.7994929,29.0900896%20L6.80385093,29.0931305%20L6.95635023,29.1989081%20L6.96067453,29.2019144%20L6.96510019,29.2048878%20L7.11878176,29.3087385%20L7.12317369,29.3117101%20L7.12759936,29.3146161%20L7.28242963,29.416507%20L7.28685529,29.4194129%20L7.29131468,29.4222843%20L7.44732739,29.5222172%20L7.45178679,29.5250539%20L7.45628008,29.5278578%20L7.6134076,29.6258309%20L7.61790089,29.6286348%20L7.62242792,29.6313712%20L7.78067041,29.7273846%20L7.78519726,29.730121%20L7.78975819,29.73279%20L7.94908158,29.826809%20L7.95364251,29.8295125%20L7.958237,29.8321469%20L8.11864164,29.9241404%20L8.12323612,29.9267747%20L8.12783078,29.9293434%20L8.2893165,30.0193753%20L8.29394471,30.021944%20L8.2985731,30.024478%20L8.46107226,30.1124845%20L8.46573438,30.1149839%20L8.47039667,30.1174505%20L8.63390928,30.2034626%20L8.6386053,30.2058946%20L8.64330114,30.2082937%20L8.80782736,30.2922803%20L8.81252321,30.2946795%20L8.81725296,30.2970094%20L8.98272517,30.3789688%20L8.98745474,30.3813004%20L8.99221822,30.3835975%20L9.15867014,30.463495%20L9.16343362,30.4657921%20L9.1681971,30.4680217%20L9.335595,30.5458592%20L9.34039221,30.5480905%20L9.34518942,30.5502527%20L9.51349941,30.6260629%20L9.51833052,30.628225%20L9.52316163,30.6303526%20L9.69234997,30.7040681%20L9.69721481,30.7061974%20L9.70204575,30.7082246%20L9.87214634,30.7799129%20L9.87701118,30.7819402%20L9.88187602,30.7839328%20L10.0528548,30.8535281%20L10.0577196,30.8555208%20L10.0626521,30.8574459%20L10.2344418,30.9249466%20L10.2393403,30.9269046%20L10.2442728,30.9287641%20L10.4169071,30.9941683%20L10.4218057,30.996026%20L10.4267719,30.9978508%20L10.6001832,31.0611621%20L10.6051494,31.0629524%20L10.6101156,31.064708%20L10.7843377,31.1259246%20L10.7893039,31.1276474%20L10.7943039,31.1293373%20L10.9692691,31.1884246%20L10.9742691,31.1901128%20L10.9793029,31.1917353%20L11.1550114,31.248695%20L11.1600452,31.2503157%20L11.1650791,31.2518708%20L11.341497,31.3067012%20L11.3465645,31.3082545%20L11.3515984,31.3097749%20L11.5287597,31.3624432%20L11.5338271,31.3639636%20L11.5388946,31.3653837%20L11.7167316,31.4159227%20L11.721833,31.4173757%20L11.7269343,31.4187612%20L11.9054132,31.4671051%20L11.9105145,31.4684906%20L11.9156495,31.4698087%20L12.0947702,31.5160234%20L12.0999054,31.5173414%20L12.1050405,31.518592%20L12.2848368,31.5626117%20L12.289972,31.5638623%20L12.295107,31.5650783%20L12.4755116,31.6069012%20L12.4806468,31.6080843%20L12.4858155,31.6092329%20L12.6446323,31.6440297%20L12.8046654,31.6636914%20L12.9655092,31.65332%20L13.1216907,31.6132873%20L13.2677036,31.5449772%20L13.39848,31.4507195%20L13.5095267,31.333863%20L13.5969248,31.1984241%20L13.6577015,31.0491008%20L13.6896946,30.8910942%20L13.6917893,30.7299136%20L13.6639853,30.5711304%20L13.6071613,30.420252%20L13.5233103,30.2825507%20L13.4154055,30.1628211%20L13.2871292,30.065187%20L13.1429407,29.9930594%20L13.0147995,29.9543759%20L12.8611178,29.9206947%20L12.6928754,29.8817086%20L12.5219641,29.8398493%20L12.3529446,29.796269%20L12.1838576,29.7504591%20L12.0172031,29.703127%20L11.8494337,29.6532297%20L11.6839954,29.6018103%20L11.5182528,29.5481284%20L11.3517672,29.4919125%20L11.1891667,29.434785%20L11.0239648,29.3744471%20L10.8628508,29.3134001%20L10.6992029,29.2491098%20L10.5382917,29.1836035%20L10.3786303,29.116307%20L10.217381,29.0460371%20L10.0603549,28.9752932%20L9.90309209,28.902152%20L9.74559286,28.8265441%20L9.59008696,28.7495508%20L9.43657421,28.6712065%20L9.28079796,28.5893164%20L9.12816357,28.5066478%20L8.97434674,28.4209384%20L8.82370568,28.3345198%20L8.67188202,28.2449254%20L8.52445045,28.1555006%20L8.37684973,28.0634397%20L8.22830319,27.968305%20L8.08286478,27.8726307%20L7.93854118,27.7750969%20L7.79350805,27.6744548%20L7.65138051,27.573273%20L7.51043523,27.4702681%20L7.37077374,27.3655716%20L7.23063936,27.2578031%20L7.09202522,27.1484103%20L6.95601224,27.0383776%20L6.92881653,27.0158099%20L6.79567523,26.9248992%20L6.64800704,26.8602371%20L6.49091326,26.8241222%20L6.32983299,26.8178035%20L6.32983299,26.8178035%20Z%20M25.5452087,26.905068%20L25.3842979,26.9145607%20L25.2279138,26.9537164%20L25.0815293,27.0212153%20L24.9712595,27.0970929%20L24.9078134,27.1484103%20L24.7692005,27.2578031%20L24.6290654,27.3655716%20L24.4894042,27.4702681%20L24.3484579,27.573273%20L24.2063302,27.6744548%20L24.0612983,27.7750969%20L23.9169738,27.8726307%20L23.7715354,27.968305%20L23.6229887,28.0634397%20L23.4753881,28.1555006%20L23.3279571,28.2449254%20L23.1761343,28.3345198%20L23.0254929,28.4209384%20L22.8716757,28.5066478%20L22.7190417,28.5893164%20L22.5632647,28.6712065%20L22.409752,28.7495508%20L22.2542466,28.8265441%20L22.0967469,28.902152%20L21.9394841,28.9752932%20L21.7824583,29.0460371%20L21.6212085,29.116307%20L21.4615483,29.1836035%20L21.3006358,29.2491098%20L21.1369887,29.3134001%20L20.9758738,29.3744471%20L20.8106716,29.434785%20L20.6480726,29.4919125%20L20.481587,29.5481284%20L20.3158434,29.6018103%20L20.1504059,29.6532297%20L19.9826368,29.703127%20L19.8159817,29.7504591%20L19.6468945,29.796269%20L19.4778748,29.8398493%20L19.3069646,29.8817086%20L19.1386869,29.9207276%20L18.9698713,29.9577212%20L18.8589599,29.9805933%20L18.7048054,30.0277212%20L18.5620688,30.1026528%20L18.4357179,30.202788%20L18.3301444,30.3246106%20L18.2489963,30.4639015%20L18.1951448,30.6158593%20L18.170415,30.7751493%20L18.1756526,30.9362641%20L18.2107193,31.0936272%20L18.2744007,31.2417346%20L18.3644344,31.3754507%20L18.4777103,31.4901122%20L18.6103125,31.5818012%20L18.7576415,31.64724%20L18.9145341,31.6842318%20L19.0755798,31.6914621%20L19.2083826,31.6746388%20L19.3226739,31.6510904%20L19.3278752,31.6500093%20L19.3330453,31.6488608%20L19.5140243,31.6092329%20L19.5191927,31.6080843%20L19.5243282,31.6069012%20L19.7047312,31.5650783%20L19.7098667,31.5638623%20L19.7150023,31.5626117%20L19.8947981,31.518592%20L19.8999337,31.5173414%20L19.9050692,31.5160234%20L20.0841888,31.4698087%20L20.0893243,31.4684561%20L20.0944252,31.4670723%20L20.2729048,31.4187266%20L20.2780057,31.4173428%20L20.2831067,31.4158898%20L20.4609445,31.3653491%20L20.4660126,31.3639307%20L20.4710789,31.3624103%20L20.6482404,31.309742%20L20.6532739,31.3082216%20L20.658342,31.3066666%20L20.8347597,31.2518362%20L20.8397932,31.2502829%20L20.8448284,31.2486604%20L21.0205369,31.1917007%20L21.0255704,31.1901128%20L21.0305693,31.18839%20L21.2055358,31.1293027%20L21.2105347,31.1276145%20L21.2155007,31.1258917%20L21.3897234,31.0646752%20L21.3946894,31.0629178%20L21.3996554,31.0611275%20L21.5730669,30.997818%20L21.5780329,30.9959931%20L21.5829315,30.9941354%20L21.7555663,30.9287295%20L21.7604995,30.9268717%20L21.765398,30.924912%20L21.937187,30.8574131%20L21.9421202,30.8554862%20L21.9469842,30.8534935%20L22.1179636,30.7838999%20L22.1228276,30.7819056%20L22.1276933,30.7798783%20L22.2977941,30.70819%20L22.3026252,30.7061628%20L22.3074892,30.7040352%20L22.4766784,30.6303197%20L22.4815095,30.6281904%20L22.4863388,30.6260283%20L22.6546494,30.5502181%20L22.6594476,30.5480559%20L22.6642441,30.5458263%20L22.8316413,30.4679889%20L22.836405,30.4657593%20L22.8411686,30.4634622%20L23.0076214,30.3835629%20L23.0123851,30.3812658%20L23.0171141,30.3789359%20L23.1825862,30.2969765%20L23.1873152,30.2946449%20L23.1920114,30.2922457%20L23.3565373,30.2082609%20L23.3612335,30.2058617%20L23.3659297,30.2034298%20L23.5294419,30.1174159%20L23.5341053,30.1149493%20L23.5387669,30.1124499%20L23.7012655,30.0244434%20L23.7058942,30.0219094%20L23.710523,30.0193425%20L23.872008,29.9293088%20L23.8766021,29.9267419%20L23.881198,29.9241058%20L24.0416019,29.832114%20L24.0461961,29.8294779%20L24.0507574,29.8267761%20L24.2100802,29.7327554%20L24.2146415,29.7300864%20L24.2191682,29.72735%20L24.3774117,29.6313384%20L24.3819384,29.6286002%20L24.3864322,29.6257963%20L24.5435583,29.5278249%20L24.5480522,29.5250211%20L24.5525114,29.5221826%20L24.7085253,29.4222514%20L24.7129845,29.4193784%20L24.7174091,29.4164741%20L24.8722399,29.3145832%20L24.8766663,29.3116773%20L24.8810581,29.3087039%20L25.0347386,29.2048532%20L25.0391649,29.2018798%20L25.0434892,29.1988735%20L25.1959884,29.0930976%20L25.2003455,29.0900568%20L25.2046698,29.086983%20L25.355953,28.9792456%20L25.3602773,28.9761719%20L25.3645687,28.9730308%20L25.5146358,28.8634028%20L25.5189256,28.8602599%20L25.5231824,28.8570841%20L25.6719661,28.7454981%20L25.6762229,28.7423223%20L25.6804452,28.7390791%20L25.8279783,28.625599%20L25.8322005,28.6223558%20L25.836357,28.6190451%20L25.9826067,28.5036744%20L25.9867943,28.5003966%20L25.9909509,28.4970184%20L26.059261,28.4417487%20L26.1745642,28.3291144%20L26.266997,28.1970537%20L26.3332799,28.0500949%20L26.371185,27.8934063%20L26.3793268,27.7323935%20L26.3574355,27.5726988%20L26.3062859,27.4198278%20L26.2276718,27.2790855%20L26.124295,27.1553707%20L25.9997672,27.0530058%20L25.8583833,26.9755403%20L25.7051075,26.9256413%20L25.5452087,26.905068%20L25.5452087,26.905068%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchNonInterruptingMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M23.6369451,13.5913665%20C21.0954447,11.7463794%2018.5539427,9.90139248%2016.0124423,8.05640536%20C13.4709124,9.90137329%2010.9294128,11.7463827%208.38789443,13.5913665%20C9.35866173,16.5765685%2010.3294289,19.5617706%2011.3001962,22.5469725%20C14.4416785,22.5469725%2017.5831615,22.5469725%2020.7246432,22.5469725%20C21.6954105,19.5617706%2022.6661778,16.5765685%2023.6369451,13.5913665%20L23.6369451,13.5913665%20Z%20M22.6202194,13.9214192%20C21.7789087,16.5085949%2020.9375963,19.0957707%2020.0962856,21.6829464%20C17.3737079,21.6829464%2014.6511309,21.6829464%2011.9285537,21.6829464%20C11.0872425,19.0957707%2010.2459313,16.5085949%209.40462009,13.9214192%20C11.6072126,12.3224529%2013.8098049,10.7234864%2016.0123974,9.12452015%20C18.2150047,10.7234864%2020.4176121,12.3224529%2022.6202194,13.9214192%20Z%20M16.0124198,0%20C14.5636987,0.0207684905%2013.0826288,0.156985298%2011.7097152,0.627831403%20C10.8578501,1.07485233%2011.4545148,2.49127171%2012.3706271,2.20174994%20C14.6249715,1.59380403%2017.0181941,1.59499271%2019.2923056,2.09416059%20C20.2260085,2.16942797%2020.5198958,0.718081204%2019.6304725,0.424196491%20C18.4512612,0.128147598%2017.2270737,0.00557911446%2016.0124198,0%20Z%20M25.024187,2.93408756%20C24.111481,2.82953881%2023.7518245,4.1920577%2024.5703436,4.58169577%20C26.4035188,5.94125619%2027.862571,7.76666539%2028.8805173,9.80241074%20C29.4055865,10.5781649%2030.7219968,9.9000921%2030.3952431,9.02220267%20C29.2589092,6.63656413%2027.4995724,4.53264061%2025.3344617,3.01587705%20C25.2349927,2.97173154%2025.1320917,2.94622993%2025.024187,2.93408756%20L25.024187,2.93408756%20Z%20M6.6503957,3.27796126%20C5.88841121,3.36661745%205.41032184,4.08702259%204.84488132,4.54468495%20C3.38067707,5.98370331%202.16287748,7.69629953%201.37105767,9.5935809%20C1.10499193,10.4917357%202.46470968,11.0783941%202.93549233,10.2685635%20C3.90059026,8.0987752%205.40305073,6.18412126%207.26189192,4.70907449%20C7.73759321,4.19422897%207.35167403,3.29037871%206.6503957,3.27796126%20L6.6503957,3.27796126%20Z%20M16.0124198,3.28508661%20C15.3139133,3.35125396%2014.3231087,3.12417114%2013.9785906,3.91993237%20C13.6971613,4.65275617%2014.5142774,5.27775047%2015.195572,5.04452073%20C17.0021888,4.89829496%2018.8268884,5.24771786%2020.4894707,5.95176985%20C21.390793,6.20686339%2021.9607901,4.84013042%2021.1453054,4.37923053%20C19.5450498,3.6437209%2017.7709959,3.29025302%2016.0124198,3.28508661%20Z%20M10.5332681,4.64977539%20C9.69786681,4.80075797%209.01625646,5.40964739%208.32268996,5.87567185%20C7.11977717,6.81528477%206.00490644,7.93717954%205.2663569,9.27836232%20C4.93549957,10.1817089%206.32885194,10.8302763%206.81313042,10.0005013%20C7.85797279,8.34494801%209.40851655,7.0758983%2011.0975921,6.12827859%20C11.6426196,5.6294164%2011.2692555,4.66508891%2010.5332681,4.64977539%20L10.5332681,4.64977539%20Z%20M24.4360597,6.76515764%20C23.5613362,6.69543375%2023.2155618,7.93794341%2023.9346534,8.39223095%20C25.2601358,9.7325909%2026.123377,11.4535264%2026.6828774,13.2321458%20C27.1505682,14.0728429%2028.5519188,13.4417262%2028.2401831,12.5329701%20C27.6362769,10.4154534%2026.4889674,8.43581869%2024.8888449,6.91769406%20C24.753316,6.82784228%2024.5980611,6.77610026%2024.4360597,6.76515764%20Z%20M4.46717071,12.8209893%20C3.64522734,12.7509916%203.47127163,13.6473541%203.42078936,14.276484%20C3.16465219,16.2056304%203.3270833,18.2085233%203.98264654,20.0447022%20C4.38894363,20.8887277%205.79019473,20.4098697%205.59493247,19.4937205%20C4.98094788,17.627158%204.87943231,15.6112102%205.26088567,13.6864988%20C5.26710814,13.2465272%204.90597753,12.8528077%204.46717071,12.8209893%20L4.46717071,12.8209893%20Z%20M31.1538059,14.4212532%20C30.4082347,14.3841039%2030.1399435,15.2062756%2030.2754965,15.8157946%20C30.3179727,18.2086263%2029.7049392,20.5871002%2028.6153935,22.7101195%20C28.3058744,23.5942433%2029.6353472,24.2464708%2030.1450768,23.4605767%20C31.5100856,20.9142155%2032.1610325,17.9719282%2031.9661058,15.0880975%20C31.8795853,14.7151593%2031.5366136,14.4334233%2031.1538059,14.4212532%20L31.1538059,14.4212532%20Z%20M0.956842305,14.9924288%20C0.174967659,14.9192009%20-0.0866143305,15.7672919%200.0243032647,16.3956487%20C0.0918399252,18.8103983%200.685349262,21.2286841%201.832899,23.358459%20C2.36735458,24.1277471%203.67541677,23.433665%203.33796714,22.5598458%20C2.2559739,20.4450417%201.71506813,18.071703%201.73506947,15.6987159%20C1.66713111,15.3219719%201.33855727,15.0235722%200.956842305,14.9924288%20Z%20M27.7440416,17.0155186%20C26.9670304,16.9683171%2026.7917797,17.8132668%2026.7227514,18.4081014%20C26.3694058,20.0999873%2025.5206137,21.6394971%2024.5070366,23.0161009%20C24.099838,23.8877044%2025.4323556,24.6535421%2025.9861053,23.8684099%20C27.3480746,22.1349757%2028.2826782,20.0411782%2028.5691257,17.8512101%20C28.55912,17.411306%2028.1837435,17.0311257%2027.7440416,17.0155186%20Z%20M6.85699687,22.7006636%20C6.0493215,22.7190649%205.77461097,23.8228656%206.38746722,24.2911694%20C7.77950556,25.8979618%209.57444489,27.1772937%2011.5813014,27.8896688%20C12.4913672,28.1115783%2013.0110005,26.7249718%2012.1792222,26.2941662%20C10.3435195,25.5940553%208.70971327,24.4083497%207.45593092,22.8979451%20C7.28717862,22.7620738%207.07337653,22.6918348%206.85699687,22.7006636%20L6.85699687,22.7006636%20Z%20M21.9141955,25.4005604%20C21.1036125,25.5949698%2020.410314,26.1608512%2019.5888694,26.3734579%20C18.3861145,26.8308128%2017.0897087,26.9093234%2015.8307736,27.0369243%20C14.9620723,27.3444389%2015.2580339,28.765064%2016.1770787,28.7002017%20C18.3783721,28.6664592%2020.5890503,28.0744439%2022.4695999,26.9220639%20C23.0738829,26.4272693%2022.6967377,25.390076%2021.9141955,25.4005604%20Z%20M6.34640364,26.8065153%20C5.51340198,26.8152041%205.23670501,28.0248885%205.95071893,28.4244768%20C7.93656451,30.0256932%2010.3091955,31.1729061%2012.8185106,31.6503634%20C13.7522056,31.725656%2014.0460999,30.2742399%2013.1566436,29.9804345%20C10.8324188,29.4900183%208.64414692,28.4231878%206.8120498,26.9135659%20C6.66829959,26.8375261%206.50881089,26.8013534%206.34640364,26.8065153%20Z%20M25.5536911,26.893743%20C24.7882382,26.9841096%2024.3126666,27.7351633%2023.6322802,28.0516271%20C22.1158981,29.0434324%2020.380641,29.6319716%2018.6364485,30.0569316%20C17.7637358,30.4617385%2018.2903438,31.9056274%2019.2195323,31.6613062%20C21.7634083,31.1351707%2024.1996631,30.0008446%2026.1827817,28.31719%20C26.6521117,27.7965551%2026.2550432,26.8974795%2025.5536911,26.893743%20L25.5536911,26.893743%20Z'%20transform='translate(0%20.311)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchNonInterruptingParallel = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M13.5091228,9.0811368%20L13.5091228,13.5092226%20L9.08103559,13.5092226%20L9.08103559,18.4908192%20L13.5091228,18.4908192%20L13.5091228,22.9189049%20L18.4907179,22.9189049%20L18.4907179,18.4908192%20L22.9188037,18.4908192%20L22.9188037,13.5092055%20L18.4907179,13.5092055%20L18.4907179,9.0811368%20L13.5091228,9.0811368%20Z%20M14.3393889,9.91140289%20L17.6604518,9.91140289%20L17.6604518,14.3394888%20L22.0885376,14.3394888%20L22.0885376,17.6605531%20L17.6604518,17.6605531%20L17.6604518,22.0886388%20L14.3393889,22.0886388%20L14.3393889,17.6346004%20L9.91130186,17.6346004%20L9.91130186,14.3394888%20L14.3393889,14.3394888%20L14.3393889,9.91140289%20Z%20M15.9999196,0%20L15.9945488,3.45944207e-05%20L15.8065091,0.00121772361%20L15.8011712,0.00125231803%20L15.7957986,0.00135610129%20L15.6080305,0.0048357811%20L15.602658,0.00493956436%20L15.5972872,0.00511253646%20L15.4098212,0.0109233613%20L15.4044496,0.0110963334%20L15.3991117,0.0113333052%20L15.2119168,0.0194413725%20L15.206579,0.0196783443%20L15.2012074,0.0199827752%20L15.0143501,0.0304218147%20L15.0090124,0.0307262456%20L15.0036746,0.0310635412%20L14.8171214,0.0437999961%20L14.8118174,0.0441718861%20L14.8064797,0.0445766408%20L14.620298,0.0596103382%20L14.614994,0.0600496874%20L14.6096563,0.0605236309%20L14.4238464,0.0778208413%20L14.4185423,0.0783276495%20L14.4132383,0.0788673225%20L14.2278339,0.0984280458%20L14.2225298,0.0990023132%20L14.2172595,0.0996094453%20L14.0322605,0.121433682%20L14.0269565,0.122075408%20L14.0216862,0.122751729%20L13.8371264,0.146839478%20L13.8318561,0.147548664%20L13.826586,0.148292444%20L13.642499,0.174609803%20L13.6372287,0.175353583%20L13.6319584,0.176197687%20L13.4483446,0.20474483%20L13.4430743,0.205588934%20L13.4378379,0.206467632%20L13.2546969,0.237244386%20L13.2494941,0.238123084%20L13.2442577,0.239069242%20L13.0616236,0.272109681%20L13.0564208,0.273055838%20L13.0512181,0.274069455%20L12.8690908,0.309305775%20L12.8638881,0.310319392%20L12.8587192,0.311367602%20L12.6771659,0.348833706%20L12.6719633,0.349880187%20L12.6667943,0.351028722%20L12.4858155,0.390656804%20L12.4806468,0.391805339%20L12.4755116,0.392988468%20L12.295107,0.434846333%20L12.289972,0.436029462%20L12.2848368,0.437280051%20L12.1050405,0.481333797%20L12.0999054,0.482584385%20L12.0947702,0.483902433%20L11.9246698,0.527753628%20L11.7730151,0.582381678%20L11.6340969,0.664205613%20L11.5128137,0.770387479%20L11.413321,0.897244874%20L11.3390984,1.04035231%20L11.2927472,1.1947434%20L11.2758217,1.35504668%20L11.2889634,1.51572151%20L11.3316998,1.67115995%20L11.4025103,1.81599035%20L11.4989962,1.94514516%20L11.6177457,2.05413108%20L11.7547045,2.13919824%20L11.9050415,2.1973736%20L12.0635541,2.22666401%20L12.2247697,2.22598769%20L12.3565933,2.2026771%20L12.5219978,2.16004207%20L12.6903416,2.11882611%20L12.8611515,2.07916412%20L13.0324683,2.04166429%20L13.2044269,2.00622542%20L13.3737166,1.97345516%20L13.5471279,1.94207024%20L13.7173634,1.91345546%20L13.8937477,1.8859894%20L14.0652671,1.86146264%20L14.2399284,1.83869242%20L14.4145559,1.81808435%20L14.5899267,1.79957098%20L14.7656014,1.78321975%20L14.94131,1.76906441%20L15.1175928,1.75707121%20L15.2940109,1.74724017%20L15.470902,1.73957128%20L15.6451244,1.7341659%20L15.8224208,1.73088894%20L15.9999196,1.72977327%20L16.1774183,1.73088894%20L16.3547147,1.7341659%20L16.5289374,1.73957128%20L16.7058274,1.74724017%20L16.8822468,1.75707121%20L17.0585296,1.76906441%20L17.2342381,1.78321975%20L17.409912,1.79957098%20L17.5852833,1.81808435%20L17.7599107,1.83869242%20L17.9345728,1.86146264%20L18.1060919,1.8859894%20L18.282475,1.91345546%20L18.4527107,1.94207024%20L18.6261221,1.97345516%20L18.7954117,2.00622542%20L18.9673702,2.04166429%20L19.1211873,2.07534663%20L19.2811865,2.09504244%20L19.4420644,2.08467086%20L19.5982115,2.04463733%20L19.7442259,1.97629311%20L19.8750344,1.88207054%20L19.9860478,1.76521301%20L20.0734801,1.62974074%20L20.1342227,1.48045094%20L20.1662156,1.32244507%20L20.1683449,1.16122954%20L20.1405067,1.00244668%20L20.0836837,0.851602725%20L19.9998649,0.713900671%20L19.8919268,0.59417163%20L19.7636507,0.496503277%20L19.6194957,0.424375121%20L19.4913546,0.385693023%20L19.3330453,0.351030971%20L19.3278752,0.349882436%20L19.3226739,0.348835955%20L19.1411206,0.311369851%20L19.1359505,0.31032164%20L19.1307492,0.309308024%20L18.9486217,0.274071703%20L18.9434187,0.273058087%20L18.9382157,0.27211193%20L18.7555814,0.23907149%20L18.7503455,0.238125333%20L18.7451425,0.237246635%20L18.5620014,0.206469881%20L18.5567655,0.205591183%20L18.5514951,0.204747079%20L18.36788,0.176199936%20L18.3626113,0.175355832%20L18.3573408,0.174612052%20L18.1732535,0.148294692%20L18.167983,0.147550912%20L18.1627126,0.146841727%20L17.9781531,0.122753978%20L17.9728826,0.122077657%20L17.9675793,0.12143593%20L17.7825787,0.0996116939%20L17.77731,0.0990045618%20L17.7720049,0.0984302944%20L17.5866013,0.0788695711%20L17.5812963,0.0783298982%20L17.5759929,0.0778230899%20L17.3901828,0.0605258796%20L17.3848449,0.060051936%20L17.3795416,0.0596125868%20L17.1933596,0.0445788894%20L17.1880217,0.0441741347%20L17.1827184,0.0438022447%20L16.9961645,0.0310657898%20L16.9908266,0.0307284942%20L16.9854887,0.0304240633%20L16.7986321,0.0199850239%20L16.7932596,0.019680593%20L16.7879217,0.0194436212%20L16.6007278,0.0113355538%20L16.5953899,0.0110985821%20L16.5900173,0.0109256099%20L16.4025519,0.0051147851%20L16.3971811,0.004941813%20L16.3918086,0.00483802974%20L16.2040405,0.00135834993%20L16.198668,0.00125456667%20L16.19333,0.00121997225%20L16.0052903,3.68430581e-05%20L15.9999196,0%20L15.9999196,0%20Z%20M25.0154816,2.93532311%20L24.854301,2.93890415%20L24.6965989,2.97234986%20L24.5478498,3.03447798%20L24.4132221,3.12312618%20L24.2973775,3.23522024%20L24.2043376,3.36687501%20L24.1373455,3.51352958%20L24.0987294,3.67001537%20L24.0898456,3.83099428%20L24.1109932,3.99079075%20L24.161399,4.14393195%20L24.2393713,4.28501232%20L24.3421756,4.40920076%20L24.4437967,4.49629498%20L24.4893696,4.5296056%20L24.6308228,4.63561865%20L24.7675451,4.74078707%20L24.907848,4.85149596%20L25.0438611,4.96152905%20L25.1786237,5.07331919%20L25.3134209,5.1880144%20L25.4471698,5.30470311%20L25.5764924,5.4203782%20L25.708823,5.5416614%20L25.8369988,5.6621337%20L25.9637544,5.78426152%20L26.0904773,5.90939594%20L26.214327,6.03480071%20L26.3377738,6.16290818%20L26.4594285,6.29236707%20L26.5769613,6.420542%20L26.6952379,6.55277104%20L26.8118246,6.68641915%20L26.9252026,6.81966163%20L27.0383436,6.95604616%20L27.1484438,7.0920927%20L27.2567209,7.22932185%20L27.3655377,7.37080749%20L27.4703346,7.51057033%20L27.5732737,7.65144798%20L27.674388,7.79347434%20L27.7738124,7.93671686%20L27.8725967,8.08289853%20L27.9683385,8.22843829%20L28.0622243,8.37495795%20L28.1554321,8.52445047%20L28.2467838,8.6750578%20L28.3344184,8.82363807%20L28.4209391,8.97448185%20L28.5054982,9.1261028%20L28.5893153,9.28089934%20L28.6695519,9.43343237%20L28.7484704,9.58805991%20L28.7887746,9.66934331%20L28.8734358,9.80653856%20L28.9821177,9.92559197%20L29.1110026,10.0224159%20L29.2556298,10.0936655%20L29.4109328,10.1368409%20L29.5715737,10.150422%20L29.7319448,10.1339355%20L29.8864712,10.0880237%20L30.029782,10.0142064%20L30.156875,9.91505157%20L30.2633947,9.79407246%20L30.3456239,9.65539069%20L30.4006584,9.5038711%20L30.4266371,9.34478416%20L30.4226518,9.18360253%20L30.3887995,9.02600194%20L30.3388676,8.90181333%20L30.2970101,8.81725298%20L30.2946455,8.81252323%20L30.2922464,8.80782738%20L30.2082944,8.64330116%20L30.2058953,8.63860531%20L30.2034287,8.63394302%20L30.1174166,8.47043042%20L30.1149829,8.46573457%20L30.1124506,8.46110618%20L30.0244441,8.29860702%20L30.0219101,8.29394473%20L30.0193431,8.28935025%20L29.9293423,8.12786453%20L29.9267408,8.12327004%20L29.9241393,8.11867539%20L29.832113,7.95823701%20L29.8294786,7.95367626%20L29.826775,7.9491155%20L29.7327889,7.78975821%20L29.7300871,7.78523118%20L29.7273507,7.78070416%20L29.6313719,7.62246166%20L29.6286009,7.61793464%20L29.6258316,7.61344151%20L29.5278585,7.45631383%20L29.5250546,7.45182071%20L29.5221833,7.44736131%20L29.4222504,7.29134843%20L29.4194136,7.28688904%20L29.4164731,7.28246337%20L29.3145821,7.12759937%20L29.3116762,7.12317371%20L29.3087046,7.11878177%20L29.2048867,6.96510021%20L29.2019133,6.96070828%20L29.1988742,6.95635024%20L29.0930966,6.80385095%20L29.0900557,6.79949291%20L29.086982,6.79516861%20L28.9792792,6.64391938%20L28.9761726,6.63956118%20L28.9730643,6.63530451%20L28.8634017,6.48523772%20L28.8602605,6.48094714%20L28.8570848,6.47669047%20L28.7455316,6.32790731%20L28.7423212,6.32365064%20L28.739078,6.31942769%20L28.6255997,6.1718946%20L28.6223564,6.16767166%20L28.6190786,6.16348262%20L28.503708,6.01723332%20L28.5003973,6.01307784%20L28.497052,6.00892253%20L28.3797561,5.86399076%20L28.3764109,5.85983545%20L28.3729999,5.8557476%20L28.2538446,5.71213354%20L28.2504318,5.70801178%20L28.2469862,5.70395784%20L28.1259403,5.56169503%20L28.122493,5.55760718%20L28.1189799,5.55358696%20L27.9960746,5.41267558%20L27.9925615,5.40865519%20L27.9890139,5.4046687%20L27.864218,5.26514249%20L27.8606703,5.261156%20L27.8570552,5.25723714%20L27.7304344,5.11912964%20L27.7268193,5.11517706%20L27.7231385,5.11125803%20L27.5946583,4.97456959%20L27.5910103,4.97068446%20L27.5872931,4.96679934%20L27.4569898,4.83156352%20L27.4532743,4.8277123%20L27.4494897,4.82389463%20L27.3173632,4.6901116%20L27.3135786,4.68629411%20L27.3097611,4.68251017%20L27.1759775,4.55038249%20L27.1721601,4.54659872%20L27.1683097,4.54288259%20L27.0330403,4.41257925%20L27.0291882,4.40886294%20L27.0253033,4.40518054%20L26.8885809,4.27673526%20L26.884696,4.27305286%20L26.8807436,4.26943809%20L26.7426357,4.14281697%20L26.7386833,4.1392022%20L26.7346963,4.13562116%20L26.5951701,4.01085828%20L26.5912177,4.00731097%20L26.5871632,4.00379739%20L26.4462861,3.88089275%20L26.4422316,3.87737917%20L26.4381771,3.87389949%20L26.2959145,3.75288648%20L26.2918618,3.7494068%20L26.2877398,3.74599475%20L26.1441246,3.62683998%20L26.1400372,3.62346148%20L26.1358824,3.62008317%20L25.9909509,3.50282019%20L25.9867943,3.4994756%20L25.9826067,3.49616491%20L25.836357,3.3807939%20L25.8322005,3.37748304%20L25.8279783,3.37423982%20L25.6804452,3.2607606%20L25.6762229,3.25751738%20L25.6719661,3.25434178%20L25.5231824,3.14278827%20L25.5189256,3.13957877%20L25.5146358,3.13647081%20L25.4643321,3.09971424%20L25.325887,3.01714704%20L25.1745018,2.9617081%20L25.0154816,2.93532311%20L25.0154816,2.93532311%20Z%20M6.63395306,3.27934161%20L6.47290669,3.28684151%20L6.31604936,3.32403743%20L6.16885408,3.38974642%20L6.05767228,3.46427318%20L6.0172333,3.49616491%20L6.01304409,3.4994756%20L6.00888861,3.50282019%20L5.86395702,3.62008317%20L5.85980153,3.62346148%20L5.85571386,3.62683998%20L5.71209962,3.74599475%20L5.70797804,3.7494068%20L5.70392409,3.75288648%20L5.56166128,3.87389949%20L5.55760716,3.87737917%20L5.55355321,3.88089275%20L5.41267557,4.00379739%20L5.40862144,4.00731097%20L5.40466869,4.01085828%20L5.26514247,4.13562116%20L5.26115598,4.1392022%20L5.25720322,4.14281697%20L5.11909589,4.26943809%20L5.11514314,4.27305286%20L5.11125801,4.27673526%20L4.97453584,4.40518054%20L4.97065072,4.40886294%20L4.96679932,4.41257925%20L4.83152977,4.54288259%20L4.82767838,4.54659872%20L4.82386088,4.55038249%20L4.69007768,4.68251017%20L4.68626019,4.68629411%20L4.68247642,4.6901116%20L4.55034874,4.82389463%20L4.54656498,4.8277123%20L4.54284885,4.83156352%20L4.41254533,4.96679934%20L4.40882919,4.97068446%20L4.40518052,4.97456959%20L4.27670151,5.11125803%20L4.27301911,5.11517706%20L4.26940417,5.11912964%20L4.14278322,5.25723714%20L4.13916845,5.261156%20L4.13562114,5.26514249%20L4.01082436,5.4046687%20L4.00727722,5.40865519%20L4.00376364,5.41267558%20L3.88085883,5.55358696%20L3.87734542,5.55760718%20L3.87389947,5.56169503%20L3.75285273,5.70395784%20L3.74940678,5.70801178%20L3.74599473,5.71213354%20L3.62683978,5.8557476%20L3.62342774,5.85983545%20L3.62008315,5.86399076%20L3.50278644,6.00892253%20L3.49944185,6.01307784%20L3.49613099,6.01723332%20L3.38075998,6.16348262%20L3.37748303,6.16767166%20L3.3742398,6.1718946%20L3.26076059,6.31942769%20L3.25751736,6.32365064%20L3.25430786,6.32790731%20L3.14275452,6.47669047%20L3.13957875,6.48094714%20L3.13643689,6.48523772%20L3.02677534,6.63530451%20L3.02366721,6.63956118%20L3.02055907,6.64391938%20L2.91285695,6.79516861%20L2.90978272,6.79949291%20L2.90674222,6.80385095%20L2.80096562,6.95635024%20L2.79792512,6.96070828%20L2.79495207,6.96510021%20L2.69113508,7.11878177%20L2.68816221,7.12317371%20L2.6852568,7.12759937%20L2.58336533,7.28246337%20L2.58042619,7.28688904%20L2.57758841,7.29134843%20L2.47765637,7.44736131%20L2.47478486,7.45182071%20L2.47198081,7.45631383%20L2.37400837,7.61344151%20L2.37123805,7.61793464%20L2.36846773,7.62246166%20L2.27248862,7.78070416%20L2.26975203,7.78523118%20L2.26704934,7.78975821%20L2.17306339,7.9491155%20L2.17036071,7.95367626%20L2.16772565,7.95823701%20L2.07569895,8.11867539%20L2.07309763,8.12327004%20L2.0704963,8.12786453%20L1.98049684,8.28935025%20L1.97792924,8.29394473%20L1.97539537,8.29860702%20L1.88738907,8.46110618%20L1.88485537,8.46573457%20L1.88242287,8.47043042%20L1.79640989,8.63394302%20L1.79394366,8.63860531%20L1.79154505,8.64330116%20L1.7075927,8.80782738%20L1.70519409,8.81252323%20L1.70282922,8.81725298%20L1.62090392,8.98275891%20L1.61853922,8.98748866%20L1.61627571,8.99225214%20L1.53634357,9.15870406%20L1.53408006,9.16346754%20L1.53185045,9.16823102%20L1.4539791,9.33562875%20L1.45178322,9.34042596%20L1.44958733,9.34522334%20L1.40462133,9.44512148%20L1.35239189,9.59762077%20L1.32938521,9.75718062%20L1.33641221,9.91826089%20L1.37316878,10.0751859%20L1.43843876,10.2226176%20L1.52992475,10.3553534%20L1.64445113,10.4687988%20L1.77806534,10.5590009%20L1.92607134,10.622852%20L2.08336785,10.658156%20L2.24448202,10.6636288%20L2.40380541,10.6391019%20L2.55583181,10.5854536%20L2.69525666,10.504508%20L2.81721549,10.3991031%20L2.91748534,10.2728876%20L2.98174171,10.1554558%20L3.02454556,10.0603886%20L3.09873433,9.90092995%20L3.17380163,9.74461316%20L3.25140262,9.58799228%20L3.33028724,9.43343237%20L3.41052347,9.28089934%20L3.49434056,9.1261028%20L3.57890091,8.97448185%20L3.66542069,8.82363807%20L3.75305545,8.6750578%20L3.84440635,8.52445047%20L3.9376153,8.37495795%20L4.03150006,8.22843829%20L4.12724272,8.08289853%20L4.22602605,7.93671686%20L4.32545128,7.79347434%20L4.42656558,7.65144798%20L4.52950422,7.51057033%20L4.6343011,7.37080749%20L4.74311802,7.22932185%20L4.85139458,7.0920927%20L4.9614953,6.95604616%20L5.0746367,6.81966163%20L5.18801438,6.68641915%20L5.30460173,6.55277104%20L5.42287815,6.420542%20L5.54041131,6.29236707%20L5.66206605,6.16290818%20L5.7855114,6.03480071%20L5.90936219,5.90939594%20L6.0360845,5.78426152%20L6.1628407,5.6621337%20L6.29101563,5.5416614%20L6.42334603,5.4203782%20L6.55266966,5.30470311%20L6.68641913,5.1880144%20L6.82121577,5.07331919%20L6.95597851,4.96152905%20L7.09209268,4.8513946%20L7.12901825,4.82223929%20L7.24570678,4.71105749%20L7.33976037,4.58011207%20L7.40786813,4.43399804%20L7.44766521,4.27778261%20L7.45780033,4.11690506%20L7.4379018,3.95693959%20L7.38864522,3.80342685%20L7.31175376,3.66173831%20L7.2098962,3.53677271%20L7.08665357,3.43288809%20L6.94624883,3.35366565%20L6.79358071,3.30190911%20L6.63395306,3.27934161%20L6.63395306,3.27934161%20Z%20M15.9999196,3.28646806%20L15.9945488,3.28650456%20L15.847353,3.28741612%20L15.8419805,3.28745072%20L15.8366097,3.2875545%20L15.6896163,3.29029092%20L15.6842801,3.2903947%20L15.6789076,3.29056768%20L15.5321179,3.29512843%20L15.52678,3.2953014%20L15.5214085,3.29553838%20L15.3748888,3.30188974%20L15.3695174,3.30212671%20L15.3641794,3.30239655%20L15.2178964,3.31057225%20L15.2125587,3.31087668%20L15.2072209,3.31124857%20L15.0611744,3.3212147%20L15.0558703,3.321552%20L15.0505324,3.32199135%20L14.9047899,3.33374791%20L14.8994522,3.33418726%20L14.8941482,3.33466121%20L14.7486759,3.34820838%20L14.7433718,3.34871519%20L14.7380678,3.34925486%20L14.6882033,3.35452498%20L14.5301635,3.38631535%20L14.3807723,3.44685558%20L14.2451987,3.5341188%20L14.1281722,3.64499651%20L14.0337808,3.77563784%20L13.9652338,3.92158306%20L13.9249976,4.0776634%20L13.9144233,4.23854094%20L13.9338826,4.39857387%20L13.9827,4.55218797%20L14.059186,4.69411297%20L14.1606721,4.81934875%20L14.2836443,4.92360492%20L14.4238126,5.00319924%20L14.5763457,5.05539496%20L14.7359057,5.07840146%20L14.8697226,5.07468532%20L14.9145872,5.06998948%20L15.050127,5.05735438%20L15.1827277,5.04664499%20L15.3185717,5.03738821%20L15.4544493,5.02978696%20L15.5906312,5.02384104%20L15.7268122,5.0196181%20L15.8632647,5.01708423%20L15.9999196,5.01624013%20L16.1365744,5.01708423%20L16.2730269,5.0196181%20L16.4092079,5.02384104%20L16.5453905,5.02978696%20L16.6812671,5.03738821%20L16.8171107,5.04664499%20L16.9497128,5.05735438%20L17.0850825,5.06995558%20L17.2198797,5.08417855%20L17.3546423,5.1000906%20L17.4892025,5.11762427%20L17.6207564,5.13644173%20L17.7547077,5.15728625%20L17.8882889,5.17971866%20L18.0209222,5.20373877%20L18.153827,5.22944814%20L18.2837602,5.2562723%20L18.4158192,5.28519099%20L18.5480495,5.31586656%20L18.6766975,5.34735284%20L18.8076079,5.38113654%20L18.9355122,5.41576469%20L19.0645666,5.4524199%20L19.1946001,5.49110217%20L19.3210185,5.53035871%20L19.4493275,5.57191249%20L19.5754086,5.61447989%20L19.7026037,5.65917571%20L19.8300685,5.70569569%20L19.9561842,5.75349947%20L20.0768253,5.80089798%20L20.2025674,5.85208008%20L20.325708,5.90393798%20L20.3315198,5.90640404%20L20.3317274,5.90593183%20L20.4788557,5.95427615%20L20.6386854,5.97535712%20L20.7996308,5.9663707%20L20.9561152,5.92768843%20L21.1027367,5.86062801%20L21.2343235,5.76752042%20L21.3463852,5.65160887%20L21.4349642,5.51694732%20L21.496992,5.36816433%20L21.5303705,5.21042864%20L21.5338835,5.04928074%20L21.5074309,4.89026126%20L21.4518913,4.73891067%20L21.3692556,4.60049925%20L21.2623986,4.47982423%20L21.1349666,4.38107463%20L21.0167575,4.31823715%20L21.0128725,4.31654721%20L21.0080414,4.31445269%20L21.0031774,4.3123919%20L20.870001,4.25627733%20L20.8651699,4.25425027%20L20.8602713,4.25225694%20L20.7264549,4.19776398%20L20.7215564,4.19580455%20L20.7166578,4.19384513%20L20.5821651,4.14100751%20L20.5772665,4.13908198%20L20.5723351,4.13722374%20L20.4371989,4.08600792%20L20.4322674,4.08414985%20L20.4273014,4.08232551%20L20.2915252,4.03276485%20L20.2865921,4.03097442%20L20.2815932,4.02921754%20L20.145241,3.9813124%20L20.1402421,3.97955569%20L20.1352415,3.97786576%20L19.9982822,3.93161613%20L19.9932833,3.92992619%20L19.9882498,3.92830544%20L19.8506816,3.88371099%20L19.8456827,3.88209024%20L19.8406492,3.88053695%20L19.7025068,3.83759801%20L19.6974733,3.83604472%20L19.6924069,3.83452429%20L19.5537248,3.79330833%20L19.5486567,3.7917879%20L19.5435887,3.79036953%20L19.4043669,3.75080891%20L19.3992988,3.74935594%20L19.3941978,3.74797044%20L19.2544347,3.71009906%20L19.2493337,3.70874815%20L19.2442328,3.70739724%20L19.1039628,3.67124883%20L19.0988618,3.66993079%20L19.0937263,3.6686802%20L18.9529841,3.63422104%20L18.9478485,3.63293759%20L18.9426801,3.63175446%20L18.801464,3.59898437%20L18.7963302,3.59780125%20L18.79116,3.59665271%20L18.6494716,3.56563933%20L18.6443032,3.5644908%20L18.6391002,3.56344259%20L18.4969725,3.53411845%20L18.4918041,3.53303738%20L18.4866011,3.53202376%20L18.344034,3.50445633%20L18.3388328,3.50344271%20L18.3335952,3.50249656%20L18.1906234,3.4766521%20L18.1854204,3.47570595%20L18.1801845,3.47482725%20L18.0368062,3.45070577%20L18.0315703,3.44982707%20L18.0263327,3.44901583%20L17.8825497,3.42665123%20L17.8773138,3.42580713%20L17.8720433,3.42506335%20L17.727923,3.40445528%20L17.7226525,3.4037115%20L17.7173821,3.40300231%20L17.5728898,3.38415095%20L17.5676194,3.38347463%20L17.562316,3.3828329%20L17.4175194,3.36577214%20L17.4122143,3.36513041%20L17.406911,3.36459074%20L17.261777,3.34925296%20L17.2564719,3.34871329%20L17.2511686,3.34820648%20L17.1056956,3.3346593%20L17.1003923,3.33418536%20L17.0950544,3.33374601%20L16.9493115,3.32198944%20L16.9439736,3.32155009%20L16.9386703,3.3212128%20L16.792623,3.31124666%20L16.7872851,3.31087477%20L16.7819472,3.31057034%20L16.6356647,3.30239464%20L16.6303268,3.30212481%20L16.624956,3.30188784%20L16.4784365,3.29553647%20L16.473064,3.2952995%20L16.4677261,3.29512653%20L16.3209368,3.29056577%20L16.3155642,3.2903928%20L16.3102281,3.29028902%20L16.1632346,3.2875526%20L16.1578638,3.28744882%20L16.1524913,3.28741422%20L16.0052955,3.28650266%20L15.9999247,3.28646806%20L15.9999196,3.28646806%20Z%20M10.5184606,4.65173273%20L10.3574479,4.65963876%20L10.2007257,4.69734132%20L10.0777872,4.75028012%20L10.0179565,4.78173268%20L10.0132942,4.78419891%20L10.008666,4.78669888%20L9.88143684,4.85561754%20L9.87677473,4.85811751%20L9.87218007,4.8606851%20L9.74576185,4.93119147%20L9.74113346,4.93375907%20L9.73657271,4.9363604%20L9.61096521,5.00842075%20L9.60640445,5.01105598%20L9.6018437,5.01372477%20L9.47711455,5.08733927%20L9.4725538,5.09000823%20L9.46802677,5.09274465%20L9.34414225,5.16791314%20L9.33961522,5.17064973%20L9.33512192,5.17345378%20L9.21211575,5.25014252%20L9.20762263,5.25294657%20L9.20316324,5.25581825%20L9.08103542,5.33402724%20L9.07657602,5.33689893%20L9.07215036,5.33980416%20L8.9509348,5.41956731%20L8.94650913,5.42247272%20L8.9421172,5.42544577%20L8.82177999,5.50676289%20L8.81738805,5.50970204%20L8.81303002,5.51274254%20L8.69367252,5.59554619%20L8.68931449,5.59858669%20L8.68499019,5.6016611%20L8.56654477,5.685985%20L8.56222047,5.68905923%20L8.5579299,5.6922011%20L8.44046437,5.77804525%20L8.43617379,5.78118711%20L8.43191712,5.78436288%20L8.31543114,5.87169338%20L8.31117447,5.87490288%20L8.30695153,5.87814611%20L8.19144525,5.9669633%20L8.18725604,5.97020653%20L8.183067,5.97351722%20L8.06857435,6.06382094%20L8.06438513,6.06713162%20L8.06026355,6.07047621%20L7.94678434,6.16230018%20L7.94262903,6.16564477%20L7.93854118,6.16905682%20L7.82610932,6.26233341%20L7.82198774,6.26574563%20L7.81793362,6.26919141%20L7.70654909,6.36395452%20L7.70249497,6.36740047%20L7.69847476,6.37091388%20L7.58817131,6.46712961%20L7.58415109,6.47064319%20L7.58016461,6.47422424%20L7.47094224,6.57189259%20L7.46695575,6.57547363%20L7.46300299,6.57908857%20L7.35486169,6.67820972%20L7.35094284,6.68182449%20L7.34702381,6.68547316%20L7.24003122,6.78604693%20L7.23611219,6.78972933%20L7.23226097,6.79344564%20L7.12638302,6.89547202%20L7.12249789,6.89918833%20L7.1186804,6.90293836%20L7.01395115,7.00638364%20L7.01013365,7.0101674%20L7.00638362,7.01398507%20L6.90293817,7.11871432%20L6.89915458,7.12253181%20L6.89543827,7.12638303%20L6.79341172,7.23226099%20L6.78969558,7.23614611%20L6.78604691,7.24003124%20L6.68547315,7.34705773%20L6.68179074,7.35094286%20L6.6781758,7.35489544%20L6.57905483,7.46303674%20L6.57543988,7.46695576%20L6.57185884,7.47094225%20L6.47419049,7.58016462%20L6.47064318,7.58415111%20L6.46712959,7.58817133%20L6.37091386,7.69850868%20L6.36740045,7.70252889%20L6.36392077,7.70658284%20L6.26919139,7.81796754%20L6.26571171,7.82202148%20L6.26229966,7.82614306%20L6.16902307,7.93857493%20L6.16561085,7.94266278%20L6.16226626,7.94681826%20L6.07047619,8.06026357%20L6.06709788,8.06441888%20L6.06382092,8.06860809%20L5.97348347,8.18310075%20L5.97020651,8.18725623%20L5.96696329,8.19147917%20L5.87811236,8.30698527%20L5.87486913,8.31120821%20L5.87169337,8.31546506%20L5.78432896,8.43195087%20L5.78115337,8.43620754%20L5.7780115,8.44049811%20L5.69216735,8.55796382%20L5.68905921,8.56225422%20L5.68595108,8.56657852%20L5.60162718,8.6849902%20L5.59855294,8.68931451%20L5.59554617,8.69367254%20L5.51270879,8.81306377%20L5.50970202,8.81742197%20L5.50672915,8.82181373%20L5.42544575,8.94211721%20L5.42247271,8.94650915%20L5.41953356,8.95093481%20L5.35179734,9.05390718%20L5.27612205,9.19627135%20L5.22818317,9.35015564%20L5.20963589,9.51032383%20L5.22112245,9.67110002%20L5.26223706,9.82697763%20L5.33159489,9.9725174%20L5.42672955,10.1026182%20L5.5443978,10.212854%20L5.68044434,10.2993063%20L5.83017332,10.3590358%20L5.98841581,10.389914%20L6.14959744,10.390893%20L6.30821147,10.3619406%20L6.45864998,10.3040691%20L6.5957776,10.2192723%20L6.71472982,10.1104891%20L6.79675631,10.0047125%20L6.86155339,9.90626701%20L6.93658678,9.7952203%20L7.0142215,9.68329524%20L7.09070752,9.57589721%20L7.1711802,9.46566122%20L7.25161897,9.35839828%20L7.3348618,9.25018935%20L7.41780054,9.1449872%20L7.50371232,9.03880516%20L7.58965783,8.93525852%20L7.67806941,8.83130627%20L7.76685288,8.72955007%20L7.85779832,8.62779386%20L7.95036538,8.52684838%20L8.04289871,8.42840287%20L8.13685093,8.33090334%20L8.23195186,8.23458624%20L8.32962021,8.13810033%20L8.42840354,8.04293194%20L8.52681516,7.95039861%20L8.62765928,7.85796664%20L8.72971956,7.76671711%20L8.83107049,7.67827146%20L8.9352253,7.58969089%20L9.03880584,7.50374537%20L9.14464989,7.41807022%20L9.25052784,7.33459077%20L9.35704752,7.25266564%20L9.46579699,7.17114562%20L9.57410727,7.09195691%20L9.68329592,7.01422083%20L9.79343054,6.93780227%20L9.90623395,6.86155271%20L10.0180239,6.78800566%20L10.1307936,6.71577632%20L10.2443065,6.64496586%20L10.3593397,6.57516903%20L10.4744743,6.50723008%20L10.5923792,6.43952776%20L10.7089663,6.37452813%20L10.8283915,6.30986632%20L10.8829183,6.28118391%20L11.0179852,6.19317761%20L11.1343696,6.08165799%20L11.2280179,5.95044239%20L11.2957202,5.80412564%20L11.3350781,5.64780884%20L11.3447065,5.48689739%20L11.324335,5.32696583%20L11.274673,5.17362191%20L11.1973761,5.03213626%20L11.095147,4.90747458%20L10.9716003,4.80392794%20L10.8309591,4.72514451%20L10.6781557,4.67379342%20L10.5184606,4.65173273%20L10.5184606,4.65173273%20Z%20M24.4271066,6.76800646%20L24.2660938,6.77581061%20L24.1093378,6.81334417%20L23.9622441,6.87932352%20L23.829981,6.9714853%20L23.7170769,7.08655223%20L23.6275171,7.22060561%20L23.5644082,7.3689157%20L23.5298813,7.52638102%20L23.5251851,7.68752893%20L23.5504892,7.84675113%20L23.6049148,7.99850717%20L23.6865369,8.13749285%20L23.7729555,8.23972213%20L23.8629875,8.33090403%20L23.9569408,8.42840356%20L24.0494739,8.52684908%20L24.1420417,8.62779456%20L24.2329869,8.72955076%20L24.3217701,8.83130696%20L24.4101813,8.93525922%20L24.4961277,9.03880585%20L24.5820377,9.14498789%20L24.6649778,9.25019004%20L24.7482207,9.35839897%20L24.8286596,9.46566191%20L24.9091314,9.5758979%20L24.985618,9.68329593%20L25.063253,9.79522099%20L25.1382866,9.90623397%20L25.2130832,10.0199496%20L25.2852108,10.1325842%20L25.356055,10.2461985%20L25.4253788,10.3604885%20L25.4943981,10.477515%20L25.5608851,10.5934265%20L25.626426,10.7109934%20L25.6900053,10.8284591%20L25.7515592,10.9454855%20L25.8133154,11.0664646%20L25.8719979,11.1849437%20L25.9307825,11.3073756%20L25.9869984,11.4282871%20L26.0413221,11.5487933%20L26.0955436,11.6732184%20L26.1472675,11.7959542%20L26.198078,11.9207847%20L26.2464566,12.0438246%20L26.2944961,12.1706483%20L26.3407126,12.2972355%20L26.3845298,12.4219984%20L26.4277054,12.5498356%20L26.4695629,12.6789566%20L26.5087861,12.8051722%20L26.5472655,12.9346309%20L26.5689544,13.0109819%20L26.6272651,13.1612514%20L26.7124677,13.2981088%20L26.8215542,13.4167907%20L26.9508111,13.5131415%20L27.0956752,13.5838506%20L27.251146,13.626418%20L27.4118561,13.6393909%20L27.572158,13.6223301%20L27.726482,13.5758439%20L27.8695213,13.5014861%20L27.9962787,13.4018921%20L28.1023591,13.2804738%20L28.1840469,13.1415218%20L28.23854,12.9897995%20L28.2639115,12.8306112%20L28.2593174,12.6694633%20L28.2328319,12.5382477%20L28.2095205,12.4562887%20L28.2080675,12.4511874%20L28.2065799,12.4461537%20L28.1653295,12.307472%20L28.163842,12.3024044%20L28.1622506,12.2973706%20L28.1193449,12.1592293%20L28.1177882,12.1541957%20L28.1161622,12.1491619%20L28.0715683,12.0115951%20L28.0699078,12.0065951%20L28.0682126,12.001595%20L28.0219633,11.8646025%20L28.0202682,11.8596026%20L28.0185126,11.8546364%20L27.9706062,11.7182518%20L27.9688505,11.7132858%20L27.9670603,11.7083196%20L27.9174986,11.572577%20L27.9156754,11.5676108%20L27.913816,11.5626783%20L27.8626007,11.4275439%20L27.860743,11.4226116%20L27.8588178,11.4177128%20L27.8059454,11.2832203%20L27.8040202,11.2783217%20L27.8020276,11.2734231%20L27.7475673,11.1396062%20L27.7455747,11.1347076%20L27.7435129,11.1298428%20L27.687399,10.9967015%20L27.6853717,10.9918366%20L27.6832442,10.9870055%20L27.6255407,10.85454%20L27.6234131,10.8497089%20L27.621251,10.844878%20L27.5618921,10.7131218%20L27.55973,10.7083246%20L27.557535,10.7035273%20L27.4965554,10.5724807%20L27.4943258,10.5677172%20L27.4920616,10.5629537%20L27.4294941,10.4326503%20L27.4272316,10.4278869%20L27.4248671,10.4231571%20L27.3607118,10.2935969%20L27.3583801,10.2888673%20L27.355981,10.2841713%20L27.2902395,10.1553882%20L27.2878403,10.1506584%20L27.2853738,10.1459963%20L27.2180426,10.0179902%20L27.2156106,10.0133281%20L27.2130766,10.008666%20L27.1441922,9.88143686%20L27.1416582,9.87680847%20L27.1390912,9.87218009%20L27.0686189,9.7457956%20L27.0660503,9.74116721%20L27.0634159,9.73657272%20L26.9913886,9.61099896%20L26.9887543,9.60640447%20L26.9860853,9.60187744%20L26.9124701,9.47711457%20L26.9097683,9.47255381%20L26.9070319,9.46806052%20L26.8318962,9.34417599%20L26.8291598,9.33964897%20L26.826356,9.33515584%20L26.749667,9.21214967%20L26.7468632,9.20765638%20L26.7439918,9.20319698%20L26.6657479,9.08106916%20L26.6629112,9.07660977%20L26.6600052,9.07218411%20L26.5802426,8.95093481%20L26.5773038,8.94650915%20L26.5743304,8.94211721%20L26.4930474,8.82181373%20L26.490074,8.81742197%20L26.4870677,8.81306377%20L26.4042296,8.69367254%20L26.4012234,8.68931451%20L26.3981479,8.6849902%20L26.313824,8.56657852%20L26.3107175,8.56225422%20L26.3076092,8.55796382%20L26.2217648,8.44049811%20L26.2186219,8.43620754%20L26.2154462,8.43195087%20L26.1280831,8.31546506%20L26.1249074,8.31120821%20L26.1216641,8.30698527%20L26.0328118,8.19147917%20L26.0295703,8.18725623%20L26.0262925,8.18310075%20L25.9359544,8.06860809%20L25.9326783,8.06441888%20L25.9293001,8.06026357%20L25.837509,7.94681826%20L25.8341655,7.94266278%20L25.8307527,7.93857493%20L25.7374758,7.82614306%20L25.7340648,7.82202148%20L25.7305846,7.81796754%20L25.6358547,7.70658284%20L25.6323762,7.70252889%20L25.6288614,7.69850868%20L25.5326457,7.58817133%20L25.5291326,7.58415111%20L25.525585,7.58016462%20L25.4279163,7.47094225%20L25.4243358,7.46695576%20L25.4207206,7.46303674%20L25.3216007,7.35489544%20L25.3179856,7.35094286%20L25.314303,7.34705773%20L25.2137284,7.24003124%20L25.2100804,7.23614611%20L25.206365,7.23226099%20L25.1043374,7.12638303%20L25.1006219,7.12253181%20L25.0968373,7.11871432%20L25.0035275,7.02425529%20L24.8800825,6.92060712%20L24.7395081,6.84168859%20L24.5867391,6.79023614%20L24.4270772,6.76800646%20L24.4271066,6.76800646%20Z%20M4.44980871,12.8263883%20L4.28862707,12.8282464%20L4.13058731,12.8599691%20L3.98116241,12.9204419%20L3.84555505,13.0076373%20L3.7284948,13.1184475%20L3.63403577,13.2490889%20L3.5654551,13.3949664%20L3.52991469,13.5240199%20L3.50440805,13.6558435%20L3.50339444,13.6610461%20L3.50244828,13.6662488%20L3.47660383,13.8092211%20L3.47565767,13.8144575%20L3.47477897,13.8196941%20L3.45065749,13.9630717%20L3.44977879,13.9683083%20L3.44896755,13.9735446%20L3.42660278,14.117294%20L3.42579154,14.1225641%20L3.4250149,14.1278344%20L3.40440683,14.2719552%20L3.40366305,14.2772255%20L3.40298673,14.2824958%20L3.38413536,14.4269882%20L3.38342618,14.4322585%20L3.38281731,14.4375288%20L3.36572283,14.5823592%20L3.3650811,14.5876632%20L3.36454143,14.5929673%20L3.34923755,14.7381016%20L3.34866328,14.7434056%20L3.34815647,14.7487096%20L3.33464303,14.8941819%20L3.33413622,14.8994859%20L3.33369687,14.9047899%20L3.32194013,15.0505663%20L3.32153537,15.0558704%20L3.32116348,15.0612081%20L3.31119735,15.2072547%20L3.31082546,15.2125924%20L3.31052103,15.2179303%20L3.30237923,15.3642134%20L3.3020748,15.3695511%20L3.30183783,15.374889%20L3.29548647,15.5214422%20L3.29524949,15.52678%20L3.29507652,15.5321516%20L3.29051577,15.6789415%20L3.2903428,15.6842794%20L3.29023901,15.6896502%20L3.28750259,15.8366436%20L3.2874334,15.8420144%20L3.28736422,15.8473869%20L3.28641806,15.994581%20L3.28641806,15.9999535%20L3.28641806,16.0053243%20L3.28736422,16.1525201%20L3.2874334,16.1578926%20L3.28750259,16.1632288%20L3.29023901,16.3102551%20L3.2903428,16.315593%20L3.29051577,16.3209655%20L3.29507652,16.4677219%20L3.29524949,16.4730927%20L3.29548647,16.4784306%20L3.30183783,16.6249847%20L3.3020748,16.6303226%20L3.30237923,16.6356588%20L3.31052103,16.7819759%20L3.31082546,16.7873138%20L3.31119735,16.7926518%20L3.32116348,16.9386644%20L3.32153537,16.9440024%20L3.32194013,16.9493403%20L3.33369687,17.0950831%20L3.33413622,17.1003864%20L3.33464303,17.1057244%20L3.34815647,17.2511628%20L3.34866328,17.2564678%20L3.34923755,17.2617711%20L3.36454143,17.4069397%20L3.3650811,17.412243%20L3.36572283,17.4175135%20L3.38281731,17.5623448%20L3.38342618,17.5676481%20L3.38413536,17.5729185%20L3.40298673,17.7174108%20L3.40366305,17.7226813%20L3.40440683,17.7279517%20L3.4250149,17.8720721%20L3.42579154,17.8773425%20L3.42660278,17.8825784%20L3.44896755,18.0263286%20L3.44977879,18.0315991%20L3.45065749,18.0368349%20L3.47477897,18.1801786%20L3.47565767,18.1854162%20L3.47660383,18.1906521%20L3.50244828,18.3336239%20L3.50339444,18.3388269%20L3.50440805,18.3440628%20L3.53200921,18.486597%20L3.53298823,18.4917983%20L3.53406931,18.4970013%20L3.56339362,18.639129%20L3.56447469,18.6442974%20L3.56559036,18.6495004%20L3.59663747,18.7911559%20L3.59775141,18.7963243%20L3.59896741,18.8014927%20L3.63170359,18.9427088%20L3.63291958,18.9478773%20L3.63417017,18.9530128%20L3.6686295,19.093755%20L3.66988009,19.0988906%20L3.67119813,19.1039915%20L3.70738027,19.2442615%20L3.70869831,19.2493624%20L3.71008382,19.2544634%20L3.74792147,19.3941937%20L3.74930697,19.3992947%20L3.75075994,19.4043956%20L3.79032056,19.5436174%20L3.79177353,19.5486855%20L3.79325936,19.5537536%20L3.83450905,19.6924357%20L3.83599488,19.697502%20L3.83758277,19.7025355%20L3.88048798,19.8406434%20L3.88204127,19.8457114%20L3.88366202,19.8507103%20L3.90129704,19.9051031%20L3.96508051,20.0531431%20L4.05521523,20.1867899%20L4.16862681,20.301384%20L4.30129503,20.3929381%20L4.44865914,20.4582749%20L4.6055841,20.4951335%20L4.76666437,20.5022617%20L4.92622439,20.4793221%20L5.07875742,20.4271952%20L5.21899317,20.3476678%20L5.34199934,20.2434798%20L5.44355282,20.1182774%20L5.52010646,19.9764195%20L5.56899132,19.8228065%20L5.58855204,19.6627727%20L5.57804537,19.5019294%20L5.54676181,19.371761%20L5.53027532,19.3209158%20L5.49108641,19.1947344%20L5.45260687,19.0652752%20L5.41622184,18.9372014%20L5.38088416,18.8068652%20L5.34797898,18.6793311%20L5.31507381,18.5449405%20L5.28517523,18.4158531%20L5.25618891,18.2837249%20L5.22953357,18.1543677%20L5.20379047,18.0214975%20L5.17963527,17.887816%20L5.15723676,17.7546742%20L5.13679769,17.6234593%20L5.11723696,17.4865345%20L5.10004111,17.3546762%20L5.08416279,17.220218%20L5.06990609,17.0851165%20L5.05754118,16.9524486%20L5.04639261,16.8142058%20L5.03733873,16.6813356%20L5.0297373,16.5453553%20L5.02372392,16.4067424%20L5.01960234,16.2731612%20L5.01706847,16.1366084%20L5.01622437,15.9999535%20L5.01706847,15.8633332%20L5.01960234,15.7268132%20L5.02372392,15.5931646%20L5.0297373,15.4543818%20L5.03733873,15.3184027%20L5.04642651,15.1854981%20L5.05757508,15.0472217%20L5.06990609,14.91479%20L5.08412889,14.7799933%20L5.10007484,14.6448926%20L5.11723696,14.5133729%20L5.13679769,14.3764143%20L5.1571354,14.2456379%20L5.17970273,14.1115845%20L5.20372302,13.9788149%20L5.22811468,13.8526669%20L5.24385791,13.6922622%20L5.22956747,13.5316888%20L5.18571627,13.3765544%20L5.11382474,13.2322646%20L5.01642657,13.1038193%20L4.89686635,12.995678%20L4.75933329,12.9115905%20L4.60855697,12.85453%20L4.44980784,12.8263883%20L4.44980871,12.8263883%20Z%20M31.1476817,14.4273261%20L30.9867692,14.4368532%20L30.8303851,14.4761097%20L30.6840352,14.543677%20L30.5527857,14.6372575%20L30.4411304,14.7535744%20L30.3530565,14.8885738%20L30.2915372,15.0375595%20L30.2587331,15.1953966%20L30.2541718,15.3291798%20L30.260186,15.4681994%20L30.2656917,15.6452586%20L30.2690024,15.8224547%20L30.2700749,15.9999535%20L30.2690024,16.1773848%20L30.2656917,16.3546138%20L30.260186,16.5316057%20L30.2525165,16.708295%20L30.2426519,16.8848476%20L30.2306251,17.0608934%20L30.2164016,17.2371434%20L30.2003204,17.409946%20L30.1818418,17.5849799%20L30.1611664,17.7602819%20L30.1384292,17.93447%20L30.1134971,18.1086927%20L30.0869441,18.2794006%20L30.0576876,18.4532514%20L30.0265042,18.6257167%20L29.9935651,18.7959524%20L29.9581266,18.967878%20L29.9206937,19.138688%20L29.8815397,19.3075727%20L29.8392083,19.4803753%20L29.7960673,19.6475702%20L29.7511343,19.8135161%20L29.7030948,19.982669%20L29.6531958,20.1504053%20L29.6012696,20.3176001%20L29.5481291,20.4815517%20L29.4918786,20.648072%20L29.4335679,20.8140162%20L29.374818,20.9749287%20L29.3124875,21.1393871%20L29.2504268,21.2973591%20L29.1835696,21.4615805%20L29.1162731,21.6212424%20L29.0460032,21.7824922%20L28.9752593,21.939518%20L28.9011044,22.0989775%20L28.8265448,22.2542131%20L28.7484704,22.4118806%20L28.6677945,22.5698872%20L28.6082004,22.7196827%20L28.5774581,22.8779263%20L28.5766105,23.0391414%20L28.6056629,23.1976877%20L28.6636708,23.3481267%20L28.748569,23.4851517%20L28.8574532,23.6040372%20L28.9864731,23.7006577%20L29.1312006,23.7716714%20L29.2866056,23.8145754%20L29.4472466,23.8279202%20L29.6075848,23.8111972%20L29.7620437,23.7650154%20L29.9052179,23.6909626%20L30.0322105,23.5916386%20L30.1385278,23.470456%20L30.2084259,23.3563014%20L30.292243,23.1920453%20L30.2946421,23.1873491%20L30.2970066,23.1826201%20L30.3789314,23.0171135%20L30.3812959,23.0123844%20L30.3835601,23.0076553%20L30.4634923,22.8411697%20L30.4657547,22.8364389%20L30.4679861,22.8316424%20L30.5458564,22.6642434%20L30.5480531,22.6594815%20L30.5502482,22.6546504%20L30.6260255,22.4863399%20L30.6282205,22.4815417%20L30.6303152,22.4767105%20L30.7040653,22.3074885%20L30.70616,22.3026574%20L30.7082201,22.2977934%20L30.7798755,22.1277272%20L30.7819356,22.1228615%20L30.78393,22.1179629%20L30.8535236,21.9470181%20L30.8554834,21.9421195%20L30.8574431,21.9372209%20L30.9249421,21.765432%20L30.926869,21.7605317%20L30.9287267,21.7556002%20L30.9941309,21.5829654%20L30.9960232,21.578034%20L30.9978135,21.5731008%20L31.0611247,21.3996565%20L31.0629478,21.3947233%20L31.0646776,21.3897244%20L31.1258941,21.2155346%20L31.1276515,21.2105357%20L31.1293466,21.2055697%20L31.1884011,21.0305704%20L31.1900962,21.0255697%20L31.1917567,21.0205708%20L31.2487164,20.8448623%20L31.2503424,20.8398271%20L31.2519337,20.8347936%20L31.3067295,20.6583413%20L31.3083209,20.6533078%20L31.3098084,20.6482415%20L31.3624767,20.4711128%20L31.3639989,20.4660465%20L31.3654518,20.4609438%20L31.415958,20.2831406%20L31.4174109,20.2780397%20L31.4187947,20.2729387%20L31.4671404,20.0944592%20L31.4685242,20.0893582%20L31.4698388,20.0842227%20L31.5160552,19.9050686%20L31.5173698,19.8999676%20L31.5186152,19.8948321%20L31.5626366,19.7150362%20L31.5638474,19.7099007%20L31.5650582,19.7047651%20L31.6068811,19.5243621%20L31.6080919,19.519192%20L31.6091989,19.5140236%20L31.6488614,19.3330446%20L31.6499685,19.3278762%20L31.6510236,19.3227078%20L31.6884548,19.1411546%20L31.6895272,19.1359516%20L31.6905477,19.1307486%20L31.7257839,18.9486556%20L31.726839,18.9434526%20L31.7277903,18.9382496%20L31.7607969,18.7556153%20L31.7617482,18.7503794%20L31.7626304,18.7451418%20L31.7934402,18.5620007%20L31.7943223,18.5567648%20L31.7951353,18.551529%20L31.8237155,18.367881%20L31.8245284,18.3626434%20L31.8252722,18.3573747%20L31.8516245,18.1732874%20L31.8523683,18.168017%20L31.8530775,18.1627465%20L31.877131,17.978187%20L31.8778402,17.9728819%20L31.8784456,17.9676132%20L31.9002695,17.7826126%20L31.9009095,17.7773093%20L31.9014457,17.7720388%20L31.9210071,17.5866006%20L31.9215779,17.5812973%20L31.9220795,17.5759923%20L31.9393439,17.3901822%20L31.9398455,17.3848788%20L31.9402606,17.3795755%20L31.9552608,17.1933935%20L31.9556932,17.1880556%20L31.9560737,17.1827177%20L31.9687751,16.9961984%20L31.9691902,16.9908605%20L31.969467,16.9855226%20L31.9799404,16.7986314%20L31.9802172,16.7932935%20L31.9804593,16.7879556%20L31.9886011,16.6007617%20L31.9888433,16.5954238%20L31.9890163,16.5900513%20L31.9948264,16.402553%20L31.9949994,16.397215%20L31.9951723,16.3918425%20L31.9986508,16.2040744%20L31.9988238,16.1987019%20L31.9988238,16.1933311%20L32,16.0053243%20L31.9995676,16.0004932%20L32,15.994581%20L31.9988238,15.806543%20L31.9988238,15.8011705%20L31.9986508,15.7957997%20L31.9951723,15.6080298%20L31.9949994,15.6026919%20L31.9948264,15.5973211%20L31.9890163,15.4098213%20L31.9888433,15.4044833%20L31.9886011,15.3991456%20L31.9823171,15.2541801%20L31.9603237,15.0944511%20L31.9091083,14.9416142%20L31.8303922,14.8009391%20L31.7269462,14.6772912%20L31.6023527,14.5749942%20L31.4609342,14.497596%20L31.3076238,14.447799%20L31.1477267,14.4273261%20L31.1476817,14.4273261%20Z%20M0.9380021,14.9987422%20L0.776786565,15.0002961%20L0.618679338,15.0317487%20L0.469153084,15.091985%20L0.333410458,15.178944%20L0.21614748,15.2895515%20L0.121485902,15.4200239%20L0.0526348749,15.5658001%20L0.0120607394,15.7218126%20L0.000878352342,15.8551914%20L0,15.994581%20L0,15.9999535%20L0,16.0053243%20L0.0011824373,16.1933311%20L0.00121703172,16.1987019%20L0.00131908526,16.2040744%20L0.00479879966,16.3918425%20L0.0049008532,16.397215%20L0.00507036587,16.402553%20L0.0108811388,16.5900513%20L0.0110506515,16.5954238%20L0.0112871043,16.6007617%20L0.019429005,16.7879556%20L0.0196659768,16.7932935%20L0.0199358133,16.7986314%20L0.0303750257,16.9855226%20L0.0306794566,16.9908605%20L0.0310513466,16.9961984%20L0.043754072,17.1827177%20L0.044125962,17.1880556%20L0.0445653111,17.1933935%20L0.059565279,17.3795755%20L0.0600046281,17.3848788%20L0.0605114364,17.3901822%20L0.0777747442,17.5759923%20L0.0782815525,17.5812973%20L0.0788558198,17.5866006%20L0.0984165431,17.7720388%20L0.0989562161,17.7773093%20L0.0995979426,17.7826126%20L0.121422179,17.9676132%20L0.122031041,17.9728819%20L0.122740226,17.978187%20L0.146794246,18.1627465%20L0.147503432,18.168017%20L0.148247212,18.1732874%20L0.174598474,18.3573747%20L0.175342254,18.3626434%20L0.176153493,18.367881%20L0.204734538,18.551529%20L0.205545778,18.5567648%20L0.206424476,18.5620007%20L0.237235132,18.7451418%20L0.23811383,18.7503794%20L0.239059988,18.7556153%20L0.272066697,18.9382496%20L0.273012855,18.9434526%20L0.274026471,18.9486556%20L0.309262791,19.1307486%20L0.310276408,19.1359516%20L0.311357484,19.1411546%20L0.348789685,19.3227078%20L0.34987076,19.3278762%20L0.35098643,19.3330446%20L0.390648242,19.5140236%20L0.391763912,19.519192%20L0.392979906,19.5243621%20L0.434804041,19.7047651%20L0.436020035,19.7099007%20L0.437270624,19.7150362%20L0.48129064,19.8948321%20L0.482541229,19.8999676%20L0.483859276,19.9050686%20L0.530075173,20.0842227%20L0.531393221,20.0893582%20L0.532778727,20.0944592%20L0.581123047,20.2729387%20L0.582508553,20.2780397%20L0.583961519,20.2831406%20L0.634467989,20.4609438%20L0.635920955,20.4660465%20L0.63744138,20.4711128%20L0.690110001,20.6482415%20L0.691595832,20.6533078%20L0.693183716,20.6583413%20L0.747980759,20.8347936%20L0.749568643,20.8398271%20L0.751189392,20.8448623%20L0.808148587,21.0205708%20L0.809769335,21.0255697%20L0.811459273,21.0305704%20L0.870512987,21.2055697%20L0.872202924,21.2105357%20L0.873959629,21.2155346%20L0.935175494,21.3897244%20L0.936898296,21.3947233%20L0.938722633,21.3996565%20L1.00203319,21.5731008%20L1.00382362,21.578034%20L1.00571559,21.5829654%20L1.07112067,21.7556002%20L1.07297874,21.7605317%20L1.07490443,21.765432%20L1.14240403,21.9372209%20L1.14436346,21.9421195%20L1.14632289,21.9470181%20L1.21591717,22.1179629%20L1.21791051,22.1228615%20L1.21997129,22.1277272%20L1.29162637,22.2977934%20L1.29368716,22.3026574%20L1.29578168,22.3074885%20L1.36953128,22.4767105%20L1.37162597,22.4815417%20L1.37382185,22.4863399%20L1.44959851,22.6546504%20L1.45179439,22.6594815%20L1.45399027,22.6642434%20L1.53186162,22.8316424%20L1.53409123,22.8364389%20L1.53635474,22.8411697%20L1.61628688,23.0076553%20L1.61855039,23.0123844%20L1.6209151,23.0171135%20L1.70284039,23.1826201%20L1.70520527,23.1873491%20L1.70760387,23.1920453%20L1.72807685,23.2321472%20L1.81442764,23.3682953%20L1.92452853,23.4860304%20L2.05459542,23.5812672%20L2.20006773,23.6507258%20L2.35587771,23.6920091%20L2.51668763,23.7036311%20L2.67682209,23.6852182%20L2.83077401,23.637381%20L2.97317191,23.5618407%20L3.09908349,23.4611657%20L3.20411665,23.3388692%20L3.28462306,23.1992081%20L3.33783222,23.0470117%20L3.36185233,22.8876213%20L3.35590642,22.7265411%20L3.32012956,22.5693458%20L3.26867711,22.4457658%20L3.2514138,22.4119152%20L3.173306,22.2542131%20L3.09874551,22.0989775%20L3.02459063,21.939518%20L2.95384764,21.7824922%20L2.88357772,21.6212424%20L2.81628085,21.4615805%20L2.74942298,21.2973591%20L2.68736249,21.1393871%20L2.62503182,20.9749287%20L2.56628202,20.8140162%20L2.50797157,20.648072%20L2.45172173,20.4815517%20L2.3985802,20.3176001%20L2.34665484,20.1504053%20L2.29675637,19.982669%20L2.24871613,19.8135161%20L2.20378386,19.6475702%20L2.1606422,19.4803753%20L2.11831126,19.3075727%20L2.07915608,19.138688%20L2.04172388,18.967878%20L2.00628483,18.7959524%20L1.97334576,18.6257167%20L1.94216356,18.4532514%20L1.91290688,18.2794006%20L1.88635307,18.1086927%20L1.8614207,17.93447%20L1.83868438,17.7602819%20L1.81800885,17.5849799%20L1.7995292,17.409946%20L1.78344816,17.2371434%20L1.76922518,17.0608934%20L1.75719826,16.8848476%20L1.74733349,16.708295%20L1.7396646,16.5316057%20L1.73415786,16.3546138%20L1.730847,16.1773848%20L1.72976592,15.9999189%20L1.73057716,15.865933%20L1.71655691,15.7053266%20L1.67297607,15.5501245%20L1.60132099,15.4057334%20L1.50412554,15.2771191%20L1.38476804,15.1687751%20L1.24737008,15.0844512%20L1.09669511,15.0271205%20L0.93801362,14.9987422%20L0.9380021,14.9987422%20Z%20M27.7364815,17.0226839%20L27.5753338,17.0304555%20L27.4185778,17.0679888%20L27.2714512,17.1339344%20L27.1391535,17.2260628%20L27.0262494,17.341129%20L26.9366551,17.4751149%20L26.8735133,17.6234593%20L26.843648,17.749978%20L26.8434058,17.7499434%20L26.8428004,17.7536588%20L26.8428004,17.753728%20L26.8428004,17.7541674%20L26.8203002,17.887816%20L26.7961464,18.0214975%20L26.7704029,18.1543677%20L26.7437479,18.2837249%20L26.7147613,18.4158531%20L26.684863,18.5449405%20L26.6519568,18.6793311%20L26.6190523,18.8068652%20L26.5837141,18.9372014%20L26.5473295,19.0652752%20L26.5088501,19.1947344%20L26.4696615,19.3209833%20L26.4280738,19.4492611%20L26.3849311,19.5770633%20L26.3408094,19.7026376%20L26.2945947,19.8292583%20L26.2468908,19.9551699%20L26.1978047,20.0800004%20L26.1469942,20.2048309%20L26.0956422,20.3266552%20L26.0418254,20.4501331%20L25.9870953,20.5716529%20L25.9313862,20.6914845%20L25.8726033,20.8138813%20L25.813414,20.9334085%20L25.7516578,21.0543869%20L25.6894951,21.1725632%20L25.6265228,21.2888125%20L25.5603403,21.4075959%20L25.493855,21.5235063%20L25.4254774,21.6394183%20L25.3561536,21.7537079%20L25.2853769,21.8672209%20L25.2131801,21.9799572%20L25.1391601,22.0924565%20L25.0633499,22.204686%20L24.9857148,22.316611%20L24.90923,22.4240769%20L24.8287911,22.5341771%20L24.7483175,22.6414734%20L24.6640957,22.7509665%20L24.6198044,22.8071149%20L24.5322045,22.9424189%20L24.4711903,23.0916402%20L24.4389621,23.2496122%20L24.4366304,23.4107945%20L24.4642316,23.5696106%20L24.5208194,23.7205564%20L24.6044341,23.8583944%20L24.7121698,23.9782918%20L24.840311,24.0761282%20L24.9843639,24.14846%20L25.1393642,24.1928169%20L25.2998685,24.2076493%20L25.4603745,24.1924122%20L25.6152399,24.1476833%20L25.7591233,24.0749797%20L25.8869946,23.9768388%20L25.977805,23.8784609%20L26.0264534,23.8168067%20L26.0297312,23.8126173%20L26.0329744,23.8083934%20L26.121825,23.6928878%20L26.1250682,23.6886984%20L26.128244,23.6844416%20L26.2156088,23.5679552%20L26.2187828,23.5636984%20L26.2219257,23.5594087%20L26.30777,23.4419433%20L26.3108783,23.4376519%20L26.3139866,23.4333276%20L26.3983105,23.3148832%20L26.4013842,23.3105589%20L26.4043905,23.3062%20L26.4872286,23.1868095%20L26.4902348,23.1824506%20L26.4932082,23.1780588%20L26.5744913,23.057755%20L26.5774647,23.0533632%20L26.5804035,23.0489386%20L26.6601661,22.9277232%20L26.663072,22.9232968%20L26.6659105,22.9188376%20L26.7441527,22.7967089%20L26.747024,22.7922497%20L26.7498279,22.7877576%20L26.8265168,22.6647502%20L26.8293207,22.6602582%20L26.8320571,22.6557315%20L26.9071927,22.5318454%20L26.9099292,22.5273187%20L26.912631,22.5227592%20L26.9862462,22.398029%20L26.9889151,22.3934677%20L26.9915495,22.3888736%20L27.0635768,22.263301%20L27.0662112,22.2587052%20L27.0687798,22.254111%20L27.1392521,22.1276926%20L27.141819,22.1230639%20L27.1443531,22.1184369%20L27.2132375,21.9912073%20L27.2157715,21.9865785%20L27.2182035,21.9818823%20L27.2855346,21.8538761%20L27.2880012,21.8492145%20L27.2904003,21.8445183%20L27.3561436,21.7157025%20L27.358541,21.7110063%20L27.3608726,21.7062755%20L27.425028,21.5767159%20L27.4273925,21.5719869%20L27.4296567,21.5672561%20L27.4922224,21.4369199%20L27.4944866,21.4321891%20L27.4967163,21.4273926%20L27.5576958,21.2963455%20L27.5598926,21.2915818%20L27.5620547,21.2867507%20L27.6214118,21.1549944%20L27.623574,21.1501979%20L27.6257016,21.1453668%20L27.683405,21.0129013%20L27.6855326,21.0080355%20L27.6875598,21.0032044%20L27.7436754,20.8700298%20L27.7457355,20.8651658%20L27.7477282,20.8603001%20L27.8021885,20.7264491%20L27.8041811,20.7215851%20L27.8061063,20.7166519%20L27.8589787,20.5821592%20L27.8609038,20.5772606%20L27.8627616,20.5723292%20L27.9139786,20.4371947%20L27.9158363,20.4322616%20L27.9176594,20.4273301%20L27.9672211,20.291554%20L27.9690114,20.2865879%20L27.9707688,20.2816202%20L28.0186734,20.1452369%20L28.0204308,20.1402708%20L28.0221259,20.1352702%20L28.0683752,19.998278%20L28.0700703,19.993312%20L28.0716963,19.9882785%20L28.116292,19.8507103%20L28.1179525,19.8457114%20L28.1195092,19.8406434%20L28.162415,19.7025355%20L28.1640063,19.697502%20L28.1654939,19.6924357%20L28.2067443,19.5537536%20L28.2082318,19.5486855%20L28.2096848,19.5436174%20L28.2492452,19.4043956%20L28.2506982,19.3992947%20L28.252082,19.3941937%20L28.2899196,19.2544634%20L28.2913034,19.2493624%20L28.292618,19.2442615%20L28.3288003,19.1039915%20L28.3301149,19.0988906%20L28.3313257,19.093755%20L28.3657852,18.9530128%20L28.3670306,18.9478773%20L28.3682414,18.9427088%20L28.4009781,18.8014927%20L28.4021889,18.7963243%20L28.4032959,18.7911559%20L28.4343427,18.6495004%20L28.435467,18.6442974%20L28.4365394,18.639129%20L28.4658634,18.4970013%20L28.4669185,18.4917983%20L28.4679391,18.486597%20L28.4955402,18.3440628%20L28.4965607,18.3388269%20L28.4975121,18.3336239%20L28.5233576,18.1906521%20L28.5243089,18.1854162%20L28.5251911,18.1801786%20L28.5493138,18.0368349%20L28.5501959,18.0315991%20L28.5510089,18.0263286%20L28.5520813,18.0196398%20L28.5619131,17.8587273%20L28.5417099,17.6987955%20L28.4921828,17.5453848%20L28.4150217,17.4038314%20L28.3129612,17.2790683%20L28.1895162,17.1753871%20L28.0489418,17.096434%20L27.8962074,17.0449489%20L27.7365109,17.0226839%20L27.7364815,17.0226839%20Z%20M6.84064123,22.7102229%20L6.68121648,22.7340757%20L6.52895363,22.7871159%20L6.38922469,22.8674528%20L6.26679279,22.97235%20L6.16598257,23.0981267%20L6.09023964,23.2404568%20L6.04226687,23.3943414%20L6.02365213,23.5544755%20L6.03510478,23.7152859%20L6.07618566,23.8711632%20L6.14547586,24.0167037%20L6.22270514,24.1260272%20L6.26229966,24.1737641%20L6.26571171,24.1778514%20L6.26919139,24.1819387%20L6.36392077,24.2932895%20L6.36740045,24.2973786%20L6.37091386,24.3013985%20L6.46712959,24.411701%20L6.47064318,24.4157226%20L6.47419049,24.4197079%20L6.57185884,24.5289311%20L6.57543988,24.5329164%20L6.57905483,24.5368706%20L6.6781758,24.6449781%20L6.68179074,24.6489305%20L6.68547315,24.6528484%20L6.78604691,24.759842%20L6.78969558,24.7637598%20L6.79341172,24.7676119%20L6.89543827,24.8734898%20L6.89915458,24.8773419%20L6.90293817,24.8811594%20L7.00638362,24.9858871%20L7.01013365,24.9897063%20L7.01395115,24.9934892%20L7.1186804,25.0969352%20L7.12249789,25.1007181%20L7.12638302,25.1044353%20L7.23226097,25.2064266%20L7.23611219,25.2101437%20L7.24003122,25.2138263%20L7.34702381,25.3143992%20L7.35094284,25.3180489%20L7.35486169,25.3216969%20L7.46300299,25.4208186%20L7.46695575,25.4244337%20L7.47094224,25.4279796%20L7.58016461,25.5256829%20L7.58415109,25.5292306%20L7.58817131,25.5327436%20L7.69847476,25.6289593%20L7.70249497,25.6324724%20L7.70654909,25.635918%20L7.81793362,25.7306808%20L7.82198774,25.7341281%20L7.82610932,25.7375391%20L7.93854118,25.8308507%20L7.94262903,25.8342288%20L7.94678434,25.8376069%20L8.06026355,25.9293963%20L8.06438513,25.9327416%20L8.06857435,25.9360523%20L8.183067,26.0263887%20L8.18725604,26.0296665%20L8.19144525,26.0329098%20L8.30695153,26.1217603%20L8.31117447,26.1250036%20L8.31543114,26.1281793%20L8.43191712,26.2155095%20L8.43617379,26.2187198%20L8.44046437,26.221861%20L8.5579299,26.3076725%20L8.56222047,26.3108137%20L8.56654477,26.3138874%20L8.68499019,26.3982113%20L8.68931449,26.4013196%20L8.69367252,26.4043276%20L8.81303002,26.487131%20L8.81738805,26.4901702%20L8.82177999,26.4931435%20L8.9421172,26.5744266%20L8.94650913,26.5774%20L8.9509348,26.5803059%20L9.07215036,26.6600685%20L9.07657602,26.6630073%20L9.08103542,26.6658458%20L9.20316324,26.744088%20L9.20762263,26.7469265%20L9.21211575,26.7497304%20L9.33512192,26.8264193%20L9.33961522,26.8292232%20L9.34414225,26.8319942%20L9.46802677,26.9071281%20L9.4725538,26.9098645%20L9.47711455,26.912568%20L9.6018437,26.9861486%20L9.60640445,26.9888505%20L9.61096521,26.9914866%20L9.73657271,27.0635121%20L9.74113346,27.0661482%20L9.74576185,27.0687151%20L9.87218007,27.1391874%20L9.87677473,27.1417561%20L9.88143684,27.1442555%20L10.008666,27.2131745%20L10.0132942,27.215674%20L10.0179565,27.2181406%20L10.1459963,27.2854717%20L10.1506584,27.2879365%20L10.1553544,27.2903356%20L10.2841375,27.3560789%20L10.2888334,27.358478%20L10.2935631,27.3608079%20L10.4231232,27.4249633%20L10.427853,27.427295%20L10.4326164,27.429592%20L10.5629199,27.4921595%20L10.5676834,27.494422%20L10.5724806,27.4966516%20L10.7035272,27.5575983%20L10.7082907,27.5598279%20L10.7130881,27.5619901%20L10.844878,27.6213472%20L10.8496752,27.6235093%20L10.8545063,27.625604%20L10.9869718,27.6833404%20L10.9918029,27.6854351%20L10.9966677,27.6874952%20L11.1298428,27.7436108%20L11.1346737,27.745638%20L11.1395724,27.7476306%20L11.2733892,27.8021238%20L11.2782879,27.8041164%20L11.2831865,27.8060433%20L11.412071,27.8566844%20L11.5669351,27.9014132%20L11.727441,27.9165829%20L11.887947,27.9017522%20L12.0429462,27.8573607%20L12.1869658,27.7849961%20L12.3151069,27.687125%20L12.4228092,27.5672259%20L12.5064236,27.4293897%20L12.5629774,27.278411%20L12.5905785,27.1195932%20L12.5881799,26.9584126%20L12.5559166,26.8004735%20L12.4949033,26.6512504%20L12.4072687,26.5159482%20L12.296053,26.3992595%20L12.1651078,26.3052388%20L12.0446692,26.2467932%20L11.9207171,26.1981119%20L11.7950082,26.1468949%20L11.6731846,26.0955775%20L11.5509892,26.0423021%20L11.4304493,25.9880442%20L11.3051121,25.9297354%20L11.1860248,25.8725733%20L11.0664308,25.8133493%20L10.9464991,25.7521345%20L10.8283577,25.6900064%20L10.7109934,25.6264582%20L10.5923115,25.5602773%20L10.4763663,25.4937903%20L10.3612317,25.425852%20L10.2461309,25.3560543%20L10.1326856,25.2853451%20L10.0180239,25.2118665%20L9.90616632,25.1382859%20L9.79518724,25.0632869%20L9.68505262,24.9869353%20L9.57410727,24.9079148%20L9.46407401,24.8275104%20L9.35542591,24.746025%20L9.24893996,24.6640656%20L9.14468379,24.5818018%20L9.03880584,24.4961599%20L8.93367132,24.4088972%20L8.8326582,24.3229525%20L8.72823321,24.2319052%20L8.62765928,24.1419061%20L8.52823422,24.0507913%20L8.42833591,23.9568726%20L8.33097164,23.8630889%20L8.23188423,23.7652178%20L8.13813473,23.6702872%20L8.04164882,23.570152%20L7.94921685,23.4717741%20L7.85661589,23.3707601%20L7.76803532,23.2717076%20L7.67803568,23.1685315%20L7.58965783,23.0646479%20L7.55388098,23.0215398%20L7.43982749,22.9075875%20L7.30661874,22.8168118%20L7.15888292,22.7523174%20L7.0017215,22.716372%20L6.84064123,22.7102229%20L6.84064123,22.7102229%20Z%20M21.9041805,25.4112463%20L21.7435724,25.4251429%20L21.5883369,25.4685208%20L21.4674259,25.5259527%20L21.4076295,25.5602099%20L21.2888461,25.6264582%20L21.171481,25.6900064%20L21.0533393,25.7521345%20L20.9334091,25.8133493%20L20.8138145,25.8725733%20L20.6947267,25.9297354%20L20.5693893,25.9880442%20L20.4488503,26.0423021%20L20.3266541,26.0955775%20L20.2048316,26.1468949%20L20.0791224,26.1980774%20L19.9537176,26.2473675%20L19.8300685,26.2942256%20L19.7026037,26.3407465%20L19.5778752,26.3845638%20L19.4492272,26.4280092%20L19.3234505,26.4687856%20L19.1921664,26.5095621%20L19.064532,26.5475018%20L18.9378784,26.5834817%20L18.8075751,26.6187853%20L18.6767978,26.652501%20L18.5480495,26.6840217%20L18.4157517,26.7147312%20L18.2863271,26.7430744%20L18.1512947,26.7709471%20L18.0184573,26.7966214%20L17.8882889,26.8201698%20L17.7573092,26.8421961%20L17.6207564,26.8634457%20L17.489135,26.8822633%20L17.3545419,26.899865%20L17.2225141,26.9154394%20L17.0851171,26.9299656%20L16.9497803,26.9425337%20L16.8171107,26.9532424%20L16.6786656,26.9626677%20L16.5428565,26.9702369%20L16.4093099,26.9760125%20L16.2730269,26.9802693%20L16.1324871,26.9828708%20L15.9722838,27.0008772%20L15.8181968,27.0483096%20L15.6756315,27.1235127%20L15.5494488,27.2238504%20L15.4441116,27.3458753%20L15.3632336,27.485334%20L15.3096528,27.6373609%20L15.2851935,27.7967184%20L15.2907677,27.9578333%20L15.3261392,28.1150943%20L15.3900578,28.2631014%20L15.4803613,28.3966479%20L15.5938399,28.511107%20L15.7266444,28.6025245%20L15.8740754,28.6677281%20L16.0310338,28.7044172%20L16.1646478,28.7122874%20L16.3102229,28.7095856%20L16.3155591,28.7094472%20L16.3209316,28.7092742%20L16.4677209,28.7047476%20L16.4730588,28.7045746%20L16.4784313,28.7043394%20L16.6249508,28.6979878%20L16.6303216,28.6977508%20L16.6356595,28.6974464%20L16.781942,28.6892718%20L16.7872799,28.6889673%20L16.7926178,28.68863%20L16.9386651,28.6786634%20L16.9439684,28.6782915%20L16.9493064,28.6778521%20L17.0950492,28.6660952%20L17.1003871,28.6656905%20L17.1056904,28.6651837%20L17.2511634,28.6516365%20L17.2564668,28.6511625%20L17.2617718,28.6505883%20L17.4069058,28.6352854%20L17.4122091,28.6347112%20L17.4175142,28.6341023%20L17.5623108,28.6170075%20L17.5676142,28.6164003%20L17.5728846,28.6156911%20L17.7173769,28.5968389%20L17.7226473,28.5961643%20L17.7279178,28.595386%20L17.8720381,28.5747781%20L17.8773086,28.574036%20L17.8825445,28.5732248%20L18.0263275,28.5508595%20L18.0315651,28.5500482%20L18.036801,28.5491713%20L18.1801793,28.5250486%20L18.1854152,28.5241699%20L18.1906182,28.5232255%20L18.33359,28.4973471%20L18.3388276,28.4964338%20L18.3440289,28.4954202%20L18.4865959,28.467819%20L18.4917989,28.4668054%20L18.4969673,28.4657589%20L18.6390951,28.436435%20L18.6442981,28.4353539%20L18.6494665,28.4342382%20L18.7911548,28.4031915%20L18.796325,28.4020429%20L18.8014588,28.4008598%20L18.9426749,28.3680902%20L18.9478433,28.3669071%20L18.9529789,28.3656582%20L19.0937211,28.3311987%20L19.0988566,28.3299482%20L19.1039576,28.3285972%20L19.2442276,28.2924495%20L19.2493285,28.2911315%20L19.2544295,28.289746%20L19.3941927,28.2518755%20L19.3992936,28.25049%20L19.4043617,28.2490699%20L19.5435835,28.2095094%20L19.5486516,28.2080564%20L19.5537196,28.2065706%20L19.6924018,28.1653202%20L19.6974681,28.1638015%20L19.7025016,28.1622465%20L19.840644,28.1193408%20L19.8456775,28.1177529%20L19.8506764,28.1161321%20L19.9882446,28.0715711%20L19.9932781,28.0699157%20L19.998277,28.0682275%20L20.1352363,28.0219765%20L20.1402369,28.0202883%20L20.1452358,28.0185655%20L20.281588,27.9706591%20L20.2865869,27.9689035%20L20.29152,27.9670786%20L20.4272962,27.9175187%20L20.4322623,27.9157284%20L20.4371937,27.9138361%20L20.5723299,27.8626536%20L20.5772613,27.8607613%20L20.5821599,27.8588361%20L20.7166526,27.8059984%20L20.7215512,27.8040732%20L20.7264497,27.8020788%20L20.8602662,27.7475874%20L20.8651647,27.745593%20L20.8699958,27.7435658%20L21.0031722,27.6874519%20L21.0080362,27.6853918%20L21.0128673,27.6832971%20L21.1453328,27.6255608%20L21.1501639,27.6234661%20L21.1549605,27.6213039%20L21.2867514,27.5619451%20L21.2915479,27.5597829%20L21.2963115,27.5575533%20L21.4273587,27.4966083%20L21.4321552,27.4943787%20L21.4369188,27.4921145%20L21.5672222,27.4295471%20L21.5719858,27.42725%20L21.5767166,27.4249201%20L21.7062762,27.3607647%20L21.7110052,27.358433%20L21.7157014,27.3560339%20L21.8444843,27.2902924%20L21.8491805,27.2878933%20L21.8538421,27.2854267%20L21.981883,27.2180956%20L21.9865446,27.215629%20L21.9911733,27.2131295%20L22.118403,27.1442105%20L22.1230646,27.1417111%20L22.1276587,27.1391442%20L22.2540771,27.0686719%20L22.2587058,27.0661033%20L22.2632671,27.0634689%20L22.328097,27.026273%20L22.4598188,26.9334008%20L22.5720483,26.8176582%20L22.6608314,26.6830981%20L22.723129,26.5344164%20L22.7567444,26.3767489%20L22.7604944,26.2156012%20L22.7342771,26.0565481%20L22.6790073,25.9050955%20L22.5965757,25.76655%20L22.4898865,25.6457048%20L22.3625911,25.5467872%20L22.2191782,25.473172%20L22.0645844,25.4274624%20L21.9041805,25.4112463%20L21.9041805,25.4112463%20Z%20M6.32983299,26.8178035%20L6.17037433,26.8414869%20L6.01807793,26.8943247%20L5.87821372,26.9745266%20L5.75571436,27.0792889%20L5.65473515,27.2049653%20L5.57885713,27.3471933%20L5.53071536,27.5010433%20L5.5119318,27.6611792%20L5.52318173,27.8219879%20L5.56412734,27.9778998%20L5.63324873,28.1235405%20L5.72821439,28.253811%20L5.82429503,28.3469859%20L5.85571386,28.3730338%20L5.85980153,28.3764448%20L5.86395702,28.3797901%20L6.00888861,28.497053%20L6.01304409,28.5004312%20L6.0172333,28.5037073%20L6.16348243,28.6190797%20L6.16763791,28.6223904%20L6.17186085,28.6256336%20L6.31939395,28.7391119%20L6.32361689,28.7423552%20L6.32787356,28.7455309%20L6.47665655,28.8571187%20L6.4809134,28.8602945%20L6.4852038,28.8634356%20L6.63527076,28.9730636%20L6.63956116,28.9762065%20L6.64388546,28.9792802%20L6.79516859,29.0870159%20L6.7994929,29.0900896%20L6.80385093,29.0931305%20L6.95635023,29.1989081%20L6.96067453,29.2019144%20L6.96510019,29.2048878%20L7.11878176,29.3087385%20L7.12317369,29.3117101%20L7.12759936,29.3146161%20L7.28242963,29.416507%20L7.28685529,29.4194129%20L7.29131468,29.4222843%20L7.44732739,29.5222172%20L7.45178679,29.5250539%20L7.45628008,29.5278578%20L7.6134076,29.6258309%20L7.61790089,29.6286348%20L7.62242792,29.6313712%20L7.78067041,29.7273846%20L7.78519726,29.730121%20L7.78975819,29.73279%20L7.94908158,29.826809%20L7.95364251,29.8295125%20L7.958237,29.8321469%20L8.11864164,29.9241404%20L8.12323612,29.9267747%20L8.12783078,29.9293434%20L8.2893165,30.0193753%20L8.29394471,30.021944%20L8.2985731,30.024478%20L8.46107226,30.1124845%20L8.46573438,30.1149839%20L8.47039667,30.1174505%20L8.63390928,30.2034626%20L8.6386053,30.2058946%20L8.64330114,30.2082937%20L8.80782736,30.2922803%20L8.81252321,30.2946795%20L8.81725296,30.2970094%20L8.98272517,30.3789688%20L8.98745474,30.3813004%20L8.99221822,30.3835975%20L9.15867014,30.463495%20L9.16343362,30.4657921%20L9.1681971,30.4680217%20L9.335595,30.5458592%20L9.34039221,30.5480905%20L9.34518942,30.5502527%20L9.51349941,30.6260629%20L9.51833052,30.628225%20L9.52316163,30.6303526%20L9.69234997,30.7040681%20L9.69721481,30.7061974%20L9.70204575,30.7082246%20L9.87214634,30.7799129%20L9.87701118,30.7819402%20L9.88187602,30.7839328%20L10.0528548,30.8535281%20L10.0577196,30.8555208%20L10.0626521,30.8574459%20L10.2344418,30.9249466%20L10.2393403,30.9269046%20L10.2442728,30.9287641%20L10.4169071,30.9941683%20L10.4218057,30.996026%20L10.4267719,30.9978508%20L10.6001832,31.0611621%20L10.6051494,31.0629524%20L10.6101156,31.064708%20L10.7843377,31.1259246%20L10.7893039,31.1276474%20L10.7943039,31.1293373%20L10.9692691,31.1884246%20L10.9742691,31.1901128%20L10.9793029,31.1917353%20L11.1550114,31.248695%20L11.1600452,31.2503157%20L11.1650791,31.2518708%20L11.341497,31.3067012%20L11.3465645,31.3082545%20L11.3515984,31.3097749%20L11.5287597,31.3624432%20L11.5338271,31.3639636%20L11.5388946,31.3653837%20L11.7167316,31.4159227%20L11.721833,31.4173757%20L11.7269343,31.4187612%20L11.9054132,31.4671051%20L11.9105145,31.4684906%20L11.9156495,31.4698087%20L12.0947702,31.5160234%20L12.0999054,31.5173414%20L12.1050405,31.518592%20L12.2848368,31.5626117%20L12.289972,31.5638623%20L12.295107,31.5650783%20L12.4755116,31.6069012%20L12.4806468,31.6080843%20L12.4858155,31.6092329%20L12.6446323,31.6440297%20L12.8046654,31.6636914%20L12.9655092,31.65332%20L13.1216907,31.6132873%20L13.2677036,31.5449772%20L13.39848,31.4507195%20L13.5095267,31.333863%20L13.5969248,31.1984241%20L13.6577015,31.0491008%20L13.6896946,30.8910942%20L13.6917893,30.7299136%20L13.6639853,30.5711304%20L13.6071613,30.420252%20L13.5233103,30.2825507%20L13.4154055,30.1628211%20L13.2871292,30.065187%20L13.1429407,29.9930594%20L13.0147995,29.9543759%20L12.8611178,29.9206947%20L12.6928754,29.8817086%20L12.5219641,29.8398493%20L12.3529446,29.796269%20L12.1838576,29.7504591%20L12.0172031,29.703127%20L11.8494337,29.6532297%20L11.6839954,29.6018103%20L11.5182528,29.5481284%20L11.3517672,29.4919125%20L11.1891667,29.434785%20L11.0239648,29.3744471%20L10.8628508,29.3134001%20L10.6992029,29.2491098%20L10.5382917,29.1836035%20L10.3786303,29.116307%20L10.217381,29.0460371%20L10.0603549,28.9752932%20L9.90309209,28.902152%20L9.74559286,28.8265441%20L9.59008696,28.7495508%20L9.43657421,28.6712065%20L9.28079796,28.5893164%20L9.12816357,28.5066478%20L8.97434674,28.4209384%20L8.82370568,28.3345198%20L8.67188202,28.2449254%20L8.52445045,28.1555006%20L8.37684973,28.0634397%20L8.22830319,27.968305%20L8.08286478,27.8726307%20L7.93854118,27.7750969%20L7.79350805,27.6744548%20L7.65138051,27.573273%20L7.51043523,27.4702681%20L7.37077374,27.3655716%20L7.23063936,27.2578031%20L7.09202522,27.1484103%20L6.95601224,27.0383776%20L6.92881653,27.0158099%20L6.79567523,26.9248992%20L6.64800704,26.8602371%20L6.49091326,26.8241222%20L6.32983299,26.8178035%20L6.32983299,26.8178035%20Z%20M25.5452087,26.905068%20L25.3842979,26.9145607%20L25.2279138,26.9537164%20L25.0815293,27.0212153%20L24.9712595,27.0970929%20L24.9078134,27.1484103%20L24.7692005,27.2578031%20L24.6290654,27.3655716%20L24.4894042,27.4702681%20L24.3484579,27.573273%20L24.2063302,27.6744548%20L24.0612983,27.7750969%20L23.9169738,27.8726307%20L23.7715354,27.968305%20L23.6229887,28.0634397%20L23.4753881,28.1555006%20L23.3279571,28.2449254%20L23.1761343,28.3345198%20L23.0254929,28.4209384%20L22.8716757,28.5066478%20L22.7190417,28.5893164%20L22.5632647,28.6712065%20L22.409752,28.7495508%20L22.2542466,28.8265441%20L22.0967469,28.902152%20L21.9394841,28.9752932%20L21.7824583,29.0460371%20L21.6212085,29.116307%20L21.4615483,29.1836035%20L21.3006358,29.2491098%20L21.1369887,29.3134001%20L20.9758738,29.3744471%20L20.8106716,29.434785%20L20.6480726,29.4919125%20L20.481587,29.5481284%20L20.3158434,29.6018103%20L20.1504059,29.6532297%20L19.9826368,29.703127%20L19.8159817,29.7504591%20L19.6468945,29.796269%20L19.4778748,29.8398493%20L19.3069646,29.8817086%20L19.1386869,29.9207276%20L18.9698713,29.9577212%20L18.8589599,29.9805933%20L18.7048054,30.0277212%20L18.5620688,30.1026528%20L18.4357179,30.202788%20L18.3301444,30.3246106%20L18.2489963,30.4639015%20L18.1951448,30.6158593%20L18.170415,30.7751493%20L18.1756526,30.9362641%20L18.2107193,31.0936272%20L18.2744007,31.2417346%20L18.3644344,31.3754507%20L18.4777103,31.4901122%20L18.6103125,31.5818012%20L18.7576415,31.64724%20L18.9145341,31.6842318%20L19.0755798,31.6914621%20L19.2083826,31.6746388%20L19.3226739,31.6510904%20L19.3278752,31.6500093%20L19.3330453,31.6488608%20L19.5140243,31.6092329%20L19.5191927,31.6080843%20L19.5243282,31.6069012%20L19.7047312,31.5650783%20L19.7098667,31.5638623%20L19.7150023,31.5626117%20L19.8947981,31.518592%20L19.8999337,31.5173414%20L19.9050692,31.5160234%20L20.0841888,31.4698087%20L20.0893243,31.4684561%20L20.0944252,31.4670723%20L20.2729048,31.4187266%20L20.2780057,31.4173428%20L20.2831067,31.4158898%20L20.4609445,31.3653491%20L20.4660126,31.3639307%20L20.4710789,31.3624103%20L20.6482404,31.309742%20L20.6532739,31.3082216%20L20.658342,31.3066666%20L20.8347597,31.2518362%20L20.8397932,31.2502829%20L20.8448284,31.2486604%20L21.0205369,31.1917007%20L21.0255704,31.1901128%20L21.0305693,31.18839%20L21.2055358,31.1293027%20L21.2105347,31.1276145%20L21.2155007,31.1258917%20L21.3897234,31.0646752%20L21.3946894,31.0629178%20L21.3996554,31.0611275%20L21.5730669,30.997818%20L21.5780329,30.9959931%20L21.5829315,30.9941354%20L21.7555663,30.9287295%20L21.7604995,30.9268717%20L21.765398,30.924912%20L21.937187,30.8574131%20L21.9421202,30.8554862%20L21.9469842,30.8534935%20L22.1179636,30.7838999%20L22.1228276,30.7819056%20L22.1276933,30.7798783%20L22.2977941,30.70819%20L22.3026252,30.7061628%20L22.3074892,30.7040352%20L22.4766784,30.6303197%20L22.4815095,30.6281904%20L22.4863388,30.6260283%20L22.6546494,30.5502181%20L22.6594476,30.5480559%20L22.6642441,30.5458263%20L22.8316413,30.4679889%20L22.836405,30.4657593%20L22.8411686,30.4634622%20L23.0076214,30.3835629%20L23.0123851,30.3812658%20L23.0171141,30.3789359%20L23.1825862,30.2969765%20L23.1873152,30.2946449%20L23.1920114,30.2922457%20L23.3565373,30.2082609%20L23.3612335,30.2058617%20L23.3659297,30.2034298%20L23.5294419,30.1174159%20L23.5341053,30.1149493%20L23.5387669,30.1124499%20L23.7012655,30.0244434%20L23.7058942,30.0219094%20L23.710523,30.0193425%20L23.872008,29.9293088%20L23.8766021,29.9267419%20L23.881198,29.9241058%20L24.0416019,29.832114%20L24.0461961,29.8294779%20L24.0507574,29.8267761%20L24.2100802,29.7327554%20L24.2146415,29.7300864%20L24.2191682,29.72735%20L24.3774117,29.6313384%20L24.3819384,29.6286002%20L24.3864322,29.6257963%20L24.5435583,29.5278249%20L24.5480522,29.5250211%20L24.5525114,29.5221826%20L24.7085253,29.4222514%20L24.7129845,29.4193784%20L24.7174091,29.4164741%20L24.8722399,29.3145832%20L24.8766663,29.3116773%20L24.8810581,29.3087039%20L25.0347386,29.2048532%20L25.0391649,29.2018798%20L25.0434892,29.1988735%20L25.1959884,29.0930976%20L25.2003455,29.0900568%20L25.2046698,29.086983%20L25.355953,28.9792456%20L25.3602773,28.9761719%20L25.3645687,28.9730308%20L25.5146358,28.8634028%20L25.5189256,28.8602599%20L25.5231824,28.8570841%20L25.6719661,28.7454981%20L25.6762229,28.7423223%20L25.6804452,28.7390791%20L25.8279783,28.625599%20L25.8322005,28.6223558%20L25.836357,28.6190451%20L25.9826067,28.5036744%20L25.9867943,28.5003966%20L25.9909509,28.4970184%20L26.059261,28.4417487%20L26.1745642,28.3291144%20L26.266997,28.1970537%20L26.3332799,28.0500949%20L26.371185,27.8934063%20L26.3793268,27.7323935%20L26.3574355,27.5726988%20L26.3062859,27.4198278%20L26.2276718,27.2790855%20L26.124295,27.1553707%20L25.9997672,27.0530058%20L25.8583833,26.9755403%20L25.7051075,26.9256413%20L25.5452087,26.905068%20L25.5452087,26.905068%20Z'%20opacity='.98'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchNonInterruptingSignal = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M16.0124354,8.50460253%20C13.7447654,12.5749289%2011.4770943,16.6452548%209.20942388,20.715581%20C13.7447545,20.715581%2018.2800857,20.715581%2022.8154158,20.715581%20C20.5477551,16.6452549%2018.2800961,12.5749287%2016.0124354,8.50460253%20Z%20M16.0124354,10.2808731%20C17.7896845,13.4709436%2019.5669354,16.6610142%2021.3441846,19.8510847%20C17.7896863,19.8510847%2014.2351868,19.8510847%2010.680688,19.8510847%20C12.4579371,16.6610142%2014.2351862,13.4709436%2016.0124354,10.2808731%20Z%20M16.0124198,0%20C14.5636987,0.0207684905%2013.0826288,0.156985298%2011.7097152,0.627831403%20C10.8578501,1.07485233%2011.4545148,2.49127171%2012.3706271,2.20174994%20C14.6249715,1.59380403%2017.0181941,1.59499271%2019.2923056,2.09416059%20C20.2260085,2.16942797%2020.5198958,0.718081204%2019.6304725,0.424196491%20C18.4512612,0.128147598%2017.2270737,0.00557911446%2016.0124198,0%20Z%20M25.024187,2.93408756%20C24.111481,2.82953881%2023.7518245,4.1920577%2024.5703436,4.58169577%20C26.4035188,5.94125619%2027.862571,7.76666539%2028.8805173,9.80241074%20C29.4055865,10.5781649%2030.7219968,9.9000921%2030.3952431,9.02220267%20C29.2589092,6.63656413%2027.4995724,4.53264061%2025.3344617,3.01587705%20C25.2349927,2.97173154%2025.1320917,2.94622993%2025.024187,2.93408756%20L25.024187,2.93408756%20Z%20M6.6503957,3.27796126%20C5.88841121,3.36661745%205.41032184,4.08702259%204.84488132,4.54468495%20C3.38067707,5.98370331%202.16287748,7.69629953%201.37105767,9.5935809%20C1.10499193,10.4917357%202.46470968,11.0783941%202.93549233,10.2685635%20C3.90059026,8.0987752%205.40305073,6.18412126%207.26189192,4.70907449%20C7.73759321,4.19422897%207.35167403,3.29037871%206.6503957,3.27796126%20L6.6503957,3.27796126%20Z%20M16.0124198,3.28508661%20C15.3139133,3.35125396%2014.3231087,3.12417114%2013.9785906,3.91993237%20C13.6971613,4.65275617%2014.5142774,5.27775047%2015.195572,5.04452073%20C17.0021888,4.89829496%2018.8268884,5.24771786%2020.4894707,5.95176985%20C21.390793,6.20686339%2021.9607901,4.84013042%2021.1453054,4.37923053%20C19.5450498,3.6437209%2017.7709959,3.29025302%2016.0124198,3.28508661%20Z%20M10.5332681,4.64977539%20C9.69786681,4.80075797%209.01625646,5.40964739%208.32268996,5.87567185%20C7.11977717,6.81528477%206.00490644,7.93717954%205.2663569,9.27836232%20C4.93549957,10.1817089%206.32885194,10.8302763%206.81313042,10.0005013%20C7.85797279,8.34494801%209.40851655,7.0758983%2011.0975921,6.12827859%20C11.6426196,5.6294164%2011.2692555,4.66508891%2010.5332681,4.64977539%20L10.5332681,4.64977539%20Z%20M24.4360597,6.76515764%20C23.5613362,6.69543375%2023.2155618,7.93794341%2023.9346534,8.39223095%20C25.2601358,9.7325909%2026.123377,11.4535264%2026.6828774,13.2321458%20C27.1505682,14.0728429%2028.5519188,13.4417262%2028.2401831,12.5329701%20C27.6362769,10.4154534%2026.4889674,8.43581869%2024.8888449,6.91769406%20C24.753316,6.82784228%2024.5980611,6.77610026%2024.4360597,6.76515764%20Z%20M4.46717071,12.8209893%20C3.64522734,12.7509916%203.47127163,13.6473541%203.42078936,14.276484%20C3.16465219,16.2056304%203.3270833,18.2085233%203.98264654,20.0447022%20C4.38894363,20.8887277%205.79019473,20.4098697%205.59493247,19.4937205%20C4.98094788,17.627158%204.87943231,15.6112102%205.26088567,13.6864988%20C5.26710814,13.2465272%204.90597753,12.8528077%204.46717071,12.8209893%20L4.46717071,12.8209893%20Z%20M31.1538059,14.4212532%20C30.4082347,14.3841039%2030.1399435,15.2062756%2030.2754965,15.8157946%20C30.3179727,18.2086263%2029.7049392,20.5871002%2028.6153935,22.7101195%20C28.3058744,23.5942433%2029.6353472,24.2464708%2030.1450768,23.4605767%20C31.5100856,20.9142155%2032.1610325,17.9719282%2031.9661058,15.0880975%20C31.8795853,14.7151593%2031.5366136,14.4334233%2031.1538059,14.4212532%20L31.1538059,14.4212532%20Z%20M0.956842305,14.9924288%20C0.174967659,14.9192009%20-0.0866143305,15.7672919%200.0243032647,16.3956487%20C0.0918399252,18.8103983%200.685349262,21.2286841%201.832899,23.358459%20C2.36735458,24.1277471%203.67541677,23.433665%203.33796714,22.5598458%20C2.2559739,20.4450417%201.71506813,18.071703%201.73506947,15.6987159%20C1.66713111,15.3219719%201.33855727,15.0235722%200.956842305,14.9924288%20Z%20M27.7440416,17.0155186%20C26.9670304,16.9683171%2026.7917797,17.8132668%2026.7227514,18.4081014%20C26.3694058,20.0999873%2025.5206137,21.6394971%2024.5070366,23.0161009%20C24.099838,23.8877044%2025.4323556,24.6535421%2025.9861053,23.8684099%20C27.3480746,22.1349757%2028.2826782,20.0411782%2028.5691257,17.8512101%20C28.55912,17.411306%2028.1837435,17.0311257%2027.7440416,17.0155186%20Z%20M6.85699687,22.7006636%20C6.0493215,22.7190649%205.77461097,23.8228656%206.38746722,24.2911694%20C7.77950556,25.8979618%209.57444489,27.1772937%2011.5813014,27.8896688%20C12.4913672,28.1115783%2013.0110005,26.7249718%2012.1792222,26.2941662%20C10.3435195,25.5940553%208.70971327,24.4083497%207.45593092,22.8979451%20C7.28717862,22.7620738%207.07337653,22.6918348%206.85699687,22.7006636%20L6.85699687,22.7006636%20Z%20M21.9141955,25.4005604%20C21.1036125,25.5949698%2020.410314,26.1608512%2019.5888694,26.3734579%20C18.3861145,26.8308128%2017.0897087,26.9093234%2015.8307736,27.0369243%20C14.9620723,27.3444389%2015.2580339,28.765064%2016.1770787,28.7002017%20C18.3783721,28.6664592%2020.5890503,28.0744439%2022.4695999,26.9220639%20C23.0738829,26.4272693%2022.6967377,25.390076%2021.9141955,25.4005604%20Z%20M6.34640364,26.8065153%20C5.51340198,26.8152041%205.23670501,28.0248885%205.95071893,28.4244768%20C7.93656451,30.0256932%2010.3091955,31.1729061%2012.8185106,31.6503634%20C13.7522056,31.725656%2014.0460999,30.2742399%2013.1566436,29.9804345%20C10.8324188,29.4900183%208.64414692,28.4231878%206.8120498,26.9135659%20C6.66829959,26.8375261%206.50881089,26.8013534%206.34640364,26.8065153%20Z%20M25.5536911,26.893743%20C24.7882382,26.9841096%2024.3126666,27.7351633%2023.6322802,28.0516271%20C22.1158981,29.0434324%2020.380641,29.6319716%2018.6364485,30.0569316%20C17.7637358,30.4617385%2018.2903438,31.9056274%2019.2195323,31.6613062%20C21.7634083,31.1351707%2024.1996631,30.0008446%2026.1827817,28.31719%20C26.6521117,27.7965551%2026.2550432,26.8974795%2025.5536911,26.893743%20L25.5536911,26.893743%20Z'%20transform='translate(0%20.311)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchNonInterruptingTimer = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9979399,8.40615367%20C12.9798447,8.36498797%2010.0776137,10.3318119%208.96675921,13.1327656%20C7.8287705,15.8276891%208.45789697,19.1447803%2010.5042261,21.2355285%20C12.4938633,23.3774403%2015.7721556,24.1667824%2018.5181301,23.162913%20C21.3956899,22.1825972%2023.5096735,19.3362227%2023.5858453,16.2926232%20C23.7391421,13.3357435%2021.9620672,10.4120832%2019.2864578,9.15635215%20C18.2654607,8.66201613%2017.1321544,8.40465745%2015.9979399,8.40615367%20Z%20M15.9979399,9.78993266%20C18.756512,9.73768809%2021.3705259,11.7625615%2022.0126564,14.4450033%20C22.7166332,17.0226116%2021.5305616,19.9616925%2019.2215396,21.3122556%20C16.8639192,22.7919184%2013.5399172,22.3975967%2011.6039394,20.3936408%20C9.5608951,18.4227331%209.19707365,15.0126951%2010.764482,12.6490449%20C11.8745928,10.8856521%2013.9134458,9.76963262%2015.9979399,9.78993266%20Z%20M17.9597908,11.5545553%20C17.2684652,12.8087624%2016.5771379,14.0629696%2015.8858123,15.3171767%20C15.2452536,15.3852897%2015.0930915,16.3571039%2015.6841023,16.6162926%20C16.0744992,16.8872763%2016.3802677,16.4365397%2016.7356532,16.4520726%20C17.7924695,16.4520726%2018.8492857,16.4520726%2019.9061019,16.4520726%20C19.9061019,16.1637848%2019.9061019,15.8754986%2019.9061019,15.5872108%20C18.8455651,15.5872108%2017.7850282,15.5872108%2016.7244913,15.5872108%20C17.3887347,14.3821468%2018.052978,13.1770846%2018.7172213,11.9720207%20C18.4647439,11.8328661%2018.2122682,11.6937099%2017.9597908,11.5545553%20Z%20M15.9945739,3.28650764%20L15.8473778,3.2874192%20L15.8420053,3.28745379%20L15.8366345,3.28755758%20L15.6896409,3.290294%20L15.6843047,3.29039778%20L15.6789321,3.29057076%20L15.5321422,3.29513152%20L15.5268043,3.29530449%20L15.5214328,3.29554146%20L15.374913,3.30189266%20L15.3695415,3.30212964%20L15.3642035,3.30239947%20L15.2179203,3.31057519%20L15.2125825,3.31087962%20L15.2072448,3.31125151%20L15.061198,3.32121766%20L15.0558939,3.32155495%20L15.050556,3.3219943%20L14.9048133,3.33375106%20L14.8994755,3.33419041%20L14.8941715,3.33466263%20L14.748699,3.34821%20L14.743395,3.3487168%20L14.7380909,3.34925821%20L14.6882263,3.35452833%20L14.5301863,3.38631875%20L14.3807949,3.44685908%20L14.245221,3.53412243%20L14.1281943,3.64500032%20L14.0338028,3.77564186%20L13.9652557,3.9215873%20L13.9250194,4.07766771%20L13.9144451,4.23854551%20L13.9339045,4.39857886%20L13.982722,4.5521932%20L14.0592081,4.69411842%20L14.1606943,4.8193544%20L14.2836667,4.92361073%20L14.4238352,5.00320518%20L14.5763685,5.0554008%20L14.7359288,5.07840751%20L14.8697459,5.07469137%20L14.9146106,5.06999535%20L15.0501506,5.05736041%20L15.1827515,5.04665082%20L15.3185957,5.03739421%20L15.4544735,5.02979276%20L15.5906557,5.02384701%20L15.7268368,5.01962389%20L15.8632896,5.01709019%20L15.9999446,5.01624608%20L16.1365997,5.01709019%20L16.2730525,5.01962389%20L16.4092336,5.02384701%20L16.5454165,5.02979276%20L16.6812932,5.03739421%20L16.8171371,5.04665082%20L16.9497394,5.05736041%20L17.0851093,5.06996162%20L17.2199067,5.08418462%20L17.3546695,5.10009669%20L17.4892299,5.11763038%20L17.620784,5.13644787%20L17.7547356,5.15729243%20L17.8883169,5.1797247%20L18.0209504,5.20374502%20L18.1538555,5.22945425%20L18.2837889,5.25627864%20L18.4158481,5.28519737%20L18.5480785,5.31587298%20L18.6767267,5.34735932%20L18.8076374,5.3811429%20L18.9355418,5.41577128%20L19.0645965,5.45242654%20L19.1946302,5.49110887%20L19.3210488,5.53036547%20L19.449358,5.57191932%20L19.5754393,5.61448678%20L19.7026345,5.6591825%20L19.8300996,5.70570273%20L19.9562155,5.75350658%20L20.0768568,5.80090499%20L20.2025991,5.85208734%20L20.3257398,5.90394515%20L20.3315517,5.90641139%20L20.3317593,5.90593918%20L20.4788879,5.95428357%20L20.6387178,5.97536458%20L20.7996634,5.96637815%20L20.956148,5.92769582%20L21.1027698,5.86063529%20L21.2343568,5.76752755%20L21.3464187,5.65161565%20L21.4349978,5.51695406%20L21.4970257,5.36817066%20L21.5304042,5.21043473%20L21.5339173,5.04928675%20L21.5074646,4.89026702%20L21.4519249,4.73891619%20L21.3692891,4.60050456%20L21.262432,4.47982917%20L21.1349997,4.38107959%20L21.0167904,4.31824201%20L21.0129055,4.31655207%20L21.0080744,4.31445755%20L21.0032104,4.31239676%20L20.8700337,4.2562821%20L20.8652026,4.25425503%20L20.8603041,4.2522617%20L20.7264874,4.19776866%20L20.7215889,4.19580923%20L20.7166903,4.19384979%20L20.5821973,4.1410121%20L20.5772988,4.13908639%20L20.5723673,4.13722833%20L20.4372309,4.08601224%20L20.4322995,4.08415417%20L20.4273334,4.08232983%20L20.291557,4.03276927%20L20.2866239,4.03097866%20L20.281625,4.02922195%20L20.1452726,3.98131673%20L20.1402737,3.97956003%20L20.135273,3.97787009%20L19.9983135,3.93162021%20L19.9933146,3.929932%20L19.9882811,3.92831125%20L19.8507127,3.88371673%20L19.8457138,3.88209598%20L19.8406803,3.88054268%20L19.7025377,3.83760368%20L19.6975042,3.83604865%20L19.6924378,3.83452823%20L19.5537555,3.7933122%20L19.5486874,3.79179177%20L19.5436193,3.7903734%20L19.4043973,3.75081271%20L19.3993292,3.74935974%20L19.3942283,3.74797423%20L19.2544648,3.71010262%20L19.2493639,3.70875171%20L19.2442629,3.7074008%20L19.1039927,3.67125234%20L19.0988918,3.66993429%20L19.0937562,3.6686837%20L18.9530138,3.63422431%20L18.9478782,3.63294086%20L18.9427098,3.63175773%20L18.8014934,3.59898759%20L18.7963596,3.59780446%20L18.7911895,3.59665593%20L18.6495009,3.5656425%20L18.6443325,3.56449396%20L18.6391295,3.56344748%20L18.4970015,3.5341233%20L18.4918331,3.53304222%20L18.4866301,3.5320286%20L18.3440628,3.50446113%20L18.3388615,3.50344751%20L18.3336239,3.50250135%20L18.1906519,3.47665686%20L18.1854489,3.4757107%20L18.180213,3.474832%20L18.0368345,3.45071048%20L18.0315986,3.44983178%20L18.026361,3.44902054%20L17.8825777,3.42665573%20L17.8773418,3.42581163%20L17.8720714,3.42506785%20L17.7279508,3.40445975%20L17.7226803,3.40371597%20L17.7174098,3.40300678%20L17.5729174,3.38415538%20L17.5676469,3.38347906%20L17.5623436,3.38283734%20L17.4175467,3.36577655%20L17.4122416,3.36513482%20L17.4069383,3.36459515%20L17.2618041,3.34925752%20L17.256499,3.34871611%20L17.2511957,3.3482093%20L17.1057224,3.33466193%20L17.1004191,3.33418972%20L17.0950812,3.33375037%20L16.9493381,3.32199361%20L16.9440002,3.32155426%20L16.9386969,3.32121696%20L16.7926494,3.31125082%20L16.7873114,3.31087892%20L16.7819735,3.31057449%20L16.6356908,3.30239878%20L16.6303528,3.30212894%20L16.6249821,3.30189197%20L16.4784623,3.29554077%20L16.4730898,3.2953038%20L16.4677519,3.29513083%20L16.3209623,3.29057007%20L16.3155898,3.29039709%20L16.3102536,3.29029331%20L16.16326,3.28755689%20L16.1578892,3.2874531%20L16.1525167,3.28741851%20L16.0053206,3.28650694%20L15.9999498,3.28647235%20L15.9945739,3.28650764%20Z%20M10.3574642,4.65964485%20L10.2007417,4.69734747%20L10.077803,4.75028636%20L10.0179722,4.78173896%20L10.0133099,4.7842052%20L10.0086817,4.78670517%20L9.88145235,4.85562394%20L9.87679022,4.85812391%20L9.87219556,4.86069134%20L9.74577714,4.93119799%20L9.74114874,4.93376542%20L9.73658798,4.93636675%20L9.61098029,5.00842739%20L9.60641952,5.01106245%20L9.60185876,5.01373141%20L9.47712942,5.08734603%20L9.47256866,5.090015%20L9.46804162,5.09275142%20L9.34415691,5.16792002%20L9.33962987,5.17065662%20L9.33513657,5.17346068%20L9.21213021,5.25014953%20L9.20763708,5.25295359%20L9.20317768,5.2558251%20L9.08104967,5.33403439%20L9.07659026,5.3369059%20L9.07216459,5.33981132%20L8.95094884,5.41957459%20L8.94652317,5.42248001%20L8.94213123,5.42545288%20L8.82179383,5.50677031%20L8.81740189,5.50970946%20L8.81304385,5.51274997%20L8.69368616,5.59555375%20L8.68932812,5.59859425%20L8.68500381,5.60166849%20L8.56655821,5.68599252%20L8.5622339,5.68906694%20L8.55794332,5.69220881%20L8.44047761,5.77805309%20L8.43618703,5.78119496%20L8.43193035,5.78437056%20L8.31544418,5.87170137%20L8.31118751,5.87491088%20L8.30696456,5.87815411%20L8.19145811,5.96697144%20L8.18726889,5.97021468%20L8.18307984,5.97352537%20L8.06858701,6.06382923%20L8.06439779,6.06713992%20L8.0602762,6.07048451%20L7.94679681,6.16230845%20L7.9426415,6.16565305%20L7.93855364,6.16906527%20L7.8261216,6.26234201%20L7.82200001,6.26575406%20L7.81794588,6.26920002%20L7.70656119,6.36396328%20L7.70250706,6.36740924%20L7.69848684,6.37092265%20L7.58818322,6.46713854%20L7.584163,6.47065212%20L7.5801765,6.47423317%20L7.47095396,6.57190168%20L7.46696747,6.57548272%20L7.4630147,6.57909767%20L7.35487324,6.67821897%20L7.35095438,6.68183375%20L7.34703534,6.68548243%20L7.24004259,6.78605635%20L7.23612355,6.78973876%20L7.23227232,6.79345507%20L7.1263942,6.89548162%20L7.12250907,6.89919793%20L7.11869157,6.9029478%20L7.01396216,7.0063934%20L7.01014466,7.01017718%20L7.00639462,7.01399485%20L6.90294901,7.11872409%20L6.89916541,7.12254176%20L6.8954491,7.12639299%20L6.79342238,7.23227111%20L6.78970624,7.23615624%20L6.78605756,7.24004137%20L6.68548364,7.34706803%20L6.68180123,7.35095299%20L6.67818628,7.35490576%20L6.57906515,7.46304722%20L6.5754502,7.46696625%20L6.57186916,7.47095258%20L6.47420065,7.58017529%20L6.47065333,7.58416178%20L6.46713975,7.58818201%20L6.37092386,7.69851936%20L6.36741045,7.70253975%20L6.36393076,7.70659371%20L6.26920123,7.8179784%20L6.26572155,7.82203253%20L6.26230949,7.82615411%20L6.16903276,7.93858616%20L6.16562053,7.94267401%20L6.16227594,7.94682933%20L6.07048572,8.06027499%20L6.0671074,8.06443031%20L6.06383044,8.06861952%20L5.97349285,8.18311236%20L5.97021589,8.18726768%20L5.96697265,8.19149062%20L5.87812159,8.30699708%20L5.87487836,8.31122003%20L5.87170258,8.3154767%20L5.78433804,8.43196287%20L5.78116244,8.43621955%20L5.77802057,8.44051013%20L5.69217629,8.55797584%20L5.68906815,8.56226642%20L5.68596001,8.56659073%20L5.60163597,8.68500243%20L5.59856173,8.68932674%20L5.59555496,8.69368495%20L5.51271745,8.81307637%20L5.50971067,8.8174344%20L5.50673779,8.82182635%20L5.42545427,8.94213002%20L5.42248122,8.94652179%20L5.41954207,8.95094746%20L5.35180575,9.05392016%20L5.27613033,9.19628455%20L5.22819138,9.35016908%20L5.20964407,9.51033752%20L5.22113065,9.67111396%20L5.26224532,9.82699182%20L5.33160326,9.97253181%20L5.42673807,10.1026328%20L5.54440651,10.2128688%20L5.68045326,10.2993213%20L5.83018247,10.3590507%20L5.98842521,10.389929%20L6.14960709,10.3909081%20L6.30822138,10.3619554%20L6.45866012,10.3040841%20L6.59578795,10.2192871%20L6.71474036,10.1105036%20L6.79676697,10.004727%20L6.86156415,9.90628132%20L6.93659767,9.79523444%20L7.01423251,9.6833092%20L7.09071865,9.57591083%20L7.17119145,9.46567484%20L7.25163035,9.35841156%20L7.33487331,9.25020264%20L7.41781218,9.14500015%20L7.5037241,9.03881811%20L7.58966974,8.93527114%20L7.67808146,8.8313189%20L7.76686507,8.72956254%20L7.85781065,8.627806%20L7.95037786,8.52686053%20L8.04291133,8.42841486%20L8.1368637,8.33091518%20L8.23196478,8.23459793%20L8.32963328,8.13811187%20L8.42841677,8.04294316%20L8.52682853,7.95040969%20L8.62767281,7.85797757%20L8.72973326,7.7667279%20L8.83108435,7.67828228%20L8.93523932,7.58970157%20L9.03882002,7.50375592%20L9.14466423,7.41808046%20L9.25054235,7.33460105%20L9.3570622,7.25267562%20L9.46581184,7.17115565%20L9.57412229,7.09196682%20L9.68331111,7.01423061%20L9.7934459,6.93781193%20L9.90624949,6.86156225%20L10.0180396,6.78801509%20L10.1308095,6.71578563%20L10.2443226,6.64497507%20L10.359356,6.57517812%20L10.4744907,6.50723907%20L10.5923958,6.43953664%20L10.7089831,6.37453691%20L10.8284085,6.30987482%20L10.8829354,6.28119254%20L11.0180024,6.1931861%20L11.1343871,6.08166614%20L11.2280355,5.95045051%20L11.295738,5.80413335%20L11.3350959,5.64781631%20L11.3447243,5.48690478%20L11.3243528,5.32697297%20L11.2746907,5.1736288%20L11.1973937,5.03214276%20L11.0951644,4.90748106%20L10.9716175,4.80393408%20L10.8309761,4.7251507%20L10.6781724,4.67379953%20L10.5184771,4.6517388%20L10.3574642,4.65964485%20Z%20M24.2661318,6.77581985%20L24.1093756,6.81335364%20L23.9622816,6.87933309%20L23.8300183,6.97149484%20L23.7171141,7.08656212%20L23.6275542,7.22061571%20L23.5644452,7.36892603%20L23.5299182,7.52639161%20L23.525222,7.68753976%20L23.5505261,7.84676222%20L23.6049519,7.99851832%20L23.6865741,8.13750439%20L23.7729928,8.23973383%20L23.8630249,8.33091587%20L23.9569783,8.42841556%20L24.0495116,8.52686123%20L24.1420795,8.62780669%20L24.2330249,8.72956323%20L24.3218082,8.83131959%20L24.4102196,8.93527183%20L24.4961661,9.03881881%20L24.5820763,9.14500084%20L24.6650165,9.25020333%20L24.7482595,9.35841225%20L24.8286985,9.46567553%20L24.9091705,9.57591152%20L24.9856571,9.6833099%20L25.0632923,9.79523513%20L25.138326,9.90624828%20L25.2131227,10.0199641%20L25.2852505,10.1325989%20L25.3560948,10.2462134%20L25.4254186,10.3605035%20L25.4944381,10.47753%20L25.5609252,10.5934419%20L25.6264662,10.711009%20L25.6900456,10.8284749%20L25.7515996,10.9455014%20L25.8133559,11.0664807%20L25.8720385,11.1849601%20L25.9308232,11.3073921%20L25.9870392,11.4283038%20L26.0413629,11.5488102%20L26.0955845,11.6732355%20L26.1473085,11.7959715%20L26.1981191,11.9208022%20L26.2464977,12.0438423%20L26.2945374,12.1706661%20L26.3407538,12.2972535%20L26.3845712,12.4220166%20L26.4277468,12.5498539%20L26.4696044,12.6789752%20L26.5088276,12.8051909%20L26.5473071,12.93465%20L26.5689961,13.011001%20L26.6273068,13.1612708%20L26.7125095,13.2981284%20L26.8215963,13.4168105%20L26.9508534,13.5131615%20L27.0957177,13.5838707%20L27.2511888,13.6264381%20L27.4118991,13.6394111%20L27.5722013,13.6223503%20L27.7265255,13.575864%20L27.869565,13.5015061%20L27.9963226,13.4019119%20L28.1024031,13.2804934%20L28.184091,13.1415412%20L28.2385843,12.9898187%20L28.2639558,12.8306301%20L28.2593617,12.669482%20L28.2328762,12.5382662%20L28.2095647,12.456307%20L28.2081117,12.4512057%20L28.2066242,12.4461719%20L28.1653737,12.30749%20L28.1638861,12.3024225%20L28.1622948,12.2973886%20L28.119389,12.1592472%20L28.1178322,12.1542135%20L28.1162063,12.1491797%20L28.0716123,12.0116127%20L28.0699864,12.0066126%20L28.0682912,12.0016126%20L28.0220401,11.8646199%20L28.020345,11.8596199%20L28.0185876,11.8546537%20L27.9706829,11.718269%20L27.9689255,11.7133028%20L27.9671352,11.7083366%20L27.9175752,11.5725939%20L27.9157503,11.5676277%20L27.9138926,11.5626952%20L27.8626772,11.4275606%20L27.8608178,11.4226282%20L27.8588926,11.4177295%20L27.8060219,11.2832367%20L27.8040949,11.2783382%20L27.8021023,11.2734396%20L27.7476437,11.1396224%20L27.7456493,11.1347237%20L27.7435892,11.1298588%20L27.6874752,10.9967175%20L27.685448,10.9918527%20L27.6833187,10.9870215%20L27.6256169,10.8545558%20L27.6234876,10.8497247%20L27.6213254,10.8448936%20L27.5619682,10.7131374%20L27.5598061,10.70834%20L27.5576093,10.7035428%20L27.4966296,10.572496%20L27.4944,10.5677325%20L27.4921375,10.562969%20L27.42957,10.4326653%20L27.4273058,10.4279018%20L27.4249412,10.4231722%20L27.3607858,10.2936118%20L27.3584558,10.288882%20L27.3560567,10.2841862%20L27.2903134,10.1554029%20L27.2879142,10.1506731%20L27.2854494,10.146011%20L27.2181182,10.0180047%20L27.2156862,10.0133426%20L27.2131521,10.0086804%20L27.1442676,9.88145113%20L27.1417336,9.87682274%20L27.1391649,9.87219434%20L27.0686925,9.74580966%20L27.0661256,9.74118126%20L27.0634895,9.73658677%20L26.9914638,9.61101281%20L26.9888277,9.60641831%20L26.9861588,9.60189128%20L26.9125452,9.47712821%20L26.9098416,9.47256727%20L26.9071052,9.46807414%20L26.8319712,9.34418943%20L26.8292348,9.33966239%20L26.8264309,9.33516926%20L26.7497418,9.2121629%20L26.746938,9.2076696%20L26.7440649,9.20321019%20L26.6658226,9.08108218%20L26.6629841,9.07662278%20L26.6600799,9.07219711%20L26.5803154,8.95094746%20L26.5773766,8.94652179%20L26.5744032,8.94213002%20L26.49312,8.82182635%20L26.4901484,8.8174344%20L26.4871404,8.81307637%20L26.4043039,8.69368495%20L26.4012959,8.68932674%20L26.3982222,8.68500243%20L26.3138982,8.56659073%20L26.3107898,8.56226642%20L26.3076815,8.55797584%20L26.2218371,8.44051013%20L26.2186959,8.43621955%20L26.2155201,8.43196287%20L26.1281552,8.3154767%20L26.1249795,8.31122003%20L26.1217362,8.30699708%20L26.0328855,8.19149062%20L26.0296423,8.18726768%20L26.0263644,8.18311236%20L25.9360279,8.06861952%20L25.9327501,8.06443031%20L25.9293719,8.06027499%20L25.8375824,7.94682933%20L25.8342371,7.94267401%20L25.8308261,7.93858616%20L25.737549,7.82615411%20L25.7341363,7.82203253%20L25.7306561,7.8179784%20L25.6359277,7.70659371%20L25.6324475,7.70253975%20L25.6289345,7.69851936%20L25.5327186,7.58818201%20L25.5292055,7.58416178%20L25.5256579,7.58017529%20L25.427989,7.47095258%20L25.4244085,7.46696625%20L25.4207934,7.46304722%20L25.3216715,7.35490576%20L25.3180564,7.35095299%20L25.3143738,7.34706803%20L25.2138008,7.24004137%20L25.2101528,7.23615624%20L25.2064356,7.23227111%20L25.1044096,7.12639299%20L25.1006924,7.12254176%20L25.0969095,7.11872409%20L25.0035978,7.02426508%20L24.8801526,6.92061675%20L24.7395797,6.8416981%20L24.5868088,6.79024557%20L24.4271484,6.76801585%20L24.2661318,6.77581985%20Z%20M4.28863381,12.8282652%20L4.1305938,12.859988%20L3.98116867,12.9204609%20L3.8455611,13.0076564%20L3.72850066,13.1184669%20L3.63404148,13.2491084%20L3.5654607,13.3949862%20L3.52992024,13.5240399%20L3.50441356,13.6558637%20L3.50339994,13.6610663%20L3.50245379,13.666269%20L3.47660929,13.8092415%20L3.47566313,13.814478%20L3.47478443,13.8197145%20L3.45066292,13.9630923%20L3.44978422,13.9683288%20L3.44897298,13.9735653%20L3.42660817,14.1173148%20L3.42579693,14.122585%20L3.42502028,14.1278553%20L3.40441218,14.2719764%20L3.4036684,14.2772467%20L3.40299208,14.2825169%20L3.38414068,14.4270097%20L3.3834315,14.4322799%20L3.38282263,14.4375502%20L3.36572812,14.5823808%20L3.36508639,14.5876848%20L3.36454672,14.5929888%20L3.34924281,14.7381235%20L3.34866855,14.7434275%20L3.34816174,14.7487315%20L3.33464827,14.894204%20L3.33414146,14.899508%20L3.33370211,14.9048121%20L3.32194535,15.0505886%20L3.3215406,15.0558926%20L3.32116871,15.0612305%20L3.31120256,15.2072772%20L3.31083067,15.2126151%20L3.31052623,15.2179529%20L3.30238442,15.3642362%20L3.30207999,15.369574%20L3.30184302,15.3749118%20L3.29549165,15.5214653%20L3.29525468,15.5268032%20L3.2950817,15.5321748%20L3.29052094,15.6789648%20L3.29034797,15.6843026%20L3.29024419,15.6896742%20L3.28750776,15.836667%20L3.28743857,15.8420385%20L3.28740398,15.8474102%20L3.28645782,15.9946056%20L3.28645782,15.9999772%20L3.28645782,16.0053488%20L3.28740398,16.1525442%20L3.28743857,16.1579158%20L3.28750776,16.1632537%20L3.29024419,16.3102802%20L3.29034797,16.315618%20L3.29052094,16.3209896%20L3.2950817,16.4677459%20L3.29525468,16.4731175%20L3.29549165,16.4784553%20L3.30184302,16.6250088%20L3.30207999,16.6303466%20L3.30238442,16.6356845%20L3.31052623,16.7820015%20L3.31083067,16.7873393%20L3.31120256,16.7926772%20L3.32116871,16.9386902%20L3.3215406,16.944028%20L3.32194535,16.9493658%20L3.33370211,17.0951085%20L3.33414146,17.1004126%20L3.33464827,17.1057504%20L3.34816174,17.2511891%20L3.34866855,17.2564931%20L3.34924281,17.2617971%20L3.36454672,17.4069656%20L3.36508639,17.4122696%20L3.36572812,17.4175399%20L3.38282263,17.5623704%20L3.3834315,17.5676744%20L3.38414068,17.5729447%20L3.40299208,17.7174375%20L3.4036684,17.7227076%20L3.40441218,17.7279779%20L3.42502028,17.872099%20L3.42579693,17.8773693%20L3.42660817,17.8826059%20L3.44897298,18.0263553%20L3.44978422,18.0316256%20L3.45066292,18.036862%20L3.47478443,18.1802061%20L3.47566313,18.1854426%20L3.47660929,18.190679%20L3.50245379,18.3336516%20L3.50339994,18.3388543%20L3.50441356,18.3440907%20L3.53201476,18.486624%20L3.53299379,18.4918267%20L3.53407487,18.4970294%20L3.56339922,18.6391573%20L3.5644803,18.6443262%20L3.56559597,18.6495289%20L3.59664313,18.7911838%20L3.59775707,18.7963527%20L3.59897306,18.8015216%20L3.6317093,18.9427373%20L3.63292529,18.9479063%20L3.63417588,18.9530413%20L3.66863527,19.0937841%20L3.66988586,19.0989191%20L3.67120391,19.1040206%20L3.70738609,19.2442903%20L3.70870414,19.2493916%20L3.71008965,19.254493%20L3.74792736,19.3942222%20L3.74931287,19.3993235%20L3.75076584,19.4044248%20L3.79032652,19.5436473%20L3.79177949,19.5487149%20L3.79326532,19.5537825%20L3.83451508,19.6924645%20L3.83600091,19.697532%20L3.8375888,19.7025657%20L3.88049408,19.8406734%20L3.88204737,19.845741%20L3.88366812,19.8507409%20L3.90130317,19.9051326%20L3.96508674,20.0531726%20L4.0552216,20.1868209%20L4.16863336,20.3014151%20L4.30130179,20.3929687%20L4.44866612,20.4583064%20L4.60559133,20.4951644%20L4.76667186,20.5022927%20L4.92623213,20.4793537%20L5.07876539,20.4272253%20L5.21900136,20.3476987%20L5.34200772,20.2435098%20L5.44356136,20.1183076%20L5.52011513,19.97645%20L5.56900006,19.8228356%20L5.58856082,19.6628023%20L5.57805413,19.5019584%20L5.54677052,19.3717899%20L5.530284,19.3209454%20L5.49109504,19.1947634%20L5.45261543,19.0653045%20L5.41623034,18.9372306%20L5.38089261,18.8068931%20L5.34798738,18.6793599%20L5.31508215,18.5449683%20L5.28518353,18.4158809%20L5.25619717,18.2837531%20L5.22954178,18.1543955%20L5.20379865,18.0215243%20L5.1796434,17.8878423%20L5.15724486,17.7547008%20L5.13680575,17.6234852%20L5.117245,17.4865599%20L5.10004912,17.3547022%20L5.08417078,17.2202433%20L5.06991405,17.0851424%20L5.05754912,16.9524739%20L5.04640053,16.8142311%20L5.0373475,16.68136%20L5.02974606,16.5453807%20L5.02373267,16.4067663%20L5.01961109,16.2731857%20L5.01707722,16.1366321%20L5.01623311,15.9999772%20L5.01707722,15.863356%20L5.01961109,15.7268362%20L5.02373267,15.5931881%20L5.02974606,15.4544048%20L5.0373475,15.3184255%20L5.0464353,15.1855206%20L5.05758389,15.047244%20L5.06991491,14.914812%20L5.08413774,14.7800152%20L5.10008372,14.6449143%20L5.11724586,14.5133945%20L5.13680662,14.3764355%20L5.15714436,14.2456589%20L5.17971172,14.1116054%20L5.20373205,13.9788355%20L5.22812375,13.8526873%20L5.24386701,13.6922825%20L5.22957655,13.5317088%20L5.18572528,13.3765742%20L5.11383364,13.2322841%20L5.01643532,13.1038386%20L4.89687491,12.9956971%20L4.75934163,12.9116096%20L4.60856507,12.8545489%20L4.4498157,12.8264072%20L4.28863381,12.8282652%20Z%20M27.575377,17.0304804%20L27.4186208,17.0680141%20L27.271494,17.1339598%20L27.1391961,17.2260878%20L27.0262918,17.341155%20L26.9366973,17.4751409%20L26.8735555,17.6234852%20L26.8436901,17.7500049%20L26.8434479,17.7499703%20L26.8428425,17.7536865%20L26.8428425,17.7537557%20L26.8428425,17.754195%20L26.8203422,17.8878432%20L26.7961867,18.0215252%20L26.7704432,18.1543964%20L26.7437881,18.2837539%20L26.7148014,18.4158818%20L26.6849031,18.5449692%20L26.6519986,18.6793608%20L26.6190923,18.806894%20L26.5837541,18.9372314%20L26.5473693,19.0653054%20L26.5088899,19.1947643%20L26.4697013,19.3210139%20L26.4281135,19.4492904%20L26.3849725,19.5770941%20L26.3408507,19.7026679%20L26.2946342,19.8292891%20L26.2469319,19.9552008%20L26.1978441,20.0800316%20L26.1470334,20.2048621%20L26.0956814,20.326686%20L26.0418645,20.4501654%20L25.987136,20.5716853%20L25.9314268,20.6915159%20L25.8726422,20.8139141%20L25.8134528,20.9334407%20L25.7516964,21.05442%20L25.6895353,21.1725953%20L25.626563,21.2888448%20L25.5603803,21.4076283%20L25.4938932,21.52354%20L25.4255155,21.6394517%20L25.3561916,21.753742%20L25.2854148,21.8672551%20L25.2132196,21.9799911%20L25.1391995,22.0924908%20L25.0633892,22.2047201%20L24.985754,22.3166455%20L24.9092673,22.4241113%20L24.8288283,22.5342122%20L24.7483563,22.6415092%20L24.6641326,22.7510019%20L24.619843,22.8071505%20L24.5322412,22.942454%20L24.4712286,23.0916766%20L24.4389987,23.249649%20L24.436667,23.4108308%20L24.4642682,23.5696478%20L24.5208561,23.7205932%20L24.604471,23.8584306%20L24.7122068,23.9783288%20L24.8403482,24.0761663%20L24.9844031,24.1484971%20L25.1394019,24.1928552%20L25.2999082,24.2076862%20L25.4604144,24.1924498%20L25.6152783,24.1477201%20L25.7591636,24.0750178%20L25.8870352,23.9768762%20L25.9778457,23.8784982%20L26.0264924,23.8168428%20L26.0297703,23.8126538%20L26.0330135,23.8084308%20L26.1218642,23.6929244%20L26.1251075,23.6887352%20L26.1282832,23.6844785%20L26.2156481,23.5679925%20L26.2188239,23.5637356%20L26.2219651,23.5594451%20L26.3078095,23.4419794%20L26.3109178,23.4376888%20L26.3140262,23.4333645%20L26.3983502,23.314919%20L26.4014239,23.3105947%20L26.4044319,23.3062365%20L26.4872684,23.1868451%20L26.4902764,23.1824871%20L26.493248,23.1780951%20L26.5745312,23.0577915%20L26.5775046,23.0533997%20L26.5804434,23.048974%20L26.6602079,22.9277581%20L26.6631121,22.9233324%20L26.6659506,22.918873%20L26.7441929,22.7967452%20L26.747066,22.7922856%20L26.7498698,22.7877925%20L26.8265589,22.6647861%20L26.8293628,22.6602928%20L26.8320992,22.6557658%20L26.9072332,22.5318812%20L26.9099696,22.5273542%20L26.9126732,22.5227933%20L26.9862868,22.3980641%20L26.9889557,22.3935033%20L26.9915918,22.3889087%20L27.0636175,22.2633347%20L27.0662536,22.2587402%20L27.0688205,22.2541455%20L27.1392929,22.1277271%20L27.1418616,22.1230987%20L27.1443956,22.1184703%20L27.2132801,21.9912412%20L27.2158142,21.9866128%20L27.2182462,21.9819168%20L27.2855774,21.8539105%20L27.2880422,21.8492483%20L27.2904414,21.8445525%20L27.3561847,21.7157353%20L27.3585838,21.7110394%20L27.3609138,21.7063097%20L27.4250692,21.5767492%20L27.4274338,21.5720196%20L27.429698,21.5672899%20L27.4922655,21.4369524%20L27.494528,21.4322229%20L27.4967576,21.4274255%20L27.5577373,21.2963787%20L27.5599341,21.2916152%20L27.5620962,21.286784%20L27.6214534,21.1550279%20L27.6236156,21.1502305%20L27.6257449,21.1453994%20L27.6834467,21.0129337%20L27.685576,21.0080688%20L27.6876032,21.0032379%20L27.7437172,20.8700626%20L27.7457773,20.8651978%20L27.7477717,20.8603329%20L27.8022303,20.7264821%20L27.8042229,20.721617%20L27.8061499,20.7166847%20L27.8590206,20.582192%20L27.8609458,20.5772934%20L27.8628052,20.5723609%20L27.9140206,20.4372262%20L27.9158783,20.4322938%20L27.9177032,20.4273615%20L27.9672632,20.2915849%20L27.9690535,20.2866187%20L27.9708109,20.2816525%20L28.0187156,20.1452677%20L28.020473,20.1403015%20L28.0221681,20.1353016%20L28.0684192,19.9983088%20L28.0701144,19.9933426%20L28.0717403,19.9883088%20L28.1163343,19.8507418%20L28.1179602,19.8457419%20L28.119517,19.8406743%20L28.1624228,19.7025666%20L28.1640141,19.6975329%20L28.1655017,19.6924653%20L28.2067521,19.5537833%20L28.2082397,19.5487158%20L28.2096927,19.5436482%20L28.2492532,19.4044257%20L28.2507062,19.3993244%20L28.2520899,19.3942231%20L28.2899276,19.2544939%20L28.2913114,19.2493924%20L28.292626,19.2442911%20L28.3288084,19.1040214%20L28.330123,19.09892%20L28.3313684,19.0937849%20L28.3658279,18.9530422%20L28.3670733,18.9479071%20L28.3682841,18.9427382%20L28.4010209,18.8015225%20L28.4022317,18.7963536%20L28.403356,18.7911846%20L28.4344028,18.6495298%20L28.4355098,18.6443271%20L28.4365823,18.6391582%20L28.4659063,18.4970302%20L28.4669787,18.4918276%20L28.4679647,18.4866249%20L28.4955659,18.3440915%20L28.4965864,18.3388551%20L28.4975377,18.3336525%20L28.5233815,18.1906799%20L28.5243329,18.1854435%20L28.525215,18.1802069%20L28.549336,18.0368628%20L28.5502182,18.0316264%20L28.5510312,18.0263561%20L28.5520863,18.019667%20L28.5619181,17.8587554%20L28.5417149,17.6988236%20L28.4921877,17.5454118%20L28.4150265,17.4038583%20L28.3129658,17.2790953%20L28.1895206,17.1754132%20L28.048946,17.0964608%20L27.8962097,17.0449744%20L27.7365146,17.022711%20L27.575377,17.0304804%20Z%20M6.68122696,22.7341093%20L6.52896388,22.7871497%20L6.38923472,22.8674872%20L6.26680262,22.9723855%20L6.16599225,23.0981622%20L6.0902492,23.2404927%20L6.04227635,23.3943774%20L6.02366158,23.5545119%20L6.03511426,23.7153221%20L6.0761952,23.8711999%20L6.14548551,24.0167399%20L6.22271491,24.126064%20L6.26230949,24.1738002%20L6.26572155,24.1778881%20L6.26920123,24.1819759%20L6.36393076,24.2933269%20L6.36741045,24.2974148%20L6.37092386,24.301435%20L6.46713975,24.4117386%20L6.47065333,24.4157588%20L6.47420065,24.4197453%20L6.57186916,24.528968%20L6.5754502,24.5329545%20L6.57906515,24.5369071%20L6.67818628,24.6450148%20L6.68180123,24.6489676%20L6.68548364,24.6528865%20L6.78605756,24.7598794%20L6.78970624,24.7637983%20L6.79342238,24.7676495%20L6.8954491,24.8735276%20L6.89916541,24.8773788%20L6.90294901,24.8811965%20L7.00639462,24.9859259%20L7.01014466,24.9897434%20L7.01396216,24.9935272%20L7.11869157,25.0969728%20L7.12250907,25.1007566%20L7.1263942,25.1044727%20L7.23227232,25.2064657%20L7.23612355,25.2101818%20L7.24004259,25.2138643%20L7.34703534,25.3144382%20L7.35095438,25.3180869%20L7.35487324,25.3217355%20L7.4630147,25.4208568%20L7.46696747,25.4244716%20L7.47095396,25.4280189%20L7.5801765,25.5257213%20L7.584163,25.5292685%20L7.58818322,25.5327821%20L7.69848684,25.628998%20L7.70250706,25.6325114%20L7.70656119,25.6359573%20L7.81794588,25.7307206%20L7.82200001,25.7341665%20L7.8261216,25.7375786%20L7.93855364,25.8308891%20L7.9426415,25.8342676%20L7.94679681,25.8376459%20L8.0602762,25.9294361%20L8.06439779,25.9327807%20L8.06858701,25.9360916%20L8.18307984,26.026429%20L8.18726889,26.0297059%20L8.19145811,26.0329492%20L8.30696456,26.1218002%20L8.31118751,26.1250435%20L8.31544418,26.1282192%20L8.43193035,26.21555%20L8.43618703,26.2187594%20L8.44047761,26.2219012%20L8.55794332,26.3077118%20L8.5622339,26.3108537%20L8.56655821,26.3139281%20L8.68500381,26.3982521%20L8.68932812,26.4013601%20L8.69368616,26.4043669%20L8.81304385,26.4871706%20L8.81740189,26.4902111%20L8.82179383,26.4931842%20L8.94213123,26.5744677%20L8.94652317,26.5774406%20L8.95094884,26.580346%20L9.07216459,26.6601093%20L9.07659026,26.6630484%20L9.08104967,26.6658862%20L9.20317768,26.7441292%20L9.20763708,26.746967%20L9.21213021,26.7497711%20L9.33513657,26.8264599%20L9.33962987,26.829264%20L9.34415691,26.8320343%20L9.46804162,26.9071692%20L9.47256866,26.9099056%20L9.47712942,26.9126083%20L9.60185876,26.9861892%20L9.60641952,26.9888919%20L9.61098029,26.9915269%20L9.73658798,27.0635539%20L9.74114874,27.0661889%20L9.74577714,27.0687565%20L9.87219556,27.1392293%20L9.87679022,27.1417967%20L9.88145235,27.1442967%20L10.0086817,27.2132154%20L10.0133099,27.2157154%20L10.0179722,27.2181816%20L10.1460122,27.2855125%20L10.1506743,27.2879788%20L10.1553704,27.2903774%20L10.2841537,27.3561204%20L10.2888495,27.358519%20L10.2935793,27.3608501%20L10.4231396,27.4250052%20L10.4278693,27.4273364%20L10.4326328,27.4296336%20L10.5629365,27.492201%20L10.5677,27.4944645%20L10.5724972,27.4966942%20L10.703544,27.5576399%20L10.7083075,27.5598697%20L10.7131049,27.5620319%20L10.844895,27.6213898%20L10.8496922,27.6235519%20L10.8545233,27.6256464%20L10.986989,27.6833827%20L10.9918201,27.6854772%20L10.996685,27.6875382%20L11.1298602,27.7436529%20L11.1346912,27.7456798%20L11.1395899,27.7476731%20L11.2734069,27.8021661%20L11.2783056,27.8041593%20L11.2832042,27.806085%20L11.4120889,27.8567266%20L11.5669533,27.9014563%20L11.7274594,27.9166252%20L11.8879656,27.9017941%20L12.0429651,27.8574024%20L12.1869849,27.7850377%20L12.3151263,27.6871665%20L12.4228287,27.5672683%20L12.5064432,27.4294309%20L12.5629971,27.2784516%20L12.5905983,27.1196346%20L12.5881997,26.9584527%20L12.5559363,26.8005141%20L12.4949229,26.6512917%20L12.4072882,26.5159882%20L12.2960723,26.3992993%20L12.1651269,26.3052795%20L12.0446881,26.2468337%20L11.9207358,26.1981514%20L11.7950267,26.1469354%20L11.6732029,26.0956179%20L11.5510073,26.042341%20L11.4304672,25.9880846%20L11.3051298,25.9297739%20L11.1860423,25.8726119%20L11.0664482,25.8133893%20L10.9465162,25.7521731%20L10.8283747,25.6900451%20L10.7110102,25.626498%20L10.5923282,25.5603158%20L10.4763827,25.4938296%20L10.361248,25.4258905%20L10.246147,25.3560936%20L10.1327015,25.2853844%20L10.0180396,25.2119048%20L9.90618186,25.1383239%20L9.79520261,25.0633241%20L9.68506781,24.9869731%20L9.57412229,24.9079531%20L9.46408886,24.8275479%20L9.35544059,24.7460619%20L9.24895447,24.6641027%20L9.14469814,24.5818395%20L9.03882002,24.4961979%20L8.93368533,24.4089345%20L8.83267206,24.3229889%20L8.72824691,24.2319419%20L8.62767281,24.1419423%20L8.5282476,24.0508278%20L8.42834913,23.9569091%20L8.33098471,23.8631257%20L8.23189714,23.7652543%20L8.1381475,23.6703223%20L8.04166143,23.5701875%20L7.94922932,23.4718095%20L7.85662821,23.3707964%20L7.76804751,23.2717425%20L7.67804773,23.1685673%20L7.58966974,23.0646825%20L7.55389283,23.0215745%20L7.43983917,22.9076222%20L7.3066302,22.8168454%20L7.15889415,22.7523525%20L7.00173249,22.7164066%20L6.84065197,22.7102581%20L6.68122696,22.7341093%20Z%20M21.7436065,25.4251811%20L21.5883707,25.4685593%20L21.4674596,25.5259915%20L21.407663,25.5602482%20L21.2888794,25.626498%20L21.1715142,25.6900451%20L21.0533724,25.7521731%20L20.933442,25.8133893%20L20.8138471,25.8726119%20L20.6947591,25.9297739%20L20.5694216,25.9880846%20L20.4488823,26.042341%20L20.326686,26.0956179%20L20.2048633,26.1469354%20L20.0791539,26.1981175%20L19.9537489,26.2474079%20L19.8300996,26.294266%20L19.7026345,26.340786%20L19.5779059,26.3846034%20L19.4492577,26.4280492%20L19.3234808,26.4688261%20L19.1921965,26.5096031%20L19.0645619,26.547542%20L18.9379081,26.5835216%20L18.8076046,26.6188256%20L18.6768271,26.6525417%20L18.5480785,26.6840618%20L18.4157806,26.7147711%20L18.2863558,26.7431158%20L18.1513232,26.7709872%20L18.0184856,26.7966628%20L17.8883169,26.8202101%20L17.7573371,26.8422369%20L17.620784,26.8634869%20L17.4891624,26.8823044%20L17.3545692,26.8999057%20L17.2225411,26.91548%20L17.0851439,26.9300069%20L16.9498069,26.9425746%20L16.8171371,26.953284%20L16.6786917,26.9627096%20L16.5428824,26.9702771%20L16.4093357,26.9760541%20L16.2730525,26.9803109%20L16.1325124,26.9829122%20L15.9723089,27.0009188%20L15.8182216,27.0483511%20L15.675656,27.1235536%20L15.5494732,27.2238911%20L15.4441358,27.3459178%20L15.3632577,27.4853767%20L15.3096768,27.6374032%20L15.2852174,27.7967607%20L15.2907916,27.957875%20L15.3261633,28.115138%20L15.3900819,28.2631443%20L15.4803856,28.396691%20L15.5938643,28.5111501%20L15.7266691,28.6025688%20L15.8741003,28.6677713%20L16.0310589,28.7044603%20L16.1646732,28.7123319%20L16.3102484,28.7096292%20L16.3155846,28.7095254%20L16.3209572,28.7093524%20L16.4677467,28.7048256%20L16.4730846,28.7046526%20L16.4784572,28.7044156%20L16.6249769,28.6980643%20L16.6303477,28.6978273%20L16.6356856,28.6975229%20L16.7819683,28.6893472%20L16.7873062,28.6890427%20L16.7926442,28.6887054%20L16.9386917,28.6787393%20L16.943995,28.6783674%20L16.9493329,28.677928%20L17.095076,28.6661713%20L17.1004139,28.6657665%20L17.1057173,28.6652597%20L17.2511905,28.6517123%20L17.2564938,28.6512401%20L17.2617989,28.6506659%20L17.4069331,28.6353618%20L17.4122364,28.6347875%20L17.4175415,28.6341786%20L17.5623384,28.6170841%20L17.5676417,28.6164753%20L17.5729122,28.6157661%20L17.7174047,28.5969147%20L17.7226751,28.5962384%20L17.7279456,28.5954617%20L17.8720662,28.5748536%20L17.8773366,28.5741098%20L17.8825725,28.5732986%20L18.0263558,28.5509338%20L18.0315934,28.5501226%20L18.0368293,28.5492439%20L18.1802078,28.5251223%20L18.1854437,28.5242436%20L18.1906467,28.5232975%20L18.3336187,28.4974193%20L18.3388563,28.4965077%20L18.3440576,28.4954941%20L18.4866249,28.4678929%20L18.4918279,28.4668792%20L18.4969963,28.465831%20L18.6391243,28.4365069%20L18.6443273,28.4354258%20L18.6494957,28.4343101%20L18.7911843,28.403263%20L18.7963544,28.4021144%20L18.8014883,28.4009313%20L18.9427046,28.368161%20L18.947873,28.3669778%20L18.9530086,28.3657273%20L19.093751,28.3312679%20L19.0988866,28.3300173%20L19.1039875,28.3286664%20L19.2442577,28.2925179%20L19.2493587,28.2911999%20L19.2544597,28.2898143%20L19.3942231,28.2519427%20L19.399324,28.2505572%20L19.4043921,28.2491389%20L19.5436141,28.2095783%20L19.5486822,28.2081254%20L19.5537503,28.2066395%20L19.6924326,28.1653898%20L19.697499,28.1638694%20L19.7025325,28.1623143%20L19.8406751,28.1194091%20L19.8457086,28.1178212%20L19.8507075,28.1162004%20L19.9882759,28.0716398%20L19.9933094,28.0699844%20L19.9983083,28.0682962%20L20.1352679,28.0220464%20L20.1402685,28.0203564%20L20.1452674,28.0186336%20L20.2816198,27.9707284%20L20.2866187,27.9689717%20L20.2915519,27.9671474%20L20.4273283,27.9175868%20L20.4322943,27.9157962%20L20.4372257,27.9139044%20L20.5723621,27.862722%20L20.5772936,27.8608302%20L20.5821921,27.8589045%20L20.7166851,27.8060668%20L20.7215837,27.8041411%20L20.7264822,27.802148%20L20.8602989,27.7476549%20L20.8651974,27.7456616%20L20.8700286,27.7436347%20L21.0032052,27.68752%20L21.0080692,27.6854591%20L21.0129003,27.6833646%20L21.145366,27.6256283%20L21.1501971,27.6235338%20L21.1549936,27.6213716%20L21.2867847,27.5620137%20L21.2915813,27.5598516%20L21.2963449,27.5576218%20L21.4273923,27.496676%20L21.4321888,27.4944464%20L21.4369524,27.4921829%20L21.567256,27.4296155%20L21.5720196,27.4273182%20L21.5767504,27.4249871%20L21.7063102,27.360832%20L21.7110393,27.3585008%20L21.7157355,27.3561022%20L21.8445186,27.2903592%20L21.8492148,27.2879606%20L21.8538764,27.2854944%20L21.9819175,27.2181635%20L21.9865791,27.2156972%20L21.9912078,27.2131973%20L22.1184376,27.1442785%20L22.1230992,27.1417785%20L22.1276934,27.1392111%20L22.254112,27.0687384%20L22.2587407,27.0661708%20L22.263302,27.0635357%20L22.3281321,27.0263399%20L22.459854,26.9334684%20L22.5720836,26.8177257%20L22.6608669,26.6831653%20L22.7231646,26.5344834%20L22.7567801,26.376815%20L22.7605301,26.215667%20L22.7343127,26.0566135%20L22.6790428,25.9051613%20L22.5966111,25.7666144%20L22.4899218,25.6457702%20L22.3626262,25.5468516%20L22.2192131,25.473237%20L22.064619,25.4275277%20L21.9042148,25.4113115%20L21.7436065,25.4251811%20Z%20M15.9945739,3.25188064e-05%20L15.8065339,0.00121564985%20L15.8011959,0.00125024432%20L15.7958234,0.00135402775%20L15.608055,0.00483388598%20L15.6026825,0.0049376694%20L15.5973117,0.00511064178%20L15.4098454,0.0109214757%20L15.4044738,0.0110944481%20L15.3991358,0.0113314203%20L15.2119406,0.0194395003%20L15.2066029,0.0196764725%20L15.2012312,0.0199809038%20L15.0143737,0.0304199596%20L15.0090359,0.030724391%20L15.0036981,0.0310616871%20L14.8171447,0.043798162%20L14.8118407,0.0441700526%20L14.8065029,0.044574808%20L14.620321,0.0596085289%20L14.6150169,0.0600478788%20L14.6096792,0.0605200933%20L14.423869,0.0778173308%20L14.418565,0.0783241399%20L14.4132609,0.0788638137%20L14.2278562,0.0984245676%20L14.2225521,0.0989988359%20L14.2172818,0.0996076987%20L14.0322825,0.121431969%20L14.0269785,0.122073697%20L14.0217082,0.122750019%20L13.8371481,0.146837806%20L13.8318778,0.147546992%20L13.8266076,0.148290773%20L13.6425204,0.174608347%20L13.6372501,0.175352129%20L13.6319798,0.176196234%20L13.4483657,0.204743421%20L13.4430954,0.205587527%20L13.437859,0.206466226%20L13.2547177,0.237243028%20L13.2495149,0.238121728%20L13.2442785,0.239067886%20L13.0616441,0.272108378%20L13.0564412,0.273054536%20L13.0512386,0.274068155%20L12.8691109,0.30930453%20L12.8639083,0.310318148%20L12.8587393,0.311364631%20L12.6771858,0.34883062%20L12.6719831,0.349878833%20L12.6668142,0.351027369%20L12.4858351,0.390655513%20L12.4806664,0.39180405%20L12.4755312,0.392987181%20L12.2951263,0.434845112%20L12.2899913,0.436028243%20L12.2848561,0.437278833%20L12.1050594,0.481332648%20L12.0999244,0.482583239%20L12.0947892,0.483901288%20L11.9246885,0.52775238%20L11.7730336,0.582380688%20L11.6341152,0.664204751%20L11.5128318,0.770386784%20L11.4133389,0.897244377%20L11.3391161,1.04035203%20L11.2927649,1.19474337%20L11.2758394,1.3550469%20L11.2889811,1.51572198%20L11.3317176,1.67116066%20L11.4025282,1.8159913%20L11.4990142,1.94514614%20L11.6177639,2.0541324%20L11.7547229,2.13919952%20L11.9050601,2.19737497%20L12.0635731,2.22666542%20L12.2247888,2.2259891%20L12.3566126,2.20267848%20L12.5220175,2.16004338%20L12.6903615,2.11882735%20L12.8611717,2.0791653%20L13.0324887,2.04166541%20L13.2044476,2.00622631%20L13.3737376,1.97345618%20L13.5471492,1.94207121%20L13.7173849,1.91345639%20L13.8937695,1.88599028%20L14.0652891,1.86146331%20L14.2399507,1.83869323%20L14.4145785,1.81808513%20L14.5899496,1.79957172%20L14.7656245,1.78322047%20L14.9413335,1.7690651%20L15.1176165,1.75707189%20L15.2940349,1.74724083%20L15.4709263,1.73957193%20L15.6451489,1.73416654%20L15.8224456,1.73088958%20L15.9999446,1.72977391%20L16.1774437,1.73088958%20L16.3547404,1.73416654%20L16.5289634,1.73957193%20L16.7058536,1.74724083%20L16.8822733,1.75707189%20L17.0585563,1.7690651%20L17.2342651,1.78322047%20L17.4099393,1.79957172%20L17.5853108,1.81808513%20L17.7599386,1.83869323%20L17.9346009,1.86146331%20L18.1061203,1.88599028%20L18.2825037,1.91345639%20L18.4527396,1.94207121%20L18.6261513,1.97345618%20L18.7954411,2.00622631%20L18.9673999,2.04166541%20L19.1212173,2.0753478%20L19.2812168,2.09504365%20L19.4420949,2.08467205%20L19.5982423,2.04463846%20L19.7442569,1.97629414%20L19.8750655,1.88207141%20L19.9860792,1.7652137%20L20.0735115,1.62974122%20L20.1342542,1.48045118%20L20.1662472,1.3224449%20L20.1683765,1.16122928%20L20.1405383,1.002446%20L20.0837152,0.851601984%20L19.9998962,0.713899714%20L19.891958,0.594170485%20L19.7636817,0.496501807%20L19.6195265,0.42437371%20L19.4913851,0.385691379%20L19.3330756,0.351029445%20L19.3279055,0.349880909%20L19.3227042,0.348832696%20L19.1411506,0.311366707%20L19.1359805,0.310320224%20L19.1307792,0.309306606%20L18.9486514,0.27407023%20L18.9434484,0.273056612%20L18.9382454,0.272110453%20L18.7556108,0.239069962%20L18.7503749,0.238123803%20L18.7451719,0.237245104%20L18.5620305,0.206468302%20L18.5567946,0.205589602%20L18.5515241,0.204745497%20L18.3679088,0.176198309%20L18.36264,0.175354204%20L18.3573696,0.174610423%20L18.173282,0.148292849%20L18.1680115,0.147549068%20L18.1627411,0.146839881%20L17.9781813,0.122752094%20L17.9729108,0.122075772%20L17.9676075,0.121434045%20L17.7826066,0.0996097743%20L17.7773379,0.0990009116%20L17.7720328,0.0984266433%20L17.5866289,0.0788658893%20L17.5813238,0.0783262155%20L17.5760205,0.0778194065%20L17.3902101,0.060522169%20L17.3848722,0.0600499544%20L17.3795688,0.0596106046%20L17.1933866,0.0445768836%20L17.1880486,0.0441721283%20L17.1827453,0.0438002377%20L16.9961911,0.0310637628%20L16.9908532,0.0307264667%20L16.9855153,0.0304220353%20L16.7986584,0.0199829795%20L16.7932859,0.0196785481%20L16.787948,0.019441576%20L16.6007538,0.0113334959%20L16.5954159,0.0110965238%20L16.5900434,0.0109235514%20L16.4025776,0.00511271745%20L16.3972068,0.00493974507%20L16.3918343,0.00483596165%20L16.2040659,0.00135610342%20L16.1986934,0.00125231999%20L16.1933554,0.00121772552%20L16.0053154,3.45944749e-05%20L15.9999446,0%20L15.9945739,3.25188064e-05%20Z%20M24.85434,2.93890754%20L24.6966376,2.97235331%20L24.5478883,3.03448152%20L24.4132604,3.12312987%20L24.2974156,3.23522409%20L24.2043755,3.36687908%20L24.1373833,3.51353388%20L24.0987672,3.67001991%20L24.0898834,3.83099907%20L24.111031,3.99079579%20L24.1614368,4.14393706%20L24.2394093,4.28501765%20L24.3422137,4.40920645%20L24.443835,4.49630081%20L24.489408,4.52961149%20L24.6308614,4.6356247%20L24.7675839,4.74079311%20L24.907887,4.85150218%20L25.0439004,4.96153561%20L25.1786632,5.07332576%20L25.3134605,5.18802132%20L25.4472097,5.30471021%20L25.5765325,5.42038549%20L25.7088633,5.54166887%20L25.8370393,5.66214136%20L25.9637952,5.78426937%20L26.0905182,5.90940399%20L26.2143681,6.03480896%20L26.337815,6.16291663%20L26.45947,6.29237572%20L26.577003,6.42055085%20L26.6952798,6.5527801%20L26.8118666,6.68642841%20L26.9252448,6.81967111%20L27.038386,6.95605585%20L27.1484864,7.0921026%20L27.2567637,7.22933179%20L27.3655806,7.37081783%20L27.4703776,7.51058089%20L27.5733169,7.65145876%20L27.6744314,7.79348534%20L27.7738559,7.93672809%20L27.8726404,8.08290998%20L27.9683824,8.22844998%20L28.0622683,8.37496986%20L28.1554762,8.52446245%20L28.2468281,8.67507018%20L28.3344628,8.82365069%20L28.4209836,8.9744947%20L28.5055429,9.12611589%20L28.5893601,9.28091267%20L28.6695968,9.43344594%20L28.7485155,9.58807373%20L28.7888198,9.66935725%20L28.8734811,9.80655271%20L28.9821631,9.92560631%20L29.1110483,10.0224304%20L29.2556757,10.0936801%20L29.4109789,10.1368556%20L29.5716201,10.1504367%20L29.7319914,10.1339502%20L29.886518,10.0880383%20L30.0298291,10.0142209%20L30.1569223,9.91506589%20L30.2634421,9.79408642%20L30.3456715,9.65540461%20L30.4007061,9.50388479%20L30.4266848,9.3447976%20L30.4226995,9.18361571%20L30.3888471,9.02601487%20L30.3389152,8.90182607%20L30.2970576,8.81726558%20L30.294693,8.81253583%20L30.2922939,8.80783997%20L30.2083418,8.64331349%20L30.2059426,8.63861747%20L30.2034761,8.63395534%20L30.1174638,8.47044248%20L30.1150301,8.46574645%20L30.1124978,8.46111806%20L30.0244912,8.29861864%20L30.0219571,8.29395652%20L30.0193902,8.28936203%20L29.9293892,8.12787605%20L29.9267877,8.12328156%20L29.9241862,8.1186869%20L29.8321597,7.95824827%20L29.8295253,7.95368751%20L29.8268218,7.94912675%20L29.7328355,7.78976903%20L29.7301337,7.78524217%20L29.7273973,7.78071514%20L29.6314184,7.6224724%20L29.6286473,7.61794536%20L29.6258781,7.61345223%20L29.5279048,7.4563243%20L29.5251009,7.45183117%20L29.5222295,7.4473716%20L29.4222965,7.29135865%20L29.4194597,7.28689925%20L29.4165192,7.28247357%20L29.3146281,7.12760933%20L29.3117222,7.12318366%20L29.3087505,7.11879172%20L29.2049325,6.96510974%20L29.2019591,6.96071797%20L29.19892,6.95635976%20L29.0931422,6.8038604%20L29.0901013,6.79950219%20L29.0870276,6.79517788%20L28.9793246,6.64392841%20L28.976218,6.63957037%20L28.9731097,6.63531369%20L28.863447,6.48524667%20L28.8603058,6.48095609%20L28.85713,6.47669941%20L28.7455767,6.32791601%20L28.7423663,6.32365933%20L28.7391231,6.31943639%20L28.6256445,6.17190306%20L28.6224013,6.16768011%20L28.6191235,6.16349089%20L28.5037526,6.01724154%20L28.5004419,6.01308605%20L28.4970967,6.00893074%20L28.3798006,5.86399874%20L28.3764553,5.85984343%20L28.3730443,5.85575557%20L28.2538889,5.7121411%20L28.2504761,5.70801952%20L28.2470305,5.70396556%20L28.1259844,5.56170253%20L28.1225371,5.55761468%20L28.119024,5.55359445%20L27.9961185,5.41268268%20L27.9926054,5.40866246%20L27.9890578,5.40467596%20L27.8642617,5.26514953%20L27.860714,5.26116303%20L27.8570989,5.25724417%20L27.7304779,5.11913645%20L27.7268628,5.11518369%20L27.7231819,5.11126483%20L27.5947015,4.97457617%20L27.5910535,4.97069104%20L27.5873363,4.96680591%20L27.4570328,4.83156988%20L27.4533174,4.82771848%20L27.4495327,4.82390098%20L27.317406,4.69011774%20L27.3136214,4.68630007%20L27.3098039,4.6825163%20L27.1760201,4.55038841%20L27.1722026,4.54660464%20L27.1683523,4.5428885%20L27.0330827,4.41258478%20L27.0292306,4.40886864%20L27.0253456,4.40518623%20L26.8886231,4.27674075%20L26.8847381,4.27305834%20L26.8807857,4.26944339%20L26.7426776,4.14282225%20L26.7387252,4.13920748%20L26.7347382,4.13562643%20L26.5952118,4.01086336%20L26.5912594,4.00731604%20L26.5872049,4.00380245%20L26.4463275,3.88089745%20L26.4422731,3.87738403%20L26.4382186,3.87390435%20L26.2959557,3.75289115%20L26.291903,3.74941146%20L26.2877811,3.74599941%20L26.1441656,3.62684427%20L26.1400782,3.62346595%20L26.1359234,3.62008763%20L25.9909916,3.50282447%20L25.9868351,3.49947987%20L25.9826474,3.49616918%20L25.8363975,3.38079782%20L25.832241,3.37748713%20L25.8280188,3.37424389%20L25.6804854,3.2607645%20L25.6762632,3.25752127%20L25.6720063,3.25434567%20L25.5232224,3.14279198%20L25.5189656,3.13958248%20L25.5146758,3.13647434%20L25.464372,3.09971771%20L25.3259267,3.01715056%20L25.1745412,2.96171153%20L25.0155208,2.93532649%20L24.85434,2.93890754%20Z%20M6.47291685,3.28684545%20L6.31605927,3.32404126%20L6.16886376,3.38975052%20L6.05768179,3.4642774%20L6.01724275,3.49616918%20L6.01305353,3.49947987%20L6.00889804,3.50282447%20L5.86396622,3.62008763%20L5.85981073,3.62346595%20L5.85572305,3.62684427%20L5.71210859,3.74599941%20L5.707987,3.74941146%20L5.70393305,3.75289115%20L5.56167001,3.87390435%20L5.55761589,3.87738403%20L5.55356193,3.88089745%20L5.41268406,4.00380245%20L5.40862994,4.00731604%20L5.40467717,4.01086336%20L5.26515074,4.13562643%20L5.26116424,4.13920748%20L5.25721148,4.14282225%20L5.11910393,4.26944339%20L5.11515117,4.27305834%20L5.11126604,4.27674075%20L4.97454366,4.40518623%20L4.97065852,4.40886864%20L4.96680712,4.41258478%20L4.83153736,4.5428885%20L4.82768596,4.54660464%20L4.82386846,4.55038841%20L4.69008505,4.6825163%20L4.68626755,4.68630007%20L4.68248378,4.69011774%20L4.55035589,4.82390098%20L4.54657212,4.82771848%20L4.54285598,4.83156988%20L4.41255226,4.96680591%20L4.40883612,4.97069104%20L4.40518744,4.97457617%20L4.27670823,5.11126483%20L4.27302582,5.11518369%20L4.26941087,5.11913645%20L4.14278973,5.25724417%20L4.13917496,5.26116303%20L4.13562764,5.26514953%20L4.01083067,5.40467596%20L4.00728352,5.40866246%20L4.00376993,5.41268268%20L3.88086493,5.55359445%20L3.87735152,5.55761468%20L3.87390556,5.56170253%20L3.75285863,5.70396556%20L3.74941267,5.70801952%20L3.74600062,5.7121411%20L3.62684549,5.85575557%20L3.62343343,5.85984343%20L3.62008884,5.86399874%20L3.50279195,6.00893074%20L3.49944735,6.01308605%20L3.49613649,6.01724154%20L3.3807653,6.16349089%20L3.37748834,6.16768011%20L3.37424511,6.17190306%20L3.26076571,6.31943639%20L3.25752248,6.32365933%20L3.25431298,6.32791601%20L3.14275946,6.47669941%20L3.13958369,6.48095609%20L3.13644182,6.48524667%20L3.0267801,6.63531369%20L3.02367196,6.63957037%20L3.02056382,6.64392841%20L2.91286153,6.79517788%20L2.9097873,6.79950219%20L2.90674679,6.8038604%20L2.80097003,6.95635976%20L2.79792952,6.96071797%20L2.79495647,6.96510974%20L2.69113932,7.11879172%20L2.68816644,7.12318366%20L2.68526102,7.12760933%20L2.5833694,7.28247357%20L2.58043025,7.28689925%20L2.57759247,7.29135865%20L2.47766027,7.4473716%20L2.47478876,7.45183117%20L2.4719847,7.4563243%20L2.37401211,7.61345223%20L2.37124179,7.61794536%20L2.36847146,7.6224724%20L2.2724922,7.78071514%20L2.26975561,7.78524217%20L2.26705291,7.78976903%20L2.17306682,7.94912675%20L2.17036412,7.95368751%20L2.16772906,7.95824827%20L2.07570222,8.1186869%20L2.07310089,8.12328156%20L2.07049956,8.12787605%20L1.98049996,8.28936203%20L1.97793236,8.29395652%20L1.97539849,8.29861864%20L1.88739204,8.46111806%20L1.88485834,8.46574645%20L1.88242583,8.47044248%20L1.79641273,8.63395534%20L1.79394649,8.63861747%20L1.79154788,8.64331349%20L1.70759539,8.80783997%20L1.70519678,8.81253583%20L1.7028319,8.81726558%20L1.62090648,8.98277178%20L1.61854177,8.98750154%20L1.61627826,8.99226502%20L1.53634599,9.15871703%20L1.53408248,9.16348052%20L1.53185286,9.168244%20L1.45398139,9.33564217%20L1.45178551,9.34043938%20L1.44958962,9.34523677%20L1.40462355,9.44513507%20L1.35239402,9.59763443%20L1.32938731,9.7571947%20L1.33641432,9.91827522%20L1.37317095,10.0752004%20L1.43844103,10.2226324%20L1.52992716,10.3553683%20L1.64445373,10.4688139%20L1.77806814,10.5590163%20L1.92607437,10.6228675%20L2.08337113,10.6581713%20L2.24448555,10.6636443%20L2.4038092,10.6391174%20L2.55583583,10.5854689%20L2.6952609,10.5045232%20L2.81721992,10.3991182%20L2.91748993,10.2729025%20L2.9817464,10.1554703%20L3.02455032,10.0604032%20L3.0987392,9.90094426%20L3.17380662,9.74462722%20L3.25140774,9.5880061%20L3.33029248,9.43344594%20L3.41052883,9.28091267%20L3.49434605,9.12611589%20L3.57890654,8.9744947%20L3.66542645,8.82365069%20L3.75306135,8.67507018%20L3.84441239,8.52446245%20L3.93762149,8.37496986%20L4.0315064,8.22844998%20L4.1272492,8.08290998%20L4.22603269,7.93672809%20L4.32545807,7.79348534%20L4.42657254,7.65145876%20L4.52951134,7.51058089%20L4.63430838,7.37081783%20L4.74312547,7.22933179%20L4.8514022,7.0921026%20L4.9615031,6.95605585%20L5.07464467,6.81967111%20L5.18802253,6.68642841%20L5.30461006,6.5527801%20L5.42288667,6.42055085%20L5.54042001,6.29237572%20L5.66207494,6.16291663%20L5.78552048,6.03480896%20L5.90937147,5.90940399%20L6.03609397,5.78426937%20L6.16285038,5.66214136%20L6.2910255,5.54166887%20L6.42335611,5.42038549%20L6.55267995,5.30471021%20L6.68642963,5.18802132%20L6.82122648,5.07332576%20L6.95598943,4.96153561%20L7.09210381,4.85140082%20L7.12902943,4.82224563%20L7.24571816,4.71106349%20L7.33977188,4.58011804%20L7.40787976,4.43400377%20L7.44767689,4.2777881%20L7.45781204,4.11691013%20L7.43791347,3.95694458%20L7.38865682,3.8034316%20L7.31176523,3.66174284%20L7.20990751,3.53677704%20L7.08666469,3.43289225%20L6.94625973,3.35366952%20L6.79359137,3.30191307%20L6.63396347,3.27934554%20L6.47291685,3.28684545%20Z%20M30.9868178,14.4368745%20L30.8304335,14.4761311%20L30.6840833,14.5436985%20L30.5528335,14.6372792%20L30.4411781,14.7535964%20L30.3531041,14.8885959%20L30.2915847,15.0375819%20L30.2587805,15.1954192%20L30.2542192,15.3292025%20L30.2602335,15.4682223%20L30.2657392,15.6452825%20L30.2690499,15.8224778%20L30.2701223,15.9999772%20L30.2690499,16.177409%20L30.2657392,16.3546381%20L30.2602335,16.5316308%20L30.2525639,16.7083193%20L30.2426993,16.8848728%20L30.2306725,17.0609195%20L30.216449,17.2371689%20L30.2003677,17.4099724%20L30.1818891,17.5850055%20L30.1612137,17.7603089%20L30.1384765,17.9344976%20L30.1135443,18.1087199%20L30.0869913,18.2794287%20L30.0577347,18.4532795%20L30.0265513,18.6257452%20L29.9936121,18.795981%20L29.9581736,18.9679062%20L29.9207406,19.1387164%20L29.8815866,19.3076009%20L29.839255,19.4804043%20L29.796114,19.6475997%20L29.751181,19.8135451%20L29.7031414,19.9827%20L29.6532423,20.1504358%20L29.601316,20.3176312%20L29.5481754,20.4815833%20L29.4919248,20.6481029%20L29.4336141,20.8140485%20L29.374864,20.97496%20L29.3125334,21.1394188%20L29.2504726,21.2973912%20L29.1836154,21.4616138%20L29.1163187,21.6212753%20L29.0460487,21.7825248%20L28.9753047,21.9395512%20L28.9011497,22.0990101%20L28.82659,22.254246%20L28.7485155,22.4119145%20L28.6678394,22.5699206%20L28.6082452,22.7197175%20L28.5775029,22.8779602%20L28.5766553,23.0391758%20L28.6057077,23.1977226%20L28.6637158,23.3481612%20L28.7486141,23.4851879%20L28.8574984,23.6040725%20L28.9865185,23.7006938%20L29.1312462,23.7717071%20L29.2866515,23.8146124%20L29.4472927,23.8279568%20L29.6076312,23.811234%20L29.7620903,23.7650516%20L29.9052648,23.6909978%20L30.0322576,23.591674%20L30.1385751,23.470492%20L30.2084732,23.3563369%20L30.2922904,23.1920806%20L30.2946896,23.1873848%20L30.2970541,23.182655%20L30.378979,23.0171488%20L30.3813435,23.0124191%20L30.3836078,23.0076895%20L30.46354,22.8412036%20L30.4658025,22.8364738%20L30.4680338,22.8316766%20L30.5459043,22.6642784%20L30.548101,22.659515%20L30.550296,22.6546838%20L30.6260735,22.4863738%20L30.6282685,22.4815764%20L30.6303632,22.4767454%20L30.7041135,22.3075229%20L30.7062082,22.302692%20L30.7082683,22.2978269%20L30.7799238,22.12776%20L30.7819839,22.1228951%20L30.7839783,22.1179966%20L30.853572,21.9470513%20L30.8555317,21.9421525%20L30.8574915,21.9372539%20L30.9249905,21.765464%20L30.9269174,21.7605654%20L30.9287752,21.7556329%20L30.9941795,21.5829984%20L30.9960718,21.5780661%20L30.9978621,21.5731336%20L31.0611734,21.3996883%20L31.0629965,21.3947558%20L31.0647263,21.3897559%20L31.1259429,21.2155673%20L31.1277003,21.2105672%20L31.1293954,21.205601%20L31.1884499,21.0306018%20L31.1901451,21.0256016%20L31.191771,21.0206017%20L31.2487308,20.8448929%20L31.2503568,20.8398591%20L31.2519481,20.8348254%20L31.3067457,20.6583733%20L31.3083371,20.6533395%20L31.3098247,20.6482719%20L31.362493,20.4711442%20L31.3640152,20.4660767%20L31.3654681,20.4609754%20L31.4159743,20.2831719%20L31.4174273,20.2780706%20L31.4188111,20.2729691%20L31.4671551,20.0944901%20L31.4685389,20.0893887%20L31.4698535,20.0842536%20L31.5160683,19.9050989%20L31.5173829,19.8999974%20L31.5186283,19.8948624%20L31.562648,19.7150657%20L31.5638934,19.7099305%20L31.5651042,19.7047955%20L31.6069272,19.5243907%20L31.608138,19.5192217%20L31.609245,19.5140528%20L31.6489076,19.3330737%20L31.6500146,19.3279049%20L31.651087,19.322736%20L31.68852,19.1411825%20L31.6895924,19.1359798%20L31.690613,19.1307771%20L31.7258492,18.9486832%20L31.7268697,18.9434806%20L31.727821,18.9382779%20L31.7608276,18.7556433%20L31.761779,18.7504069%20L31.7626611,18.7451704%20L31.793471,18.5620291%20L31.7943531,18.5567927%20L31.7951661,18.5515561%20L31.8237463,18.3679083%20L31.8245593,18.3626717%20L31.8253031,18.3574014%20L31.8516554,18.1733143%20L31.8523992,18.168044%20L31.8531084,18.1627738%20L31.8771619,17.9782136%20L31.8778711,17.9729096%20L31.8784765,17.9676393%20L31.9003005,17.78264%20L31.9009405,17.7773359%20L31.9014767,17.7720657%20L31.9210381,17.5866272%20L31.9216089,17.5813231%20L31.9221105,17.5760191%20L31.9393749,17.3902089%20L31.9398765,17.3849049%20L31.940309,17.3796008%20L31.9553091,17.193419%20L31.9557416,17.1880812%20L31.9561221,17.1827434%20L31.9688252,16.9962238%20L31.9692057,16.9908859%20L31.9694998,16.9855481%20L31.9799404,16.7986569%20L31.9802171,16.793319%20L31.9804593,16.7879812%20L31.9886011,16.6007859%20L31.9888433,16.5954481%20L31.9890163,16.5900765%20L31.9948264,16.4025772%20L31.9949994,16.3972393%20L31.9951723,16.3918677%20L31.9986508,16.2040981%20L31.9988238,16.1987265%20L31.9988238,16.1933549%20L32,16.0053488%20L31.9995676,16.0005177%20L32,15.9946056%20L31.9988238,15.8065657%20L31.9988238,15.8011941%20L31.9986508,15.7958225%20L31.9951723,15.6080529%20L31.9949994,15.6027151%20L31.9948264,15.5973435%20L31.9890163,15.4098441%20L31.9888433,15.4045063%20L31.9886011,15.3991685%20L31.982317,15.2542028%20L31.9603236,15.0944736%20L31.9091082,14.9416363%20L31.8303919,14.8009611%20L31.7269458,14.6773129%20L31.6023521,14.5750159%20L31.4609333,14.4976175%20L31.3076227,14.4478204%20L31.1477253,14.4273475%20L30.9868178,14.4368745%20Z%20M0.776787799,15.0003185%20L0.618680325,15.0317711%20L0.469153836,15.0920074%20L0.333410998,15.1789665%20L0.216147836,15.2895742%20L0.121486109,15.4200468%20L0.0526349747,15.5658233%20L0.0120607756,15.7218363%20L0.000878371015,15.8552142%20L-3.19332164e-17,15.9946056%20L-3.19332164e-17,15.9999772%20L-3.19332164e-17,16.0053488%20L0.00118243915,16.1933549%20L0.00121703363,16.1987265%20L0.00131908733,16.2040981%20L0.00479880718,16.3918677%20L0.00490086088,16.3972393%20L0.00507037381,16.4025772%20L0.0108811559,16.5900765%20L0.0110506688,16.5954481%20L0.011287122,16.6007859%20L0.019428949,16.7879812%20L0.0196659212,16.793319%20L0.0199357581,16.7986569%20L0.0303749868,16.9855481%20L0.0306794182,16.9908859%20L0.0310513088,16.9962238%20L0.043754054,17.1827434%20L0.0441259446,17.1880812%20L0.0445652945,17.193419%20L0.0595652858,17.3796008%20L0.0600046357,17.3849049%20L0.0605114447,17.3902089%20L0.0777747796,17.5760191%20L0.0782815886,17.5813231%20L0.0788558569,17.5866272%20L0.0984166109,17.7720657%20L0.0989562847,17.7773359%20L0.0995980122,17.78264%20L0.121422283,17.9676393%20L0.122031145,17.9729096%20L0.122740332,17.9782136%20L0.146794389,18.1627738%20L0.147503576,18.168044%20L0.148247357,18.1733143%20L0.174598661,18.3574014%20L0.175342442,18.3626717%20L0.176153682,18.3679083%20L0.204734773,18.5515561%20L0.205546013,18.5567927%20L0.206424713,18.5620291%20L0.237235417,18.7451704%20L0.238114117,18.7504069%20L0.239060276,18.7556433%20L0.272067037,18.9382779%20L0.273013196,18.9434806%20L0.274026814,18.9486832%20L0.30926319,19.1307771%20L0.310276808,19.1359798%20L0.311357885,19.1411825%20L0.348790145,19.322736%20L0.349871222,19.3279049%20L0.350986894,19.3330737%20L0.390648767,19.5140528%20L0.391764439,19.5192217%20L0.392980435,19.5243907%20L0.434804636,19.7047955%20L0.436020632,19.7099305%20L0.437271222,19.7150657%20L0.481291308,19.8948624%20L0.482541898,19.8999974%20L0.483859948,19.9050989%20L0.530075918,20.0842536%20L0.531393967,20.0893887%20L0.532779476,20.0944901%20L0.581123871,20.2729691%20L0.582509379,20.2780706%20L0.583962347,20.2831719%20L0.634468897,20.4609754%20L0.635921865,20.4660767%20L0.637442292,20.4711442%20L0.690110996,20.6482719%20L0.691596829,20.6533395%20L0.693184715,20.6583733%20L0.747981845,20.8348254%20L0.749569731,20.8398591%20L0.751190482,20.8448929%20L0.808149766,21.0206017%20L0.809770518,21.0256016%20L0.811460458,21.0306018%20L0.870514264,21.205601%20L0.872204204,21.2105672%20L0.873960912,21.2155673%20L0.935176873,21.3897559%20L0.936899678,21.3947558%20L0.938724017,21.3996883%20L1.00203467,21.5731336%20L1.00382511,21.5780661%20L1.00571708,21.5829984%20L1.07112226,21.7556329%20L1.07298033,21.7605654%20L1.07490603,21.765464%20L1.14240573,21.9372539%20L1.14436517,21.9421525%20L1.1463246,21.9470513%20L1.21591899,22.1179966%20L1.21791233,22.1228951%20L1.21997312,22.12776%20L1.29162831,22.2978269%20L1.2936891,22.302692%20L1.29578363,22.3075229%20L1.36953334,22.4767454%20L1.37162803,22.4815764%20L1.37382392,22.4863738%20L1.44960069,22.6546838%20L1.45179658,22.659515%20L1.45399246,22.6642784%20L1.53186393,22.8316766%20L1.53409355,22.8364738%20L1.53635706,22.8412036%20L1.61628933,23.0076895%20L1.61855284,23.0124191%20L1.62091755,23.0171488%20L1.70284297,23.182655%20L1.70520785,23.1873848%20L1.70760646,23.1920806%20L1.72807947,23.2321819%20L1.81443039,23.3683301%20L1.92453146,23.4860662%20L2.05459856,23.5813024%20L2.20007109,23.6507615%20L2.35588132,23.6920452%20L2.51669149,23.7036668%20L2.6768262,23.6852546%20L2.83077836,23.637417%20L2.97317648,23.5618767%20L3.09908826,23.4612014%20L3.20412159,23.3389044%20L3.28462812,23.1992429%20L3.33783736,23.0470474%20L3.36185752,22.887656%20L3.35591159,22.7265755%20L3.32013468,22.5693801%20L3.26868214,22.4457995%20L3.25141881,22.4119482%20L3.17331088,22.254246%20L3.09875045,22.0990101%20L3.02459529,21.9395512%20L2.95385218,21.7825248%20L2.88358215,21.6212753%20L2.81628518,21.4616138%20L2.7494272,21.2973912%20L2.68736679,21.1394188%20L2.62503602,20.97496%20L2.56628613,20.8140485%20L2.50797558,20.6481029%20L2.45172566,20.4815833%20L2.39858405,20.3176312%20L2.34665861,20.1504358%20L2.29676005,19.9827%20L2.24871957,19.8135451%20L2.2037874,19.6475997%20L2.16064567,19.4804043%20L2.11831466,19.3076009%20L2.07915942,19.1387164%20L2.04172716,18.9679062%20L2.00628806,18.795981%20L1.97334894,18.6257452%20L1.94216669,18.4532795%20L1.91290997,18.2794287%20L1.88635611,18.1087199%20L1.8614237,17.9344976%20L1.83868735,17.7603089%20L1.81801179,17.5850055%20L1.79953211,17.4099724%20L1.78345104,17.2371689%20L1.76922804,17.0609195%20L1.7572011,16.8848728%20L1.74733631,16.7083193%20L1.73966741,16.5316308%20L1.73416049,16.3546381%20L1.7308498,16.177409%20L1.72976872,15.9999434%20L1.73057996,15.8659574%20L1.71655968,15.7053498%20L1.67297877,15.5501477%20L1.60132358,15.4057563%20L1.50412799,15.2771419%20L1.38477047,15.1687977%20L1.24737212,15.0844736%20L1.09669692,15.0271427%20L0.938015177,14.9987644%20L0.776787799,15.0003185%20Z%20M6.17038402,26.8415276%20L6.01808738,26.8943653%20L5.87822295,26.9745675%20L5.7557234,27.0793308%20L5.65474403,27.205006%20L5.57886589,27.3472353%20L5.53072405,27.5010861%20L5.51194046,27.6612206%20L5.52319041,27.822031%20L5.56413608,27.9779426%20L5.63325757,28.1235839%20L5.72822338,28.2538537%20L5.82430418,28.3470291%20L5.85572305,28.3730763%20L5.85981073,28.3764884%20L5.86396622,28.379833%20L6.00889804,28.4970961%20L6.01305353,28.5004745%20L6.01724275,28.5037516%20L6.1634921,28.6191228%20L6.16764759,28.6224335%20L6.17187054,28.6256767%20L6.31940387,28.7391561%20L6.32362682,28.7423993%20L6.32788349,28.7455749%20L6.47666672,28.8571625%20L6.48092357,28.8603381%20L6.48521398,28.86348%20L6.63528118,28.973108%20L6.63957158,28.9762499%20L6.64389589,28.9793243%20L6.79517926,29.0870603%20L6.79950357,29.0901347%20L6.80386161,29.0931752%20L6.95636115,29.1989518%20L6.96068545,29.2019586%20L6.96511113,29.2049314%20L7.11879293,29.3087825%20L7.12318487,29.3117555%20L7.12761054,29.3146608%20L7.28244106,29.4165524%20L7.28686673,29.4194578%20L7.29132613,29.4223293%20L7.44733908,29.5222615%20L7.45179848,29.5250993%20L7.45629178,29.5279034%20L7.61341954,29.625876%20L7.61791285,29.62868%20L7.62243988,29.6314165%20L7.78068262,29.7274298%20L7.78520948,29.7301662%20L7.78977041,29.7328352%20L7.94909406,29.826855%20L7.95365499,29.8295577%20L7.95824948,29.8321929%20L8.11865438,29.9241859%20L8.12324887,29.9268209%20L8.12784354,29.9293885%20L8.28932951,30.019422%20L8.29395773,30.0219895%20L8.29858612,30.0245233%20L8.46108554,30.1125298%20L8.46574766,30.1150297%20L8.47040996,30.117496%20L8.63392282,30.2035091%20L8.63861885,30.2059416%20L8.6433147,30.2083402%20L8.80784118,30.2923264%20L8.81253704,30.294725%20L8.81726679,30.2970562%20L8.98273926,30.3790153%20L8.98746884,30.3813463%20L8.99223233,30.3836437%20L9.15868451,30.4635421%20L9.163448,30.4658393%20L9.16821148,30.4680691%20L9.33560965,30.5459067%20L9.34040687,30.5481363%20L9.34520408,30.5502985%20L9.51351433,30.626109%20L9.51834545,30.6282711%20L9.52317657,30.6303995%20L9.69236517,30.7041155%20L9.69723002,30.706244%20L9.70206097,30.7082708%20L9.87216183,30.7799598%20L9.87702667,30.7819868%20L9.88189152,30.7839802%20L10.0528706,30.8535744%20L10.0577354,30.8555677%20L10.0626679,30.8574934%20L10.2344578,30.9249931%20L10.2393564,30.9269526%20L10.2442889,30.9288106%20L10.4169234,30.9942158%20L10.421822,30.996074%20L10.4267882,30.9978982%20L10.6001998,31.0612089%20L10.605166,31.0629995%20L10.6101322,31.0647562%20L10.7843546,31.1259721%20L10.7893209,31.127695%20L10.7943208,31.1293849%20L10.9692863,31.1884724%20L10.9742863,31.1901624%20L10.9793201,31.1917831%20L11.1550289,31.2487424%20L11.1600628,31.2503632%20L11.1650966,31.2519164%20L11.3415148,31.3067473%20L11.3465823,31.3083023%20L11.3516162,31.3098228%20L11.5287778,31.3624915%20L11.5338452,31.3640119%20L11.5389127,31.3654303%20L11.71675,31.4159707%20L11.7218514,31.4174237%20L11.7269527,31.4188092%20L11.9054319,31.4671536%20L11.9105332,31.4685391%20L11.9156682,31.4698571%20L12.0947892,31.5160733%20L12.0999244,31.5173913%20L12.1050594,31.5186419%20L12.2848561,31.562662%20L12.2899913,31.5639126%20L12.2951263,31.5651286%20L12.4755312,31.6069528%20L12.4806664,31.6081359%20L12.4858351,31.6092845%20L12.6446521,31.6440817%20L12.8046855,31.6637438%20L12.9655295,31.6533722%20L13.1217113,31.6133384%20L13.2677244,31.5450278%20L13.398501,31.4507715%20L13.5095479,31.3339138%20L13.5969462,31.1984751%20L13.657723,31.0491511%20L13.6897161,30.891145%20L13.6918108,30.7299631%20L13.6640067,30.5711799%20L13.6071827,30.4203021%20L13.5233316,30.2825998%20L13.4154265,30.1628704%20L13.2871501,30.0652357%20L13.1429613,29.9931076%20L13.0148199,29.9544252%20L12.861138,29.920743%20L12.6928953,29.8817566%20L12.5219838,29.8398987%20L12.352964,29.7963178%20L12.1838767,29.7505071%20L12.017222,29.7031761%20L11.8494523,29.6532777%20L11.6840137,29.6018589%20L11.5182709,29.5481766%20L11.351785,29.4919606%20L11.1891842,29.4348325%20L11.0239821,29.3744949%20L10.8628678,29.3134477%20L10.6992197,29.2491574%20L10.5383082,29.183651%20L10.3786466,29.1163538%20L10.217397,29.0460838%20L10.0603706,28.9753409%20L9.90310762,28.9021992%20L9.74560814,28.8265914%20L9.590102,28.7495984%20L9.43658902,28.6712541%20L9.28081252,28.5893624%20L9.12817789,28.5066939%20L8.97436082,28.4209847%20L8.82371953,28.3345659%20L8.67189562,28.2449718%20L8.52446383,28.1555464%20L8.37686287,28.0634859%20L8.2283161,27.9683511%20L8.08287746,27.8726757%20L7.93855364,27.7751423%20L7.79352028,27.6745008%20L7.65139251,27.5733187%20L7.51044701,27.4703122%20L7.37078531,27.3656167%20L7.2306507,27.2578468%20L7.09203635,27.1484553%20L6.95602316,27.0384218%20L6.9288274,27.0158543%20L6.7956859,26.9249424%20L6.64801748,26.8602805%20L6.49092345,26.8241658%20L6.32984292,26.8178483%20L6.17038402,26.8415276%20Z%20M25.3843377,26.9146016%20L25.2279534,26.9537569%20L25.0815686,27.0212566%20L24.9712987,27.0971347%20L24.9078524,27.1484522%20L24.7692393,27.2578437%20L24.629104,27.3656136%20L24.4894426,27.4703091%20L24.3484961,27.5733156%20L24.2063682,27.6744976%20L24.061336,27.7751392%20L23.9170113,27.8726726%20L23.7715727,27.968348%20L23.6230257,28.0634828%20L23.4754249,28.1555433%20L23.3279937,28.2449687%20L23.1761706,28.3345628%20L23.025529,28.4209815%20L22.8717116,28.5066907%20L22.7190773,28.5893593%20L22.5633001,28.671251%20L22.4097871,28.7495953%20L22.2542815,28.8265883%20L22.0967815,28.9021961%20L21.9395185,28.9753378%20L21.7824924,29.0460807%20L21.6212424,29.1163507%20L21.461582,29.1836479%20L21.3006692,29.2491543%20L21.1370218,29.3134446%20L20.9759067,29.3744918%20L20.8107042,29.4348294%20L20.648105,29.4919575%20L20.4816191,29.5481735%20L20.3158752,29.6018558%20L20.1504375,29.6532746%20L19.9826682,29.703173%20L19.8160127,29.750504%20L19.6469253,29.7963147%20L19.4779054,29.8398956%20L19.3069948,29.8817535%20L19.1387169,29.9207736%20L18.9699011,29.9577667%20L18.8589895,29.9806383%20L18.7048348,30.0277666%20L18.5620979,30.1026987%20L18.4357468,30.2028335%20L18.3301731,30.3246574%20L18.2490249,30.4639474%20L18.1951734,30.6159064%20L18.1704435,30.7751963%20L18.1756811,30.9363107%20L18.2107478,31.0936749%20L18.2744293,31.2417825%20L18.3644632,31.3754983%20L18.4777393,31.4901601%20L18.6103417,31.581849%20L18.7576709,31.6472879%20L18.9145638,31.6842811%20L19.0756097,31.6915107%20L19.2084127,31.6746865%20L19.3227042,31.6511393%20L19.3279055,31.6500582%20L19.3330756,31.6489097%20L19.5140549,31.6092815%20L19.5192233,31.608133%20L19.5243588,31.6069499%20L19.7047621,31.5651257%20L19.7098977,31.5639097%20L19.7150332,31.5626591%20L19.8948293,31.518639%20L19.8999649,31.5173884%20L19.9051004,31.5160703%20L20.0842202,31.4698542%20L20.0893558,31.4685362%20L20.0944568,31.4671506%20L20.2729366,31.4188062%20L20.2780375,31.4174207%20L20.2831385,31.4159678%20L20.4609766,31.3654273%20L20.4660447,31.3640089%20L20.471111,31.3624885%20L20.6482728,31.3098198%20L20.6533063,31.3082994%20L20.6583744,31.3067444%20L20.8347924,31.2519135%20L20.8398259,31.2503602%20L20.8448611,31.2487395%20L21.0205699,31.1917802%20L21.0256034,31.1901594%20L21.0306023,31.1884695%20L21.205569,31.129382%20L21.2105679,31.127692%20L21.215534,31.1259692%20L21.3897569,31.0647532%20L21.394723,31.0629965%20L21.399689,31.0612059%20L21.5731007,30.9978953%20L21.5780668,30.9960711%20L21.5829653,30.9942129%20L21.7556004,30.9288077%20L21.7605336,30.9269496%20L21.7654322,30.9249902%20L21.9372214,30.8574905%20L21.9421546,30.8555648%20L21.9470186,30.8535714%20L22.1179983,30.7839772%20L22.1228623,30.7819839%20L22.127728,30.7799568%20L22.297829,30.7082679%20L22.3026601,30.706241%20L22.3075241,30.7041126%20L22.4767136,30.6303966%20L22.4815447,30.6282682%20L22.4863741,30.626106%20L22.6546849,30.5502955%20L22.6594831,30.5481334%20L22.6642796,30.5459038%20L22.8316771,30.4680662%20L22.8364408,30.4658364%20L22.8412044,30.4635392%20L23.0076575,30.3836408%20L23.0124211,30.3813434%20L23.0171502,30.3790124%20L23.1826225,30.2970532%20L23.1873516,30.2947221%20L23.1920478,30.2923235%20L23.3565739,30.2083373%20L23.3612701,30.2059387%20L23.3659663,30.2035062%20L23.5294788,30.117493%20L23.5341422,30.1150268%20L23.5388038,30.1125268%20L23.7013027,30.0245204%20L23.7059314,30.0219865%20L23.7105601,30.0194191%20L23.8720454,29.9293856%20L23.8766396,29.926818%20L23.8812354,29.9241829%20L24.0416396,29.83219%20L24.0462338,29.8295548%20L24.0507951,29.8268521%20L24.2101182,29.7328322%20L24.2146795,29.7301633%20L24.2192062,29.7274268%20L24.3774499,29.6314135%20L24.3819766,29.6286771%20L24.3864704,29.625873%20L24.5435968,29.5279004%20L24.5480906,29.5250964%20L24.5525499,29.5222586%20L24.708564,29.4223264%20L24.7130233,29.4194549%20L24.7174479,29.4165495%20L24.8722789,29.3146579%20L24.8767053,29.3117526%20L24.8810971,29.3087796%20L25.0347778,29.2049285%20L25.0392042,29.2019556%20L25.0435285,29.1989488%20L25.1960279,29.0931723%20L25.200385,29.0901318%20L25.2047093,29.0870573%20L25.3559927,28.9793213%20L25.360317,28.9762469%20L25.3646085,28.973105%20L25.5146758,28.8634771%20L25.5189656,28.8603352%20L25.5232224,28.8571596%20L25.6720063,28.745572%20L25.6762632,28.7423964%20L25.6804854,28.7391532%20L25.8280188,28.6256738%20L25.832241,28.6224305%20L25.8363975,28.6191198%20L25.9826474,28.5037487%20L25.9868351,28.5004715%20L25.9909916,28.4970932%20L26.0593018,28.4418232%20L26.1746052,28.3291884%20L26.2670382,28.197128%20L26.3333212,28.0501691%20L26.3712264,27.8934803%20L26.3793682,27.7324674%20L26.3574768,27.5727721%20L26.3063272,27.419901%20L26.2277129,27.2791582%20L26.124336,27.1554425%20L25.999808,27.053078%20L25.8584238,26.9756119%20L25.7051478,26.9257136%20L25.5452487,26.9051392%20L25.3843377,26.9146016%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchParallelMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749497,0.00291311058%20C8.19459426,-0.156397006%200.934430576,6.23964383%200.125121325,13.9849156%20C-0.730147068,20.5353696%202.86607419,27.4446668%208.86565826,30.2993656%20C14.5308467,33.1460873%2021.8770104,32.2887598%2026.5754169,27.9685412%20C31.3201139,23.8072587%2033.3024634,16.7264499%2031.1073745,10.7625724%20C29.0891658,4.88433641%2023.4445334,0.407560824%2017.2012601,0.0494092676%20C16.7932624,0.0185971184%2016.3841086,0.00316192869%2015.9749497,0.00291311058%20Z%20M15.7938239,1.72666556%20C22.9282168,1.45799522%2029.6335055,7.40712814%2030.1925618,14.5309763%20C30.8791581,20.8137263%2026.9261347,27.3225161%2020.9104626,29.3931251%20C15.0626785,31.5554444%207.88454823,29.4526497%204.35270436,24.2519986%20C0.727774864,19.1744227%200.871744999,11.6794189%204.98477735,6.91580463%20C7.61726798,3.74484846%2011.6564691,1.74209919%2015.7938239,1.72666556%20Z%20M16.0771396,3.28046262%20C9.47736152,3.07057245%203.40557181,8.86469601%203.28634094,15.4648382%20C2.99540086,21.4290085%207.41566311,27.2820261%2013.3206268,28.4179223%20C18.7919198,29.6156584%2024.9052322,26.8047619%2027.3462934,21.7157161%20C29.8708918,16.7454879%2028.7418209,10.1311451%2024.4343405,6.50053377%20C22.1519751,4.47881869%2019.1330529,3.28389631%2016.0771396,3.28046262%20Z%20M15.9994842,4.97465185%20C21.8174703,4.82058972%2027.1162507,10.0565596%2027.0229422,15.880254%20C27.1257853,21.2639402%2022.7926662,26.3806601%2017.3871394,26.9234568%20C12.312026,27.5898159%206.96107172,24.335586%205.50197207,19.3707194%20C3.97252929,14.6402976%205.98191836,8.94289159%2010.389583,6.50727795%20C12.0795309,5.51160946%2014.0371674,4.97133505%2015.9994842,4.97465185%20Z%20M13.8485147,8.25604871%20C13.8485147,10.1007658%2013.8485147,11.9454827%2013.8485147,13.7901998%20C11.9699144,13.7901998%2010.0913143,13.7901998%208.21271409,13.7901998%20C8.21271409,15.2500644%208.21271409,16.7099294%208.21271409,18.1697936%20C10.0913143,18.1697936%2011.9699144,18.1697936%2013.8485147,18.1697936%20C13.8485147,20.0144551%2013.8485147,21.8591148%2013.8485147,23.7037763%20C15.2852172,23.7037763%2016.721919,23.7037763%2018.1586224,23.7037763%20C18.1586224,21.8591148%2018.1586224,20.0144551%2018.1586224,18.1697936%20C20.0383015,18.1697936%2021.9179824,18.1697936%2023.7976616,18.1697936%20C23.7976616,16.7099294%2023.7976616,15.2500644%2023.7976616,13.7901998%20C21.9179824,13.7901998%2020.0383015,13.7901998%2018.1586224,13.7901998%20C18.1586224,11.9454827%2018.1586224,10.1007658%2018.1586224,8.25604871%20C16.7219207,8.25604871%2015.2852172,8.25604871%2013.8485147,8.25604871%20Z%20M14.7137826,9.12135033%20C15.5747197,9.12135033%2016.4356572,9.12135033%2017.2965938,9.12135033%20C17.2965938,10.9660111%2017.2965938,12.8106721%2017.2965938,14.6553328%20C19.1751826,14.6553328%2021.0537715,14.6553328%2022.9323603,14.6553328%20C22.9323603,15.5383861%2022.9323603,16.4214386%2022.9323603,17.3044924%20C21.0537715,17.3044924%2019.1751826,17.3044924%2017.2965938,17.3044924%20C17.2965938,19.1491417%2017.2965938,20.9937911%2017.2965938,22.8384405%20C16.4356572,22.8384405%2015.5747197,22.8384405%2014.7137826,22.8384405%20C14.7137826,20.9937911%2014.7137826,19.1491417%2014.7137826,17.3044924%20C12.8341026,17.3044924%2010.9544224,17.3044924%209.07474237,17.3044924%20C9.07474237,16.4214386%209.07474237,15.5383861%209.07474237,14.6553328%20C10.9544224,14.6553328%2012.8341026,14.6553328%2014.7137826,14.6553328%20C14.7137826,12.8106721%2014.7137826,10.9660111%2014.7137826,9.12135033%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchSignal = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M16.0051684,8.4961227%20C13.7388172,12.5637704%2011.4727263,16.6315854%209.20647642,20.6994003%20C13.7389496,20.6994003%2018.2714238,20.6994003%2022.8038961,20.6994003%20C20.5376541,16.6315854%2018.2714121,12.5637704%2016.0051684,8.4961227%20L16.0051684,8.4961227%20Z%20M16.0051684,10.2712361%20C17.7812982,13.4591846%2019.557428,16.6473003%2021.3335579,19.8354159%20C17.7812982,19.8354159%2014.2290394,19.8354159%2010.6767804,19.8354159%20C12.45291,16.6473003%2014.2290395,13.4591846%2016.0051684,10.2712361%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventCatchTimer = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9697517,1.96477901e-15%20C15.9275067,1.96477901e-15%2015.8852478,1.96477901e-15%2015.8430027,0.00047534434%20C8.71301457,-0.0580488395%202.00378562,5.29441308%200.437449914,12.2459184%20C-1.0736376,18.369056%201.41645935,25.2509892%206.5727957,28.9110929%20C11.6979842,32.6992815%2019.1189606,33.0161591%2024.4845983,29.5341365%20C29.7567453,26.2576169%2032.8144025,19.7679315%2031.8101321,13.6175385%20C30.9062153,7.3768516%2026.0204004,1.91790598%2019.8595693,0.475200638%20C18.5888824,0.157220939%2017.2793551,0.000866323598%2015.9697517,1.96477901e-15%20Z%20M15.7885909,1.7240544%20C15.9042204,1.72369991%2016.0199242,1.72477349%2016.1356902,1.72743049%20C22.7610682,1.66054561%2028.9589095,6.87590889%2030.0266045,13.4177447%20C31.1568064,19.3271842%2028.1180716,25.7656878%2022.7644953,28.5552867%20C17.2909118,31.5676105%209.89807887,30.4394272%205.64808716,25.8290588%20C1.29080643,21.3318901%200.44426211,13.8738987%203.80201178,8.56240897%20C6.29466208,4.44954844%2010.9706905,1.74317439%2015.7885909,1.7240544%20Z%20M16.0719614,3.2782432%20C15.9550133,3.2782432%2015.8379839,3.27967448%2015.7209459,3.28301344%20C9.62025807,3.28301344%204.02995271,8.33199079%203.37457673,14.3974396%20C2.59419402,20.0813112%206.16965328,26.0094713%2011.5934956,27.9176948%20C16.7319305,29.8595274%2023.0093831,28.0180329%2026.2168855,23.5372529%20C29.6781882,18.953636%2029.4791143,11.998785%2025.6205432,7.70578349%20C23.2613135,4.95897611%2019.6973517,3.28316777%2016.0719614,3.2782432%20Z%20M15.994291,4.97275911%20C16.0722656,4.97275911%2016.1502281,4.97387352%2016.2282114,4.9757077%20C21.6282964,4.9757077%2026.5494417,9.53240858%2026.9615469,14.9183075%20C27.5245308,20.0487063%2024.0037161,25.2822461%2018.9905906,26.5960318%20C14.1591782,28.005294%208.5344596,25.6613403%206.24544308,21.1504614%20C3.78174768,16.5914268%205.04515594,10.3550768%209.2586191,7.26683803%20C11.1712218,5.78806194%2013.5770772,4.96914938%2015.994291,4.97275911%20Z%20M15.8567405,8.39231925%20C12.8923195,8.41326584%2010.0654105,10.3605164%208.97285238,13.1153369%20C7.83584121,15.8079457%208.46442069,19.1221668%2010.5089925,21.2111191%20C12.4969206,23.3511909%2015.7724181,24.1398618%2018.5160337,23.1368548%20C21.3911216,22.1573812%2023.5032582,19.313462%2023.5793646,16.2724771%20C23.7325297,13.3181367%2021.9569934,10.3969999%2019.2836824,9.14234754%20C18.2635624,8.64843616%2017.1312451,8.39129683%2015.9980049,8.39279175%20C15.9508863,8.39215115%2015.9037952,8.39198674%2015.8567405,8.39231925%20Z%20M16.1270819,9.77438296%20C18.8353378,9.78655288%2021.3759927,11.7881745%2022.0075461,14.4264349%20C22.7109182,17.0018298%2021.5258775,19.9384067%2019.218839,21.2878096%20C16.8632438,22.7662013%2013.5420885,22.3721873%2011.6077738,20.3699528%20C9.56648394,18.4007381%209.20297589,14.9936576%2010.7690384,12.6320378%20C11.8781955,10.8701598%2013.9153011,9.75509947%2015.9980049,9.77538207%20C16.0410692,9.77456651%2016.0840937,9.77424471%2016.1270819,9.77438296%20Z%20M17.9581706,11.5384885%20C17.2674389,12.7916183%2016.5767037,14.0447487%2015.8859719,15.2978785%20C15.2459643,15.365933%2015.0939207,16.3369144%2015.6844231,16.5958805%20C16.0744847,16.8666314%2016.3799905,16.4162786%2016.7350708,16.4317981%20L19.9028098,16.4317981%20L19.9028098,15.5676792%20L16.7239323,15.5676792%20C17.387605,14.3636506%2018.0512777,13.1596236%2018.7149505,11.9555948%20C18.4626899,11.8165598%2018.2104312,11.6775236%2017.9581706,11.5384885%20Z'%20transform='translate(0%20.04)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventNone = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.8482439,0.00102696136%20C8.11277103,-0.0925937022%200.931278972,6.28180323%200.125121586,13.9826043%20C-0.730147077,20.5330416%202.86606693,27.4424137%208.86565821,30.2971752%20C14.5308477,33.1437449%2021.8770075,32.2864471%2026.5754124,27.9661879%20C31.3201143,23.8049166%2033.3024633,16.7241852%2031.1073747,10.7603817%20C29.1051296,4.93784517%2023.5489322,0.479996963%2017.367021,0.0605429546%20C16.8620462,0.017076218%2016.3550568,-0.00298535279%2015.8482439,0.000358242335%20L15.8482439,0.00102696136%20Z%20M16.1408745,1.72765948%20C23.2535389,1.62902343%2029.8032439,7.69781576%2030.2184966,14.808138%20C30.7777882,21.1069697%2026.7015779,27.5425544%2020.6361275,29.4870221%20C14.8382714,31.4910059%207.82998865,29.3666527%204.35268917,24.2497819%20C0.717303964,19.158824%200.874353613,11.6382426%205.01587722,6.87612726%20C7.72240697,3.63818974%2011.9021812,1.62885625%2016.1408745,1.72765948%20Z%20M15.7262107,3.28293276%20C9.15705955,3.25785579%203.2557188,9.15645914%203.27790038,15.7294656%20C3.11883553,21.694105%207.64309288,27.4542835%2013.5712462,28.4658882%20C18.9798777,29.5308232%2024.941578,26.7222033%2027.3463133,21.7134978%20C29.8803873,16.7265257%2028.7321081,10.0861458%2024.3933187,6.462023%20C22.0285242,4.38514889%2018.8810861,3.19181979%2015.7262107,3.28293276%20L15.7262107,3.28293276%20Z%20M16.2333784,4.97529343%20C22.0534708,4.94854467%2027.2463683,10.2927799%2027.0230362,16.1181585%20C26.9988118,21.4175896%2022.7097249,26.3846674%2017.3871528,26.9211472%20C12.3120273,27.5875257%206.96106049,24.3333718%205.5019547,19.3684674%20C3.9669289,14.6235715%205.99579049,8.90803002%2010.4273697,6.48275329%20C12.1759192,5.4619537%2014.2080139,4.92748002%2016.2333784,4.97529343%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventThrowCompensation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M15.4397379,10.7473637%20C12.9701408,12.4908801%2010.5005436,14.2345637%208.03094645,15.9782473%20C10.5007481,17.7225997%2012.9701097,19.4676207%2015.4397379,21.2124746%20C15.4397379,19.526468%2015.4397379,17.8404613%2015.4397379,16.1546219%20C17.8245426,17.8419659%2020.2114782,19.5263008%2022.5971049,21.2124746%20C22.5971049,17.7241043%2022.5971049,14.235734%2022.5971049,10.7473637%20C20.2113161,12.4322001%2017.8255272,14.1170364%2015.4397379,15.8018728%20C15.4397379,14.1170364%2015.4397379,12.4322001%2015.4397379,10.7473637%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventThrowEscalation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M16.0051684,8.90236922%20C14.3328247,13.5561488%2013.271368,18.4035223%2011.5990151,23.0573019%20C13.1332929,21.5321221%2014.4709779,19.823379%2016.0051684,18.2981992%20C17.4738866,19.8845667%2018.9426049,21.4709343%2020.4113231,23.0573019%20C18.9146541,18.3478515%2017.5018357,13.6119868%2016.0051684,8.90236922%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventThrowLink = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M17.7788875,9.06821142%20C17.7788875,10.2533479%2017.7788875,11.4383171%2017.7788875,12.6234536%20C15.1141699,12.6234536%2012.4494524,12.6234536%209.7847349,12.6234536%20C9.7847349,14.861153%209.7847349,17.0990196%209.7847349,19.3368862%20C12.4494524,19.3368862%2015.1141699,19.3368862%2017.7788875,19.3368862%20C17.7788875,20.5216883%2017.7788875,21.7066576%2017.7788875,22.8914597%20C19.7219127,20.5877243%2021.664938,18.2838217%2023.6079633,15.9799191%20C21.664938,13.6760166%2019.7219127,11.372114%2017.7788875,9.06821142%20L17.7788875,9.06821142%20Z'%20transform='translate(0%20.046)'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventThrowMessage = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M10.0884679,10.4504527%20C12.1022857,12.0841321%2014.1161037,13.7178115%2016.1299212,15.3514909%20C18.1437386,13.7178115%2020.1575561,12.0841321%2022.1713736,10.4504527%20C18.143737,10.4504527%2014.1161032,10.4504527%2010.0884679,10.4504527%20Z%20M8.74795901,11.5877757%20C8.74795901,14.8949233%208.74795901,18.2020709%208.74795901,21.5092184%20C13.5861118,21.5092184%2018.4242644,21.5092184%2023.2624163,21.5092184%20C23.2624163,18.2694443%2023.2624163,15.0298373%2023.2624163,11.7900631%20C20.8849179,13.7189817%2018.5074196,15.6477332%2016.1299212,17.5766519%20C13.6692673,15.5803598%2011.2086132,13.5840678%208.74795901,11.5877757%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventThrowMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M16.0051684,8.04824845%20C13.4651658,9.89190549%2010.9253046,11.7357297%208.38538333,13.5795539%20C9.35552442,16.5628745%2010.3257137,19.5461952%2011.2958544,22.5293486%20C14.4353743,22.5293486%2017.5748949,22.5293486%2020.7144148,22.5293486%20C21.6845549,19.5461952%2022.6547434,16.5628745%2023.6248852,13.5795539%20C21.0849785,11.7357297%2018.5450751,9.89207267%2016.0051684,8.04824845%20L16.0051684,8.04824845%20Z'/%3e%3c/svg%3e";
const BpmnIconIntermediateEventThrowSignal = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9749493,0.00289560922%20C8.19459375,-0.155925046%200.934430646,6.23969914%200.125121246,13.9849645%20C-0.730146789,20.5353971%202.86607384,27.4445971%208.86565799,30.2993566%20C14.5308464,33.1460914%2021.8770087,32.2887943%2026.5754169,27.9685381%20C31.3201154,23.8072697%2033.302463,16.7263762%2031.1073743,10.762577%20C29.089165,4.88437382%2023.4445435,0.40747033%2017.2012601,0.0493715483%20C16.7932599,0.0192792136%2016.3841061,0.00256124994%2015.9749493,0.00256124994%20L15.9749493,0.00289560922%20Z%20M15.7938235,1.72668484%20C22.9282059,1.45802717%2029.6335103,7.40711454%2030.1925606,14.5309732%20C30.8791574,20.8137512%2026.9261347,27.322556%2020.9104613,29.3930758%20C15.0626781,31.5553772%207.88454808,29.4532604%204.35270421,24.2519676%20C0.727774413,19.1743876%200.871745237,11.6793902%204.98477699,6.91577359%20C7.61726779,3.74487742%2011.6564688,1.74206537%2015.7938235,1.72668484%20Z%20M16.0771392,3.28045239%20C9.47736109,3.07047477%203.40557172,8.8647538%203.28634071,15.4648387%20C2.99540066,21.4289722%207.41566336,27.2819313%2013.3206265,28.4179169%20C18.7919192,29.6155919%2024.9052321,26.8048006%2027.3462922,21.7156853%20C29.8708936,16.7454347%2028.7418192,10.1311395%2024.4343406,6.50049937%20C22.1519741,4.47879603%2019.1330526,3.28379598%2016.0771392,3.28045239%20Z%20M15.9994843,4.97465083%20C21.817471,4.82084556%2027.116248,10.0565774%2027.0229417,15.8802801%20C27.1257739,21.2639659%2022.7926783,26.3806659%2017.3871388,26.9234982%20C12.312013,27.5898762%206.96104459,24.3355574%205.5019395,19.3706565%20C3.97250679,14.6403087%205.98191976,8.94282669%2010.3895826,6.50718656%20C12.0795325,5.51163182%2014.0371711,4.9713448%2015.9994843,4.97465083%20Z%20M16.0051684,8.49478526%20C13.7435766,12.5657766%2011.4723167,16.6314182%209.2069487,20.7002362%20C13.7390957,20.7002362%2018.2712415,20.7002362%2022.8033895,20.7002362%20C20.5373164,16.6317525%2018.2712415,12.5632689%2016.0051684,8.49478526%20L16.0051684,8.49478526%20Z'/%3e%3c/svg%3e";
const BpmnIconLane = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M0,0%20L0,18.6206897%20L32,18.6206897%20L32,0%20L0,0%20Z%20M1.65517241,17.0559022%20L1.65517241,1.68446983%20L30.2758621,1.68446983%20L30.2758621,1.68446983%20L30.2758621,17.0559022%20L1.65517241,17.0559022%20Z'%20transform='translate(0%207)'/%3e%3c/svg%3e";
const BpmnIconManualTask = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M6.49417317,0%20C2.91556567,0%200,2.9032665%200,6.475%20L0,19.8583333%20C0,23.4300667%202.91556567,26.3333333%206.49417317,26.3333333%20L25.5058267,26.3333333%20C29.084435,26.3333333%2032,23.4300667%2032,19.8583333%20L32,6.475%20C32,2.9032665%2029.084435,0%2025.5058267,0%20L6.49417317,0%20Z%20M6.49417317,2%20L25.5058267,2%20C28.0147767,2%2030,3.9804335%2030,6.475%20L30,19.8583333%20C30,22.3529%2028.0147767,24.3333333%2025.5058267,24.3333333%20L6.49417317,24.3333333%20C3.98522267,24.3333333%202,22.3529%202,19.8583333%20L2,6.475%20C2,3.9804335%203.98522267,2%206.49417317,2%20Z%20M10.9249023,3.3277995%20C10.70164,3.3331675%2010.4948487,3.417182%2010.3176432,3.53144533%20L10.3173503,3.53164067%20L10.3170573,3.531836%20C9.33261,4.1693205%205.96247017,6.50814917%205.22164717,7.01663417%20L5.22161467,7.01666667%20L5.221582,7.01666667%20C4.552371,7.47613417%204.10158267,8.16961983%203.84241533,8.9912435%20L3.84238283,8.99140633%20L3.84235033,8.9915365%20C3.57254633,9.84937817%203.60715683,10.7838613%203.60976567,11.5665038%20L3.60979817,11.5667318%20L3.60979817,11.566927%20C3.61244717,12.1562368%203.6264815,12.6705092%203.7793295,13.294205%20C3.77933983,13.2942583%203.77938417,13.294315%203.7793945,13.2943683%20C4.00033733,14.20204%204.41447217,14.9235883%205.01077467,15.412435%20C5.60705233,15.9012617%206.373157,16.1436283%207.23925783,16.1463217%20C10.2778698,16.1577283%2013.3182822,16.1618083%2016.3585283,16.1463217%20L16.3587883,16.1463217%20L16.35905,16.1463217%20C16.6863417,16.144175%2017.003765,16.0189217%2017.2074867,15.776725%20C17.4111933,15.5345467%2017.4938167,15.21525%2017.4981117,14.8622717%20C17.5009817,14.6375867%2017.4710967,14.425715%2017.4008133,14.2366217%20L17.7275383,14.2366217%20C18.0632417,14.2366217%2018.3691567,14.1265783%2018.579915,13.9208667%20C18.7906033,13.7152233%2018.897,13.4461783%2018.9538733,13.166569%20C18.9538783,13.1665482%2018.95387,13.1665247%2018.9538733,13.1665038%20C19.0363283,12.7625173%2018.9926717,12.3610417%2018.8275717,12.0244467%20C19.207045,11.9864925%2019.5263467,11.7805422%2019.704655,11.5027995%20C19.9009417,11.1970545%2019.9620233,10.8365413%2019.9631633,10.477832%20C19.9643417,10.1031932%2019.874585,9.73954217%2019.6695633,9.444694%20C19.4645433,9.14984583%2019.1152,8.93351617%2018.7116533,8.93294267%20L18.7115567,8.93294267%20L18.7114583,8.93294267%20C18.5642083,8.93281983%2018.4060333,8.93236083%2018.234115,8.9321615%20C18.3424367,8.695655%2018.38973,8.42820533%2018.3888667,8.15139967%20L18.3888667,8.15081383%20L18.3888667,8.15019533%20C18.3864983,7.778219%2018.2905483,7.4299505%2018.0726233,7.16181633%20C17.8547033,6.893687%2017.5083517,6.73119083%2017.1296867,6.73118483%20C14.8572358,6.72711217%2012.8938147,6.7488015%2010.7179687,6.74290367%20C10.6386628,6.74267083%2010.5974043,6.74187117%2010.5273437,6.74150383%20C10.6300427,6.63822767%2010.7299515,6.53735%2010.839681,6.42822267%20C11.1773602,6.09239667%2011.501906,5.77593683%2011.6695638,5.55898433%20C12.0703865,5.04310383%2012.1302127,4.34416483%2011.7927735,3.8300455%20C11.6148665,3.55825633%2011.3539655,3.374376%2011.0738607,3.33610033%20C11.0388365,3.33131433%2011.0041382,3.32861217%2010.9697917,3.3277995%20C10.954765,3.32753194%2010.9397865,3.32753194%2010.9249023,3.3277995%20Z%20M10.9529948,4.05552103%20C10.9609797,4.05552103%2010.9684312,4.05618667%2010.9753255,4.05712883%20C11.0304797,4.0646655%2011.0895388,4.084354%2011.1839843,4.228711%20L11.1841472,4.22900383%20L11.1843098,4.22926433%20C11.3162545,4.43018333%2011.3104253,4.83538533%2011.0946615,5.1128255%20L11.0943033,5.11331383%20L11.0939453,5.1137695%20C11.015491,5.215337%2010.6629947,5.57762117%2010.32653,5.91223967%20C9.990065,6.246858%209.67017917,6.55569767%209.511914,6.74850267%20C9.35866467,6.935198%209.41612933,7.08711683%209.45631517,7.183724%20C9.49650083,7.280331%209.54061367,7.39581267%209.75445967,7.44661467%20C9.817007,7.46147317%209.82045217,7.45720983%209.84049483,7.45859367%20C9.86053733,7.45997783%209.88126483,7.46092667%209.9056315,7.46181633%20C12.3347147,7.48934767%2014.8917568,7.45762383%2017.1290367,7.45891933%20L17.1293617,7.45891933%20L17.1296867,7.45891933%20C17.3227033,7.45891933%2017.4220317,7.51517667%2017.5078783,7.62080083%20C17.5936617,7.72635033%2017.659465,7.90662767%2017.6611333,8.1543295%20C17.6618183,8.41146533%2017.59618,8.62076267%2017.5062833,8.74423833%20C17.4163117,8.86781433%2017.32297,8.92635567%2017.1352867,8.926888%20C15.4299553,8.92597583%2013.7246303,8.92224917%2012.0193033,8.91826167%20L12.0193033,9.649349%20C14.2497517,9.6529045%2016.4801967,9.658609%2018.710645,9.660677%20C18.8801017,9.660918%2018.9758167,9.7216835%2019.0721033,9.86015633%20C19.1683883,9.998629%2019.2362133,10.2245078%2019.2354236,10.4755208%20L19.2354236,10.4755533%20C19.234575,10.7441247%2019.1772017,10.9773463%2019.0922533,11.109668%20C19.0073033,11.2419895%2018.929625,11.3033213%2018.706705,11.3048503%20C16.38779,11.3038793%2014.1529167,11.298887%2012.0192708,11.3016277%20L12.0192708,12.0322917%20C13.923595,12.032354%2015.8279065,12.0350353%2017.7322267,12.0330403%20C17.9257733,12.0380895%2018.04774,12.1230213%2018.1475267,12.2921875%20C18.2501383,12.466146%2018.2992717,12.7348447%2018.2408533,13.0210287%20L18.2408533,13.0211913%20L18.2408533,13.0213217%20C18.2016633,13.2141083%2018.138895,13.33446%2018.0716467,13.4000983%20C18.0043983,13.4657367%2017.9234567,13.5088867%2017.7276033,13.5088867%20L12.0182617,13.5088867%20C12.0189687,13.753555%2012.019734,13.9982367%2012.0204753,14.2429033%20C13.4648378,14.2434283%2014.9092605,14.2329683%2016.3535483,14.2418617%20L16.3536467,14.2418617%20L16.3537433,14.2418617%20C16.5163067,14.2429217%2016.5859917,14.2833617%2016.6506183,14.3648433%20C16.715245,14.4463267%2016.77375,14.6033817%2016.77054,14.8530917%20L16.77054,14.8532233%20L16.77054,14.8533533%20C16.7675883,15.0966667%2016.7097467,15.238045%2016.6506517,15.3083%20C16.59159,15.378515%2016.5238267,15.4174317%2016.354655,15.4185867%20C13.3176188,15.4340567%2010.2794425,15.42999%207.24208983,15.4185867%20L7.24195967,15.4185867%20L7.2418295,15.4185867%20C6.50669317,15.4163433%205.92590983,15.221645%205.47213533,14.8496417%20C5.018361,14.47764%204.67929083,13.9145617%204.48642583,13.1221353%20L4.48632817,13.1218425%20L4.486263,13.121517%20C4.35246283,12.5757973%204.340113,12.144168%204.3375,11.5640625%20L4.3375,11.5636393%20C4.33484217,10.7676028%204.31957883,9.89976867%204.536556,9.20989583%20C4.75894833,8.50502633%205.11860617,7.970139%205.6334635,7.61663417%20L5.63349617,7.6166015%20C6.38331133,7.10194417%209.77354383,4.75082683%2010.7120117,4.14306633%20L10.7120443,4.14303383%20C10.8001625,4.08622183%2010.873179,4.06204967%2010.9274413,4.05670567%20C10.9364867,4.055815%2010.9450098,4.05552103%2010.9529948,4.05552103%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconMessageFlow = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M4.07280401,26.5474058%20L5.368,27.843%20L1.32546963,31.9395825%20C1.10449949,31.7287043%200.883617152,31.5178804%200.662734814,31.3070564%20L0,30.6745304%20C1.35759781,29.2988172%202.71519977,27.9231099%204.07280401,26.5474058%20Z%20M11.026,19.501%20L12.3221645,20.7966914%20C8.65659384,24.5109366%204.99101662,28.2251224%201.32546963,31.9395825%20L8.88,24.284%20L7.58507842,22.9883144%20C8.06996148,22.4969689%208.55484463,22.0056236%209.03972778,21.5142783%20L11.026,19.501%20Z%20M32,0%20C32,0%2029.301176,5.18885947%2026.5832149,10.4620988%20L26.2571392,11.0949658%20C25.1167532,13.3091313%2023.9918994,15.5021642%2023.0811102,17.2958838%20C21.8531035,16.0730433%2020.6324835,14.842925%2019.4049252,13.6196987%20C18.2147655,14.8257399%2017.0246027,16.0317521%2015.8344379,17.2377469%20L14.538,15.942%20L18.0794556,12.3540247%20C17.0992251,11.3896373%2016.1472807,10.3963148%2015.1555716,9.44385281%20L14.4032705,8.73825818%20C17.082847,7.47968021%2020.9357466,5.57330068%2024.3535757,3.86199806%20L24.969847,3.55318937%20C28.838,1.61339189%2032,0%2032,0%20Z%20M27.8739407,4.0595825%20C27.8739407,4.0595825%2027.8691114,4.06198061%2027.859453,4.06677683%20L27.7435519,4.12433148%20C27.7290643,4.13152581%2027.7133694,4.13931966%2027.6964671,4.14771305%20L27.5805661,4.20526769%20C26.6243823,4.68009348%2023.3308602,6.31560455%2017.7,9.11180088%20L22.7172861,14.0595825%20C26.1550558,7.39291584%2027.8739407,4.0595825%2027.8739407,4.0595825%20Z'%20transform='translate(0%20.06)'/%3e%3c/svg%3e";
const BpmnIconParticipant = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M0,0%20L0,22.0689655%20L32,22.0689655%20L32,0%20L0,0%20Z%20M30.2758621,1.68446879%20L30.2758621,20.5041762%20L6.62068966,20.5041762%20L6.62068966,1.68446879%20L30.2758621,1.68446879%20L30.2758621,1.68446879%20Z%20M1.65517241,1.68450069%20L4.96551724,1.68450069%20L4.96551724,20.5041781%20L1.65517241,20.5041781%20L1.65517241,1.68450069%20Z'%20transform='translate(0%205)'/%3e%3c/svg%3e";
const BpmnIconProcess = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20fill-rule='evenodd'%20d='M16.17724,0.0001639959%20L16.31392,0.0023359416%20C16.76624,0.011039724%2017.21392,0.0385110372%2017.65632,0.0839979001%20C18.0024,0.11959701%2018.27616,0.386950326%2018.33536,0.729789755%20L18.33536,0.729789755%20L18.77264,3.26599835%20C18.82752,3.58453439%2019.06944,3.83640009%2019.38128,3.92130997%20C20.36656,4.18952726%2021.30368,4.57442964%2022.17696,5.06024149%20C22.45616,5.21558161%2022.80064,5.20641384%2023.06176,5.02214645%20L23.06176,5.02214645%20L25.14544,3.55133522%20C25.42944,3.35079623%2025.812,3.35521212%2026.08192,3.57448664%20C26.94128,4.27262918%2027.72672,5.05812955%2028.4248,5.91746806%20C28.64416,6.18736532%2028.64848,6.56977176%2028.448,6.85387665%20L28.448,6.85387665%20L27.00928,8.8920337%20C26.82224,9.15689108%2026.81584,9.50723432%2026.97776,9.7880913%20C27.49024,10.6768691%2027.89728,11.6341571%2028.18176,12.6428359%20C28.2688,12.9513082%2028.51936,13.1897023%2028.83504,13.2441009%20L28.83504,13.2441009%20L31.2696,13.6637704%20C31.61248,13.7229689%2031.87984,13.9965621%2031.91536,14.3426334%20C31.95488,14.7245439%2031.98032,15.1072543%2031.99216,15.4904447%20C31.99744,15.6592405%2032,15.8288363%2032,15.998912%20C32,16.1353886%2031.9984,16.2715452%2031.99488,16.4073818%20L31.99488,16.4073818%20L31.99168,16.521139%20C31.97952,16.9027294%2031.95392,17.2808%2031.91536,17.6551906%20C31.87984,18.001262%2031.61248,18.2748551%2031.2696,18.3340536%20L31.2696,18.3340536%20L28.87376,18.7470033%20C28.552,18.8047619%2028.30208,19.0463558%2028.21808,19.3572281%20C27.93952,20.3880823%2027.53328,21.3664578%2027.01744,22.2744351%20C26.85824,22.5545881%2026.86576,22.9025794%2027.05168,23.1657729%20L27.05168,23.1657729%20L28.448,25.1439634%20C28.64848,25.4281163%2028.64416,25.8105067%2028.4248,26.08042%20C27.72672,26.9397585%2026.94112,27.7251789%2026.08192,28.4234014%20C25.812,28.6425959%2025.42944,28.6470758%2025.14544,28.4464408%20L25.14544,28.4464408%20L23.15472,27.041516%20C22.89296,26.8640804%2022.55152,26.8591205%2022.27584,27.0159166%20C21.36784,27.5317437%2020.38944,27.9379736%2019.35856,28.2165266%20C19.04608,28.3010045%2018.80336,28.5531582%2018.74832,28.8721902%20L18.74832,28.8721902%20L18.33536,31.2679703%20C18.27616,31.6108417%2018.0024,31.878195%2017.65632,31.9138742%20C16.55504,32.0277913%2015.44528,32.0277913%2014.34384,31.9138742%20C13.99776,31.878195%2013.72416,31.6108417%2013.66496,31.2681303%20L13.66496,31.2681303%20L13.24208,28.8163516%20C13.18208,28.5086793%2012.94688,28.2656454%2012.643968,28.1802075%20C12.141232,28.038451%2011.651248,27.8662953%2011.17616,27.6656604%20C10.6932,27.4701452%2010.21992,27.2434309%209.759424,26.9855174%20C9.482816,26.8306412%209.141536,26.8373611%208.880752,27.0165566%20L8.880752,27.0165566%20L6.854784,28.4466008%20C6.570672,28.6470758%206.188256,28.6425959%205.918352,28.4234014%20C5.580592,28.1490083%205.25424,27.8611755%204.940112,27.560543%20C4.854784,27.478945%204.77016,27.3962271%204.686288,27.3123892%20C4.596352,27.2224714%204.507712,27.1315937%204.4204,27.040076%20C4.12632,26.7317637%203.844448,26.4116117%203.57552,26.08074%20C3.355968,25.8108267%203.350976,25.4289163%203.551616,25.1446034%20L3.551616,25.1446034%20L4.9536,23.158573%20C5.140336,22.8939397%205.147072,22.5441884%204.98576,22.2633954%20C4.453824,21.3374986%204.049248,20.358483%203.772048,19.3516282%20C3.686496,19.040916%203.435056,18.800282%203.117456,18.7455634%20L3.117456,18.7455634%20L0.73128,18.3342136%20C0.388592,18.2751751%200.121296,18.001582%200.085488,17.6556706%20C-0.028496,16.5544181%20-0.028496,15.4435659%200.085488,14.3421534%20C0.12128,13.9964021%200.388576,13.7228089%200.73128,13.6637704%20L0.73128,13.6637704%20L3.117456,13.2522607%20C3.435056,13.1975421%203.686496,12.9569081%203.772048,12.6462278%20C4.049248,11.639437%204.453824,10.6603895%204.98576,9.73454064%20C5.147072,9.45376366%205.140336,9.1039164%204.9536,8.83936302%20L4.9536,8.83936302%20L3.551568,6.85322067%20C3.350944,6.56900377%203.35592,6.18707732%203.575472,5.91719607%20C3.844416,5.58618035%204.12632,5.26610835%204.420416,4.95778006%20C4.507728,4.86619835%204.596352,4.77543261%204.686288,4.68548286%20C4.77016,4.60162896%204.854768,4.51889503%204.94008,4.43729707%20C5.254224,4.13672858%205.580576,3.84881578%205.918352,3.57442264%20C6.188256,3.35514812%206.570672,3.35074823%206.854784,3.55128722%20L6.854784,3.55128722%20L8.884992,4.98433939%20C9.145216,5.16057499%209.484304,5.16644684%209.759424,5.01237069%20C10.673808,4.50025549%2011.638544,4.11117722%2012.629424,3.84510387%20C12.94256,3.76102597%2013.1856,3.50868028%2013.2408,3.18918427%20L13.2408,3.18918427%20L13.66496,0.729773756%20C13.72416,0.386934327%2013.99776,0.11958101%2014.34384,0.0839819005%20C14.84496,0.0321111972%2015.34752,0.004559886%2015.85072,1.53403765e-15%20L15.85072,1.53403765e-15%20L16.17724,0.0001639959%20L16.17724,0.0001639959%20Z%20M16,6.39915202%20C10.698064,6.39915202%206.4,10.6971086%206.4,15.998912%20C6.4,21.3006995%2010.698064,25.598672%2016,25.598672%20C21.30192,25.598672%2025.6,21.3006995%2025.6,15.998912%20C25.6,10.6971086%2021.30192,6.39915202%2016,6.39915202%20Z%20M13,10.6834616%20C13,9.25829358%2014.6366646,8.47976633%2015.7145891,9.39213001%20L15.7145891,9.39213001%20L21.4044355,14.2079889%20C22.1985215,14.8800286%2022.1985215,16.118545%2021.4044355,16.7905847%20L21.4044355,16.7905847%20L15.7145891,21.6064772%20C14.6366646,22.5188913%2013,21.74028%2013,20.3151793%20L13,20.3151793%20Z'/%3e%3c/svg%3e";
const BpmnIconReceiveTask = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M6.49417317,0%20C2.91556567,0%200,2.9032665%200,6.475%20L0,19.8583333%20C0,23.4300667%202.91556567,26.3333333%206.49417317,26.3333333%20L25.5058267,26.3333333%20C29.084435,26.3333333%2032,23.4300667%2032,19.8583333%20L32,6.475%20C32,2.9032665%2029.084435,0%2025.5058267,0%20L6.49417317,0%20Z%20M6.49417317,2%20L25.5058267,2%20C28.0147767,2%2030,3.9804335%2030,6.475%20L30,19.8583333%20C30,22.3529%2028.0147767,24.3333333%2025.5058267,24.3333333%20L6.49417317,24.3333333%20C3.98522283,24.3333333%202,22.3529%202,19.8583333%20L2,6.475%20C2,3.9804335%203.98522283,2%206.49417317,2%20Z%20M5.22958983,4.76416017%20L5.22958983,16.3412433%20L22.7791667,16.3412433%20L22.7791667,4.76416017%20L5.22958983,4.76416017%20Z%20M7.0459635,5.5215495%20L20.96276,5.5215495%20L14.004362,10.099414%20L7.0459635,5.5215495%20Z%20M5.98694667,5.73138017%20L14.004362,11.0059897%20L22.0217767,5.73138017%20L22.0217767,15.5838867%20L5.98694667,15.5838867%20L5.98694667,5.73138017%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconScriptTask = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M6.49417317,0%20C2.91556567,0%200,2.9032665%200,6.475%20L0,19.8583333%20C0,23.4300667%202.91556567,26.3333333%206.49417317,26.3333333%20L25.5058267,26.3333333%20C29.084435,26.3333333%2032,23.4300667%2032,19.8583333%20L32,6.475%20C32,2.9032665%2029.084435,0%2025.5058267,0%20L6.49417317,0%20Z%20M6.49417317,2%20L25.5058267,2%20C28.0147767,2%2030,3.9804335%2030,6.475%20L30,19.8583333%20C30,22.3529%2028.0147767,24.3333333%2025.5058267,24.3333333%20L6.49417317,24.3333333%20C3.98522267,24.3333333%202,22.3529%202,19.8583333%20L2,6.475%20C2,3.9804335%203.98522267,2%206.49417317,2%20Z%20M9.4837565,5.0765625%20L9.40664067,5.12236333%20L9.38144533,5.13730467%20C8.29110917,5.78345617%207.54075933,6.375977%207.04544267,6.95455733%20C6.54944017,7.53393833%206.309618,8.11730933%206.3027995,8.6796875%20C6.28923017,9.798862%207.1147455,10.6375555%207.847168,11.3876628%20C8.57903333,12.1371987%209.23188167,12.8440708%209.29332683,13.4290683%20C9.324645,13.72724%209.25415133,14.026715%208.9290365,14.4367833%20C8.6052895,14.8451283%208.01771717,15.33423%207.07832033,15.8818367%20L5.69143883,16.690235%20L14.250944,16.690235%20L14.3522462,16.631315%20L14.3523437,16.6312167%20C15.3478657,16.0508917%2016.0185667,15.5147533%2016.4459317,14.9757167%20C16.87457,14.4350717%2017.04894,13.869425%2016.9931633,13.3384117%20C16.8826517,12.2862533%2016.0255733,11.519567%2015.305013,10.781608%20C14.5838933,10.0430765%2013.9993665,9.34649717%2014.0073242,8.69016933%20C14.0113423,8.35883367%2014.1386942,7.9892065%2014.5415038,7.51868483%20C14.9436237,7.048967%2015.6216337,6.499409%2016.661035,5.8834635%20L16.661035,5.883431%20L18.0225583,5.0765625%20L9.4837565,5.0765625%20Z%20M9.725,5.94401033%20L14.9963867,5.94401033%20C14.5321272,6.29016467%2014.1650353,6.62458867%2013.882552,6.95455733%20C13.38655,7.53393833%2013.1467602,8.11730917%2013.1399413,8.6796875%20C13.1263728,9.7988715%2013.9519237,10.6375598%2014.6843425,11.3876628%20C15.4162038,12.137194%2016.06899,12.8440597%2016.1304367,13.4290683%20C16.161755,13.7272417%2016.0912917,14.026715%2015.7661783,14.4367833%20C15.4543988,14.8300317%2014.893696,15.2992817%2014.0130208,15.8227867%20L8.7281575,15.8227867%20C9.09477367,15.5368633%209.38602117,15.256695%209.608789,14.9757167%20C10.0374283,14.4350717%2010.2118295,13.8694567%2010.1560547,13.3384433%20C10.0455417,12.2862867%209.1884315,11.519567%208.46787117,10.781608%20C7.74675167,10.0430767%207.1622575,9.34653%207.17013454,8.69020183%20C7.17423217,8.35886683%207.3015855,7.98923917%207.7043945,7.5187175%20C8.093011,7.06477417%208.7432035,6.535202%209.725,5.94401033%20Z%20M8.491569,7.42350267%20L8.491569,7.82418617%20L12.6123372,7.82418617%20L12.6123372,7.42350267%20L8.491569,7.42350267%20Z%20M8.338444,9.58170567%20L8.338444,9.98238933%20L12.5991212,9.98238933%20L12.5991212,9.58170567%20L8.338444,9.58170567%20Z%20M10.2690103,11.7398437%20L10.2690103,12.1405273%20L14.3953125,12.1405273%20L14.3953125,11.7398437%20L10.2690103,11.7398437%20Z%20M10.859017,13.8980467%20L10.859017,14.2986983%20L15.134668,14.2986983%20L15.134668,13.8980467%20L10.859017,13.8980467%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconSendTask = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M6.49417317,0%20C2.91556567,0%200,2.9032665%200,6.475%20L0,19.8583333%20C0,23.4300667%202.91556567,26.3333333%206.49417317,26.3333333%20L25.5058267,26.3333333%20C29.084435,26.3333333%2032,23.4300667%2032,19.8583333%20L32,6.475%20C32,2.9032665%2029.084435,0%2025.5058267,0%20L6.49417317,0%20Z%20M6.49417317,2%20L25.5058267,2%20C28.0147767,2%2030,3.9804335%2030,6.475%20L30,19.8583333%20C30,22.3529%2028.0147767,24.3333333%2025.5058267,24.3333333%20L6.49417317,24.3333333%20C3.98522267,24.3333333%202,22.3529%202,19.8583333%20L2,6.475%20C2,3.9804335%203.98522267,2%206.49417317,2%20Z%20M5.11429033,5.15992833%20L13.4464193,9.876595%20L21.778515,5.15992833%20L5.11429033,5.15992833%20Z%20M5.13505867,6.905306%20L5.13505867,16.2139967%20L21.7992833,16.2139967%20L21.7992833,6.905306%20L13.4464193,11.5596353%20L5.13505867,6.905306%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconServiceTask = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M6.49417317,0%20C2.91556567,0%200,2.9032665%200,6.475%20L0,19.8583333%20C0,23.4300667%202.91556567,26.3333333%206.49417317,26.3333333%20L25.5058267,26.3333333%20C29.084435,26.3333333%2032,23.4300667%2032,19.8583333%20L32,6.475%20C32,2.9032665%2029.084435,0%2025.5058267,0%20L6.49417317,0%20Z%20M6.49417317,2%20L25.5058267,2%20C28.0147767,2%2030,3.9804335%2030,6.475%20L30,19.8583333%20C30,22.3529%2028.0147767,24.3333333%2025.5058267,24.3333333%20L6.49417317,24.3333333%20C3.98522267,24.3333333%202,22.3529%202,19.8583333%20L2,6.475%20C2,3.9804335%203.98522267,2%206.49417317,2%20Z%20M7.71318367,3.68111983%20C7.71270033,4.067252%207.71329617,4.45342033%207.71429033,4.83955083%20C7.38498667,4.93271367%207.08407517,5.06270917%206.79990233,5.22197267%20L5.969336,4.40139967%20L4.41634117,5.9634115%20L5.24680983,6.78382167%20C5.08638433,7.0713615%204.96112217,7.37694833%204.873698,7.694336%20L3.69726567,7.69648433%20L3.69726567,9.89635417%20L4.88597,9.89208983%20C4.994675,10.323098%205.23126583,10.7105633%205.4668945,11.0570313%20L5.4668945,9.15944017%20L4.4277995,9.163151%20L4.4277995,8.42568367%20L5.46171867,8.42382817%20L5.51975917,8.12981767%20C5.60439367,7.70104083%205.77201217,7.292292%206.0128255,6.9265625%20L6.17757167,6.67636717%20L5.45113933,5.9587565%20L5.97395833,5.43291017%20L6.70169267,6.151888%20L6.949349,5.98662117%20C7.3278145,5.73692367%207.741769,5.56956367%208.15455733,5.48238933%20L8.44635417,5.42180983%20L8.4437175,4.41171867%20L9.19479167,4.41171867%20L9.18899733,5.4165365%20L9.485677,5.4165365%20L11.1597657,5.4165365%20C10.9749008,5.195872%2010.2087762,4.90872267%209.92294917,4.828711%20L9.92958983,3.68111983%20C9.11137267,3.68111983%208.46988433,3.68111983%207.71318367,3.68111983%20Z%20M9.79166667,5.78570967%20L9.794694,6.9440755%20C9.46537817,7.03723833%209.16445367,7.16724883%208.8802735,7.32653%20L8.049707,6.505957%20L6.49667967,8.06796867%20L7.327181,8.88837883%20C7.16674833,9.1759345%207.0414605,9.48149083%206.9540365,9.79889317%20L5.77763667,9.80100917%20L5.77763667,12.0009115%20L6.96634117,11.9966472%20C7.05990833,12.3228588%207.18961183,12.6207623%207.34856767,12.9019857%20L6.4980795,13.7491533%20L8.068392,15.29248%20L8.91585283,14.4489583%20C9.20613517,14.6101467%209.51469783,14.7353%209.83460283,14.8223967%20L9.83515633,16.0195967%20C10.5906678,16.0262117%2011.3950317,16.02279%2012.0407227,16.0227217%20L12.0407227,14.81136%20C12.3702825,14.7184367%2012.6721407,14.5874867%2012.9563802,14.4282883%20L13.8031575,15.2631833%20L15.357194,13.703125%20L14.5086588,12.866927%20C14.669453,12.5786142%2014.794735,12.272552%2014.8822592,11.9548177%20L16.0342117,11.9476888%20L16.0342117,9.74993483%20L14.869336,9.75699867%20C14.775696,9.430474%2014.6478495,9.13461767%2014.4867838,8.85153%20L15.2916667,8.04459633%20L13.722233,6.49863283%20L12.918392,7.30524083%20C12.6292995,7.1453655%2012.3219803,7.02051083%2012.0033203,6.93330083%20L12.0099283,5.78570967%20L9.79169917,5.78570967%20L9.79166667,5.78570967%20Z%20M10.5241212,6.516276%20L11.2751953,6.516276%20L11.269401,7.52112633%20L11.5660482,7.5793295%20C11.996785,7.6638545%2012.4096493,7.831268%2012.7768555,8.0706055%20L13.0254883,8.23268233%20L13.7269857,7.52880867%20L14.2552735,8.04915367%20L13.552767,8.7534505%20L13.7218098,9.00292967%20C13.9698287,9.37731483%2014.1343355,9.782034%2014.2272135,10.198763%20L14.2883138,10.4910807%20L15.3035807,10.4849283%20L15.3035807,11.2216147%20L14.2939778,11.227832%20L14.2360027,11.5201823%20C14.1508433,11.9494403%2013.983575,12.3581803%2013.7423503,12.7245443%20L13.5774413,12.9750652%20L14.3211263,13.7079433%20L13.798405,14.2326817%20L13.054655,13.4993483%20L12.8073893,13.6636067%20C12.4288053,13.9110183%2012.0181637,14.0823517%2011.6038412,14.166765%20L11.3100912,14.2254233%20L11.3100912,15.2921867%20C11.1092837,15.2926783%2010.8902398,15.2924321%2010.565267,15.291895%20L10.5647787,14.2331383%20L10.2697265,14.17552%20C9.8383875,14.09129%209.42623783,13.92465%209.059668,13.68431%20L8.81175133,13.521745%20L8.06513667,14.2649417%20L7.53678383,13.74567%20L8.28444017,13.0009115%20L8.11383467,12.7503907%20C7.86558483,12.3768267%207.70137,11.971681%207.60833333,11.5554362%20L7.54726567,11.2639973%20L6.5081705,11.2677083%20L6.5081705,10.5302735%20L7.54208983,10.5283853%20L7.60013017,10.2344075%20C7.68476533,9.8056275%207.8523865,9.3968445%208.09319667,9.03111983%20L8.25794267,8.7809245%20L7.53151033,8.06331383%20L8.05429683,7.5374675%20L8.78206383,8.25644533%20L9.02972,8.091211%20C9.40866567,7.84313967%209.81079567,7.67853867%2010.2349283,7.58697917%20L10.5267253,7.52639967%20L10.5241212,6.516276%20Z%20M10.9119792,9.20055333%20C10.007694,9.20055333%209.26679683,9.94148217%209.26679683,10.8457682%20C9.26679683,11.7500543%2010.007694,12.490918%2010.9119792,12.490918%20C11.8162643,12.490918%2012.5571615,11.7500543%2012.5571615,10.8457682%20C12.5571615,9.94148217%2011.8162643,9.20055333%2010.9119792,9.20055333%20Z%20M10.9119792,9.93111983%20C11.4214465,9.93111983%2011.8266277,10.336302%2011.8266277,10.8457682%20C11.8266277,11.3552345%2011.4214465,11.7603842%2010.9119792,11.7603842%20C10.4025118,11.7603842%209.99736333,11.3552345%209.99736333,10.8457682%20C9.99736333,10.336302%2010.4025118,9.93111983%2010.9119792,9.93111983%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconStartEventCompensation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.994575,0.00132330317%20C9.7041477,-0.0839938452%203.64311263,3.96434679%201.25709097,9.77515633%20C-1.23514711,15.4844603%200.0597912261,22.5768268%204.41931135,27.0295457%20C8.61222075,31.5428625%2015.5205166,33.1994152%2021.3062202,31.087695%20C27.3023684,29.0458573%2031.7290666,23.1572712%2031.9696995,16.8194423%20C32.3733063,10.5917249%2028.7093668,4.37853462%2023.0992299,1.66576271%20C20.9024301,0.569493505%2018.4492954,-0.00218686928%2015.994575,0.00132330317%20Z%20M15.994575,1.73061711%20C22.2076285,1.62256029%2028.1166462,6.08560804%2029.7207858,12.0878826%20C31.3987213,17.7410763%2029.1291217,24.2863946%2024.2578291,27.6346515%20C19.1976992,31.3539198%2011.6938239,31.08484%206.91539253,27.0094115%20C2.1007956,23.1707269%200.377390733,16.0703191%202.84760514,10.4396321%20C4.98859988,5.2342447%2010.3629189,1.66453768%2015.994575,1.73061711%20Z%20M15.4286703,10.7605368%20C12.9570861,12.5055584%2010.485502,14.2505799%208.01391778,15.9956015%20C10.4856725,17.7415086%2012.9570602,19.4879346%2015.4286703,21.2340458%20C15.4286703,19.5467461%2015.4286703,17.8594448%2015.4286703,16.1721451%20C17.8153899,17.8608403%2020.204252,19.5465144%2022.5917963,21.2340458%20C22.5917963,17.7428765%2022.5917963,14.2517064%2022.5917963,10.7605368%20C20.2040877,12.4467785%2017.8163791,14.1330203%2015.4286703,15.819262%20C15.4286703,14.1330203%2015.4286703,12.4467785%2015.4286703,10.7605368%20Z%20M14.5626725,12.4271437%20C14.5626725,14.8039547%2014.5626725,17.1807661%2014.5626725,19.5575767%20C12.8786376,18.3691368%2011.1946025,17.1806987%209.51056761,15.9922588%20C11.1946025,14.803887%2012.8786376,13.6155155%2014.5626725,12.4271437%20Z%20M21.7291087,12.4271437%20C21.7291087,14.8061837%2021.7291087,17.1852242%2021.7291087,19.5642639%20C20.0450739,18.3747103%2018.3610392,17.1851551%2016.6770045,15.9956015%20C18.3610392,14.8061156%2020.0450739,13.6166297%2021.7291087,12.4271437%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventCondition = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M16,-1.96647503e-15%20C7.17369652,-1.96647503e-15%200,7.17354627%200,15.9998978%20C0,24.826252%207.17368493,31.999967%2016,31.999967%20C24.8263126,31.999967%2032,24.826252%2032,15.9998978%20C32,7.17354645%2024.8263023,-1.96647503e-15%2016,-1.96647503e-15%20Z%20M16,1.7297298%20C23.8915044,1.7297298%2030.2702703,8.10835674%2030.2702703,15.9998978%20C30.2702703,23.8914421%2023.8914941,30.2702373%2016,30.2702373%20C8.10850387,30.2702373%201.72972973,23.8914421%201.72972973,15.9998978%20C1.72972973,8.10835674%208.10849228,1.7297298%2016,1.7297298%20Z%20M10.6377365,9.25337832%20L10.6377365,9.68800682%20L10.6377365,22.7464872%20L12.4289527,22.7464872%20L19.5677699,22.7464872%20L21.3622642,22.7464872%20L21.3622642,9.25337832%20L10.6377365,9.25337832%20Z%20M11.5006419,10.1194595%20L20.4960467,10.1194595%20L20.4960467,21.8802369%20L19.5677699,21.8802369%20L12.4289527,21.8802369%20L11.5006419,21.8802369%20L11.5006419,10.1194595%20Z%20M12.4289527,11.4434121%20L12.4289527,12.3062838%20L19.5677699,12.3062838%20L19.5677699,11.4434121%20L12.4289527,11.4434121%20Z%20M12.4289527,14.0484797%20L12.4289527,14.914696%20L19.5677699,14.914696%20L19.5677699,14.0484797%20L12.4289527,14.0484797%20Z%20M12.4289527,17.0588851%20L12.4289527,17.9219251%20L19.5677699,17.9219251%20L19.5677699,17.0588851%20L12.4289527,17.0588851%20Z%20M12.4289527,19.7784129%20L12.4289527,20.6414857%20L19.5677699,20.6414857%20L19.5677699,19.7784129%20L12.4289527,19.7784129%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventError = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.994575,0.00132330317%20C9.7041477,-0.0839938452%203.64311263,3.96434679%201.25709097,9.77515633%20C-1.23514711,15.4844603%200.0597912261,22.5768268%204.41931135,27.0295457%20C8.61222075,31.5428625%2015.5205166,33.1994152%2021.3062202,31.087695%20C27.3023684,29.0458573%2031.7290666,23.1572712%2031.9696995,16.8194423%20C32.3733063,10.5917249%2028.7093668,4.37853462%2023.0992299,1.66576271%20C20.9024301,0.569493505%2018.4492954,-0.00218686928%2015.994575,0.00132330317%20Z%20M15.994575,1.73061711%20C22.2076285,1.62256029%2028.1166462,6.08560804%2029.7207858,12.0878826%20C31.3987213,17.7410763%2029.1291217,24.2863946%2024.2578291,27.6346515%20C19.1976992,31.3539198%2011.6938239,31.08484%206.91539253,27.0094115%20C2.1007956,23.1707269%200.377390733,16.0703191%202.84760514,10.4396321%20C4.98859988,5.2342447%2010.3629189,1.66453768%2015.994575,1.73061711%20Z%20M22.1254282,9.18103635%20C20.9135599,11.6376692%2019.7016932,14.0943019%2018.4898249,16.5509348%20C16.9829978,14.5909899%2015.4761699,12.6310448%2013.9693423,10.6710998%20C12.6008022,14.718582%2011.2322619,18.7660651%209.86372175,22.8135464%20C11.3980197,20.8414079%2012.9323176,18.8692711%2014.4666156,16.8971325%20C16.0492795,18.7081061%2017.6319447,20.5190796%2019.2146082,22.3300531%20C20.1848821,17.9470473%2021.1551543,13.564042%2022.1254282,9.18103635%20L22.1254282,9.18103635%20Z%20M14.3713355,13.0695155%20C15.8041054,14.886006%2017.2368737,16.702497%2018.6696438,18.518987%20C19.0274814,17.7223861%2019.3853189,16.9257852%2019.7431565,16.1291843%20C19.4005748,17.5074971%2019.0579913,18.8858083%2018.7154095,20.2641212%20C17.2530305,18.543811%2015.7906515,16.8235026%2014.3282721,15.1031922%20C13.7349758,16.0203944%2013.1416793,16.9375945%2012.5483829,17.8547964%20C13.1560338,16.2597027%2013.7636846,14.6646092%2014.3713355,13.0695155%20L14.3713355,13.0695155%20Z'%20transform='translate(0%20.004)'/%3e%3c/svg%3e";
const BpmnIconStartEventEscalation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.994575,0.00132330317%20C9.7041477,-0.0839938452%203.64311263,3.96434679%201.25709097,9.77515633%20C-1.23514711,15.4844603%200.0597912261,22.5768268%204.41931135,27.0295457%20C8.61222075,31.5428625%2015.5205166,33.1994152%2021.3062202,31.087695%20C27.3023684,29.0458573%2031.7290666,23.1572712%2031.9696995,16.8194423%20C32.3733063,10.5917249%2028.7093668,4.37853462%2023.0992299,1.66576271%20C20.9024301,0.569493505%2018.4492954,-0.00218686928%2015.994575,0.00132330317%20Z%20M15.994575,1.73061711%20C22.2076285,1.62256029%2028.1166462,6.08560804%2029.7207858,12.0878826%20C31.3987213,17.7410763%2029.1291217,24.2863946%2024.2578291,27.6346515%20C19.1976992,31.3539198%2011.6938239,31.08484%206.91539253,27.0094115%20C2.1007956,23.1707269%200.377390733,16.0703191%202.84760514,10.4396321%20C4.98859988,5.2342447%2010.3629189,1.66453768%2015.994575,1.73061711%20Z%20M15.994575,8.91411034%20C14.3208856,13.5716378%2013.2585747,18.4229144%2011.5848758,23.0804387%20C13.1203936,21.5539495%2014.4591438,19.8438872%2015.994575,18.3173151%20C17.4644747,19.9050229%2018.9343745,21.4927308%2020.4042742,23.0804387%20C18.9064014,18.3670668%2017.492446,13.6274824%2015.994575,8.91411034%20Z%20M16.0266274,11.8451957%20C16.8489897,14.4329359%2017.6252748,17.0350558%2018.4476388,19.6227953%20C17.6406344,18.7511119%2016.8336318,17.8794285%2016.0266274,17.0077451%20C15.3443161,17.6060773%2013.5724213,19.8948651%2013.6860604,19.3979853%20C14.5581514,16.9093189%2015.1351338,14.3274806%2016.0266274,11.8451957%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventMessage = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.994575,0.00132330317%20C9.7041477,-0.0839938452%203.64311263,3.96434679%201.25709097,9.77515633%20C-1.23514711,15.4844603%200.0597912261,22.5768268%204.41931135,27.0295457%20C8.61222075,31.5428625%2015.5205166,33.1994152%2021.3062202,31.087695%20C27.3023684,29.0458573%2031.7290666,23.1572712%2031.9696995,16.8194423%20C32.3733063,10.5917249%2028.7093668,4.37853462%2023.0992299,1.66576271%20C20.9024301,0.569493505%2018.4492954,-0.00218686928%2015.994575,0.00132330317%20Z%20M15.994575,1.73061711%20C22.2076285,1.62256029%2028.1166462,6.08560804%2029.7207858,12.0878826%20C31.3987213,17.7410763%2029.1291217,24.2863946%2024.2578291,27.6346515%20C19.1976992,31.3539198%2011.6938239,31.08484%206.91539253,27.0094115%20C2.1007956,23.1707269%200.377390733,16.0703191%202.84760514,10.4396321%20C4.98859988,5.2342447%2010.3629189,1.66453768%2015.994575,1.73061711%20Z%20M8.73802584,10.4627064%20C8.73802584,14.1524294%208.73802584,17.8421518%208.73802584,21.5318751%20C13.5757253,21.5318751%2018.4134247,21.5318751%2023.2511241,21.5318751%20C23.2511241,17.8421518%2023.2511241,14.1524294%2023.2511241,10.4627064%20C18.4134247,10.4627064%2013.5757253,10.4627064%208.73802584,10.4627064%20Z%20M11.9620104,12.1920679%20C14.6499925,12.1920679%2017.3379751,12.1920679%2020.0259566,12.1920679%20C18.5976273,13.0709721%2017.1691719,15.0004106%2015.7410207,15.2109251%20C14.4813971,14.2045813%2013.2216996,13.1983296%2011.9620104,12.1920679%20L11.9620104,12.1920679%20Z%20M21.5239245,13.2101557%20C21.5239245,15.4076084%2021.5239245,17.6050604%2021.5239245,19.8025139%20C17.8376909,19.8025139%2014.1514585,19.8025139%2010.4652256,19.8025139%20C10.4652256,17.6052299%2010.4652256,15.4079461%2010.4652256,13.2106624%20C12.3078015,14.6831967%2014.1502944,16.1558344%2015.9929529,17.6282658%20C17.8366931,16.1556649%2019.6802673,14.6828584%2021.5239245,13.2101557%20L21.5239245,13.2101557%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.994575,0.00132330317%20C9.7041477,-0.0839938452%203.64311263,3.96434679%201.25709097,9.77515633%20C-1.23514711,15.4844603%200.0597912261,22.5768268%204.41931135,27.0295457%20C8.61222075,31.5428625%2015.5205166,33.1994152%2021.3062202,31.087695%20C27.3023684,29.0458573%2031.7290666,23.1572712%2031.9696995,16.8194423%20C32.3733063,10.5917249%2028.7093668,4.37853462%2023.0992299,1.66576271%20C20.9024301,0.569493505%2018.4492954,-0.00218686928%2015.994575,0.00132330317%20Z%20M15.994575,1.73061711%20C22.2076285,1.62256029%2028.1166462,6.08560804%2029.7207858,12.0878826%20C31.3987213,17.7410763%2029.1291217,24.2863946%2024.2578291,27.6346515%20C19.1976992,31.3539198%2011.6938239,31.08484%206.91539253,27.0094115%20C2.1007956,23.1707269%200.377390733,16.0703191%202.84760514,10.4396321%20C4.98859988,5.2342447%2010.3629189,1.66453768%2015.994575,1.73061711%20Z%20M15.994575,8.05902176%20C13.4525842,9.90429238%2010.9106582,11.7496524%208.36869243,13.5949575%20C9.33963003,16.5806804%2010.3105678,19.566403%2011.2815054,22.5521256%20C14.4235287,22.5521256%2017.5655519,22.5521256%2020.707575,22.5521256%20C21.678513,19.566403%2022.6494509,16.5806804%2023.6203889,13.5949575%20C21.0784861,11.7496455%2018.536547,9.90433371%2015.9946096,8.05902176%20L15.994575,8.05902176%20Z%20M15.994575,9.12733365%20C18.1975673,10.7265814%2020.4005597,12.3258291%2022.603552,13.9250769%20C21.7620967,16.5127019%2020.9206431,19.1003255%2020.0791877,21.6879508%20C17.3561362,21.6879508%2014.6330833,21.6879508%2011.9100311,21.6879508%20C11.068542,19.1003255%2010.2270874,16.5127019%209.38563288,13.9250769%20C11.5886021,12.3258291%2013.7915712,10.7265814%2015.9945404,9.12733365%20L15.994575,9.12733365%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventNonInterruptingCondition = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M10.6315105,9.18850889%20L10.6315105,9.62307829%20L10.6315105,22.6797608%20L12.4224806,22.6797608%20L19.5603172,22.6797608%20L21.3545629,22.6797608%20L21.3545629,9.18850889%20L10.6315105,9.18850889%20L10.6315105,9.18850889%20Z%20M11.4942969,10.0544706%20L20.4884645,10.0544706%20L20.4884645,21.8136295%20L19.5603155,21.8136295%20L12.4224806,21.8136295%20L11.4942969,21.8136295%20L11.4942969,10.0544706%20Z%20M12.4224806,11.3782409%20L12.4224806,12.2409945%20L19.5603172,12.2409945%20L19.5603172,11.3782409%20L12.4224806,11.3782409%20Z%20M12.4224806,13.9829507%20L12.4224806,14.8490473%20L19.5603172,14.8490473%20L19.5603172,13.9829507%20L12.4224806,13.9829507%20Z%20M12.4224806,16.9929426%20L12.4224806,17.855864%20L19.5603172,17.855864%20L19.5603172,16.9929426%20L12.4224806,16.9929426%20Z%20M12.4224806,19.7120946%20L12.4224806,20.5750505%20L19.5603172,20.5750505%20L19.5603172,19.7120946%20L12.4224806,19.7120946%20Z%20M16.1202819,2.85366147e-05%20L15.8995694,0.000400377352%20L15.89376,0.000400377352%20L15.887916,0.00050414686%20L15.6672363,0.00384811925%20L15.6613924,0.00395188876%20L15.655583,0.00412483794%20L15.4349711,0.0104414608%20L15.4291273,0.01061441%20L15.4233173,0.0108513504%20L15.2028071,0.0201406238%20L15.1969972,0.0204104245%20L15.1911534,0.0207148151%20L14.970812,0.032976739%20L14.9649682,0.0333139899%20L14.9591582,0.033718691%20L14.7389858,0.0489530924%20L14.7331759,0.0493577935%20L14.7273658,0.0498299448%20L14.5074298,0.0680368238%20L14.5016197,0.0685107045%20L14.4958099,0.069050306%20L14.2761442,0.0902298355%20L14.2703341,0.0908040268%20L14.2645241,0.0914128079%20L14.0451961,0.115564988%20L14.0393861,0.116206629%20L14.033576,0.116915721%20L13.8146198,0.144006654%20L13.8088097,0.144715745%20L13.8029997,0.145526877%20L13.5844825,0.175556562%20L13.5786725,0.176367693%20L13.5728624,0.177246275%20L13.3547844,0.210248438%20L13.3489743,0.21112702%20L13.3431643,0.212073052%20L13.1255928,0.248047865%20L13.119783,0.248993897%20L13.1139729,0.250041969%20L12.8969758,0.288955534%20L12.8911319,0.290003606%20L12.8853557,0.291117399%20L12.6689328,0.332969717%20L12.6631228,0.334118099%20L12.6573127,0.335301072%20L12.4415316,0.380125867%20L12.4356878,0.3813417%20L12.4299117,0.382624983%20L12.2148061,0.430388531%20L12.2089961,0.431671814%20L12.203186,0.433057137%20L11.9888236,0.48375961%20L11.9829799,0.485144933%20L11.9772035,0.486597706%20L11.8615438,0.515681705%20L11.7095377,0.569322931%20L11.570165,0.650291511%20L11.4482224,0.755682417%20L11.3479658,0.881915084%20L11.2728747,1.02453053%20L11.2255503,1.17859712%20L11.2076473,1.33877781%20L11.219774,1.49953269%20L11.2615251,1.65518695%20L11.3314478,1.80043728%20L11.4270766,1.93018289%20L11.5451685,2.03989753%20L11.6815348,2.12579793%20L11.8315143,2.18491144%20L11.989837,2.21514382%20L12.1509972,2.21551566%20L12.2829386,2.19301878%20L12.3925182,2.16548873%20L12.5947876,2.11765756%20L12.7983744,2.07239347%20L13.0055082,2.02942649%20L13.2082504,1.99020888%20L13.414033,1.95332211%20L13.6204573,1.91920512%20L13.8250574,1.88822957%20L14.0326303,1.85968621%20L14.2381763,1.83425058%20L14.4466274,1.81131458%20L14.6553487,1.79118225%20L14.8644415,1.77392106%20L15.073906,1.75939592%20L15.2811072,1.74787733%20L15.4908756,1.7390609%20L15.7007124,1.73304833%20L15.9081148,1.72990688%20L16.1180872,1.72953504%20L16.327923,1.73200095%20L16.5352596,1.73727053%20L16.7422919,1.74527618%20L16.9541201,1.75635565%20L17.1606127,1.76996865%20L17.369435,1.78658803%20L17.577818,1.80601109%20L17.7858309,1.82830528%20L17.991004,1.8530991%20L18.1973618,1.88089947%20L18.4040551,1.91163842%20L18.6117636,1.94551882%20L18.8169038,1.9818653%20L19.0186006,2.02050854%20L19.07089,2.03125024%20L19.231105,2.04891683%20L19.3918249,2.03655373%20L19.5474463,1.99456616%20L19.6925611,1.92444063%20L19.822138,1.82857542%20L19.9316841,1.71034857%20L20.017415,1.57381332%20L20.076292,1.42376625%20L20.1062884,1.26540966%20L20.1064613,1.10421566%20L20.0766345,0.94582534%20L20.0179615,0.795710813%20L19.9323983,0.659107941%20L19.8230218,0.540712121%20L19.6935451,0.444711836%20L19.5484978,0.374383609%20L19.4199015,0.337328036%20L19.3629165,0.325606578%20L19.3570051,0.324390746%20L19.3510937,0.323242363%20L19.134838,0.281829163%20L19.1289612,0.28071537%20L19.1230498,0.279667298%20L18.9061871,0.241226576%20L18.9003103,0.240180233%20L18.8943989,0.239234201%20L18.676962,0.203799855%20L18.6710852,0.202853823%20L18.6652083,0.201975241%20L18.4472647,0.16954727%20L18.4413862,0.168668688%20L18.4354765,0.167857556%20L18.217059,0.13843596%20L18.2112167,0.137624829%20L18.2053053,0.136915737%20L17.9864831,0.110466792%20L17.9806063,0.1097577%20L17.9747278,0.109148919%20L17.7555008,0.0856722787%20L17.7496586,0.0850306373%20L17.7437801,0.0844910358%20L17.5242159,0.0640209438%20L17.5183391,0.0634813424%20L17.5124951,0.0630091911%20L17.2926266,0.0455115767%20L17.2867826,0.0450394254%20L17.2809387,0.0446675847%20L17.0608003,0.0301426208%20L17.0549564,0.02977078%20L17.0491124,0.0294663895%20L16.8288045,0.0179139031%20L16.8229606,0.0176095126%20L16.8171166,0.017407162%20L16.5966064,0.00886105123%20L16.5907971,0.00862411086%20L16.5849531,0.00848575151%20L16.3643409,0.00291229124%20L16.3584987,0.00273934206%20L16.3526876,0.00267016239%20L16.1320079,6.9179672e-05%20L16.1261656,0%20L16.1202819,2.85366147e-05%20Z%20M24.8350977,2.7832267%20L24.6775168,2.81717473%20L24.5289898,2.87980135%20L24.3946843,2.96887693%20L24.2792269,3.08136134%20L24.1866386,3.21330272%20L24.1201621,3.36014055%20L24.0820925,3.51677457%20L24.0737495,3.67773214%20L24.095401,3.83743981%20L24.1463397,3.99039175%20L24.2247756,4.13118327%20L24.3279709,4.25501748%20L24.429883,4.34176239%20L24.4819701,4.3795274%20L24.4830769,4.38033853%20L24.5698231,4.44438369%20L24.570878,4.44516023%20L24.6522178,4.50623291%20L24.653636,4.50731384%20L24.7302801,4.56585316%20L24.7314562,4.5667646%20L24.8147883,4.63148547%20L24.8974805,4.69681426%20L24.8990024,4.69803009%20L24.9776735,4.76126464%20L24.9798354,4.76302111%20L25.0568514,4.82601923%20L25.1379888,4.89347615%20L25.1399483,4.89509669%20L25.2165596,4.95988501%20L25.2925967,5.02524769%20L25.2942224,5.02666587%20L25.3736044,5.09608197%20L25.4524104,5.16617377%20L25.4541053,5.167694%20L25.528655,5.23518465%20L25.6063473,5.30666126%20L25.6080768,5.30824893%20L25.6813104,5.37678679%20L25.7578196,5.44961465%20L25.8297025,5.51919972%20L25.8316274,5.52109126%20L25.9089478,5.59726327%20L25.9094839,5.59780287%20L25.9782935,5.66671222%20L25.9797463,5.66819786%20L26.053893,5.74376177%20L26.1246604,5.81706248%20L26.1255424,5.81797392%20L26.2004312,5.89694943%20L26.2020915,5.89870608%20L26.2709339,5.97258098%20L26.3399787,6.04790847%20L26.3406878,6.04868501%20L26.413617,6.12968732%20L26.483945,6.20916975%20L26.4855707,6.21099384%20L26.5540085,6.28976666%20L26.5549597,6.29084759%20L26.6216056,6.36887742%20L26.6901437,6.45052154%20L26.7548301,6.52888931%20L26.7564904,6.53094982%20L26.8237452,6.61394502%20L26.8907959,6.69812267%20L26.9540987,6.77906745%20L26.9552748,6.78061061%20L27.0223946,6.86799734%20L27.0238474,6.86988888%20L27.0870136,6.95369504%20L27.0883626,6.95548524%20L27.1522379,7.04179085%20L27.1600743,7.05239765%20L27.1682496,7.06273396%20L27.2630344,7.18288643%20L27.3556227,7.30297127%20L27.4451706,7.42170486%20L27.5327261,7.54050607%20L27.6211948,7.66322579%20L27.7073304,7.78553995%20L27.7907646,7.90673945%20L27.8723084,8.02783777%20L27.8734153,8.02952749%20L27.9566817,8.15616555%20L28.0376495,8.28222924%20L28.1173341,8.40927252%20L28.1943519,8.53496472%20L28.2727861,8.66609531%20L28.3471352,8.79347653%20L28.4215154,8.92406665%20L28.4945467,9.05546756%20L28.5649422,9.18531452%20L28.6353048,9.31830292%20L28.7035385,9.45078476%20L28.7490725,9.54144801%20L28.8345336,9.67815206%20L28.9438427,9.79658177%20L29.0732502,9.89268341%20L29.2182646,9.96307908%20L29.373784,10.0053705%20L29.5344711,10.0180378%20L29.6947189,10.0006753%20L29.848955,9.95389116%20L29.9918404,9.8792731%20L30.1183769,9.77942193%20L30.224208,9.65785076%20L30.305648,9.51874843%20L30.3598313,9.36694488%20L30.3848951,9.20771005%20L30.3799971,9.0466174%20L30.3452724,8.8892065%20L30.2946363,8.76530467%20L30.246975,8.67041904%20L30.244948,8.66639935%20L30.2428865,8.66234594%20L30.1702288,8.52138562%20L30.1681673,8.51736576%20L30.16604,8.51334607%20L30.0919278,8.37316264%20L30.0898005,8.36914295%20L30.0876387,8.36515699%20L30.0120408,8.22575061%20L30.009879,8.22176465%20L30.0076497,8.21777869%20L29.9305991,8.07914903%20L29.9284026,8.07519697%20L29.9261404,8.07121101%20L29.8476371,7.93342585%20L29.8453749,7.92947379%20L29.8430781,7.92552156%20L29.7630891,7.78854719%20L29.7607906,7.78459496%20L29.758461,7.78067662%20L29.6770193,7.64458049%20L29.6746879,7.64062825%20L29.6722908,7.63674382%20L29.5894291,7.50149202%20L29.5870321,7.49757369%20L29.5845987,7.49368907%20L29.5003205,7.35931569%20L29.4978543,7.35539735%20L29.495388,7.35154647%20L29.4096571,7.21808504%20L29.407158,7.21420061%20L29.4046243,7.21034972%20L29.3175081,7.07776653%20L29.3149744,7.07391582%20L29.3123732,7.07006493%20L29.2238042,6.9384615%20L29.2212376,6.93461062%20L29.2186019,6.93079363%20L29.1286147,6.80010216%20L29.1259807,6.796285%20L29.1233121,6.79250173%20L29.0319396,6.66275612%20L29.029271,6.65897286%20L29.0265349,6.6551896%20L28.9337425,6.5264573%20L28.931041,6.52264031%20L28.9282704,6.51889077%20L28.8340615,6.39113805%20L28.8312908,6.38738851%20L28.8284873,6.38363915%20L28.732926,6.25689974%20L28.7300879,6.25315038%20L28.7272169,6.24943456%20L28.630272,6.12374236%20L28.6273993,6.119993%20L28.6244609,6.11631108%20L28.5343717,6.00210375%20L28.4737392,5.92018931%20L28.4714753,5.91714921%20L28.4692131,5.91410911%20L28.4001009,5.8225%20L28.397837,5.8194938%20L28.3955402,5.81648742%20L28.3257517,5.72565538%20L28.323455,5.722649%20L28.3211582,5.71967635%20L28.2507281,5.62962119%20L28.2483985,5.62664872%20L28.2460343,5.62370979%20L28.1749625,5.5343978%20L28.1725983,5.53142532%20L28.1702324,5.52852029%20L28.0984861,5.43998519%20L28.0961219,5.43704643%20L28.0937231,5.43414141%20L28.0213007,5.34638319%20L28.0189019,5.34347816%20L28.0165048,5.34060686%20L27.9434407,5.2535918%20L27.9410419,5.25072067%20L27.9386102,5.24784937%20L27.8649027,5.1616112%20L27.862471,5.1587738%20L27.8600048,5.15593639%20L27.785692,5.07047511%20L27.7832257,5.06763771%20L27.7807595,5.06486775%20L27.7058033,4.98014981%20L27.7033042,4.97734613%20L27.7008051,4.97457618%20L27.6252401,4.89063512%20L27.622741,4.88786516%20L27.6202073,4.88509521%20L27.5440024,4.80193104%20L27.5415016,4.79919498%20L27.5389679,4.79645876%20L27.4621542,4.71403775%20L27.4596223,4.71133542%20L27.457054,4.70863309%20L27.3796333,4.62698879%20L27.377065,4.62428664%20L27.3744984,4.62161803%20L27.2964689,4.5407508%20L27.2939006,4.53808219%20L27.2912995,4.53544749%20L27.2126958,4.45532324%20L27.2100946,4.45268854%20L27.2074935,4.45008755%20L27.1282828,4.37070665%20L27.125647,4.36810566%20L27.1230459,4.36553841%20L27.0432263,4.28693439%20L27.0406252,4.28436713%20L27.0379566,4.28179987%20L26.9575957,4.20397274%20L26.9549617,4.20140548%20L26.9522931,4.19887212%20L26.8713235,4.12182188%20L26.8686895,4.11928852%20L26.8660209,4.11678871%20L26.7844771,4.04048181%20L26.7818085,4.0380159%20L26.779107,4.03551626%20L26.6970236,3.95998607%20L26.694355,3.95752016%20L26.6916535,3.95508815%20L26.6089959,3.88030112%20L26.6062927,3.87786893%20L26.6035913,3.87543692%20L26.5203595,3.80142678%20L26.5176563,3.79902849%20L26.5149202,3.79663021%20L26.4311817,3.72339695%20L26.4284456,3.72099867%20L26.4257096,3.71866783%20L26.3414314,3.64617791%20L26.3386954,3.64381335%20L26.3359247,3.64148251%20L26.2511053,3.56976948%20L26.2483346,3.56743865%20L26.2455657,3.56514171%20L26.1602395,3.49417167%20L26.1574689,3.49187473%20L26.1546653,3.48961151%20L26.0687995,3.41941853%20L26.0660289,3.41715532%20L26.0632254,3.41489211%20L25.9768182,3.34547601%20L25.9740493,3.3432128%20L25.9712458,3.34101721%20L25.8843319,3.27234411%20L25.8815284,3.27011479%20L25.8787249,3.26795293%20L25.7913043,3.20002299%20L25.7885008,3.19786112%20L25.7856627,3.19569926%20L25.6977353,3.12854638%20L25.6949318,3.12638451%20L25.6920937,3.12425637%20L25.6036614,3.05788038%20L25.6008233,3.05575241%20L25.5979852,3.053658%20L25.5090789,2.98802517%20L25.5062408,2.98593093%20L25.5033699,2.98387041%20L25.4456083,2.94191657%20L25.3068771,2.85983333%20L25.1553442,2.80490848%20L24.9962448,2.77906745%20L24.8350977,2.7832267%20Z%20M6.37652141,3.20924931%20L6.21961724,3.24616981%20L6.07230657,3.31159994%20L5.96100426,3.38591413%20L5.95374178,3.39162283%20L5.95097182,3.3937508%20L5.94826949,3.39594656%20L5.86209895,3.46478846%20L5.85936289,3.46698405%20L5.85666056,3.46917964%20L5.77099658,3.53876471%20L5.76829425,3.5409603%20L5.76559192,3.54318979%20L5.68046858,3.61351801%20L5.67776625,3.61574733%20L5.67506392,3.61801054%20L5.59048088,3.68904803%20L5.58777854,3.69131125%20L5.58507621,3.69360836%20L5.50103381,3.76535512%20L5.4983652,3.76765205%20L5.4956966,3.76994916%20L5.41219466,3.84243908%20L5.40949233,3.84476992%20L5.40685745,3.84710076%20L5.32389597,3.92030011%20L5.32122737,3.92266467%20L5.31859266,3.92502906%20L5.23617148,3.99897158%20L5.23353677,4.00133614%20L5.23090206,4.0037346%20L5.14905507,4.07838639%20L5.14642037,4.08078467%20L5.14378566,4.08321686%20L5.06251303,4.1586118%20L5.05987815,4.16104399%20L5.05727717,4.163476%20L4.97657891,4.23958038%20L4.97397793,4.24204629%20L4.97137694,4.24454593%20L4.8912527,4.32135975%20L4.88865172,4.32385938%20L4.88608464,4.32635902%20L4.80653476,4.403916%20L4.80393377,4.40641564%20L4.80140024,4.40898289%20L4.72242456,4.48724914%20L4.71985747,4.4897825%20L4.71732394,4.49234976%20L4.63895634,4.57132545%20L4.63638926,4.57392643%20L4.63385572,4.57649351%20L4.55609622,4.65621236%20L4.55356268,4.65881335%20L4.55106305,4.66144805%20L4.47387773,4.74187617%20L4.4713781,4.74451105%20L4.46887846,4.74714576%20L4.39233496,4.82831703%20L4.38980143,4.83098564%20L4.38733552,4.83365407%20L4.31140011,4.91553478%20L4.30890047,4.91820339%20L4.30643456,4.92090572%20L4.23114096,5.0034957%20L4.22867506,5.00623176%20L4.22620915,5.00896781%20L4.15155719,5.09226723%20L4.14909128,5.09500328%20L4.14665927,5.09777324%20L4.0726154,5.18181564%20L4.07018322,5.1845856%20L4.0677512,5.18735555%20L3.99434915,5.2721074%20L3.99195087,5.27491107%20L3.98955241,5.27771458%20L3.91679217,5.36320959%20L3.91439388,5.36601327%20L3.91199559,5.36885084%20L3.8399109,5.45505511%20L3.83751261,5.45789252%20L3.83514805,5.46076382%20L3.76370516,5.54767753%20L3.7613406,5.55054883%20L3.75900994,5.55345368%20L3.68820887,5.64107683%20L3.68587803,5.64398186%20L3.68354737,5.64688688%20L3.61342184,5.73525302%20L3.6111249,5.73819177%20L3.60882779,5.7411307%20L3.53937797,5.83020627%20L3.53708103,5.83314502%20L3.53478392,5.8361175%20L3.46600964,5.92590251%20L3.46374643,5.92887516%20L3.46148322,5.93188136%20L3.39338448,6.02237581%20L3.39115516,6.02538201%20L3.38892567,6.02838839%20L3.32150247,6.11962583%20L3.31927316,6.12266593%20L3.3170774,6.1256723%20L3.25036363,6.2176529%20L3.24816804,6.220693%20L3.24597228,6.2237331%20L3.17996796,6.31642314%20L3.17777219,6.31949697%20L3.17561033,6.32257097%20L3.11031527,6.41597027%20L3.1081534,6.41904409%20L3.10602544,6.42215182%20L3.04140592,6.51626056%20L3.03927778,6.51936811%20L3.03718353,6.52250956%20L2.97330718,6.61732774%20L2.97117904,6.62046918%20L2.96911852,6.62361063%20L2.9059516,6.7191718%20L2.90385718,6.72231325%20L2.90179667,6.72548842%20L2.83937291,6.82175903%20L2.83731239,6.8249342%20L2.8352856,6.82810955%20L2.78907583,6.90076844%20L2.73817066,6.97008318%20L2.73594117,6.97312329%20L2.73371168,6.97619728%20L2.66662643,7.06925882%20L2.66439694,7.07233264%20L2.66223507,7.07540647%20L2.59606178,7.16887339%20L2.59386619,7.17198112%20L2.59173805,7.17505494%20L2.52647671,7.26896099%20L2.52434875,7.27206871%20L2.52222061,7.27517643%20L2.45790513,7.3694877%20L2.45577699,7.37259542%20L2.45368275,7.37570314%20L2.39031313,7.4704198%20L2.38821872,7.47356125%20L2.3861582,7.4767027%20L2.32370054,7.57179102%20L2.32164003,7.57493247%20L2.31961324,7.57810765%20L2.25806771,7.67360136%20L2.25604092,7.67674281%20L2.25404803,7.67991798%20L2.19344819,7.7757832%20L2.19142157,7.77895837%20L2.18946223,7.78213372%20L2.12977453,7.87840415%20L2.12781536,7.8815795%20L2.12585619,7.88478839%20L2.06708045,7.98143049%20L2.06515501,7.98460584%20L2.06322974,7.98781474%20L2.00539986,8.08482851%20L2.00347441,8.08803758%20L2.0015827,8.09124648%20L1.94466495,8.18863174%20L1.94277323,8.19184081%20L1.94091541,8.19504988%20L1.88490962,8.29280664%20L1.8830518,8.29601571%20L1.88122771,8.29925851%20L1.82613388,8.39735304%20L1.82430979,8.40056211%20L1.82251959,8.40383863%20L1.768304,8.5022711%20L1.7665138,8.5055139%20L1.76475716,8.50875669%20L1.7114876,8.60756066%20L1.70973095,8.61080346%20L1.70800838,8.61404625%20L1.65561706,8.71318799%20L1.65389448,8.71643078%20L1.65217191,8.71970731%20L1.60069238,8.81918698%20L1.59900266,8.82242978%20L1.59734754,8.8257063%20L1.54674624,8.92548985%20L1.54509112,8.92876637%20L1.54347058,8.93207679%20L1.49378142,9.03216439%20L1.49216089,9.03544091%20L1.49054035,9.03875133%20L1.44176332,9.13917669%20L1.44017565,9.14245321%20L1.43858798,9.14576363%20L1.39068918,9.24649304%20L1.38913437,9.24980329%20L1.38761414,9.25311371%20L1.34059359,9.35414716%20L1.33907336,9.35745741%20L1.33755314,9.36076783%20L1.32539274,9.38752082%20L1.27259585,9.53979721%20L1.24901803,9.69926863%20L1.25540228,9.86029366%20L1.29157979,10.0173666%20L1.35630066,10.1650152%20L1.44726778,10.2980713%20L1.56133987,10.4119408%20L1.69459859,10.5026378%20L1.84234856,10.5670546%20L1.99948915,10.6029281%20L2.16054807,10.6090083%20L2.31995187,10.5850925%20L2.47216064,10.5319918%20L2.61187106,10.4515976%20L2.73421912,10.3466458%20L2.83494852,10.2208522%20L2.89963549,10.1036724%20L2.91010705,10.0806688%20L2.95395243,9.98639125%20L2.99945294,9.89066111%20L3.00056673,9.88833045%20L3.04295952,9.8010788%20L3.04339881,9.80016736%20L3.09126388,9.70372795%20L3.13919657,9.60921382%20L3.13994025,9.60776105%20L3.18723113,9.51648989%20L3.18807512,9.51483476%20L3.23519703,9.42572546%20L3.28562918,9.33229226%20L3.28684501,9.32999533%20L3.33602744,9.24075095%20L3.38814861,9.14799347%20L3.38902719,9.14643865%20L3.44020251,9.05722801%20L3.44138548,9.05516749%20L3.492392,8.96798346%20L3.5447835,8.88005645%20L3.54603392,8.87799593%20L3.60149924,8.78679222%20L3.65780907,8.6959939%20L3.71506476,8.60546573%20L3.7159762,8.60401295%20L3.77316427,8.51530887%20L3.77346866,8.51483672%20L3.82765053,8.43231437%20L3.82917075,8.43001726%20L3.88899353,8.34063764%20L3.94955946,8.25179866%20L4.01107143,8.16329728%20L4.01208492,8.16184451%20L4.07167127,8.07770075%20L4.13490581,7.98997626%20L4.20016715,7.90113711%20L4.2172931,7.87782961%20L4.23279782,7.85344101%20L4.29285701,7.75906212%20L4.35176783,7.66823008%20L4.35284876,7.66657496%20L4.40959771,7.58074218%20L4.46732625,7.49501075%20L4.46806993,7.49392982%20L4.53015609,7.40346927%20L4.59166788,7.31550853%20L4.59295117,7.31368443%20L4.65351711,7.22876362%20L4.65463263,7.22717595%20L4.71462437,7.14451834%20L4.77826431,7.05841525%20L4.84203932,6.97359596%20L4.84355955,6.97160289%20L4.90507134,6.89130985%20L4.97026505,6.80774029%20L5.03360095,6.72788636%20L5.03461443,6.72663594%20L5.10142954,6.64387699%20L5.16844735,6.56236795%20L5.23806614,6.47913615%20L5.23853829,6.47859655%20L5.30653568,6.39877653%20L5.37027696,6.32517178%20L5.37047931,6.32496943%20L5.44384764,6.24167001%20L5.44431979,6.24113041%20L5.51245226,6.16512737%20L5.51410738,6.16330328%20L5.58348958,6.08726652%20L5.58450306,6.08615272%20L5.65341241,6.01187226%20L5.72576743,5.93519369%20L5.72701785,5.93384295%20L5.79410328,5.86392029%20L5.79474493,5.86327865%20L5.87024122,5.78585674%20L5.87186175,5.78420162%20L5.9424264,5.7130965%20L6.01717971,5.63898518%20L6.01893618,5.63726261%20L6.09054786,5.56750857%20L6.16644972,5.49474833%20L6.16830754,5.49295814%20L6.24106778,5.42438638%20L6.31457119,5.35618629%20L6.31612427,5.35476811%20L6.39594447,5.28197415%20L6.39641662,5.28153486%20L6.47225086,5.21353746%20L6.47353414,5.21238908%20L6.54582153,5.14858035%20L6.54690247,5.14763431%20L6.62398643,5.08071785%20L6.62439114,5.0803806%20L6.70265738,5.01349787%20L6.7045152,5.01194479%20L6.78517991,4.94421754%20L6.78724043,4.94249497%20L6.86398663,4.87912535%20L6.9457321,4.81271563%20L6.94718487,4.81153266%20L7.02244491,4.75140567%20L7.02406545,4.75012238%20L7.02970653,4.74569731%20L7.1465823,4.63469904%20L7.24085984,4.50397367%20L7.3092289,4.35801408%20L7.34932475,4.20188697%20L7.35972868,4.04103075%20L7.34010292,3.88105276%20L7.29115709,3.72745901%20L7.21454597,3.58565417%20L7.11293832,3.46053616%20L6.98988083,3.35642889%20L6.84962994,3.27698036%20L6.69708341,3.2249268%20L6.53754453,3.20209198%20L6.37652141,3.20924931%20Z%20M30.972969,14.2966428%20L30.8167405,14.3363671%20L30.6706123,14.4043645%20L30.53965,14.4983043%20L30.4283814,14.6149436%20L30.340691,14.7501953%20L30.2796174,14.899364%20L30.2472915,15.0572476%20L30.2431373,15.1910468%20L30.2497232,15.3326152%20L30.2551278,15.4850604%20L30.2588099,15.634398%20L30.2609043,15.783668%20L30.2613367,15.9366537%20L30.2624436,15.9482737%20L30.2618037,15.963069%20L30.2655203,16.0725472%20L30.2682564,16.1835116%20L30.2682564,16.1851668%20L30.2699167,16.2907603%20L30.2699167,16.2921453%20L30.2706604,16.3938881%20L30.2704874,16.5044134%20L30.2704874,16.5055957%20L30.2693806,16.6111217%20L30.2693806,16.6120337%20L30.2674539,16.713844%20L30.2645155,16.8204847%20L30.2606985,16.9265174%20L30.2559355,17.0324488%20L30.250261,17.1384815%20L30.2436734,17.2442441%20L30.2361415,17.3497363%20L30.2359685,17.3518306%20L30.2277258,17.4550935%20L30.2275528,17.4567486%20L30.218703,17.5567349%20L30.2085353,17.6620581%20L30.1974562,17.7670776%20L30.1854968,17.8716916%20L30.1733367,17.9707996%20L30.1730946,17.9726574%20L30.1589076,18.0805479%20L30.1587346,18.0817638%20L30.1447499,18.1812435%20L30.129245,18.2856546%20L30.112929,18.389154%20L30.1126004,18.3913496%20L30.0961841,18.4899847%20L30.0780452,18.593788%20L30.0591626,18.6967468%20L30.0587475,18.6989087%20L30.0399998,18.796429%20L30.0192597,18.8997255%20L29.9976411,19.0028195%20L29.9973298,19.0043397%20L29.9760155,19.1019277%20L29.9527089,19.2046839%20L29.9522419,19.2067781%20L29.9294749,19.3033528%20L29.9044111,19.4058387%20L29.9038404,19.4082032%20L29.8795531,19.5042035%20L29.8528342,19.6061826%20L29.8521943,19.6086486%20L29.8270285,19.7016762%20L29.8266134,19.7030615%20L29.7980041,19.8055813%20L29.797295,19.8080472%20L29.7687861,19.9069525%20L29.7686131,19.9073572%20L29.7398327,20.0042359%20L29.7391928,20.0063978%20L29.7101096,20.1014185%20L29.6800459,20.1970471%20L29.6796135,20.1983978%20L29.6471181,20.2988569%20L29.615771,20.3932697%20L29.6150619,20.3953302%20L29.5809788,20.4952826%20L29.5802006,20.497512%20L29.5469269,20.5924651%20L29.5460794,20.5948636%20L29.5115916,20.6907625%20L29.5111593,20.6919783%20L29.4778856,20.7823713%20L29.4772802,20.7839589%20L29.4404265,20.8817155%20L29.4043839,20.9751489%20L29.403744,20.976804%20L29.3660134,21.0722976%20L29.2869704,21.2655819%20L29.2064072,21.4542384%20L29.1223297,21.6428611%20L29.0345044,21.8320919%20L28.9453283,22.0167286%20L28.8532122,22.2003181%20L28.7578203,22.3835362%20L28.7074886,22.476699%20L28.6444573,22.6250571%20L28.6100352,22.7825016%20L28.6054417,22.9436281%20L28.6308099,23.1027953%20L28.6852958,23.2544975%20L28.7670074,23.3934648%20L28.8730408,23.5148332%20L28.9997797,23.6144141%20L29.1428,23.688762%20L29.2971381,23.7352421%20L29.4574188,23.7523006%20L29.618073,23.7393294%20L29.7735578,23.6967339%20L29.9184027,23.6260342%20L30.0476078,23.5296962%20L30.1567146,23.41103%20L30.2292391,23.2985452%20L30.2823397,23.2002818%20L30.285413,23.1945393%20L30.2884205,23.1887971%20L30.3898258,22.9940603%20L30.3928646,22.9882841%20L30.3957701,22.9824403%20L30.494237,22.7861833%20L30.4972083,22.780306%20L30.5000464,22.7743946%20L30.5955402,22.5766516%20L30.5984112,22.5707064%20L30.6012147,22.5646937%20L30.6936681,22.3654981%20L30.6964717,22.3594516%20L30.6991748,22.3533714%20L30.7885878,22.1527234%20L30.7912893,22.1466093%20L30.7939251,22.1404613%20L30.8802302,21.9383947%20L30.8828988,21.9321793%20L30.8854325,21.925964%20L30.9686297,21.7225123%20L30.9705217,21.7178167%20L30.9724138,21.7130878%20L31.012813,21.6108383%20L31.0140582,21.6076969%20L31.0152689,21.6045215%20L31.0548915,21.5019343%20L31.0561022,21.4987591%20L31.0573128,21.49555%20L31.0961243,21.3926588%20L31.0973004,21.3894499%20L31.0984765,21.3862408%20L31.1365114,21.2830118%20L31.1376875,21.279769%20L31.138829,21.2765601%20L31.17602,21.1729933%20L31.177196,21.1697505%20L31.1783029,21.1665077%20L31.2146827,21.0626031%20L31.2158242,21.0593603%20L31.2169311,21.0560836%20L31.2524998,20.951875%20L31.2536067,20.9485983%20L31.254679,20.9453217%20L31.2894366,20.8407753%20L31.2905088,20.8374987%20L31.2915811,20.8341884%20L31.3254965,20.729338%20L31.3265688,20.7260275%20L31.3276237,20.7227171%20L31.3606934,20.6175289%20L31.3617483,20.6142187%20L31.3627687,20.6108747%20L31.3950272,20.505416%20L31.3960476,20.502072%20L31.397068,20.498694%20L31.4284825,20.3929316%20L31.4294683,20.3895537%20L31.4304541,20.3862096%20L31.4610246,20.2801094%20L31.4620104,20.2767313%20L31.4629617,20.2733535%20L31.4926536,20.166983%20L31.4936048,20.1635714%20L31.494556,20.1601596%20L31.5234022,20.0534851%20L31.5243188,20.0500735%20L31.5252355,20.0466617%20L31.5532377,19.9396831%20L31.5541197,19.9362715%20L31.5550018,19.9328261%20L31.58216,19.8255773%20L31.5830074,19.8221318%20L31.5838549,19.8186863%20L31.6101345,19.7111336%20L31.610982,19.7076881%20L31.6117948,19.7042089%20L31.6371976,19.5963858%20L31.638045,19.5929065%20L31.6388233,19.5894273%20L31.6633475,19.4813341%20L31.6641604,19.4778211%20L31.664904,19.474308%20L31.6885497,19.3659446%20L31.6893279,19.3624315%20L31.6900716,19.3589186%20L31.7128041,19.2502849%20L31.7135477,19.246738%20L31.7142568,19.2432249%20L31.736147,19.1342872%20L31.7368561,19.1307742%20L31.7375306,19.1272274%20L31.7585076,19.0180195%20L31.7591821,19.0144727%20L31.759822,19.0109258%20L31.7798876,18.9014815%20L31.7805621,18.8979009%20L31.7811674,18.8943202%20L31.8003527,18.7846394%20L31.800958,18.7810589%20L31.8015633,18.7774444%20L31.8198371,18.6674934%20L31.8204078,18.6639128%20L31.8209786,18.6602983%20L31.8383409,18.5501108%20L31.8389117,18.5464966%20L31.8394478,18.5428821%20L31.8558642,18.4324243%20L31.8564003,18.4287763%20L31.8569018,18.4251618%20L31.8724067,18.3144676%20L31.8729083,18.3108194%20L31.8734098,18.3071714%20L31.8879687,18.1962406%20L31.8884357,18.1925926%20L31.8889026,18.1889444%20L31.9025501,18.0777771%20L31.9029824,18.0740952%20L31.9034148,18.0704472%20L31.9161162,17.9590098%20L31.9165486,17.9553616%20L31.9169118,17.9516797%20L31.9287,17.8400396%20L31.9290805,17.8363577%20L31.9294437,17.8326758%20L31.9402876,17.7207993%20L31.9406162,17.7170835%20L31.9409621,17.7134016%20L31.9508599,17.6012886%20L31.9511713,17.5976067%20L31.9514653,17.5938911%20L31.9604171,17.4815755%20L31.9606938,17.4778597%20L31.9609706,17.474144%20L31.9689418,17.361592%20L31.9692185,17.3578762%20L31.9694606,17.3541605%20L31.9764858,17.2414058%20L31.976728,17.2376562%20L31.9769355,17.2339406%20L31.9829818,17.1209493%20L31.9831893,17.1172336%20L31.9833623,17.1134841%20L31.9884297,17.000324%20L31.9886026,16.9965745%20L31.9887756,16.992825%20L31.992897,16.8794284%20L31.9930699,16.875679%20L31.9932429,16.8719295%20L31.9963508,16.7583302%20L31.9965237,16.7545808%20L31.9965237,16.7508313%20L31.9986856,16.6370294%20L31.9986856,16.6332799%20L31.9986856,16.6294966%20L31.9998271,16.5155258%20L31.9998271,16.5117426%20L31.9998271,16.5079931%20L32,16.3938196%20L32,16.3900363%20L32,16.3862531%20L31.9991525,16.2719107%20L31.9991525,16.2681274%20L31.9991525,16.2643441%20L31.9972951,16.1497991%20L31.9972951,16.1460158%20L31.9972951,16.1422326%20L31.9944241,16.0274849%20L31.9944241,16.0237016%20L31.9942512,16.0199183%20L31.9908389,15.9179053%20L31.9904065,15.7726888%20L31.9904065,15.7679597%20L31.9904065,15.7632644%20L31.9882101,15.6045363%20L31.9882101,15.5998748%20L31.9880371,15.5951795%20L31.9840852,15.4365188%20L31.9839123,15.4318235%20L31.9837393,15.427162%20L31.9780994,15.268569%20L31.9779265,15.2639075%20L31.977719,15.2592459%20L31.9708269,15.1108542%20L31.9483643,14.9512478%20L31.8967165,14.7985661%20L31.8175715,14.6581462%20L31.713802,14.5348186%20L31.5889206,14.4329407%20L31.4472856,14.355958%20L31.293826,14.3066405%20L31.1338826,14.2866095%20L30.972969,14.2966428%20Z%20M0.75999679,14.9570925%20L0.602518433,14.9914459%20L0.454160551,15.0544102%20L0.320023589,15.1438236%20L0.204836668,15.2565783%20L0.112585921,15.3887223%20L0.0464463497,15.5357291%20L0.00874878992,15.6924305%20L1.96620454e-15,15.8259932%20L0.00135125194,15.9365524%20L0.00141870212,15.9427339%20L0.00158819232,15.9489155%20L0.00739819519,16.1686826%20L0.00756768538,16.1748304%20L0.00780410691,16.1809782%20L0.0167556452,16.4007115%20L0.0169925855,16.4068255%20L0.0173298364,16.4129395%20L0.0293890639,16.6325715%20L0.0297263148,16.6386517%20L0.0301310159,16.644732%20L0.0452977942,16.8642288%20L0.0457024953,16.8702752%20L0.0462092364,16.8763555%20L0.0644498405,17.0956496%20L0.0649565816,17.1016961%20L0.0655307729,17.1077088%20L0.0868455487,17.3268003%20L0.0874543298,17.3327792%20L0.0880959712,17.338758%20L0.112484573,17.5576131%20L0.113126214,17.5635582%20L0.113869896,17.5695034%20L0.141298425,17.7880544%20L0.142042106,17.7939658%20L0.142853238,17.7999109%20L0.173288143,18.0180903%20L0.174132135,18.023968%20L0.175010717,18.0298792%20L0.208451997,18.2476533%20L0.20936344,18.2535308%20L0.210342332,18.2593746%20L0.246789988,18.4767434%20L0.24776888,18.4825872%20L0.248815223,18.4883972%20L0.288269255,18.7052931%20L0.289317327,18.711103%20L0.290431119,18.7169131%20L0.332823903,18.9332685%20L0.333972286,18.9390447%20L0.335188119,18.944821%20L0.380519655,19.1606358%20L0.381735488,19.1663782%20L0.383018771,19.1721207%20L0.43128906,19.3873276%20L0.432572343,19.3930702%20L0.433957666,19.3987787%20L0.485166707,19.6133438%20L0.486517441,19.6190525%20L0.487935624,19.6247275%20L0.542049866,19.8386168%20L0.543502639,19.8442581%20L0.545022862,19.8499329%20L0.602008233,20.0630793%20L0.603528457,20.0687204%20L0.60511613,20.0743614%20L0.665006529,20.2867309%20L0.666594202,20.292372%20L0.668249326,20.2979456%20L0.731011027,20.5095381%20L0.73266615,20.5151117%20L0.734388724,20.5206852%20L0.799987829,20.7314332%20L0.801710403,20.736973%20L0.803534498,20.7425129%20L0.871971007,20.9523488%20L0.873761377,20.9578886%20L0.875652922,20.9633946%20L0.946926836,21.1723186%20L0.948784829,21.1778246%20L0.950743997,21.1832967%20L1.02482159,21.3912411%20L1.02674703,21.3967134%20L1.02877382,21.4021518%20L1.1056551,21.6090827%20L1.10768189,21.6145213%20L1.10977613,21.6199597%20L1.18942736,21.8258097%20L1.1915216,21.8312482%20L1.19368346,21.8366529%20L1.27607074,22.0413882%20L1.27826651,22.0467929%20L1.28049582,22.0521638%20L1.36565306,22.2557843%20L1.36791627,22.2611553%20L1.37024711,22.2665262%20L1.4581065,22.4689307%20L1.46043734,22.4742677%20L1.46283562,22.4796049%20L1.55343125,22.6807934%20L1.55582971,22.6861305%20L1.55829544,22.691434%20L1.6515934,22.8913388%20L1.6540932,22.8966421%20L1.65662656,22.9019455%20L1.75262685,23.100533%20L1.75519411,23.1058026%20L1.75782881,23.1110721%20L1.78880436,23.1730231%20L1.87402904,23.3098624%20L1.98316949,23.4284609%20L2.11244226,23.5247652%20L2.25732092,23.5953973%20L2.41280638,23.6379253%20L2.57345991,23.6508628%20L2.73374195,23.6337367%20L2.88804496,23.587189%20L3.03103208,23.5128073%20L3.15773759,23.4131588%20L3.26377031,23.2917566%20L3.3453807,23.1527555%20L3.39983271,23.0010535%20L3.42513328,22.8418524%20L3.42047178,22.6807258%20L3.38601701,22.5232814%20L3.33558469,22.3993119%20L3.30771704,22.3436102%20L3.21617556,22.154278%20L3.12855241,21.9664998%20L3.0420441,21.7743979%20L2.9593865,21.5840862%20L2.87841792,21.3905318%20L2.80059079,21.1970787%20L2.72479045,21.0011935%20L2.65216528,20.8056798%20L2.58217482,20.6091528%20L2.51458282,20.4110719%20L2.44969316,20.2121129%20L2.3872355,20.0114647%20L2.32815571,19.812303%20L2.27160946,19.6118237%20L2.21715762,19.4083044%20L2.16611721,19.2065417%20L2.11798199,19.0047789%20L2.07190729,18.7995707%20L2.02873745,18.5939571%20L1.98891192,18.3907079%20L1.95138333,18.1842837%20L1.91702992,17.9795484%20L1.88531138,17.7729213%20L1.85673413,17.5680847%20L1.8307243,17.3607483%20L1.80765305,17.1533106%20L1.78745311,16.9458054%20L1.77022581,16.7385028%20L1.75590337,16.5309976%20L1.74451986,16.3235937%20L1.73610882,16.1162574%20L1.73063671,15.9091913%20L1.72935342,15.8049826%20L1.71239627,15.6447006%20L1.66598381,15.4903637%20L1.59170334,15.3472753%20L1.49219011,15.2205022%20L1.37085537,15.1143682%20L1.23195556,15.0326227%20L1.08028726,14.9780694%20L0.921120051,14.9525999%20L0.75999679,14.9570925%20Z%20M25.3452978,26.7863436%20L25.1890347,26.8257637%20L25.0427716,26.8935247%20L24.9326514,26.9696291%20L24.9179231,26.9815869%20L24.7547369,27.1105219%20L24.5894545,27.2375315%20L24.4212009,27.3632237%20L24.251325,27.4866525%20L24.0814509,27.6066023%20L23.9094477,27.7245929%20L23.7364986,27.8399149%20L23.5603394,27.9539193%20L23.3827967,28.0654918%20L23.2037667,28.1745985%20L23.0252105,28.2801245%20L22.8434461,28.3842657%20L22.6614776,28.4852989%20L22.4772123,28.5843056%20L22.2926756,28.6802722%20L22.1041886,28.7749888%20L21.9184378,28.8651792%20L21.7297139,28.9536467%20L21.5390634,29.0397835%20L21.3492257,29.1224411%20L21.1567177,29.2030718%20L20.9621499,29.2814056%20L20.7708594,29.3552807%20L20.5738253,29.4282436%20L20.3789531,29.4972881%20L20.1833389,29.5634615%20L19.9849195,29.6274391%20L19.7873113,29.6880389%20L19.5877781,29.7461391%20L19.3877035,29.801199%20L19.1864478,29.8534553%20L18.9874888,29.9020298%20L18.8357535,29.936721%20L18.6826658,29.9871194%20L18.5415704,30.0650479%20L18.4173981,30.1678378%20L18.3144397,30.2918747%20L18.2363082,30.432835%20L18.1857067,30.5858883%20L18.1643596,30.7456299%20L18.1730399,30.9065875%20L18.2114468,31.0631539%20L18.2782622,31.2098229%20L18.3711221,31.3415953%20L18.4868147,31.4538096%20L18.6213242,31.5426148%20L18.7699515,31.6049374%20L18.9275982,31.6385814%20L19.0887591,31.6423646%20L19.2211396,31.6227052%20L19.3785165,31.5867303%20L19.3847323,31.5853122%20L19.3909135,31.5838265%20L19.6042619,31.5317391%20L19.6104448,31.5302189%20L19.6165585,31.5286312%20L19.8291632,31.4734023%20L19.8352441,31.4718492%20L19.841325,31.4701595%20L20.0531203,31.4118568%20L20.0591666,31.410167%20L20.0651783,31.4084445%20L20.2761625,31.347034%20L20.2821414,31.3452775%20L20.2881219,31.3434535%20L20.4982275,31.2790366%20L20.5041389,31.2772125%20L20.5100503,31.2752871%20L20.7192773,31.2078302%20L20.7251559,31.2059386%20L20.7309998,31.2039456%20L20.9392479,31.1334823%20L20.9450919,31.1315231%20L20.9508684,31.1294626%20L21.1581705,31.0560605%20L21.163947,31.054%20L21.169656,31.0518719%20L21.3759446,30.9754973%20L21.3816537,30.9734029%20L21.387361,30.9712073%20L21.5926032,30.8918939%20L21.5982448,30.8896983%20L21.6038864,30.8874351%20L21.8080478,30.8052505%20L21.8136202,30.803021%20L21.8191943,30.8006902%20L22.0222401,30.7156344%20L22.0278143,30.7133036%20L22.033321,30.7109053%20L22.2352184,30.623012%20L22.2406905,30.6206137%20L22.2461626,30.6181478%20L22.4468788,30.5274509%20L22.4523163,30.5249849%20L22.457721,30.5224514%20L22.6572213,30.4289508%20L22.6625914,30.4264511%20L22.6679632,30.4238501%20L22.8661785,30.3275797%20L22.8715157,30.3250125%20L22.8768183,30.3223439%20L23.0737521,30.2233372%20L23.0790201,30.2207025%20L23.0842899,30.2179664%20L23.2798712,30.1162912%20L23.2851081,30.1135551%20L23.2903087,30.1107514%20L23.4845393,30.0064076%20L23.489707,30.0036039%20L23.4948764,30.0007665%20L23.6876871,29.8937204%20L23.692822,29.890883%20L23.6979222,29.8879441%20L23.8893147,29.7782971%20L23.8943821,29.7753921%20L23.8994478,29.7724196%20L24.0893547,29.6601714%20L24.0943875,29.6571651%20L24.0993874,29.654125%20L24.2877741,29.5393097%20L24.2927723,29.5362696%20L24.2977048,29.5331619%20L24.4845712,29.4157794%20L24.489502,29.4126718%20L24.4943999,29.4094965%20L24.6796786,29.2896143%20L24.6845437,29.2864391%20L24.689407,29.2831963%20L24.8730652,29.1608146%20L24.8778957,29.1575718%20L24.8826916,29.1542951%20L25.0646929,29.0294137%20L25.0694905,29.0261032%20L25.0742535,29.0227591%20L25.2545323,28.8954457%20L25.2592953,28.8921015%20L25.2640238,28.8886898%20L25.4425817,28.7589441%20L25.4472755,28.7555324%20L25.4519382,28.7520532%20L25.6287719,28.6199093%20L25.6334328,28.6164299%20L25.6380264,28.612883%20L25.8130371,28.4784083%20L25.8176652,28.4748616%20L25.8222242,28.4712472%20L25.9954103,28.3344418%20L25.999971,28.3308273%20L26.004497,28.3271454%20L26.0230424,28.3121137%20L26.1381279,28.1992576%20L26.230277,28.0670122%20L26.2963142,27.9199717%20L26.333877,27.7632365%20L26.3417479,27.6022452%20L26.3195551,27.4426049%20L26.2681425,27.2898218%20L26.189269,27.1492669%20L26.0856673,27.0257704%20L25.9609553,26.923656%20L25.8194552,26.846437%20L25.6660977,26.7968492%20L25.5061872,26.7765816%20L25.3452978,26.7863436%20Z%20M6.17479245,26.840863%20L6.02194186,26.8920046%20L5.88125168,26.9706763%20L5.75762,27.0740743%20L5.65530309,27.1986179%20L5.57788136,27.3399836%20L5.52802322,27.4932733%20L5.5074855,27.65315%20L5.51697747,27.8140399%20L5.55619508,27.9704036%20L5.62371963,28.1167686%20L5.71722028,28.2480343%20L5.81227471,28.3422781%20L5.85878853,28.3817321%20L5.86392304,28.3860896%20L5.86912501,28.3903459%20L6.03893274,28.5299549%20L6.04416843,28.5342449%20L6.04943802,28.5384673%20L6.22147524,28.675408%20L6.22549492,28.678617%20L6.22951461,28.6817246%20L6.31636069,28.7492154%20L6.31906302,28.7513097%20L6.32176535,28.7534039%20L6.4091858,28.8202192%20L6.41188813,28.8222797%20L6.41462436,28.8243402%20L6.5025851,28.8904798%20L6.50532133,28.8925403%20L6.50809111,28.8946008%20L6.5965925,28.9600647%20L6.59936245,28.9620915%20L6.60216596,28.9641183%20L6.6912078,29.0289066%20L6.69401148,29.0309334%20L6.69681516,29.0329602%20L6.7864312,29.0970392%20L6.78923488,29.0990658%20L6.79207228,29.1010589%20L6.88219506,29.1644285%20L6.88506637,29.1664214%20L6.88790377,29.1684145%20L6.97860074,29.2311086%20L6.98147204,29.2330677%20L6.98434317,29.2350269%20L7.07558061,29.2970117%20L7.07845191,29.2989709%20L7.08135694,29.30093%20L7.17313484,29.3621715%20L7.17603987,29.3641307%20L7.17897862,29.3660561%20L7.2712631,29.4265883%20L7.27420202,29.4285138%20L7.2771745,29.4304392%20L7.36999961,29.490262%20L7.37297209,29.4921537%20L7.37594474,29.4940453%20L7.46931031,29.5531588%20L7.47228279,29.5550505%20L7.47528917,29.5569083%20L7.56919521,29.6152787%20L7.57220159,29.6171365%20L7.57524169,29.6189943%20L7.6696543,29.6766215%20L7.6726944,29.6784456%20L7.6757345,29.6803036%20L7.77068775,29.7371537%20L7.77376158,29.7390117%20L7.77683557,29.7408019%20L7.87229539,29.7969429%20L7.87536922,29.7987331%20L7.87847694,29.8005235%20L7.97447723,29.8559212%20L7.97758495,29.8577116%20L7.98069268,29.859468%20L8.07723343,29.9140888%20L8.08034115,29.9158455%20L8.0834826,29.917602%20L8.18052992,29.9714459%20L8.18367137,29.9732024%20L8.18684671,29.9749249%20L8.28440077,30.027992%20L8.28757612,30.0297145%20L8.2907513,30.0314042%20L8.388846,30.0837281%20L8.39202117,30.0854161%20L8.39523024,30.0871058%20L8.49383151,30.1386191%20L8.49704041,30.1403088%20L8.50028321,30.1419639%20L8.59939121,30.1927003%20L8.60260029,30.1943554%20L8.60587681,30.1959759%20L8.70549156,30.2459353%20L8.70873435,30.2475558%20L8.71201088,30.2491763%20L8.81213237,30.298325%20L8.81540889,30.2999456%20L8.81871914,30.3015332%20L8.9193472,30.3498711%20L8.92262389,30.3514588%20L8.92593414,30.3530119%20L9.02710266,30.4005392%20L9.03041308,30.4021269%20L9.03375723,30.4036471%20L9.13536487,30.4503638%20L9.13870902,30.4519169%20L9.14208689,30.4534025%20L9.24420127,30.4993421%20L9.24757914,30.5008278%20L9.25095701,30.5023134%20L9.35357814,30.5474085%20L9.35695601,30.5488941%20L9.36036761,30.5503469%20L9.4634953,30.5945975%20L9.46690707,30.5960831%20L9.47031884,30.5975013%20L9.5739531,30.6409413%20L9.57736487,30.6423595%20L9.58081036,30.6437777%20L9.68491764,30.6863394%20L9.68836313,30.6877576%20L9.69180862,30.6891429%20L9.79642247,30.7308939%20L9.79990186,30.7322447%20L9.80334736,30.7335954%20L9.90846794,30.7745018%20L9.91194716,30.7758526%20L9.91542638,30.7771705%20L10.02102,30.8171987%20L10.0244992,30.8185494%20L10.0280123,30.8198327%20L10.1341127,30.8590164%20L10.1375919,30.8602997%20L10.1411385,30.861583%20L10.247678,30.8998884%20L10.2512249,30.9011389%20L10.2547378,30.9023893%20L10.3618177,30.9398504%20L10.3653308,30.9410663%20L10.3689114,30.9422821%20L10.4764303,30.978865%20L10.4799771,30.980048%20L10.4835577,30.9812309%20L10.5915835,31.0169354%20L10.5951301,31.0181184%20L10.5987109,31.0192668%20L10.7072093,31.0540593%20L10.7107899,31.0552077%20L10.7144044,31.0563232%20L10.8233758,31.0902373%20L10.8269564,31.0913529%20L10.8305709,31.0924667%20L10.9400152,31.1254688%20L10.9436297,31.1265498%20L10.947244,31.1276307%20L11.0571613,31.1597209%20L11.0607756,31.1608018%20L11.0644238,31.1618153%20L11.1748139,31.1930273%20L11.1784621,31.1940736%20L11.1821103,31.1950525%20L11.2655109,31.2178534%20L11.3469862,31.2460251%20L11.3505668,31.247241%20L11.3541474,31.2484568%20L11.462815,31.2849382%20L11.4663955,31.286154%20L11.4700098,31.287337%20L11.5787786,31.3228051%20L11.5823931,31.323988%20L11.5859736,31.3251018%20L11.6948777,31.3595903%20L11.698492,31.3607041%20L11.7020725,31.3618196%20L11.8111116,31.3952946%20L11.8147259,31.3964101%20L11.8183065,31.3974565%20L11.9274806,31.4299184%20L11.9310614,31.4309993%20L11.9346757,31.4320456%20L12.0439175,31.463494%20L12.0475318,31.4645421%20L12.0511461,31.4655556%20L12.1604892,31.4960244%20L12.1641037,31.4970379%20L12.1677517,31.4980168%20L12.2771962,31.5274721%20L12.2808105,31.528451%20L12.2844249,31.529397%20L12.3939706,31.5578729%20L12.3975851,31.5588189%20L12.4011993,31.5597304%20L12.5108464,31.5872265%20L12.5144608,31.588138%20L12.5180751,31.5890166%20L12.6277898,31.6155331%20L12.6314379,31.6164117%20L12.6350522,31.6172557%20L12.6388018,31.6180997%20L12.7985096,31.6398197%20L12.9595009,31.6315437%20L13.1161348,31.5935084%20L13.2629726,31.5270648%20L13.3949477,31.4345439%20L13.507466,31.3191205%20L13.5966092,31.1848146%20L13.6592696,31.0363215%20L13.693285,30.8787757%20L13.6974737,30.7176491%20L13.6717003,30.5585494%20L13.6168092,30.4069824%20L13.5347596,30.2682179%20L13.4283891,30.1471195%20L13.3014133,30.0478764%20L13.1581898,29.9739002%20L13.0340176,29.9346489%20L13.0340868,29.9344119%20L13.0305737,29.9335679%20L12.9268718,29.9085038%20L12.8243183,29.8827641%20L12.8219876,29.8821899%20L12.7268993,29.8574637%20L12.7255486,29.8570919%20L12.6246839,29.8299672%20L12.6231983,29.8295625%20L12.5225702,29.8015596%20L12.5210154,29.8011203%20L12.4181243,29.771496%20L12.3138481,29.7404868%20L12.2167669,29.7106937%20L12.2145711,29.7099846%20L12.1117812,29.6774892%20L12.0103762,29.6444194%20L11.9090389,29.6104037%20L11.8033777,29.5738885%20L11.7763883,29.5645655%20L11.7488919,29.5570327%20L11.6418796,29.52778%20L11.5379074,29.4983922%20L11.4342732,29.4680922%20L11.4322801,29.467518%20L11.3346584,29.4380627%20L11.2329832,29.4064116%20L11.1307,29.3736119%20L11.0288896,29.339968%20L10.926235,29.3050403%20L10.9257611,29.3048674%20L10.8297608,29.2712571%20L10.729099,29.2350798%20L10.6290451,29.1981254%20L10.627221,29.1974492%20L10.5325381,29.1615081%20L10.4373823,29.12452%20L10.4364034,29.1241153%20L10.33966,29.0855734%20L10.3375319,29.0846948%20L10.2391333,29.0444637%20L10.1409711,29.0033208%20L10.1387416,29.0023748%20L10.046626,28.9628531%20L9.94961238,28.9202239%20L9.85459168,28.8774934%20L9.75821973,28.8332089%20L9.75619293,28.8322628%20L9.66556359,28.7896336%20L9.57165754,28.7445046%20L9.47815689,28.6986326%20L9.38512909,28.6519836%20L9.29490513,28.6058075%20L9.29419604,28.6054357%20L9.19873622,28.5555775%20L9.110978,28.5087936%20L9.10861344,28.5075103%20L9.01974056,28.4591724%20L9.01886198,28.4586985%20L8.92482087,28.4065097%20L8.92269273,28.4053267%20L8.83594799,28.3562119%20L8.74883158,28.3059823%20L8.74737881,28.3051383%20L8.65945179,28.25349%20L8.65752635,28.2523416%20L8.5670997,28.1981599%20L8.48221261,28.1463765%20L8.47991567,28.1449237%20L8.39131294,28.0899314%20L8.30686514,28.036459%20L8.30517543,28.035378%20L8.21461353,27.9770077%20L8.21403934,27.9766359%20L8.1291187,27.9209002%20L8.12763307,27.9199213%20L8.04416485,27.8641857%20L7.96201399,27.8083826%20L7.96056122,27.8073691%20L7.87452575,27.7479178%20L7.79254386,27.6902906%20L7.79095618,27.6891423%20L7.70502206,27.6276979%20L7.70296154,27.6262123%20L7.62229701,27.5675042%20L7.54203787,27.508188%20L7.54075458,27.5072091%20L7.45630661,27.4437381%20L7.4540773,27.4420484%20L7.37753379,27.383543%20L7.37564208,27.3820902%20L7.29369391,27.3183828%20L7.13253364,27.1900559%20L6.97106932,27.0573376%20L6.93117617,27.0234571%20L6.79909973,26.931105%20L6.65216055,26.8648303%20L6.49545908,26.8269977%20L6.3345015,26.8189244%20L6.17479245,26.840863%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventNonInterruptingEscalation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.999251,8.84494846%20C14.3263539,13.5002708%2013.2645459,18.3492506%2011.5916393,23.0045698%20C13.1264302,21.4788037%2014.4645467,19.7695498%2015.999251,18.2437011%20C17.4684549,19.8306573%2018.9376588,21.4176136%2020.4068626,23.0045698%20C18.9096989,18.2934291%2017.4964129,13.5560888%2015.999251,8.84494846%20Z%20M16.0312883,11.7746459%20C16.8532612,14.3611616%2017.6291789,16.9620499%2018.4511535,19.548565%20C17.6445312,18.6772935%2016.8379106,17.8060223%2016.0312883,16.9347509%20C15.3492995,17.5327996%2013.578243,19.8205067%2013.6918289,19.3238608%20C14.5635002,16.8363957%2015.1402251,14.255727%2016.0312883,11.7746459%20L16.0312883,11.7746459%20Z%20M16.1322969,0%20C14.622447,0.0158309312%2013.0767249,0.138711861%2011.6404908,0.614178563%20C10.7860973,1.05572636%2011.3736893,2.47544003%2012.2913342,2.19173399%20C14.5567228,1.61201155%2016.9465435,1.59609938%2019.2354163,2.04771675%20C20.1696588,2.11131548%2020.4454318,0.65678997%2019.5526226,0.374167859%20C18.4349387,0.113250211%2017.278772,0.0127772341%2016.1322969,0%20L16.1322969,0%20Z%20M24.9971793,2.77740983%20C24.065628,2.67762928%2023.7345922,4.06690727%2024.5720505,4.44255246%20C26.4352931,5.8072498%2027.7940699,7.74114681%2028.8942427,9.73853417%20C29.5110594,10.4764429%2030.7689641,9.59409276%2030.2924771,8.76012302%20C29.1084681,6.48454692%2027.4835442,4.3760295%2025.368881,2.89435293%20C25.2586942,2.82150185%2025.1261391,2.79386872%2024.9971793,2.77740983%20Z%20M6.54931943,3.20021093%20C5.81512904,3.27796604%205.35299303,3.96197292%204.81419361,4.40639639%20C3.55171017,5.65593131%202.54964121,7.14707318%201.68059224,8.68851834%20C1.37144236,9.22233215%200.971551849,10.0194081%201.65040079,10.4564377%20C2.26552673,10.8882751%202.93251609,10.3243676%203.09721626,9.71383789%20C3.89293242,8.23894766%204.84280887,6.82335847%206.03101386,5.63395271%20C6.46192877,5.08577528%207.32336518,4.81196234%207.37101821,4.03865932%20C7.36264133,3.59885503%206.98879375,3.2174739%206.54931943,3.20021093%20L6.54931943,3.20021093%20Z%20M31.1312076,14.2782176%20C30.3597995,14.244551%2030.1266575,15.0973321%2030.2579007,15.7151561%20C30.3880946,18.1100298%2029.7866855,20.5115898%2028.643249,22.6117628%20C28.3133626,23.4881884%2029.6269519,24.1709107%2030.1546191,23.3972753%20C31.6119795,20.8295832%2032.2413449,17.7871733%2031.9163691,14.857256%20C31.8091224,14.5233461%2031.4786674,14.2902156%2031.1312076,14.2782176%20Z%20M0.936197618,14.9438157%20C0.162289801,14.8843816%20-0.0960260079,15.7285109%200.0307381484,16.351227%20C0.148135318,18.7602678%200.763135597,21.1603791%201.88854319,23.2961664%20C2.41659097,24.0695396%203.72985632,23.3863561%203.39964238,22.5100472%20C2.33544511,20.380366%201.76063723,18.0156251%201.72700543,15.6355091%20C1.65220774,15.2601426%201.31830471,14.9679819%200.936197618,14.9438157%20Z%20M25.5068099,26.7608464%20C24.744255,26.8596884%2024.2629628,27.5958638%2023.5871256,27.9212997%20C22.0731715,28.9232874%2020.3496553,29.5532867%2018.6085588,30.0129868%20C17.7448346,30.4361013%2018.301955,31.8681271%2019.2254568,31.604122%20C21.7526102,31.0262217%2024.1550386,29.8531345%2026.1383791,28.1826867%20C26.6065677,27.6612996%2026.2079814,26.763271%2025.5068099,26.7608464%20L25.5068099,26.7608464%20Z%20M6.3463923,26.8031474%20C5.50062123,26.8044299%205.22562273,28.0308825%205.95077424,28.4307892%20C7.61561473,29.8320741%209.6184091,30.778772%2011.7108095,31.343366%20C12.3293888,31.5210786%2013.1930581,31.9076158%2013.6042326,31.1664669%20C13.9585994,30.5379441%2013.377681,29.869406%2012.733684,29.8395234%20C10.7620502,29.3245944%208.82191167,28.5550235%207.23465327,27.2462743%20C6.97458448,27.0333682%206.71225708,26.7744013%206.3463923,26.8031474%20L6.3463923,26.8031474%20Z'%20transform='translate(0%20.364)'/%3e%3c/svg%3e";
const BpmnIconStartEventNonInterruptingMessage = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M8.74615347,10.392795%20C8.74615347,14.0807711%208.74615347,17.768747%208.74615347,21.4567231%20C13.581552,21.4567231%2018.4169504,21.4567231%2023.2523493,21.4567231%20C23.2523493,17.768747%2023.2523493,14.0807711%2023.2523493,10.392795%20C18.4169504,10.392795%2013.581552,10.392795%208.74615347,10.392795%20Z%20M11.9686119,12.1213376%20C14.6553109,12.1213376%2017.34201,12.1213376%2020.0287086,12.1213376%20C18.6010555,12.9998254%2017.1732762,14.9283494%2015.7458012,15.1387651%20C14.4867818,14.1329014%2013.2276982,13.1271178%2011.9686119,12.1213376%20Z%20M21.5259673,13.1389428%20C21.5259673,15.3353554%2021.5259673,17.5317679%2021.5259673,19.7281805%20C17.8414788,19.7281805%2014.1569908,19.7281805%2010.4725026,19.7281805%20C10.4725026,17.5319368%2010.4725026,15.335693%2010.4725026,13.1394492%20C12.3142059,14.6112862%2014.1558268,16.083226%2015.9976124,17.55496%20C17.8404798,16.0830566%2019.6831812,14.610946%2021.5259673,13.1389428%20L21.5259673,13.1389428%20Z%20M16.1322969,0%20C14.622447,0.0158309312%2013.0767249,0.138711861%2011.6404908,0.614178563%20C10.7860973,1.05572636%2011.3736893,2.47544003%2012.2913342,2.19173399%20C14.5567228,1.61201155%2016.9465435,1.59609938%2019.2354163,2.04771675%20C20.1696588,2.11131548%2020.4454318,0.65678997%2019.5526226,0.374167859%20C18.4349387,0.113250211%2017.278772,0.0127772341%2016.1322969,0%20L16.1322969,0%20Z%20M24.9971793,2.77740983%20C24.065628,2.67762928%2023.7345922,4.06690727%2024.5720505,4.44255246%20C26.4352931,5.8072498%2027.7940699,7.74114681%2028.8942427,9.73853417%20C29.5110594,10.4764429%2030.7689641,9.59409276%2030.2924771,8.76012302%20C29.1084681,6.48454692%2027.4835442,4.3760295%2025.368881,2.89435293%20C25.2586942,2.82150185%2025.1261391,2.79386872%2024.9971793,2.77740983%20L24.9971793,2.77740983%20Z%20M6.54931943,3.20021093%20C5.81512904,3.27796604%205.35299303,3.96197292%204.81419361,4.40639639%20C3.55171017,5.65593131%202.54964121,7.14707318%201.68059224,8.68851834%20C1.37144236,9.22233215%200.971551849,10.0194081%201.65040079,10.4564377%20C2.26552673,10.8882751%202.93251609,10.3243676%203.09721626,9.71383789%20C3.89293242,8.23894766%204.84280887,6.82335847%206.03101386,5.63395271%20C6.46192877,5.08577528%207.32336518,4.81196234%207.37101821,4.03865932%20C7.36264133,3.59885503%206.98879375,3.2174739%206.54931943,3.20021093%20L6.54931943,3.20021093%20Z%20M31.1312076,14.2782176%20C30.3597995,14.244551%2030.1266575,15.0973321%2030.2579007,15.7151561%20C30.3880946,18.1100298%2029.7866855,20.5115898%2028.643249,22.6117628%20C28.3133626,23.4881884%2029.6269519,24.1709107%2030.1546191,23.3972753%20C31.6119795,20.8295832%2032.2413449,17.7871733%2031.9163691,14.857256%20C31.8091224,14.5233461%2031.4786674,14.2902156%2031.1312076,14.2782176%20Z%20M0.936197618,14.9438157%20C0.162289801,14.8843816%20-0.0960260079,15.7285109%200.0307381484,16.351227%20C0.148135318,18.7602678%200.763135597,21.1603791%201.88854319,23.2961664%20C2.41659097,24.0695396%203.72985632,23.3863561%203.39964238,22.5100472%20C2.33544511,20.380366%201.76063723,18.0156251%201.72700543,15.6355091%20C1.65220774,15.2601426%201.31830471,14.9679819%200.936197618,14.9438157%20Z%20M25.5068099,26.7608464%20C24.744255,26.8596884%2024.2629628,27.5958638%2023.5871256,27.9212997%20C22.0731715,28.9232874%2020.3496553,29.5532867%2018.6085588,30.0129868%20C17.7448346,30.4361013%2018.301955,31.8681271%2019.2254568,31.604122%20C21.7526102,31.0262217%2024.1550386,29.8531345%2026.1383791,28.1826867%20C26.6065677,27.6612996%2026.2079814,26.763271%2025.5068099,26.7608464%20L25.5068099,26.7608464%20Z%20M6.3463923,26.8031474%20C5.50062123,26.8044299%205.22562273,28.0308825%205.95077424,28.4307892%20C7.61561473,29.8320741%209.6184091,30.778772%2011.7108095,31.343366%20C12.3293888,31.5210786%2013.1930581,31.9076158%2013.6042326,31.1664669%20C13.9585994,30.5379441%2013.377681,29.869406%2012.733684,29.8395234%20C10.7620502,29.3245944%208.82191167,28.5550235%207.23465327,27.2462743%20C6.97458448,27.0333682%206.71225708,26.7744013%206.3463923,26.8031474%20L6.3463923,26.8031474%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventNonInterruptingMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M23.6214929,13.5235588%20C21.0807536,11.6791242%2018.5400127,9.83468976%2015.9992734,7.99025517%20C13.4585048,9.83467057%2010.9177665,11.6791275%208.37700942,13.5235588%20C9.34748583,16.5078668%2010.3179621,19.4921749%2011.2884385,22.4764828%20C14.42898,22.4764828%2017.5695223,22.4764828%2020.7100631,22.4764828%20C21.6805397,19.4921749%2022.6510163,16.5078668%2023.6214929,13.5235588%20L23.6214929,13.5235588%20Z%20M22.6050717,13.8535125%20C21.7640129,16.4399135%2020.9229525,19.0263145%2020.0818938,21.6127154%20C17.3601313,21.6127154%2014.6383698,21.6127154%2011.9166078,21.6127154%20C11.0755488,19.0263145%2010.2344897,16.4399135%209.3934306,13.8535125%20C11.5953633,12.2550251%2013.7972958,10.6565375%2015.9992285,9.05805009%20C18.2011762,10.6565375%2020.403124,12.2550251%2022.6050717,13.8535125%20L22.6050717,13.8535125%20Z%20M16.1322969,0%20C14.622447,0.0158309312%2013.0767249,0.138711861%2011.6404908,0.614178563%20C10.7860973,1.05572636%2011.3736893,2.47544003%2012.2913342,2.19173399%20C14.5567228,1.61201155%2016.9465435,1.59609938%2019.2354163,2.04771675%20C20.1696588,2.11131548%2020.4454318,0.65678997%2019.5526226,0.374167859%20C18.4349387,0.113250211%2017.278772,0.0127772341%2016.1322969,0%20L16.1322969,0%20Z%20M24.9971793,2.77740983%20C24.065628,2.67762928%2023.7345922,4.06690727%2024.5720505,4.44255246%20C26.4352931,5.8072498%2027.7940699,7.74114681%2028.8942427,9.73853417%20C29.5110594,10.4764429%2030.7689641,9.59409276%2030.2924771,8.76012302%20C29.1084681,6.48454692%2027.4835442,4.3760295%2025.368881,2.89435293%20C25.2586942,2.82150185%2025.1261391,2.79386872%2024.9971793,2.77740983%20Z%20M6.54931943,3.20021093%20C5.81512904,3.27796604%205.35299303,3.96197292%204.81419361,4.40639639%20C3.55171017,5.65593131%202.54964121,7.14707318%201.68059224,8.68851834%20C1.37144236,9.22233215%200.971551849,10.0194081%201.65040079,10.4564377%20C2.26552673,10.8882751%202.93251609,10.3243676%203.09721626,9.71383789%20C3.89293242,8.23894766%204.84280887,6.82335847%206.03101386,5.63395271%20C6.46192877,5.08577528%207.32336518,4.81196234%207.37101821,4.03865932%20C7.36264133,3.59885503%206.98879375,3.2174739%206.54931943,3.20021093%20L6.54931943,3.20021093%20Z%20M31.1312076,14.2782176%20C30.3597995,14.244551%2030.1266575,15.0973321%2030.2579007,15.7151561%20C30.3880946,18.1100298%2029.7866855,20.5115898%2028.643249,22.6117628%20C28.3133626,23.4881884%2029.6269519,24.1709107%2030.1546191,23.3972753%20C31.6119795,20.8295832%2032.2413449,17.7871733%2031.9163691,14.857256%20C31.8091224,14.5233461%2031.4786674,14.2902156%2031.1312076,14.2782176%20Z%20M0.936197618,14.9438157%20C0.162289801,14.8843816%20-0.0960260079,15.7285109%200.0307381484,16.351227%20C0.148135318,18.7602678%200.763135597,21.1603791%201.88854319,23.2961664%20C2.41659097,24.0695396%203.72985632,23.3863561%203.39964238,22.5100472%20C2.33544511,20.380366%201.76063723,18.0156251%201.72700543,15.6355091%20C1.65220774,15.2601426%201.31830471,14.9679819%200.936197618,14.9438157%20Z%20M25.5068099,26.7608464%20C24.744255,26.8596884%2024.2629628,27.5958638%2023.5871256,27.9212997%20C22.0731715,28.9232874%2020.3496553,29.5532867%2018.6085588,30.0129868%20C17.7448346,30.4361013%2018.301955,31.8681271%2019.2254568,31.604122%20C21.7526102,31.0262217%2024.1550386,29.8531345%2026.1383791,28.1826867%20C26.6065677,27.6612996%2026.2079814,26.763271%2025.5068099,26.7608464%20L25.5068099,26.7608464%20Z%20M6.3463923,26.8031474%20C5.50062123,26.8044299%205.22562273,28.0308825%205.95077424,28.4307892%20C7.61561473,29.8320741%209.6184091,30.778772%2011.7108095,31.343366%20C12.3293888,31.5210786%2013.1930581,31.9076158%2013.6042326,31.1664669%20C13.9585994,30.5379441%2013.377681,29.869406%2012.733684,29.8395234%20C10.7620502,29.3245944%208.82191167,28.5550235%207.23465327,27.2462743%20C6.97458448,27.0333682%206.71225708,26.7744013%206.3463923,26.8031474%20L6.3463923,26.8031474%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventNonInterruptingParallelMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M13.5025683,9.01616762%20L13.5025683,13.4436666%20L9.07506891,13.4436666%20L9.07506891,18.4246028%20L13.5025683,18.4246028%20L13.5025683,22.8521018%20L18.4835045,22.8521018%20L18.4835045,18.4246028%20L22.9110035,18.4246028%20L22.9110035,13.4436493%20L18.4835045,13.4436493%20L18.4835045,9.01616762%20L13.5025683,9.01616762%20Z%20M14.3327243,9.84632369%20L17.6533484,9.84632369%20L17.6533484,14.2738228%20L22.0808474,14.2738228%20L22.0808474,17.5944468%20L17.6533484,17.5944468%20L17.6533484,22.0219458%20L14.3327243,22.0219458%20L14.3327243,17.5684975%20L9.90522515,17.5684975%20L9.90522515,14.2738228%20L14.3327243,14.2738228%20L14.3327243,9.84632369%20Z%20M16.1202819,2.85366147e-05%20L15.8995694,0.000400377352%20L15.89376,0.000400377352%20L15.887916,0.00050414686%20L15.6672363,0.00384811925%20L15.6613924,0.00395188876%20L15.655583,0.00412483794%20L15.4349711,0.0104414608%20L15.4291273,0.01061441%20L15.4233173,0.0108513504%20L15.2028071,0.0201406238%20L15.1969972,0.0204104245%20L15.1911534,0.0207148151%20L14.970812,0.032976739%20L14.9649682,0.0333139899%20L14.9591582,0.033718691%20L14.7389858,0.0489530924%20L14.7331759,0.0493577935%20L14.7273658,0.0498299448%20L14.5074298,0.0680368238%20L14.5016197,0.0685107045%20L14.4958099,0.069050306%20L14.2761442,0.0902298355%20L14.2703341,0.0908040268%20L14.2645241,0.0914128079%20L14.0451961,0.115564988%20L14.0393861,0.116206629%20L14.033576,0.116915721%20L13.8146198,0.144006654%20L13.8088097,0.144715745%20L13.8029997,0.145526877%20L13.5844825,0.175556562%20L13.5786725,0.176367693%20L13.5728624,0.177246275%20L13.3547844,0.210248438%20L13.3489743,0.21112702%20L13.3431643,0.212073052%20L13.1255928,0.248047865%20L13.119783,0.248993897%20L13.1139729,0.250041969%20L12.8969758,0.288955534%20L12.8911319,0.290003606%20L12.8853557,0.291117399%20L12.6689328,0.332969717%20L12.6631228,0.334118099%20L12.6573127,0.335301072%20L12.4415316,0.380125867%20L12.4356878,0.3813417%20L12.4299117,0.382624983%20L12.2148061,0.430388531%20L12.2089961,0.431671814%20L12.203186,0.433057137%20L11.9888236,0.48375961%20L11.9829799,0.485144933%20L11.9772035,0.486597706%20L11.8615438,0.515681705%20L11.7095377,0.569322931%20L11.570165,0.650291511%20L11.4482224,0.755682417%20L11.3479658,0.881915084%20L11.2728747,1.02453053%20L11.2255503,1.17859712%20L11.2076473,1.33877781%20L11.219774,1.49953269%20L11.2615251,1.65518695%20L11.3314478,1.80043728%20L11.4270766,1.93018289%20L11.5451685,2.03989753%20L11.6815348,2.12579793%20L11.8315143,2.18491144%20L11.989837,2.21514382%20L12.1509972,2.21551566%20L12.2829386,2.19301878%20L12.3925182,2.16548873%20L12.5947876,2.11765756%20L12.7983744,2.07239347%20L13.0055082,2.02942649%20L13.2082504,1.99020888%20L13.414033,1.95332211%20L13.6204573,1.91920512%20L13.8250574,1.88822957%20L14.0326303,1.85968621%20L14.2381763,1.83425058%20L14.4466274,1.81131458%20L14.6553487,1.79118225%20L14.8644415,1.77392106%20L15.073906,1.75939592%20L15.2811072,1.74787733%20L15.4908756,1.7390609%20L15.7007124,1.73304833%20L15.9081148,1.72990688%20L16.1180872,1.72953504%20L16.327923,1.73200095%20L16.5352596,1.73727053%20L16.7422919,1.74527618%20L16.9541201,1.75635565%20L17.1606127,1.76996865%20L17.369435,1.78658803%20L17.577818,1.80601109%20L17.7858309,1.82830528%20L17.991004,1.8530991%20L18.1973618,1.88089947%20L18.4040551,1.91163842%20L18.6117636,1.94551882%20L18.8169038,1.9818653%20L19.0186006,2.02050854%20L19.07089,2.03125024%20L19.231105,2.04891683%20L19.3918249,2.03655373%20L19.5474463,1.99456616%20L19.6925611,1.92444063%20L19.822138,1.82857542%20L19.9316841,1.71034857%20L20.017415,1.57381332%20L20.076292,1.42376625%20L20.1062884,1.26540966%20L20.1064613,1.10421566%20L20.0766345,0.94582534%20L20.0179615,0.795710813%20L19.9323983,0.659107941%20L19.8230218,0.540712121%20L19.6935451,0.444711836%20L19.5484978,0.374383609%20L19.4199015,0.337328036%20L19.3629165,0.325606578%20L19.3570051,0.324390746%20L19.3510937,0.323242363%20L19.134838,0.281829163%20L19.1289612,0.28071537%20L19.1230498,0.279667298%20L18.9061871,0.241226576%20L18.9003103,0.240180233%20L18.8943989,0.239234201%20L18.676962,0.203799855%20L18.6710852,0.202853823%20L18.6652083,0.201975241%20L18.4472647,0.16954727%20L18.4413862,0.168668688%20L18.4354765,0.167857556%20L18.217059,0.13843596%20L18.2112167,0.137624829%20L18.2053053,0.136915737%20L17.9864831,0.110466792%20L17.9806063,0.1097577%20L17.9747278,0.109148919%20L17.7555008,0.0856722787%20L17.7496586,0.0850306373%20L17.7437801,0.0844910358%20L17.5242159,0.0640209438%20L17.5183391,0.0634813424%20L17.5124951,0.0630091911%20L17.2926266,0.0455115767%20L17.2867826,0.0450394254%20L17.2809387,0.0446675847%20L17.0608003,0.0301426208%20L17.0549564,0.02977078%20L17.0491124,0.0294663895%20L16.8288045,0.0179139031%20L16.8229606,0.0176095126%20L16.8171166,0.017407162%20L16.5966064,0.00886105123%20L16.5907971,0.00862411086%20L16.5849531,0.00848575151%20L16.3643409,0.00291229124%20L16.3584987,0.00273934206%20L16.3526876,0.00267016239%20L16.1320079,6.9179672e-05%20L16.1261656,0%20L16.1202819,2.85366147e-05%20Z%20M24.8350977,2.7832267%20L24.6775168,2.81717473%20L24.5289898,2.87980135%20L24.3946843,2.96887693%20L24.2792269,3.08136134%20L24.1866386,3.21330272%20L24.1201621,3.36014055%20L24.0820925,3.51677457%20L24.0737495,3.67773214%20L24.095401,3.83743981%20L24.1463397,3.99039175%20L24.2247756,4.13118327%20L24.3279709,4.25501748%20L24.429883,4.34176239%20L24.4819701,4.3795274%20L24.4830769,4.38033853%20L24.5698231,4.44438369%20L24.570878,4.44516023%20L24.6522178,4.50623291%20L24.653636,4.50731384%20L24.7302801,4.56585316%20L24.7314562,4.5667646%20L24.8147883,4.63148547%20L24.8974805,4.69681426%20L24.8990024,4.69803009%20L24.9776735,4.76126464%20L24.9798354,4.76302111%20L25.0568514,4.82601923%20L25.1379888,4.89347615%20L25.1399483,4.89509669%20L25.2165596,4.95988501%20L25.2925967,5.02524769%20L25.2942224,5.02666587%20L25.3736044,5.09608197%20L25.4524104,5.16617377%20L25.4541053,5.167694%20L25.528655,5.23518465%20L25.6063473,5.30666126%20L25.6080768,5.30824893%20L25.6813104,5.37678679%20L25.7578196,5.44961465%20L25.8297025,5.51919972%20L25.8316274,5.52109126%20L25.9089478,5.59726327%20L25.9094839,5.59780287%20L25.9782935,5.66671222%20L25.9797463,5.66819786%20L26.053893,5.74376177%20L26.1246604,5.81706248%20L26.1255424,5.81797392%20L26.2004312,5.89694943%20L26.2020915,5.89870608%20L26.2709339,5.97258098%20L26.3399787,6.04790847%20L26.3406878,6.04868501%20L26.413617,6.12968732%20L26.483945,6.20916975%20L26.4855707,6.21099384%20L26.5540085,6.28976666%20L26.5549597,6.29084759%20L26.6216056,6.36887742%20L26.6901437,6.45052154%20L26.7548301,6.52888931%20L26.7564904,6.53094982%20L26.8237452,6.61394502%20L26.8907959,6.69812267%20L26.9540987,6.77906745%20L26.9552748,6.78061061%20L27.0223946,6.86799734%20L27.0238474,6.86988888%20L27.0870136,6.95369504%20L27.0883626,6.95548524%20L27.1522379,7.04179085%20L27.1600743,7.05239765%20L27.1682496,7.06273396%20L27.2630344,7.18288643%20L27.3556227,7.30297127%20L27.4451706,7.42170486%20L27.5327261,7.54050607%20L27.6211948,7.66322579%20L27.7073304,7.78553995%20L27.7907646,7.90673945%20L27.8723084,8.02783777%20L27.8734153,8.02952749%20L27.9566817,8.15616555%20L28.0376495,8.28222924%20L28.1173341,8.40927252%20L28.1943519,8.53496472%20L28.2727861,8.66609531%20L28.3471352,8.79347653%20L28.4215154,8.92406665%20L28.4945467,9.05546756%20L28.5649422,9.18531452%20L28.6353048,9.31830292%20L28.7035385,9.45078476%20L28.7490725,9.54144801%20L28.8345336,9.67815206%20L28.9438427,9.79658177%20L29.0732502,9.89268341%20L29.2182646,9.96307908%20L29.373784,10.0053705%20L29.5344711,10.0180378%20L29.6947189,10.0006753%20L29.848955,9.95389116%20L29.9918404,9.8792731%20L30.1183769,9.77942193%20L30.224208,9.65785076%20L30.305648,9.51874843%20L30.3598313,9.36694488%20L30.3848951,9.20771005%20L30.3799971,9.0466174%20L30.3452724,8.8892065%20L30.2946363,8.76530467%20L30.246975,8.67041904%20L30.244948,8.66639935%20L30.2428865,8.66234594%20L30.1702288,8.52138562%20L30.1681673,8.51736576%20L30.16604,8.51334607%20L30.0919278,8.37316264%20L30.0898005,8.36914295%20L30.0876387,8.36515699%20L30.0120408,8.22575061%20L30.009879,8.22176465%20L30.0076497,8.21777869%20L29.9305991,8.07914903%20L29.9284026,8.07519697%20L29.9261404,8.07121101%20L29.8476371,7.93342585%20L29.8453749,7.92947379%20L29.8430781,7.92552156%20L29.7630891,7.78854719%20L29.7607906,7.78459496%20L29.758461,7.78067662%20L29.6770193,7.64458049%20L29.6746879,7.64062825%20L29.6722908,7.63674382%20L29.5894291,7.50149202%20L29.5870321,7.49757369%20L29.5845987,7.49368907%20L29.5003205,7.35931569%20L29.4978543,7.35539735%20L29.495388,7.35154647%20L29.4096571,7.21808504%20L29.407158,7.21420061%20L29.4046243,7.21034972%20L29.3175081,7.07776653%20L29.3149744,7.07391582%20L29.3123732,7.07006493%20L29.2238042,6.9384615%20L29.2212376,6.93461062%20L29.2186019,6.93079363%20L29.1286147,6.80010216%20L29.1259807,6.796285%20L29.1233121,6.79250173%20L29.0319396,6.66275612%20L29.029271,6.65897286%20L29.0265349,6.6551896%20L28.9337425,6.5264573%20L28.931041,6.52264031%20L28.9282704,6.51889077%20L28.8340615,6.39113805%20L28.8312908,6.38738851%20L28.8284873,6.38363915%20L28.732926,6.25689974%20L28.7300879,6.25315038%20L28.7272169,6.24943456%20L28.630272,6.12374236%20L28.6273993,6.119993%20L28.6244609,6.11631108%20L28.5343717,6.00210375%20L28.4737392,5.92018931%20L28.4714753,5.91714921%20L28.4692131,5.91410911%20L28.4001009,5.8225%20L28.397837,5.8194938%20L28.3955402,5.81648742%20L28.3257517,5.72565538%20L28.323455,5.722649%20L28.3211582,5.71967635%20L28.2507281,5.62962119%20L28.2483985,5.62664872%20L28.2460343,5.62370979%20L28.1749625,5.5343978%20L28.1725983,5.53142532%20L28.1702324,5.52852029%20L28.0984861,5.43998519%20L28.0961219,5.43704643%20L28.0937231,5.43414141%20L28.0213007,5.34638319%20L28.0189019,5.34347816%20L28.0165048,5.34060686%20L27.9434407,5.2535918%20L27.9410419,5.25072067%20L27.9386102,5.24784937%20L27.8649027,5.1616112%20L27.862471,5.1587738%20L27.8600048,5.15593639%20L27.785692,5.07047511%20L27.7832257,5.06763771%20L27.7807595,5.06486775%20L27.7058033,4.98014981%20L27.7033042,4.97734613%20L27.7008051,4.97457618%20L27.6252401,4.89063512%20L27.622741,4.88786516%20L27.6202073,4.88509521%20L27.5440024,4.80193104%20L27.5415016,4.79919498%20L27.5389679,4.79645876%20L27.4621542,4.71403775%20L27.4596223,4.71133542%20L27.457054,4.70863309%20L27.3796333,4.62698879%20L27.377065,4.62428664%20L27.3744984,4.62161803%20L27.2964689,4.5407508%20L27.2939006,4.53808219%20L27.2912995,4.53544749%20L27.2126958,4.45532324%20L27.2100946,4.45268854%20L27.2074935,4.45008755%20L27.1282828,4.37070665%20L27.125647,4.36810566%20L27.1230459,4.36553841%20L27.0432263,4.28693439%20L27.0406252,4.28436713%20L27.0379566,4.28179987%20L26.9575957,4.20397274%20L26.9549617,4.20140548%20L26.9522931,4.19887212%20L26.8713235,4.12182188%20L26.8686895,4.11928852%20L26.8660209,4.11678871%20L26.7844771,4.04048181%20L26.7818085,4.0380159%20L26.779107,4.03551626%20L26.6970236,3.95998607%20L26.694355,3.95752016%20L26.6916535,3.95508815%20L26.6089959,3.88030112%20L26.6062927,3.87786893%20L26.6035913,3.87543692%20L26.5203595,3.80142678%20L26.5176563,3.79902849%20L26.5149202,3.79663021%20L26.4311817,3.72339695%20L26.4284456,3.72099867%20L26.4257096,3.71866783%20L26.3414314,3.64617791%20L26.3386954,3.64381335%20L26.3359247,3.64148251%20L26.2511053,3.56976948%20L26.2483346,3.56743865%20L26.2455657,3.56514171%20L26.1602395,3.49417167%20L26.1574689,3.49187473%20L26.1546653,3.48961151%20L26.0687995,3.41941853%20L26.0660289,3.41715532%20L26.0632254,3.41489211%20L25.9768182,3.34547601%20L25.9740493,3.3432128%20L25.9712458,3.34101721%20L25.8843319,3.27234411%20L25.8815284,3.27011479%20L25.8787249,3.26795293%20L25.7913043,3.20002299%20L25.7885008,3.19786112%20L25.7856627,3.19569926%20L25.6977353,3.12854638%20L25.6949318,3.12638451%20L25.6920937,3.12425637%20L25.6036614,3.05788038%20L25.6008233,3.05575241%20L25.5979852,3.053658%20L25.5090789,2.98802517%20L25.5062408,2.98593093%20L25.5033699,2.98387041%20L25.4456083,2.94191657%20L25.3068771,2.85983333%20L25.1553442,2.80490848%20L24.9962448,2.77906745%20L24.8350977,2.7832267%20Z%20M6.37652141,3.20924931%20L6.21961724,3.24616981%20L6.07230657,3.31159994%20L5.96100426,3.38591413%20L5.95374178,3.39162283%20L5.95097182,3.3937508%20L5.94826949,3.39594656%20L5.86209895,3.46478846%20L5.85936289,3.46698405%20L5.85666056,3.46917964%20L5.77099658,3.53876471%20L5.76829425,3.5409603%20L5.76559192,3.54318979%20L5.68046858,3.61351801%20L5.67776625,3.61574733%20L5.67506392,3.61801054%20L5.59048088,3.68904803%20L5.58777854,3.69131125%20L5.58507621,3.69360836%20L5.50103381,3.76535512%20L5.4983652,3.76765205%20L5.4956966,3.76994916%20L5.41219466,3.84243908%20L5.40949233,3.84476992%20L5.40685745,3.84710076%20L5.32389597,3.92030011%20L5.32122737,3.92266467%20L5.31859266,3.92502906%20L5.23617148,3.99897158%20L5.23353677,4.00133614%20L5.23090206,4.0037346%20L5.14905507,4.07838639%20L5.14642037,4.08078467%20L5.14378566,4.08321686%20L5.06251303,4.1586118%20L5.05987815,4.16104399%20L5.05727717,4.163476%20L4.97657891,4.23958038%20L4.97397793,4.24204629%20L4.97137694,4.24454593%20L4.8912527,4.32135975%20L4.88865172,4.32385938%20L4.88608464,4.32635902%20L4.80653476,4.403916%20L4.80393377,4.40641564%20L4.80140024,4.40898289%20L4.72242456,4.48724914%20L4.71985747,4.4897825%20L4.71732394,4.49234976%20L4.63895634,4.57132545%20L4.63638926,4.57392643%20L4.63385572,4.57649351%20L4.55609622,4.65621236%20L4.55356268,4.65881335%20L4.55106305,4.66144805%20L4.47387773,4.74187617%20L4.4713781,4.74451105%20L4.46887846,4.74714576%20L4.39233496,4.82831703%20L4.38980143,4.83098564%20L4.38733552,4.83365407%20L4.31140011,4.91553478%20L4.30890047,4.91820339%20L4.30643456,4.92090572%20L4.23114096,5.0034957%20L4.22867506,5.00623176%20L4.22620915,5.00896781%20L4.15155719,5.09226723%20L4.14909128,5.09500328%20L4.14665927,5.09777324%20L4.0726154,5.18181564%20L4.07018322,5.1845856%20L4.0677512,5.18735555%20L3.99434915,5.2721074%20L3.99195087,5.27491107%20L3.98955241,5.27771458%20L3.91679217,5.36320959%20L3.91439388,5.36601327%20L3.91199559,5.36885084%20L3.8399109,5.45505511%20L3.83751261,5.45789252%20L3.83514805,5.46076382%20L3.76370516,5.54767753%20L3.7613406,5.55054883%20L3.75900994,5.55345368%20L3.68820887,5.64107683%20L3.68587803,5.64398186%20L3.68354737,5.64688688%20L3.61342184,5.73525302%20L3.6111249,5.73819177%20L3.60882779,5.7411307%20L3.53937797,5.83020627%20L3.53708103,5.83314502%20L3.53478392,5.8361175%20L3.46600964,5.92590251%20L3.46374643,5.92887516%20L3.46148322,5.93188136%20L3.39338448,6.02237581%20L3.39115516,6.02538201%20L3.38892567,6.02838839%20L3.32150247,6.11962583%20L3.31927316,6.12266593%20L3.3170774,6.1256723%20L3.25036363,6.2176529%20L3.24816804,6.220693%20L3.24597228,6.2237331%20L3.17996796,6.31642314%20L3.17777219,6.31949697%20L3.17561033,6.32257097%20L3.11031527,6.41597027%20L3.1081534,6.41904409%20L3.10602544,6.42215182%20L3.04140592,6.51626056%20L3.03927778,6.51936811%20L3.03718353,6.52250956%20L2.97330718,6.61732774%20L2.97117904,6.62046918%20L2.96911852,6.62361063%20L2.9059516,6.7191718%20L2.90385718,6.72231325%20L2.90179667,6.72548842%20L2.83937291,6.82175903%20L2.83731239,6.8249342%20L2.8352856,6.82810955%20L2.78907583,6.90076844%20L2.73817066,6.97008318%20L2.73594117,6.97312329%20L2.73371168,6.97619728%20L2.66662643,7.06925882%20L2.66439694,7.07233264%20L2.66223507,7.07540647%20L2.59606178,7.16887339%20L2.59386619,7.17198112%20L2.59173805,7.17505494%20L2.52647671,7.26896099%20L2.52434875,7.27206871%20L2.52222061,7.27517643%20L2.45790513,7.3694877%20L2.45577699,7.37259542%20L2.45368275,7.37570314%20L2.39031313,7.4704198%20L2.38821872,7.47356125%20L2.3861582,7.4767027%20L2.32370054,7.57179102%20L2.32164003,7.57493247%20L2.31961324,7.57810765%20L2.25806771,7.67360136%20L2.25604092,7.67674281%20L2.25404803,7.67991798%20L2.19344819,7.7757832%20L2.19142157,7.77895837%20L2.18946223,7.78213372%20L2.12977453,7.87840415%20L2.12781536,7.8815795%20L2.12585619,7.88478839%20L2.06708045,7.98143049%20L2.06515501,7.98460584%20L2.06322974,7.98781474%20L2.00539986,8.08482851%20L2.00347441,8.08803758%20L2.0015827,8.09124648%20L1.94466495,8.18863174%20L1.94277323,8.19184081%20L1.94091541,8.19504988%20L1.88490962,8.29280664%20L1.8830518,8.29601571%20L1.88122771,8.29925851%20L1.82613388,8.39735304%20L1.82430979,8.40056211%20L1.82251959,8.40383863%20L1.768304,8.5022711%20L1.7665138,8.5055139%20L1.76475716,8.50875669%20L1.7114876,8.60756066%20L1.70973095,8.61080346%20L1.70800838,8.61404625%20L1.65561706,8.71318799%20L1.65389448,8.71643078%20L1.65217191,8.71970731%20L1.60069238,8.81918698%20L1.59900266,8.82242978%20L1.59734754,8.8257063%20L1.54674624,8.92548985%20L1.54509112,8.92876637%20L1.54347058,8.93207679%20L1.49378142,9.03216439%20L1.49216089,9.03544091%20L1.49054035,9.03875133%20L1.44176332,9.13917669%20L1.44017565,9.14245321%20L1.43858798,9.14576363%20L1.39068918,9.24649304%20L1.38913437,9.24980329%20L1.38761414,9.25311371%20L1.34059359,9.35414716%20L1.33907336,9.35745741%20L1.33755314,9.36076783%20L1.32539274,9.38752082%20L1.27259585,9.53979721%20L1.24901803,9.69926863%20L1.25540228,9.86029366%20L1.29157979,10.0173666%20L1.35630066,10.1650152%20L1.44726778,10.2980713%20L1.56133987,10.4119408%20L1.69459859,10.5026378%20L1.84234856,10.5670546%20L1.99948915,10.6029281%20L2.16054807,10.6090083%20L2.31995187,10.5850925%20L2.47216064,10.5319918%20L2.61187106,10.4515976%20L2.73421912,10.3466458%20L2.83494852,10.2208522%20L2.89963549,10.1036724%20L2.91010705,10.0806688%20L2.95395243,9.98639125%20L2.99945294,9.89066111%20L3.00056673,9.88833045%20L3.04295952,9.8010788%20L3.04339881,9.80016736%20L3.09126388,9.70372795%20L3.13919657,9.60921382%20L3.13994025,9.60776105%20L3.18723113,9.51648989%20L3.18807512,9.51483476%20L3.23519703,9.42572546%20L3.28562918,9.33229226%20L3.28684501,9.32999533%20L3.33602744,9.24075095%20L3.38814861,9.14799347%20L3.38902719,9.14643865%20L3.44020251,9.05722801%20L3.44138548,9.05516749%20L3.492392,8.96798346%20L3.5447835,8.88005645%20L3.54603392,8.87799593%20L3.60149924,8.78679222%20L3.65780907,8.6959939%20L3.71506476,8.60546573%20L3.7159762,8.60401295%20L3.77316427,8.51530887%20L3.77346866,8.51483672%20L3.82765053,8.43231437%20L3.82917075,8.43001726%20L3.88899353,8.34063764%20L3.94955946,8.25179866%20L4.01107143,8.16329728%20L4.01208492,8.16184451%20L4.07167127,8.07770075%20L4.13490581,7.98997626%20L4.20016715,7.90113711%20L4.2172931,7.87782961%20L4.23279782,7.85344101%20L4.29285701,7.75906212%20L4.35176783,7.66823008%20L4.35284876,7.66657496%20L4.40959771,7.58074218%20L4.46732625,7.49501075%20L4.46806993,7.49392982%20L4.53015609,7.40346927%20L4.59166788,7.31550853%20L4.59295117,7.31368443%20L4.65351711,7.22876362%20L4.65463263,7.22717595%20L4.71462437,7.14451834%20L4.77826431,7.05841525%20L4.84203932,6.97359596%20L4.84355955,6.97160289%20L4.90507134,6.89130985%20L4.97026505,6.80774029%20L5.03360095,6.72788636%20L5.03461443,6.72663594%20L5.10142954,6.64387699%20L5.16844735,6.56236795%20L5.23806614,6.47913615%20L5.23853829,6.47859655%20L5.30653568,6.39877653%20L5.37027696,6.32517178%20L5.37047931,6.32496943%20L5.44384764,6.24167001%20L5.44431979,6.24113041%20L5.51245226,6.16512737%20L5.51410738,6.16330328%20L5.58348958,6.08726652%20L5.58450306,6.08615272%20L5.65341241,6.01187226%20L5.72576743,5.93519369%20L5.72701785,5.93384295%20L5.79410328,5.86392029%20L5.79474493,5.86327865%20L5.87024122,5.78585674%20L5.87186175,5.78420162%20L5.9424264,5.7130965%20L6.01717971,5.63898518%20L6.01893618,5.63726261%20L6.09054786,5.56750857%20L6.16644972,5.49474833%20L6.16830754,5.49295814%20L6.24106778,5.42438638%20L6.31457119,5.35618629%20L6.31612427,5.35476811%20L6.39594447,5.28197415%20L6.39641662,5.28153486%20L6.47225086,5.21353746%20L6.47353414,5.21238908%20L6.54582153,5.14858035%20L6.54690247,5.14763431%20L6.62398643,5.08071785%20L6.62439114,5.0803806%20L6.70265738,5.01349787%20L6.7045152,5.01194479%20L6.78517991,4.94421754%20L6.78724043,4.94249497%20L6.86398663,4.87912535%20L6.9457321,4.81271563%20L6.94718487,4.81153266%20L7.02244491,4.75140567%20L7.02406545,4.75012238%20L7.02970653,4.74569731%20L7.1465823,4.63469904%20L7.24085984,4.50397367%20L7.3092289,4.35801408%20L7.34932475,4.20188697%20L7.35972868,4.04103075%20L7.34010292,3.88105276%20L7.29115709,3.72745901%20L7.21454597,3.58565417%20L7.11293832,3.46053616%20L6.98988083,3.35642889%20L6.84962994,3.27698036%20L6.69708341,3.2249268%20L6.53754453,3.20209198%20L6.37652141,3.20924931%20Z%20M30.972969,14.2966428%20L30.8167405,14.3363671%20L30.6706123,14.4043645%20L30.53965,14.4983043%20L30.4283814,14.6149436%20L30.340691,14.7501953%20L30.2796174,14.899364%20L30.2472915,15.0572476%20L30.2431373,15.1910468%20L30.2497232,15.3326152%20L30.2551278,15.4850604%20L30.2588099,15.634398%20L30.2609043,15.783668%20L30.2613367,15.9366537%20L30.2624436,15.9482737%20L30.2618037,15.963069%20L30.2655203,16.0725472%20L30.2682564,16.1835116%20L30.2682564,16.1851668%20L30.2699167,16.2907603%20L30.2699167,16.2921453%20L30.2706604,16.3938881%20L30.2704874,16.5044134%20L30.2704874,16.5055957%20L30.2693806,16.6111217%20L30.2693806,16.6120337%20L30.2674539,16.713844%20L30.2645155,16.8204847%20L30.2606985,16.9265174%20L30.2559355,17.0324488%20L30.250261,17.1384815%20L30.2436734,17.2442441%20L30.2361415,17.3497363%20L30.2359685,17.3518306%20L30.2277258,17.4550935%20L30.2275528,17.4567486%20L30.218703,17.5567349%20L30.2085353,17.6620581%20L30.1974562,17.7670776%20L30.1854968,17.8716916%20L30.1733367,17.9707996%20L30.1730946,17.9726574%20L30.1589076,18.0805479%20L30.1587346,18.0817638%20L30.1447499,18.1812435%20L30.129245,18.2856546%20L30.112929,18.389154%20L30.1126004,18.3913496%20L30.0961841,18.4899847%20L30.0780452,18.593788%20L30.0591626,18.6967468%20L30.0587475,18.6989087%20L30.0399998,18.796429%20L30.0192597,18.8997255%20L29.9976411,19.0028195%20L29.9973298,19.0043397%20L29.9760155,19.1019277%20L29.9527089,19.2046839%20L29.9522419,19.2067781%20L29.9294749,19.3033528%20L29.9044111,19.4058387%20L29.9038404,19.4082032%20L29.8795531,19.5042035%20L29.8528342,19.6061826%20L29.8521943,19.6086486%20L29.8270285,19.7016762%20L29.8266134,19.7030615%20L29.7980041,19.8055813%20L29.797295,19.8080472%20L29.7687861,19.9069525%20L29.7686131,19.9073572%20L29.7398327,20.0042359%20L29.7391928,20.0063978%20L29.7101096,20.1014185%20L29.6800459,20.1970471%20L29.6796135,20.1983978%20L29.6471181,20.2988569%20L29.615771,20.3932697%20L29.6150619,20.3953302%20L29.5809788,20.4952826%20L29.5802006,20.497512%20L29.5469269,20.5924651%20L29.5460794,20.5948636%20L29.5115916,20.6907625%20L29.5111593,20.6919783%20L29.4778856,20.7823713%20L29.4772802,20.7839589%20L29.4404265,20.8817155%20L29.4043839,20.9751489%20L29.403744,20.976804%20L29.3660134,21.0722976%20L29.2869704,21.2655819%20L29.2064072,21.4542384%20L29.1223297,21.6428611%20L29.0345044,21.8320919%20L28.9453283,22.0167286%20L28.8532122,22.2003181%20L28.7578203,22.3835362%20L28.7074886,22.476699%20L28.6444573,22.6250571%20L28.6100352,22.7825016%20L28.6054417,22.9436281%20L28.6308099,23.1027953%20L28.6852958,23.2544975%20L28.7670074,23.3934648%20L28.8730408,23.5148332%20L28.9997797,23.6144141%20L29.1428,23.688762%20L29.2971381,23.7352421%20L29.4574188,23.7523006%20L29.618073,23.7393294%20L29.7735578,23.6967339%20L29.9184027,23.6260342%20L30.0476078,23.5296962%20L30.1567146,23.41103%20L30.2292391,23.2985452%20L30.2823397,23.2002818%20L30.285413,23.1945393%20L30.2884205,23.1887971%20L30.3898258,22.9940603%20L30.3928646,22.9882841%20L30.3957701,22.9824403%20L30.494237,22.7861833%20L30.4972083,22.780306%20L30.5000464,22.7743946%20L30.5955402,22.5766516%20L30.5984112,22.5707064%20L30.6012147,22.5646937%20L30.6936681,22.3654981%20L30.6964717,22.3594516%20L30.6991748,22.3533714%20L30.7885878,22.1527234%20L30.7912893,22.1466093%20L30.7939251,22.1404613%20L30.8802302,21.9383947%20L30.8828988,21.9321793%20L30.8854325,21.925964%20L30.9686297,21.7225123%20L30.9705217,21.7178167%20L30.9724138,21.7130878%20L31.012813,21.6108383%20L31.0140582,21.6076969%20L31.0152689,21.6045215%20L31.0548915,21.5019343%20L31.0561022,21.4987591%20L31.0573128,21.49555%20L31.0961243,21.3926588%20L31.0973004,21.3894499%20L31.0984765,21.3862408%20L31.1365114,21.2830118%20L31.1376875,21.279769%20L31.138829,21.2765601%20L31.17602,21.1729933%20L31.177196,21.1697505%20L31.1783029,21.1665077%20L31.2146827,21.0626031%20L31.2158242,21.0593603%20L31.2169311,21.0560836%20L31.2524998,20.951875%20L31.2536067,20.9485983%20L31.254679,20.9453217%20L31.2894366,20.8407753%20L31.2905088,20.8374987%20L31.2915811,20.8341884%20L31.3254965,20.729338%20L31.3265688,20.7260275%20L31.3276237,20.7227171%20L31.3606934,20.6175289%20L31.3617483,20.6142187%20L31.3627687,20.6108747%20L31.3950272,20.505416%20L31.3960476,20.502072%20L31.397068,20.498694%20L31.4284825,20.3929316%20L31.4294683,20.3895537%20L31.4304541,20.3862096%20L31.4610246,20.2801094%20L31.4620104,20.2767313%20L31.4629617,20.2733535%20L31.4926536,20.166983%20L31.4936048,20.1635714%20L31.494556,20.1601596%20L31.5234022,20.0534851%20L31.5243188,20.0500735%20L31.5252355,20.0466617%20L31.5532377,19.9396831%20L31.5541197,19.9362715%20L31.5550018,19.9328261%20L31.58216,19.8255773%20L31.5830074,19.8221318%20L31.5838549,19.8186863%20L31.6101345,19.7111336%20L31.610982,19.7076881%20L31.6117948,19.7042089%20L31.6371976,19.5963858%20L31.638045,19.5929065%20L31.6388233,19.5894273%20L31.6633475,19.4813341%20L31.6641604,19.4778211%20L31.664904,19.474308%20L31.6885497,19.3659446%20L31.6893279,19.3624315%20L31.6900716,19.3589186%20L31.7128041,19.2502849%20L31.7135477,19.246738%20L31.7142568,19.2432249%20L31.736147,19.1342872%20L31.7368561,19.1307742%20L31.7375306,19.1272274%20L31.7585076,19.0180195%20L31.7591821,19.0144727%20L31.759822,19.0109258%20L31.7798876,18.9014815%20L31.7805621,18.8979009%20L31.7811674,18.8943202%20L31.8003527,18.7846394%20L31.800958,18.7810589%20L31.8015633,18.7774444%20L31.8198371,18.6674934%20L31.8204078,18.6639128%20L31.8209786,18.6602983%20L31.8383409,18.5501108%20L31.8389117,18.5464966%20L31.8394478,18.5428821%20L31.8558642,18.4324243%20L31.8564003,18.4287763%20L31.8569018,18.4251618%20L31.8724067,18.3144676%20L31.8729083,18.3108194%20L31.8734098,18.3071714%20L31.8879687,18.1962406%20L31.8884357,18.1925926%20L31.8889026,18.1889444%20L31.9025501,18.0777771%20L31.9029824,18.0740952%20L31.9034148,18.0704472%20L31.9161162,17.9590098%20L31.9165486,17.9553616%20L31.9169118,17.9516797%20L31.9287,17.8400396%20L31.9290805,17.8363577%20L31.9294437,17.8326758%20L31.9402876,17.7207993%20L31.9406162,17.7170835%20L31.9409621,17.7134016%20L31.9508599,17.6012886%20L31.9511713,17.5976067%20L31.9514653,17.5938911%20L31.9604171,17.4815755%20L31.9606938,17.4778597%20L31.9609706,17.474144%20L31.9689418,17.361592%20L31.9692185,17.3578762%20L31.9694606,17.3541605%20L31.9764858,17.2414058%20L31.976728,17.2376562%20L31.9769355,17.2339406%20L31.9829818,17.1209493%20L31.9831893,17.1172336%20L31.9833623,17.1134841%20L31.9884297,17.000324%20L31.9886026,16.9965745%20L31.9887756,16.992825%20L31.992897,16.8794284%20L31.9930699,16.875679%20L31.9932429,16.8719295%20L31.9963508,16.7583302%20L31.9965237,16.7545808%20L31.9965237,16.7508313%20L31.9986856,16.6370294%20L31.9986856,16.6332799%20L31.9986856,16.6294966%20L31.9998271,16.5155258%20L31.9998271,16.5117426%20L31.9998271,16.5079931%20L32,16.3938196%20L32,16.3900363%20L32,16.3862531%20L31.9991525,16.2719107%20L31.9991525,16.2681274%20L31.9991525,16.2643441%20L31.9972951,16.1497991%20L31.9972951,16.1460158%20L31.9972951,16.1422326%20L31.9944241,16.0274849%20L31.9944241,16.0237016%20L31.9942512,16.0199183%20L31.9908389,15.9179053%20L31.9904065,15.7726888%20L31.9904065,15.7679597%20L31.9904065,15.7632644%20L31.9882101,15.6045363%20L31.9882101,15.5998748%20L31.9880371,15.5951795%20L31.9840852,15.4365188%20L31.9839123,15.4318235%20L31.9837393,15.427162%20L31.9780994,15.268569%20L31.9779265,15.2639075%20L31.977719,15.2592459%20L31.9708269,15.1108542%20L31.9483643,14.9512478%20L31.8967165,14.7985661%20L31.8175715,14.6581462%20L31.713802,14.5348186%20L31.5889206,14.4329407%20L31.4472856,14.355958%20L31.293826,14.3066405%20L31.1338826,14.2866095%20L30.972969,14.2966428%20Z%20M0.75999679,14.9570925%20L0.602518433,14.9914459%20L0.454160551,15.0544102%20L0.320023589,15.1438236%20L0.204836668,15.2565783%20L0.112585921,15.3887223%20L0.0464463497,15.5357291%20L0.00874878992,15.6924305%20L1.96620454e-15,15.8259932%20L0.00135125194,15.9365524%20L0.00141870212,15.9427339%20L0.00158819232,15.9489155%20L0.00739819519,16.1686826%20L0.00756768538,16.1748304%20L0.00780410691,16.1809782%20L0.0167556452,16.4007115%20L0.0169925855,16.4068255%20L0.0173298364,16.4129395%20L0.0293890639,16.6325715%20L0.0297263148,16.6386517%20L0.0301310159,16.644732%20L0.0452977942,16.8642288%20L0.0457024953,16.8702752%20L0.0462092364,16.8763555%20L0.0644498405,17.0956496%20L0.0649565816,17.1016961%20L0.0655307729,17.1077088%20L0.0868455487,17.3268003%20L0.0874543298,17.3327792%20L0.0880959712,17.338758%20L0.112484573,17.5576131%20L0.113126214,17.5635582%20L0.113869896,17.5695034%20L0.141298425,17.7880544%20L0.142042106,17.7939658%20L0.142853238,17.7999109%20L0.173288143,18.0180903%20L0.174132135,18.023968%20L0.175010717,18.0298792%20L0.208451997,18.2476533%20L0.20936344,18.2535308%20L0.210342332,18.2593746%20L0.246789988,18.4767434%20L0.24776888,18.4825872%20L0.248815223,18.4883972%20L0.288269255,18.7052931%20L0.289317327,18.711103%20L0.290431119,18.7169131%20L0.332823903,18.9332685%20L0.333972286,18.9390447%20L0.335188119,18.944821%20L0.380519655,19.1606358%20L0.381735488,19.1663782%20L0.383018771,19.1721207%20L0.43128906,19.3873276%20L0.432572343,19.3930702%20L0.433957666,19.3987787%20L0.485166707,19.6133438%20L0.486517441,19.6190525%20L0.487935624,19.6247275%20L0.542049866,19.8386168%20L0.543502639,19.8442581%20L0.545022862,19.8499329%20L0.602008233,20.0630793%20L0.603528457,20.0687204%20L0.60511613,20.0743614%20L0.665006529,20.2867309%20L0.666594202,20.292372%20L0.668249326,20.2979456%20L0.731011027,20.5095381%20L0.73266615,20.5151117%20L0.734388724,20.5206852%20L0.799987829,20.7314332%20L0.801710403,20.736973%20L0.803534498,20.7425129%20L0.871971007,20.9523488%20L0.873761377,20.9578886%20L0.875652922,20.9633946%20L0.946926836,21.1723186%20L0.948784829,21.1778246%20L0.950743997,21.1832967%20L1.02482159,21.3912411%20L1.02674703,21.3967134%20L1.02877382,21.4021518%20L1.1056551,21.6090827%20L1.10768189,21.6145213%20L1.10977613,21.6199597%20L1.18942736,21.8258097%20L1.1915216,21.8312482%20L1.19368346,21.8366529%20L1.27607074,22.0413882%20L1.27826651,22.0467929%20L1.28049582,22.0521638%20L1.36565306,22.2557843%20L1.36791627,22.2611553%20L1.37024711,22.2665262%20L1.4581065,22.4689307%20L1.46043734,22.4742677%20L1.46283562,22.4796049%20L1.55343125,22.6807934%20L1.55582971,22.6861305%20L1.55829544,22.691434%20L1.6515934,22.8913388%20L1.6540932,22.8966421%20L1.65662656,22.9019455%20L1.75262685,23.100533%20L1.75519411,23.1058026%20L1.75782881,23.1110721%20L1.78880436,23.1730231%20L1.87402904,23.3098624%20L1.98316949,23.4284609%20L2.11244226,23.5247652%20L2.25732092,23.5953973%20L2.41280638,23.6379253%20L2.57345991,23.6508628%20L2.73374195,23.6337367%20L2.88804496,23.587189%20L3.03103208,23.5128073%20L3.15773759,23.4131588%20L3.26377031,23.2917566%20L3.3453807,23.1527555%20L3.39983271,23.0010535%20L3.42513328,22.8418524%20L3.42047178,22.6807258%20L3.38601701,22.5232814%20L3.33558469,22.3993119%20L3.30771704,22.3436102%20L3.21617556,22.154278%20L3.12855241,21.9664998%20L3.0420441,21.7743979%20L2.9593865,21.5840862%20L2.87841792,21.3905318%20L2.80059079,21.1970787%20L2.72479045,21.0011935%20L2.65216528,20.8056798%20L2.58217482,20.6091528%20L2.51458282,20.4110719%20L2.44969316,20.2121129%20L2.3872355,20.0114647%20L2.32815571,19.812303%20L2.27160946,19.6118237%20L2.21715762,19.4083044%20L2.16611721,19.2065417%20L2.11798199,19.0047789%20L2.07190729,18.7995707%20L2.02873745,18.5939571%20L1.98891192,18.3907079%20L1.95138333,18.1842837%20L1.91702992,17.9795484%20L1.88531138,17.7729213%20L1.85673413,17.5680847%20L1.8307243,17.3607483%20L1.80765305,17.1533106%20L1.78745311,16.9458054%20L1.77022581,16.7385028%20L1.75590337,16.5309976%20L1.74451986,16.3235937%20L1.73610882,16.1162574%20L1.73063671,15.9091913%20L1.72935342,15.8049826%20L1.71239627,15.6447006%20L1.66598381,15.4903637%20L1.59170334,15.3472753%20L1.49219011,15.2205022%20L1.37085537,15.1143682%20L1.23195556,15.0326227%20L1.08028726,14.9780694%20L0.921120051,14.9525999%20L0.75999679,14.9570925%20Z%20M25.3452978,26.7863436%20L25.1890347,26.8257637%20L25.0427716,26.8935247%20L24.9326514,26.9696291%20L24.9179231,26.9815869%20L24.7547369,27.1105219%20L24.5894545,27.2375315%20L24.4212009,27.3632237%20L24.251325,27.4866525%20L24.0814509,27.6066023%20L23.9094477,27.7245929%20L23.7364986,27.8399149%20L23.5603394,27.9539193%20L23.3827967,28.0654918%20L23.2037667,28.1745985%20L23.0252105,28.2801245%20L22.8434461,28.3842657%20L22.6614776,28.4852989%20L22.4772123,28.5843056%20L22.2926756,28.6802722%20L22.1041886,28.7749888%20L21.9184378,28.8651792%20L21.7297139,28.9536467%20L21.5390634,29.0397835%20L21.3492257,29.1224411%20L21.1567177,29.2030718%20L20.9621499,29.2814056%20L20.7708594,29.3552807%20L20.5738253,29.4282436%20L20.3789531,29.4972881%20L20.1833389,29.5634615%20L19.9849195,29.6274391%20L19.7873113,29.6880389%20L19.5877781,29.7461391%20L19.3877035,29.801199%20L19.1864478,29.8534553%20L18.9874888,29.9020298%20L18.8357535,29.936721%20L18.6826658,29.9871194%20L18.5415704,30.0650479%20L18.4173981,30.1678378%20L18.3144397,30.2918747%20L18.2363082,30.432835%20L18.1857067,30.5858883%20L18.1643596,30.7456299%20L18.1730399,30.9065875%20L18.2114468,31.0631539%20L18.2782622,31.2098229%20L18.3711221,31.3415953%20L18.4868147,31.4538096%20L18.6213242,31.5426148%20L18.7699515,31.6049374%20L18.9275982,31.6385814%20L19.0887591,31.6423646%20L19.2211396,31.6227052%20L19.3785165,31.5867303%20L19.3847323,31.5853122%20L19.3909135,31.5838265%20L19.6042619,31.5317391%20L19.6104448,31.5302189%20L19.6165585,31.5286312%20L19.8291632,31.4734023%20L19.8352441,31.4718492%20L19.841325,31.4701595%20L20.0531203,31.4118568%20L20.0591666,31.410167%20L20.0651783,31.4084445%20L20.2761625,31.347034%20L20.2821414,31.3452775%20L20.2881219,31.3434535%20L20.4982275,31.2790366%20L20.5041389,31.2772125%20L20.5100503,31.2752871%20L20.7192773,31.2078302%20L20.7251559,31.2059386%20L20.7309998,31.2039456%20L20.9392479,31.1334823%20L20.9450919,31.1315231%20L20.9508684,31.1294626%20L21.1581705,31.0560605%20L21.163947,31.054%20L21.169656,31.0518719%20L21.3759446,30.9754973%20L21.3816537,30.9734029%20L21.387361,30.9712073%20L21.5926032,30.8918939%20L21.5982448,30.8896983%20L21.6038864,30.8874351%20L21.8080478,30.8052505%20L21.8136202,30.803021%20L21.8191943,30.8006902%20L22.0222401,30.7156344%20L22.0278143,30.7133036%20L22.033321,30.7109053%20L22.2352184,30.623012%20L22.2406905,30.6206137%20L22.2461626,30.6181478%20L22.4468788,30.5274509%20L22.4523163,30.5249849%20L22.457721,30.5224514%20L22.6572213,30.4289508%20L22.6625914,30.4264511%20L22.6679632,30.4238501%20L22.8661785,30.3275797%20L22.8715157,30.3250125%20L22.8768183,30.3223439%20L23.0737521,30.2233372%20L23.0790201,30.2207025%20L23.0842899,30.2179664%20L23.2798712,30.1162912%20L23.2851081,30.1135551%20L23.2903087,30.1107514%20L23.4845393,30.0064076%20L23.489707,30.0036039%20L23.4948764,30.0007665%20L23.6876871,29.8937204%20L23.692822,29.890883%20L23.6979222,29.8879441%20L23.8893147,29.7782971%20L23.8943821,29.7753921%20L23.8994478,29.7724196%20L24.0893547,29.6601714%20L24.0943875,29.6571651%20L24.0993874,29.654125%20L24.2877741,29.5393097%20L24.2927723,29.5362696%20L24.2977048,29.5331619%20L24.4845712,29.4157794%20L24.489502,29.4126718%20L24.4943999,29.4094965%20L24.6796786,29.2896143%20L24.6845437,29.2864391%20L24.689407,29.2831963%20L24.8730652,29.1608146%20L24.8778957,29.1575718%20L24.8826916,29.1542951%20L25.0646929,29.0294137%20L25.0694905,29.0261032%20L25.0742535,29.0227591%20L25.2545323,28.8954457%20L25.2592953,28.8921015%20L25.2640238,28.8886898%20L25.4425817,28.7589441%20L25.4472755,28.7555324%20L25.4519382,28.7520532%20L25.6287719,28.6199093%20L25.6334328,28.6164299%20L25.6380264,28.612883%20L25.8130371,28.4784083%20L25.8176652,28.4748616%20L25.8222242,28.4712472%20L25.9954103,28.3344418%20L25.999971,28.3308273%20L26.004497,28.3271454%20L26.0230424,28.3121137%20L26.1381279,28.1992576%20L26.230277,28.0670122%20L26.2963142,27.9199717%20L26.333877,27.7632365%20L26.3417479,27.6022452%20L26.3195551,27.4426049%20L26.2681425,27.2898218%20L26.189269,27.1492669%20L26.0856673,27.0257704%20L25.9609553,26.923656%20L25.8194552,26.846437%20L25.6660977,26.7968492%20L25.5061872,26.7765816%20L25.3452978,26.7863436%20Z%20M6.17479245,26.840863%20L6.02194186,26.8920046%20L5.88125168,26.9706763%20L5.75762,27.0740743%20L5.65530309,27.1986179%20L5.57788136,27.3399836%20L5.52802322,27.4932733%20L5.5074855,27.65315%20L5.51697747,27.8140399%20L5.55619508,27.9704036%20L5.62371963,28.1167686%20L5.71722028,28.2480343%20L5.81227471,28.3422781%20L5.85878853,28.3817321%20L5.86392304,28.3860896%20L5.86912501,28.3903459%20L6.03893274,28.5299549%20L6.04416843,28.5342449%20L6.04943802,28.5384673%20L6.22147524,28.675408%20L6.22549492,28.678617%20L6.22951461,28.6817246%20L6.31636069,28.7492154%20L6.31906302,28.7513097%20L6.32176535,28.7534039%20L6.4091858,28.8202192%20L6.41188813,28.8222797%20L6.41462436,28.8243402%20L6.5025851,28.8904798%20L6.50532133,28.8925403%20L6.50809111,28.8946008%20L6.5965925,28.9600647%20L6.59936245,28.9620915%20L6.60216596,28.9641183%20L6.6912078,29.0289066%20L6.69401148,29.0309334%20L6.69681516,29.0329602%20L6.7864312,29.0970392%20L6.78923488,29.0990658%20L6.79207228,29.1010589%20L6.88219506,29.1644285%20L6.88506637,29.1664214%20L6.88790377,29.1684145%20L6.97860074,29.2311086%20L6.98147204,29.2330677%20L6.98434317,29.2350269%20L7.07558061,29.2970117%20L7.07845191,29.2989709%20L7.08135694,29.30093%20L7.17313484,29.3621715%20L7.17603987,29.3641307%20L7.17897862,29.3660561%20L7.2712631,29.4265883%20L7.27420202,29.4285138%20L7.2771745,29.4304392%20L7.36999961,29.490262%20L7.37297209,29.4921537%20L7.37594474,29.4940453%20L7.46931031,29.5531588%20L7.47228279,29.5550505%20L7.47528917,29.5569083%20L7.56919521,29.6152787%20L7.57220159,29.6171365%20L7.57524169,29.6189943%20L7.6696543,29.6766215%20L7.6726944,29.6784456%20L7.6757345,29.6803036%20L7.77068775,29.7371537%20L7.77376158,29.7390117%20L7.77683557,29.7408019%20L7.87229539,29.7969429%20L7.87536922,29.7987331%20L7.87847694,29.8005235%20L7.97447723,29.8559212%20L7.97758495,29.8577116%20L7.98069268,29.859468%20L8.07723343,29.9140888%20L8.08034115,29.9158455%20L8.0834826,29.917602%20L8.18052992,29.9714459%20L8.18367137,29.9732024%20L8.18684671,29.9749249%20L8.28440077,30.027992%20L8.28757612,30.0297145%20L8.2907513,30.0314042%20L8.388846,30.0837281%20L8.39202117,30.0854161%20L8.39523024,30.0871058%20L8.49383151,30.1386191%20L8.49704041,30.1403088%20L8.50028321,30.1419639%20L8.59939121,30.1927003%20L8.60260029,30.1943554%20L8.60587681,30.1959759%20L8.70549156,30.2459353%20L8.70873435,30.2475558%20L8.71201088,30.2491763%20L8.81213237,30.298325%20L8.81540889,30.2999456%20L8.81871914,30.3015332%20L8.9193472,30.3498711%20L8.92262389,30.3514588%20L8.92593414,30.3530119%20L9.02710266,30.4005392%20L9.03041308,30.4021269%20L9.03375723,30.4036471%20L9.13536487,30.4503638%20L9.13870902,30.4519169%20L9.14208689,30.4534025%20L9.24420127,30.4993421%20L9.24757914,30.5008278%20L9.25095701,30.5023134%20L9.35357814,30.5474085%20L9.35695601,30.5488941%20L9.36036761,30.5503469%20L9.4634953,30.5945975%20L9.46690707,30.5960831%20L9.47031884,30.5975013%20L9.5739531,30.6409413%20L9.57736487,30.6423595%20L9.58081036,30.6437777%20L9.68491764,30.6863394%20L9.68836313,30.6877576%20L9.69180862,30.6891429%20L9.79642247,30.7308939%20L9.79990186,30.7322447%20L9.80334736,30.7335954%20L9.90846794,30.7745018%20L9.91194716,30.7758526%20L9.91542638,30.7771705%20L10.02102,30.8171987%20L10.0244992,30.8185494%20L10.0280123,30.8198327%20L10.1341127,30.8590164%20L10.1375919,30.8602997%20L10.1411385,30.861583%20L10.247678,30.8998884%20L10.2512249,30.9011389%20L10.2547378,30.9023893%20L10.3618177,30.9398504%20L10.3653308,30.9410663%20L10.3689114,30.9422821%20L10.4764303,30.978865%20L10.4799771,30.980048%20L10.4835577,30.9812309%20L10.5915835,31.0169354%20L10.5951301,31.0181184%20L10.5987109,31.0192668%20L10.7072093,31.0540593%20L10.7107899,31.0552077%20L10.7144044,31.0563232%20L10.8233758,31.0902373%20L10.8269564,31.0913529%20L10.8305709,31.0924667%20L10.9400152,31.1254688%20L10.9436297,31.1265498%20L10.947244,31.1276307%20L11.0571613,31.1597209%20L11.0607756,31.1608018%20L11.0644238,31.1618153%20L11.1748139,31.1930273%20L11.1784621,31.1940736%20L11.1821103,31.1950525%20L11.2655109,31.2178534%20L11.3469862,31.2460251%20L11.3505668,31.247241%20L11.3541474,31.2484568%20L11.462815,31.2849382%20L11.4663955,31.286154%20L11.4700098,31.287337%20L11.5787786,31.3228051%20L11.5823931,31.323988%20L11.5859736,31.3251018%20L11.6948777,31.3595903%20L11.698492,31.3607041%20L11.7020725,31.3618196%20L11.8111116,31.3952946%20L11.8147259,31.3964101%20L11.8183065,31.3974565%20L11.9274806,31.4299184%20L11.9310614,31.4309993%20L11.9346757,31.4320456%20L12.0439175,31.463494%20L12.0475318,31.4645421%20L12.0511461,31.4655556%20L12.1604892,31.4960244%20L12.1641037,31.4970379%20L12.1677517,31.4980168%20L12.2771962,31.5274721%20L12.2808105,31.528451%20L12.2844249,31.529397%20L12.3939706,31.5578729%20L12.3975851,31.5588189%20L12.4011993,31.5597304%20L12.5108464,31.5872265%20L12.5144608,31.588138%20L12.5180751,31.5890166%20L12.6277898,31.6155331%20L12.6314379,31.6164117%20L12.6350522,31.6172557%20L12.6388018,31.6180997%20L12.7985096,31.6398197%20L12.9595009,31.6315437%20L13.1161348,31.5935084%20L13.2629726,31.5270648%20L13.3949477,31.4345439%20L13.507466,31.3191205%20L13.5966092,31.1848146%20L13.6592696,31.0363215%20L13.693285,30.8787757%20L13.6974737,30.7176491%20L13.6717003,30.5585494%20L13.6168092,30.4069824%20L13.5347596,30.2682179%20L13.4283891,30.1471195%20L13.3014133,30.0478764%20L13.1581898,29.9739002%20L13.0340176,29.9346489%20L13.0340868,29.9344119%20L13.0305737,29.9335679%20L12.9268718,29.9085038%20L12.8243183,29.8827641%20L12.8219876,29.8821899%20L12.7268993,29.8574637%20L12.7255486,29.8570919%20L12.6246839,29.8299672%20L12.6231983,29.8295625%20L12.5225702,29.8015596%20L12.5210154,29.8011203%20L12.4181243,29.771496%20L12.3138481,29.7404868%20L12.2167669,29.7106937%20L12.2145711,29.7099846%20L12.1117812,29.6774892%20L12.0103762,29.6444194%20L11.9090389,29.6104037%20L11.8033777,29.5738885%20L11.7763883,29.5645655%20L11.7488919,29.5570327%20L11.6418796,29.52778%20L11.5379074,29.4983922%20L11.4342732,29.4680922%20L11.4322801,29.467518%20L11.3346584,29.4380627%20L11.2329832,29.4064116%20L11.1307,29.3736119%20L11.0288896,29.339968%20L10.926235,29.3050403%20L10.9257611,29.3048674%20L10.8297608,29.2712571%20L10.729099,29.2350798%20L10.6290451,29.1981254%20L10.627221,29.1974492%20L10.5325381,29.1615081%20L10.4373823,29.12452%20L10.4364034,29.1241153%20L10.33966,29.0855734%20L10.3375319,29.0846948%20L10.2391333,29.0444637%20L10.1409711,29.0033208%20L10.1387416,29.0023748%20L10.046626,28.9628531%20L9.94961238,28.9202239%20L9.85459168,28.8774934%20L9.75821973,28.8332089%20L9.75619293,28.8322628%20L9.66556359,28.7896336%20L9.57165754,28.7445046%20L9.47815689,28.6986326%20L9.38512909,28.6519836%20L9.29490513,28.6058075%20L9.29419604,28.6054357%20L9.19873622,28.5555775%20L9.110978,28.5087936%20L9.10861344,28.5075103%20L9.01974056,28.4591724%20L9.01886198,28.4586985%20L8.92482087,28.4065097%20L8.92269273,28.4053267%20L8.83594799,28.3562119%20L8.74883158,28.3059823%20L8.74737881,28.3051383%20L8.65945179,28.25349%20L8.65752635,28.2523416%20L8.5670997,28.1981599%20L8.48221261,28.1463765%20L8.47991567,28.1449237%20L8.39131294,28.0899314%20L8.30686514,28.036459%20L8.30517543,28.035378%20L8.21461353,27.9770077%20L8.21403934,27.9766359%20L8.1291187,27.9209002%20L8.12763307,27.9199213%20L8.04416485,27.8641857%20L7.96201399,27.8083826%20L7.96056122,27.8073691%20L7.87452575,27.7479178%20L7.79254386,27.6902906%20L7.79095618,27.6891423%20L7.70502206,27.6276979%20L7.70296154,27.6262123%20L7.62229701,27.5675042%20L7.54203787,27.508188%20L7.54075458,27.5072091%20L7.45630661,27.4437381%20L7.4540773,27.4420484%20L7.37753379,27.383543%20L7.37564208,27.3820902%20L7.29369391,27.3183828%20L7.13253364,27.1900559%20L6.97106932,27.0573376%20L6.93117617,27.0234571%20L6.79909973,26.931105%20L6.65216055,26.8648303%20L6.49545908,26.8269977%20L6.3345015,26.8189244%20L6.17479245,26.840863%20Z'%20opacity='.98'/%3e%3c/svg%3e";
const BpmnIconStartEventNonInterruptingSignal = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M16.0071049,8.43423276%20C13.7412125,12.5013709%2011.4753168,16.5685074%209.20942317,20.6356449%20C13.7412005,20.6356449%2018.2729786,20.6356449%2022.8047555,20.6356449%20C20.5388714,16.5685078%2018.272989,12.5013699%2016.0071049,8.43423276%20Z%20M16.0071049,10.2091112%20C17.7829616,13.3966829%2019.5588201,16.584254%2021.3346769,19.7718257%20C17.7829634,19.7718257%2014.2312486,19.7718257%2010.6795346,19.7718257%20C12.4553913,16.5842542%2014.2312481,13.3966827%2016.0071049,10.2091112%20Z%20M16.1400708,0%20C14.5689798,0.235746795%2011.9449463,-0.284491593%2011.2391464,1.38148909%20C11.8586072,3.08397996%2013.9852044,1.44967967%2015.3254031,1.74567665%20C16.7460711,1.61602395%2018.1641754,1.94655832%2019.5600139,2.00467331%20C21.2698714,0.397721876%2018.1891709,-0.0416934424%2017.0005747,0.0271349794%20C16.7139802,0.0118706033%2016.4270488,0.00319094808%2016.1400708,0%20L16.1400708,0%20Z%20M25.0006616,2.77606522%20C22.8092266,3.47029252%2025.4013113,5.0360009%2026.1814471,5.87044419%20C27.2636174,7.02201865%2028.1350191,8.35358643%2028.8958193,9.73382471%20C30.3758801,10.7393876%2030.7406658,8.47365798%2029.7061767,7.7037102%20C28.5479385,5.80657305%2027.0933119,3.99953864%2025.1934488,2.81337824%20L25.0006616,2.77606522%20L25.0006616,2.77606522%20L25.0006616,2.77606522%20Z%20M6.56173271,3.19866164%20C4.76918264,3.91086%203.65316384,5.74668689%202.55253934,7.26047231%20C1.77876518,8.07366064%200.340885624,10.9128686%202.55707076,10.4709536%20C3.68046243,9.00224415%204.42631778,7.16483543%205.82376801,5.85673814%20C6.48788325,5.15630828%208.55352181,3.8440809%206.56173271,3.19866164%20Z%20M31.1317202,14.2713052%20C29.473101,14.7056188%2030.6641763,16.9381663%2030.1415243,18.1659294%20C29.9113372,19.717665%2029.3945971,21.2238346%2028.6449662,22.6008159%20C28.4146944,24.2599573%2030.636135,23.7662046%2030.6628288,22.4024397%20C31.7539689,20.0608904%2032.2006118,17.4190974%2031.9165189,14.8500632%20C31.8103815,14.517046%2031.4772997,14.2824%2031.1317202,14.2713052%20L31.1317202,14.2713052%20Z%20M0.951328331,14.9365811%20C-0.725312456,15.3225079%200.319408142,17.6035656%200.34414706,18.8128985%20C0.715312543,20.4358484%201.1362734,22.1625497%202.13318657,23.5089862%20C4.51551575,23.8304947%202.70510363,21.1707279%202.42603267,20.0168793%20C1.99491105,18.5953441%201.76268087,17.1133696%201.74175658,15.6279396%20C1.66999462,15.2558329%201.32968632,14.9581539%200.951328331,14.9365811%20Z%20M25.5100454,26.7478909%20C23.7550395,27.6122947%2022.2070444,29.0129309%2020.2356173,29.5116761%20C19.0741174,29.4962073%2017.161772,30.7830441%2018.9048122,31.6135935%20C21.5657243,31.1673317%2024.0677749,29.8813985%2026.1413089,28.1690428%20C26.6133325,27.6634593%2026.20174,26.7365775%2025.5100454,26.7478909%20L25.5100454,26.7478909%20Z%20M6.35890382,26.7901714%20C4.35513839,27.5757377%206.77526985,29.1945561%207.78917417,29.7032734%20C9.39740647,30.6072903%2011.1679528,31.3392742%2012.9968481,31.5797014%20C14.7670174,30.7764917%2012.769113,29.4855723%2011.6400319,29.506853%20C9.89024555,28.970033%208.23706528,28.1114309%206.84247498,26.9210597%20L6.61534997,26.8173368%20L6.35890382,26.7901714%20L6.35890382,26.7901714%20L6.35890382,26.7901714%20Z'%20transform='translate(0%20.386)'/%3e%3c/svg%3e";
const BpmnIconStartEventNonInterruptingTimer = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.9910318,8.34124746%20C12.9733413,8.30008728%2010.0714997,10.2666474%208.96079412,13.0672256%20C7.82295801,15.7617877%208.45200012,19.0784341%2010.4980546,21.168902%20C12.4874251,23.3105265%2015.7652778,24.0997628%2018.5108841,23.096028%20C21.388058,22.1158437%2023.5017581,19.2698508%2023.5779197,16.2266595%20C23.7311959,13.2701763%2021.9543593,10.346908%2019.2791087,9.09134535%20C18.2582485,8.59707561%2017.1250942,8.33975145%2015.9910318,8.34124746%20Z%20M15.9910318,9.7248409%20C18.749234,9.67260333%2021.3628973,11.6972052%2022.0049417,14.3792873%20C22.7088242,16.95655%2021.5229116,19.8952368%2019.2141992,21.2456188%20C16.8568949,22.7250831%2013.5333387,22.3308143%2011.5976206,20.3271272%20C9.55485034,18.3564837%209.19107768,14.946903%2010.7582757,12.5835698%20C11.8682376,10.8204134%2013.9068173,9.70454358%2015.9910318,9.7248409%20L15.9910318,9.7248409%20Z%20M17.9526197,11.4892269%20C17.2613868,12.7432659%2016.5701521,13.9973048%2015.8789192,15.2513437%20C15.2384464,15.3194477%2015.0863047,16.2911315%2015.6772363,16.5502855%20C16.0675808,16.8212328%2016.3733083,16.3705567%2016.7286462,16.3860875%20C17.7853207,16.3860875%2018.8419953,16.3860875%2019.8986698,16.3860875%20C19.8986698,16.0978383%2019.8986698,15.8095908%2019.8986698,15.5213416%20C18.8382751,15.5213416%2017.7778805,15.5213416%2016.7174858,15.5213416%20C17.3816401,14.3164393%2018.0457943,13.1115387%2018.7099486,11.9066363%20C18.457505,11.7675004%2018.2050632,11.6283628%2017.9526197,11.4892269%20Z%20M16.1202819,2.85366147e-05%20L15.8995694,0.000400377352%20L15.89376,0.000400377352%20L15.887916,0.00050414686%20L15.6672363,0.00384811925%20L15.6613924,0.00395188876%20L15.655583,0.00412483794%20L15.4349711,0.0104414608%20L15.4291273,0.01061441%20L15.4233173,0.0108513504%20L15.2028071,0.0201406238%20L15.1969972,0.0204104245%20L15.1911534,0.0207148151%20L14.970812,0.032976739%20L14.9649682,0.0333139899%20L14.9591582,0.033718691%20L14.7389858,0.0489530924%20L14.7331759,0.0493577935%20L14.7273658,0.0498299448%20L14.5074298,0.0680368238%20L14.5016197,0.0685107045%20L14.4958099,0.069050306%20L14.2761442,0.0902298355%20L14.2703341,0.0908040268%20L14.2645241,0.0914128079%20L14.0451961,0.115564988%20L14.0393861,0.116206629%20L14.033576,0.116915721%20L13.8146198,0.144006654%20L13.8088097,0.144715745%20L13.8029997,0.145526877%20L13.5844825,0.175556562%20L13.5786725,0.176367693%20L13.5728624,0.177246275%20L13.3547844,0.210248438%20L13.3489743,0.21112702%20L13.3431643,0.212073052%20L13.1255928,0.248047865%20L13.119783,0.248993897%20L13.1139729,0.250041969%20L12.8969758,0.288955534%20L12.8911319,0.290003606%20L12.8853557,0.291117399%20L12.6689328,0.332969717%20L12.6631228,0.334118099%20L12.6573127,0.335301072%20L12.4415316,0.380125867%20L12.4356878,0.3813417%20L12.4299117,0.382624983%20L12.2148061,0.430388531%20L12.2089961,0.431671814%20L12.203186,0.433057137%20L11.9888236,0.48375961%20L11.9829799,0.485144933%20L11.9772035,0.486597706%20L11.8615438,0.515681705%20L11.7095377,0.569322931%20L11.570165,0.650291511%20L11.4482224,0.755682417%20L11.3479658,0.881915084%20L11.2728747,1.02453053%20L11.2255503,1.17859712%20L11.2076473,1.33877781%20L11.219774,1.49953269%20L11.2615251,1.65518695%20L11.3314478,1.80043728%20L11.4270766,1.93018289%20L11.5451685,2.03989753%20L11.6815348,2.12579793%20L11.8315143,2.18491144%20L11.989837,2.21514382%20L12.1509972,2.21551566%20L12.2829386,2.19301878%20L12.3925182,2.16548873%20L12.5947876,2.11765756%20L12.7983744,2.07239347%20L13.0055082,2.02942649%20L13.2082504,1.99020888%20L13.414033,1.95332211%20L13.6204573,1.91920512%20L13.8250574,1.88822957%20L14.0326303,1.85968621%20L14.2381763,1.83425058%20L14.4466274,1.81131458%20L14.6553487,1.79118225%20L14.8644415,1.77392106%20L15.073906,1.75939592%20L15.2811072,1.74787733%20L15.4908756,1.7390609%20L15.7007124,1.73304833%20L15.9081148,1.72990688%20L16.1180872,1.72953504%20L16.327923,1.73200095%20L16.5352596,1.73727053%20L16.7422919,1.74527618%20L16.9541201,1.75635565%20L17.1606127,1.76996865%20L17.369435,1.78658803%20L17.577818,1.80601109%20L17.7858309,1.82830528%20L17.991004,1.8530991%20L18.1973618,1.88089947%20L18.4040551,1.91163842%20L18.6117636,1.94551882%20L18.8169038,1.9818653%20L19.0186006,2.02050854%20L19.07089,2.03125024%20L19.231105,2.04891683%20L19.3918249,2.03655373%20L19.5474463,1.99456616%20L19.6925611,1.92444063%20L19.822138,1.82857542%20L19.9316841,1.71034857%20L20.017415,1.57381332%20L20.076292,1.42376625%20L20.1062884,1.26540966%20L20.1064613,1.10421566%20L20.0766345,0.94582534%20L20.0179615,0.795710813%20L19.9323983,0.659107941%20L19.8230218,0.540712121%20L19.6935451,0.444711836%20L19.5484978,0.374383609%20L19.4199015,0.337328036%20L19.3629165,0.325606578%20L19.3570051,0.324390746%20L19.3510937,0.323242363%20L19.134838,0.281829163%20L19.1289612,0.28071537%20L19.1230498,0.279667298%20L18.9061871,0.241226576%20L18.9003103,0.240180233%20L18.8943989,0.239234201%20L18.676962,0.203799855%20L18.6710852,0.202853823%20L18.6652083,0.201975241%20L18.4472647,0.16954727%20L18.4413862,0.168668688%20L18.4354765,0.167857556%20L18.217059,0.13843596%20L18.2112167,0.137624829%20L18.2053053,0.136915737%20L17.9864831,0.110466792%20L17.9806063,0.1097577%20L17.9747278,0.109148919%20L17.7555008,0.0856722787%20L17.7496586,0.0850306373%20L17.7437801,0.0844910358%20L17.5242159,0.0640209438%20L17.5183391,0.0634813424%20L17.5124951,0.0630091911%20L17.2926266,0.0455115767%20L17.2867826,0.0450394254%20L17.2809387,0.0446675847%20L17.0608003,0.0301426208%20L17.0549564,0.02977078%20L17.0491124,0.0294663895%20L16.8288045,0.0179139031%20L16.8229606,0.0176095126%20L16.8171166,0.017407162%20L16.5966064,0.00886105123%20L16.5907971,0.00862411086%20L16.5849531,0.00848575151%20L16.3643409,0.00291229124%20L16.3584987,0.00273934206%20L16.3526876,0.00267016239%20L16.1320079,6.9179672e-05%20L16.1261656,0%20L16.1202819,2.85366147e-05%20Z%20M24.8350977,2.7832267%20L24.6775168,2.81717473%20L24.5289898,2.87980135%20L24.3946843,2.96887693%20L24.2792269,3.08136134%20L24.1866386,3.21330272%20L24.1201621,3.36014055%20L24.0820925,3.51677457%20L24.0737495,3.67773214%20L24.095401,3.83743981%20L24.1463397,3.99039175%20L24.2247756,4.13118327%20L24.3279709,4.25501748%20L24.429883,4.34176239%20L24.4819701,4.3795274%20L24.4830769,4.38033853%20L24.5698231,4.44438369%20L24.570878,4.44516023%20L24.6522178,4.50623291%20L24.653636,4.50731384%20L24.7302801,4.56585316%20L24.7314562,4.5667646%20L24.8147883,4.63148547%20L24.8974805,4.69681426%20L24.8990024,4.69803009%20L24.9776735,4.76126464%20L24.9798354,4.76302111%20L25.0568514,4.82601923%20L25.1379888,4.89347615%20L25.1399483,4.89509669%20L25.2165596,4.95988501%20L25.2925967,5.02524769%20L25.2942224,5.02666587%20L25.3736044,5.09608197%20L25.4524104,5.16617377%20L25.4541053,5.167694%20L25.528655,5.23518465%20L25.6063473,5.30666126%20L25.6080768,5.30824893%20L25.6813104,5.37678679%20L25.7578196,5.44961465%20L25.8297025,5.51919972%20L25.8316274,5.52109126%20L25.9089478,5.59726327%20L25.9094839,5.59780287%20L25.9782935,5.66671222%20L25.9797463,5.66819786%20L26.053893,5.74376177%20L26.1246604,5.81706248%20L26.1255424,5.81797392%20L26.2004312,5.89694943%20L26.2020915,5.89870608%20L26.2709339,5.97258098%20L26.3399787,6.04790847%20L26.3406878,6.04868501%20L26.413617,6.12968732%20L26.483945,6.20916975%20L26.4855707,6.21099384%20L26.5540085,6.28976666%20L26.5549597,6.29084759%20L26.6216056,6.36887742%20L26.6901437,6.45052154%20L26.7548301,6.52888931%20L26.7564904,6.53094982%20L26.8237452,6.61394502%20L26.8907959,6.69812267%20L26.9540987,6.77906745%20L26.9552748,6.78061061%20L27.0223946,6.86799734%20L27.0238474,6.86988888%20L27.0870136,6.95369504%20L27.0883626,6.95548524%20L27.1522379,7.04179085%20L27.1600743,7.05239765%20L27.1682496,7.06273396%20L27.2630344,7.18288643%20L27.3556227,7.30297127%20L27.4451706,7.42170486%20L27.5327261,7.54050607%20L27.6211948,7.66322579%20L27.7073304,7.78553995%20L27.7907646,7.90673945%20L27.8723084,8.02783777%20L27.8734153,8.02952749%20L27.9566817,8.15616555%20L28.0376495,8.28222924%20L28.1173341,8.40927252%20L28.1943519,8.53496472%20L28.2727861,8.66609531%20L28.3471352,8.79347653%20L28.4215154,8.92406665%20L28.4945467,9.05546756%20L28.5649422,9.18531452%20L28.6353048,9.31830292%20L28.7035385,9.45078476%20L28.7490725,9.54144801%20L28.8345336,9.67815206%20L28.9438427,9.79658177%20L29.0732502,9.89268341%20L29.2182646,9.96307908%20L29.373784,10.0053705%20L29.5344711,10.0180378%20L29.6947189,10.0006753%20L29.848955,9.95389116%20L29.9918404,9.8792731%20L30.1183769,9.77942193%20L30.224208,9.65785076%20L30.305648,9.51874843%20L30.3598313,9.36694488%20L30.3848951,9.20771005%20L30.3799971,9.0466174%20L30.3452724,8.8892065%20L30.2946363,8.76530467%20L30.246975,8.67041904%20L30.244948,8.66639935%20L30.2428865,8.66234594%20L30.1702288,8.52138562%20L30.1681673,8.51736576%20L30.16604,8.51334607%20L30.0919278,8.37316264%20L30.0898005,8.36914295%20L30.0876387,8.36515699%20L30.0120408,8.22575061%20L30.009879,8.22176465%20L30.0076497,8.21777869%20L29.9305991,8.07914903%20L29.9284026,8.07519697%20L29.9261404,8.07121101%20L29.8476371,7.93342585%20L29.8453749,7.92947379%20L29.8430781,7.92552156%20L29.7630891,7.78854719%20L29.7607906,7.78459496%20L29.758461,7.78067662%20L29.6770193,7.64458049%20L29.6746879,7.64062825%20L29.6722908,7.63674382%20L29.5894291,7.50149202%20L29.5870321,7.49757369%20L29.5845987,7.49368907%20L29.5003205,7.35931569%20L29.4978543,7.35539735%20L29.495388,7.35154647%20L29.4096571,7.21808504%20L29.407158,7.21420061%20L29.4046243,7.21034972%20L29.3175081,7.07776653%20L29.3149744,7.07391582%20L29.3123732,7.07006493%20L29.2238042,6.9384615%20L29.2212376,6.93461062%20L29.2186019,6.93079363%20L29.1286147,6.80010216%20L29.1259807,6.796285%20L29.1233121,6.79250173%20L29.0319396,6.66275612%20L29.029271,6.65897286%20L29.0265349,6.6551896%20L28.9337425,6.5264573%20L28.931041,6.52264031%20L28.9282704,6.51889077%20L28.8340615,6.39113805%20L28.8312908,6.38738851%20L28.8284873,6.38363915%20L28.732926,6.25689974%20L28.7300879,6.25315038%20L28.7272169,6.24943456%20L28.630272,6.12374236%20L28.6273993,6.119993%20L28.6244609,6.11631108%20L28.5343717,6.00210375%20L28.4737392,5.92018931%20L28.4714753,5.91714921%20L28.4692131,5.91410911%20L28.4001009,5.8225%20L28.397837,5.8194938%20L28.3955402,5.81648742%20L28.3257517,5.72565538%20L28.323455,5.722649%20L28.3211582,5.71967635%20L28.2507281,5.62962119%20L28.2483985,5.62664872%20L28.2460343,5.62370979%20L28.1749625,5.5343978%20L28.1725983,5.53142532%20L28.1702324,5.52852029%20L28.0984861,5.43998519%20L28.0961219,5.43704643%20L28.0937231,5.43414141%20L28.0213007,5.34638319%20L28.0189019,5.34347816%20L28.0165048,5.34060686%20L27.9434407,5.2535918%20L27.9410419,5.25072067%20L27.9386102,5.24784937%20L27.8649027,5.1616112%20L27.862471,5.1587738%20L27.8600048,5.15593639%20L27.785692,5.07047511%20L27.7832257,5.06763771%20L27.7807595,5.06486775%20L27.7058033,4.98014981%20L27.7033042,4.97734613%20L27.7008051,4.97457618%20L27.6252401,4.89063512%20L27.622741,4.88786516%20L27.6202073,4.88509521%20L27.5440024,4.80193104%20L27.5415016,4.79919498%20L27.5389679,4.79645876%20L27.4621542,4.71403775%20L27.4596223,4.71133542%20L27.457054,4.70863309%20L27.3796333,4.62698879%20L27.377065,4.62428664%20L27.3744984,4.62161803%20L27.2964689,4.5407508%20L27.2939006,4.53808219%20L27.2912995,4.53544749%20L27.2126958,4.45532324%20L27.2100946,4.45268854%20L27.2074935,4.45008755%20L27.1282828,4.37070665%20L27.125647,4.36810566%20L27.1230459,4.36553841%20L27.0432263,4.28693439%20L27.0406252,4.28436713%20L27.0379566,4.28179987%20L26.9575957,4.20397274%20L26.9549617,4.20140548%20L26.9522931,4.19887212%20L26.8713235,4.12182188%20L26.8686895,4.11928852%20L26.8660209,4.11678871%20L26.7844771,4.04048181%20L26.7818085,4.0380159%20L26.779107,4.03551626%20L26.6970236,3.95998607%20L26.694355,3.95752016%20L26.6916535,3.95508815%20L26.6089959,3.88030112%20L26.6062927,3.87786893%20L26.6035913,3.87543692%20L26.5203595,3.80142678%20L26.5176563,3.79902849%20L26.5149202,3.79663021%20L26.4311817,3.72339695%20L26.4284456,3.72099867%20L26.4257096,3.71866783%20L26.3414314,3.64617791%20L26.3386954,3.64381335%20L26.3359247,3.64148251%20L26.2511053,3.56976948%20L26.2483346,3.56743865%20L26.2455657,3.56514171%20L26.1602395,3.49417167%20L26.1574689,3.49187473%20L26.1546653,3.48961151%20L26.0687995,3.41941853%20L26.0660289,3.41715532%20L26.0632254,3.41489211%20L25.9768182,3.34547601%20L25.9740493,3.3432128%20L25.9712458,3.34101721%20L25.8843319,3.27234411%20L25.8815284,3.27011479%20L25.8787249,3.26795293%20L25.7913043,3.20002299%20L25.7885008,3.19786112%20L25.7856627,3.19569926%20L25.6977353,3.12854638%20L25.6949318,3.12638451%20L25.6920937,3.12425637%20L25.6036614,3.05788038%20L25.6008233,3.05575241%20L25.5979852,3.053658%20L25.5090789,2.98802517%20L25.5062408,2.98593093%20L25.5033699,2.98387041%20L25.4456083,2.94191657%20L25.3068771,2.85983333%20L25.1553442,2.80490848%20L24.9962448,2.77906745%20L24.8350977,2.7832267%20Z%20M6.37652141,3.20924931%20L6.21961724,3.24616981%20L6.07230657,3.31159994%20L5.96100426,3.38591413%20L5.95374178,3.39162283%20L5.95097182,3.3937508%20L5.94826949,3.39594656%20L5.86209895,3.46478846%20L5.85936289,3.46698405%20L5.85666056,3.46917964%20L5.77099658,3.53876471%20L5.76829425,3.5409603%20L5.76559192,3.54318979%20L5.68046858,3.61351801%20L5.67776625,3.61574733%20L5.67506392,3.61801054%20L5.59048088,3.68904803%20L5.58777854,3.69131125%20L5.58507621,3.69360836%20L5.50103381,3.76535512%20L5.4983652,3.76765205%20L5.4956966,3.76994916%20L5.41219466,3.84243908%20L5.40949233,3.84476992%20L5.40685745,3.84710076%20L5.32389597,3.92030011%20L5.32122737,3.92266467%20L5.31859266,3.92502906%20L5.23617148,3.99897158%20L5.23353677,4.00133614%20L5.23090206,4.0037346%20L5.14905507,4.07838639%20L5.14642037,4.08078467%20L5.14378566,4.08321686%20L5.06251303,4.1586118%20L5.05987815,4.16104399%20L5.05727717,4.163476%20L4.97657891,4.23958038%20L4.97397793,4.24204629%20L4.97137694,4.24454593%20L4.8912527,4.32135975%20L4.88865172,4.32385938%20L4.88608464,4.32635902%20L4.80653476,4.403916%20L4.80393377,4.40641564%20L4.80140024,4.40898289%20L4.72242456,4.48724914%20L4.71985747,4.4897825%20L4.71732394,4.49234976%20L4.63895634,4.57132545%20L4.63638926,4.57392643%20L4.63385572,4.57649351%20L4.55609622,4.65621236%20L4.55356268,4.65881335%20L4.55106305,4.66144805%20L4.47387773,4.74187617%20L4.4713781,4.74451105%20L4.46887846,4.74714576%20L4.39233496,4.82831703%20L4.38980143,4.83098564%20L4.38733552,4.83365407%20L4.31140011,4.91553478%20L4.30890047,4.91820339%20L4.30643456,4.92090572%20L4.23114096,5.0034957%20L4.22867506,5.00623176%20L4.22620915,5.00896781%20L4.15155719,5.09226723%20L4.14909128,5.09500328%20L4.14665927,5.09777324%20L4.0726154,5.18181564%20L4.07018322,5.1845856%20L4.0677512,5.18735555%20L3.99434915,5.2721074%20L3.99195087,5.27491107%20L3.98955241,5.27771458%20L3.91679217,5.36320959%20L3.91439388,5.36601327%20L3.91199559,5.36885084%20L3.8399109,5.45505511%20L3.83751261,5.45789252%20L3.83514805,5.46076382%20L3.76370516,5.54767753%20L3.7613406,5.55054883%20L3.75900994,5.55345368%20L3.68820887,5.64107683%20L3.68587803,5.64398186%20L3.68354737,5.64688688%20L3.61342184,5.73525302%20L3.6111249,5.73819177%20L3.60882779,5.7411307%20L3.53937797,5.83020627%20L3.53708103,5.83314502%20L3.53478392,5.8361175%20L3.46600964,5.92590251%20L3.46374643,5.92887516%20L3.46148322,5.93188136%20L3.39338448,6.02237581%20L3.39115516,6.02538201%20L3.38892567,6.02838839%20L3.32150247,6.11962583%20L3.31927316,6.12266593%20L3.3170774,6.1256723%20L3.25036363,6.2176529%20L3.24816804,6.220693%20L3.24597228,6.2237331%20L3.17996796,6.31642314%20L3.17777219,6.31949697%20L3.17561033,6.32257097%20L3.11031527,6.41597027%20L3.1081534,6.41904409%20L3.10602544,6.42215182%20L3.04140592,6.51626056%20L3.03927778,6.51936811%20L3.03718353,6.52250956%20L2.97330718,6.61732774%20L2.97117904,6.62046918%20L2.96911852,6.62361063%20L2.9059516,6.7191718%20L2.90385718,6.72231325%20L2.90179667,6.72548842%20L2.83937291,6.82175903%20L2.83731239,6.8249342%20L2.8352856,6.82810955%20L2.78907583,6.90076844%20L2.73817066,6.97008318%20L2.73594117,6.97312329%20L2.73371168,6.97619728%20L2.66662643,7.06925882%20L2.66439694,7.07233264%20L2.66223507,7.07540647%20L2.59606178,7.16887339%20L2.59386619,7.17198112%20L2.59173805,7.17505494%20L2.52647671,7.26896099%20L2.52434875,7.27206871%20L2.52222061,7.27517643%20L2.45790513,7.3694877%20L2.45577699,7.37259542%20L2.45368275,7.37570314%20L2.39031313,7.4704198%20L2.38821872,7.47356125%20L2.3861582,7.4767027%20L2.32370054,7.57179102%20L2.32164003,7.57493247%20L2.31961324,7.57810765%20L2.25806771,7.67360136%20L2.25604092,7.67674281%20L2.25404803,7.67991798%20L2.19344819,7.7757832%20L2.19142157,7.77895837%20L2.18946223,7.78213372%20L2.12977453,7.87840415%20L2.12781536,7.8815795%20L2.12585619,7.88478839%20L2.06708045,7.98143049%20L2.06515501,7.98460584%20L2.06322974,7.98781474%20L2.00539986,8.08482851%20L2.00347441,8.08803758%20L2.0015827,8.09124648%20L1.94466495,8.18863174%20L1.94277323,8.19184081%20L1.94091541,8.19504988%20L1.88490962,8.29280664%20L1.8830518,8.29601571%20L1.88122771,8.29925851%20L1.82613388,8.39735304%20L1.82430979,8.40056211%20L1.82251959,8.40383863%20L1.768304,8.5022711%20L1.7665138,8.5055139%20L1.76475716,8.50875669%20L1.7114876,8.60756066%20L1.70973095,8.61080346%20L1.70800838,8.61404625%20L1.65561706,8.71318799%20L1.65389448,8.71643078%20L1.65217191,8.71970731%20L1.60069238,8.81918698%20L1.59900266,8.82242978%20L1.59734754,8.8257063%20L1.54674624,8.92548985%20L1.54509112,8.92876637%20L1.54347058,8.93207679%20L1.49378142,9.03216439%20L1.49216089,9.03544091%20L1.49054035,9.03875133%20L1.44176332,9.13917669%20L1.44017565,9.14245321%20L1.43858798,9.14576363%20L1.39068918,9.24649304%20L1.38913437,9.24980329%20L1.38761414,9.25311371%20L1.34059359,9.35414716%20L1.33907336,9.35745741%20L1.33755314,9.36076783%20L1.32539274,9.38752082%20L1.27259585,9.53979721%20L1.24901803,9.69926863%20L1.25540228,9.86029366%20L1.29157979,10.0173666%20L1.35630066,10.1650152%20L1.44726778,10.2980713%20L1.56133987,10.4119408%20L1.69459859,10.5026378%20L1.84234856,10.5670546%20L1.99948915,10.6029281%20L2.16054807,10.6090083%20L2.31995187,10.5850925%20L2.47216064,10.5319918%20L2.61187106,10.4515976%20L2.73421912,10.3466458%20L2.83494852,10.2208522%20L2.89963549,10.1036724%20L2.91010705,10.0806688%20L2.95395243,9.98639125%20L2.99945294,9.89066111%20L3.00056673,9.88833045%20L3.04295952,9.8010788%20L3.04339881,9.80016736%20L3.09126388,9.70372795%20L3.13919657,9.60921382%20L3.13994025,9.60776105%20L3.18723113,9.51648989%20L3.18807512,9.51483476%20L3.23519703,9.42572546%20L3.28562918,9.33229226%20L3.28684501,9.32999533%20L3.33602744,9.24075095%20L3.38814861,9.14799347%20L3.38902719,9.14643865%20L3.44020251,9.05722801%20L3.44138548,9.05516749%20L3.492392,8.96798346%20L3.5447835,8.88005645%20L3.54603392,8.87799593%20L3.60149924,8.78679222%20L3.65780907,8.6959939%20L3.71506476,8.60546573%20L3.7159762,8.60401295%20L3.77316427,8.51530887%20L3.77346866,8.51483672%20L3.82765053,8.43231437%20L3.82917075,8.43001726%20L3.88899353,8.34063764%20L3.94955946,8.25179866%20L4.01107143,8.16329728%20L4.01208492,8.16184451%20L4.07167127,8.07770075%20L4.13490581,7.98997626%20L4.20016715,7.90113711%20L4.2172931,7.87782961%20L4.23279782,7.85344101%20L4.29285701,7.75906212%20L4.35176783,7.66823008%20L4.35284876,7.66657496%20L4.40959771,7.58074218%20L4.46732625,7.49501075%20L4.46806993,7.49392982%20L4.53015609,7.40346927%20L4.59166788,7.31550853%20L4.59295117,7.31368443%20L4.65351711,7.22876362%20L4.65463263,7.22717595%20L4.71462437,7.14451834%20L4.77826431,7.05841525%20L4.84203932,6.97359596%20L4.84355955,6.97160289%20L4.90507134,6.89130985%20L4.97026505,6.80774029%20L5.03360095,6.72788636%20L5.03461443,6.72663594%20L5.10142954,6.64387699%20L5.16844735,6.56236795%20L5.23806614,6.47913615%20L5.23853829,6.47859655%20L5.30653568,6.39877653%20L5.37027696,6.32517178%20L5.37047931,6.32496943%20L5.44384764,6.24167001%20L5.44431979,6.24113041%20L5.51245226,6.16512737%20L5.51410738,6.16330328%20L5.58348958,6.08726652%20L5.58450306,6.08615272%20L5.65341241,6.01187226%20L5.72576743,5.93519369%20L5.72701785,5.93384295%20L5.79410328,5.86392029%20L5.79474493,5.86327865%20L5.87024122,5.78585674%20L5.87186175,5.78420162%20L5.9424264,5.7130965%20L6.01717971,5.63898518%20L6.01893618,5.63726261%20L6.09054786,5.56750857%20L6.16644972,5.49474833%20L6.16830754,5.49295814%20L6.24106778,5.42438638%20L6.31457119,5.35618629%20L6.31612427,5.35476811%20L6.39594447,5.28197415%20L6.39641662,5.28153486%20L6.47225086,5.21353746%20L6.47353414,5.21238908%20L6.54582153,5.14858035%20L6.54690247,5.14763431%20L6.62398643,5.08071785%20L6.62439114,5.0803806%20L6.70265738,5.01349787%20L6.7045152,5.01194479%20L6.78517991,4.94421754%20L6.78724043,4.94249497%20L6.86398663,4.87912535%20L6.9457321,4.81271563%20L6.94718487,4.81153266%20L7.02244491,4.75140567%20L7.02406545,4.75012238%20L7.02970653,4.74569731%20L7.1465823,4.63469904%20L7.24085984,4.50397367%20L7.3092289,4.35801408%20L7.34932475,4.20188697%20L7.35972868,4.04103075%20L7.34010292,3.88105276%20L7.29115709,3.72745901%20L7.21454597,3.58565417%20L7.11293832,3.46053616%20L6.98988083,3.35642889%20L6.84962994,3.27698036%20L6.69708341,3.2249268%20L6.53754453,3.20209198%20L6.37652141,3.20924931%20Z%20M30.972969,14.2966428%20L30.8167405,14.3363671%20L30.6706123,14.4043645%20L30.53965,14.4983043%20L30.4283814,14.6149436%20L30.340691,14.7501953%20L30.2796174,14.899364%20L30.2472915,15.0572476%20L30.2431373,15.1910468%20L30.2497232,15.3326152%20L30.2551278,15.4850604%20L30.2588099,15.634398%20L30.2609043,15.783668%20L30.2613367,15.9366537%20L30.2624436,15.9482737%20L30.2618037,15.963069%20L30.2655203,16.0725472%20L30.2682564,16.1835116%20L30.2682564,16.1851668%20L30.2699167,16.2907603%20L30.2699167,16.2921453%20L30.2706604,16.3938881%20L30.2704874,16.5044134%20L30.2704874,16.5055957%20L30.2693806,16.6111217%20L30.2693806,16.6120337%20L30.2674539,16.713844%20L30.2645155,16.8204847%20L30.2606985,16.9265174%20L30.2559355,17.0324488%20L30.250261,17.1384815%20L30.2436734,17.2442441%20L30.2361415,17.3497363%20L30.2359685,17.3518306%20L30.2277258,17.4550935%20L30.2275528,17.4567486%20L30.218703,17.5567349%20L30.2085353,17.6620581%20L30.1974562,17.7670776%20L30.1854968,17.8716916%20L30.1733367,17.9707996%20L30.1730946,17.9726574%20L30.1589076,18.0805479%20L30.1587346,18.0817638%20L30.1447499,18.1812435%20L30.129245,18.2856546%20L30.112929,18.389154%20L30.1126004,18.3913496%20L30.0961841,18.4899847%20L30.0780452,18.593788%20L30.0591626,18.6967468%20L30.0587475,18.6989087%20L30.0399998,18.796429%20L30.0192597,18.8997255%20L29.9976411,19.0028195%20L29.9973298,19.0043397%20L29.9760155,19.1019277%20L29.9527089,19.2046839%20L29.9522419,19.2067781%20L29.9294749,19.3033528%20L29.9044111,19.4058387%20L29.9038404,19.4082032%20L29.8795531,19.5042035%20L29.8528342,19.6061826%20L29.8521943,19.6086486%20L29.8270285,19.7016762%20L29.8266134,19.7030615%20L29.7980041,19.8055813%20L29.797295,19.8080472%20L29.7687861,19.9069525%20L29.7686131,19.9073572%20L29.7398327,20.0042359%20L29.7391928,20.0063978%20L29.7101096,20.1014185%20L29.6800459,20.1970471%20L29.6796135,20.1983978%20L29.6471181,20.2988569%20L29.615771,20.3932697%20L29.6150619,20.3953302%20L29.5809788,20.4952826%20L29.5802006,20.497512%20L29.5469269,20.5924651%20L29.5460794,20.5948636%20L29.5115916,20.6907625%20L29.5111593,20.6919783%20L29.4778856,20.7823713%20L29.4772802,20.7839589%20L29.4404265,20.8817155%20L29.4043839,20.9751489%20L29.403744,20.976804%20L29.3660134,21.0722976%20L29.2869704,21.2655819%20L29.2064072,21.4542384%20L29.1223297,21.6428611%20L29.0345044,21.8320919%20L28.9453283,22.0167286%20L28.8532122,22.2003181%20L28.7578203,22.3835362%20L28.7074886,22.476699%20L28.6444573,22.6250571%20L28.6100352,22.7825016%20L28.6054417,22.9436281%20L28.6308099,23.1027953%20L28.6852958,23.2544975%20L28.7670074,23.3934648%20L28.8730408,23.5148332%20L28.9997797,23.6144141%20L29.1428,23.688762%20L29.2971381,23.7352421%20L29.4574188,23.7523006%20L29.618073,23.7393294%20L29.7735578,23.6967339%20L29.9184027,23.6260342%20L30.0476078,23.5296962%20L30.1567146,23.41103%20L30.2292391,23.2985452%20L30.2823397,23.2002818%20L30.285413,23.1945393%20L30.2884205,23.1887971%20L30.3898258,22.9940603%20L30.3928646,22.9882841%20L30.3957701,22.9824403%20L30.494237,22.7861833%20L30.4972083,22.780306%20L30.5000464,22.7743946%20L30.5955402,22.5766516%20L30.5984112,22.5707064%20L30.6012147,22.5646937%20L30.6936681,22.3654981%20L30.6964717,22.3594516%20L30.6991748,22.3533714%20L30.7885878,22.1527234%20L30.7912893,22.1466093%20L30.7939251,22.1404613%20L30.8802302,21.9383947%20L30.8828988,21.9321793%20L30.8854325,21.925964%20L30.9686297,21.7225123%20L30.9705217,21.7178167%20L30.9724138,21.7130878%20L31.012813,21.6108383%20L31.0140582,21.6076969%20L31.0152689,21.6045215%20L31.0548915,21.5019343%20L31.0561022,21.4987591%20L31.0573128,21.49555%20L31.0961243,21.3926588%20L31.0973004,21.3894499%20L31.0984765,21.3862408%20L31.1365114,21.2830118%20L31.1376875,21.279769%20L31.138829,21.2765601%20L31.17602,21.1729933%20L31.177196,21.1697505%20L31.1783029,21.1665077%20L31.2146827,21.0626031%20L31.2158242,21.0593603%20L31.2169311,21.0560836%20L31.2524998,20.951875%20L31.2536067,20.9485983%20L31.254679,20.9453217%20L31.2894366,20.8407753%20L31.2905088,20.8374987%20L31.2915811,20.8341884%20L31.3254965,20.729338%20L31.3265688,20.7260275%20L31.3276237,20.7227171%20L31.3606934,20.6175289%20L31.3617483,20.6142187%20L31.3627687,20.6108747%20L31.3950272,20.505416%20L31.3960476,20.502072%20L31.397068,20.498694%20L31.4284825,20.3929316%20L31.4294683,20.3895537%20L31.4304541,20.3862096%20L31.4610246,20.2801094%20L31.4620104,20.2767313%20L31.4629617,20.2733535%20L31.4926536,20.166983%20L31.4936048,20.1635714%20L31.494556,20.1601596%20L31.5234022,20.0534851%20L31.5243188,20.0500735%20L31.5252355,20.0466617%20L31.5532377,19.9396831%20L31.5541197,19.9362715%20L31.5550018,19.9328261%20L31.58216,19.8255773%20L31.5830074,19.8221318%20L31.5838549,19.8186863%20L31.6101345,19.7111336%20L31.610982,19.7076881%20L31.6117948,19.7042089%20L31.6371976,19.5963858%20L31.638045,19.5929065%20L31.6388233,19.5894273%20L31.6633475,19.4813341%20L31.6641604,19.4778211%20L31.664904,19.474308%20L31.6885497,19.3659446%20L31.6893279,19.3624315%20L31.6900716,19.3589186%20L31.7128041,19.2502849%20L31.7135477,19.246738%20L31.7142568,19.2432249%20L31.736147,19.1342872%20L31.7368561,19.1307742%20L31.7375306,19.1272274%20L31.7585076,19.0180195%20L31.7591821,19.0144727%20L31.759822,19.0109258%20L31.7798876,18.9014815%20L31.7805621,18.8979009%20L31.7811674,18.8943202%20L31.8003527,18.7846394%20L31.800958,18.7810589%20L31.8015633,18.7774444%20L31.8198371,18.6674934%20L31.8204078,18.6639128%20L31.8209786,18.6602983%20L31.8383409,18.5501108%20L31.8389117,18.5464966%20L31.8394478,18.5428821%20L31.8558642,18.4324243%20L31.8564003,18.4287763%20L31.8569018,18.4251618%20L31.8724067,18.3144676%20L31.8729083,18.3108194%20L31.8734098,18.3071714%20L31.8879687,18.1962406%20L31.8884357,18.1925926%20L31.8889026,18.1889444%20L31.9025501,18.0777771%20L31.9029824,18.0740952%20L31.9034148,18.0704472%20L31.9161162,17.9590098%20L31.9165486,17.9553616%20L31.9169118,17.9516797%20L31.9287,17.8400396%20L31.9290805,17.8363577%20L31.9294437,17.8326758%20L31.9402876,17.7207993%20L31.9406162,17.7170835%20L31.9409621,17.7134016%20L31.9508599,17.6012886%20L31.9511713,17.5976067%20L31.9514653,17.5938911%20L31.9604171,17.4815755%20L31.9606938,17.4778597%20L31.9609706,17.474144%20L31.9689418,17.361592%20L31.9692185,17.3578762%20L31.9694606,17.3541605%20L31.9764858,17.2414058%20L31.976728,17.2376562%20L31.9769355,17.2339406%20L31.9829818,17.1209493%20L31.9831893,17.1172336%20L31.9833623,17.1134841%20L31.9884297,17.000324%20L31.9886026,16.9965745%20L31.9887756,16.992825%20L31.992897,16.8794284%20L31.9930699,16.875679%20L31.9932429,16.8719295%20L31.9963508,16.7583302%20L31.9965237,16.7545808%20L31.9965237,16.7508313%20L31.9986856,16.6370294%20L31.9986856,16.6332799%20L31.9986856,16.6294966%20L31.9998271,16.5155258%20L31.9998271,16.5117426%20L31.9998271,16.5079931%20L32,16.3938196%20L32,16.3900363%20L32,16.3862531%20L31.9991525,16.2719107%20L31.9991525,16.2681274%20L31.9991525,16.2643441%20L31.9972951,16.1497991%20L31.9972951,16.1460158%20L31.9972951,16.1422326%20L31.9944241,16.0274849%20L31.9944241,16.0237016%20L31.9942512,16.0199183%20L31.9908389,15.9179053%20L31.9904065,15.7726888%20L31.9904065,15.7679597%20L31.9904065,15.7632644%20L31.9882101,15.6045363%20L31.9882101,15.5998748%20L31.9880371,15.5951795%20L31.9840852,15.4365188%20L31.9839123,15.4318235%20L31.9837393,15.427162%20L31.9780994,15.268569%20L31.9779265,15.2639075%20L31.977719,15.2592459%20L31.9708269,15.1108542%20L31.9483643,14.9512478%20L31.8967165,14.7985661%20L31.8175715,14.6581462%20L31.713802,14.5348186%20L31.5889206,14.4329407%20L31.4472856,14.355958%20L31.293826,14.3066405%20L31.1338826,14.2866095%20L30.972969,14.2966428%20Z%20M0.75999679,14.9570925%20L0.602518433,14.9914459%20L0.454160551,15.0544102%20L0.320023589,15.1438236%20L0.204836668,15.2565783%20L0.112585921,15.3887223%20L0.0464463497,15.5357291%20L0.00874878992,15.6924305%20L1.96620454e-15,15.8259932%20L0.00135125194,15.9365524%20L0.00141870212,15.9427339%20L0.00158819232,15.9489155%20L0.00739819519,16.1686826%20L0.00756768538,16.1748304%20L0.00780410691,16.1809782%20L0.0167556452,16.4007115%20L0.0169925855,16.4068255%20L0.0173298364,16.4129395%20L0.0293890639,16.6325715%20L0.0297263148,16.6386517%20L0.0301310159,16.644732%20L0.0452977942,16.8642288%20L0.0457024953,16.8702752%20L0.0462092364,16.8763555%20L0.0644498405,17.0956496%20L0.0649565816,17.1016961%20L0.0655307729,17.1077088%20L0.0868455487,17.3268003%20L0.0874543298,17.3327792%20L0.0880959712,17.338758%20L0.112484573,17.5576131%20L0.113126214,17.5635582%20L0.113869896,17.5695034%20L0.141298425,17.7880544%20L0.142042106,17.7939658%20L0.142853238,17.7999109%20L0.173288143,18.0180903%20L0.174132135,18.023968%20L0.175010717,18.0298792%20L0.208451997,18.2476533%20L0.20936344,18.2535308%20L0.210342332,18.2593746%20L0.246789988,18.4767434%20L0.24776888,18.4825872%20L0.248815223,18.4883972%20L0.288269255,18.7052931%20L0.289317327,18.711103%20L0.290431119,18.7169131%20L0.332823903,18.9332685%20L0.333972286,18.9390447%20L0.335188119,18.944821%20L0.380519655,19.1606358%20L0.381735488,19.1663782%20L0.383018771,19.1721207%20L0.43128906,19.3873276%20L0.432572343,19.3930702%20L0.433957666,19.3987787%20L0.485166707,19.6133438%20L0.486517441,19.6190525%20L0.487935624,19.6247275%20L0.542049866,19.8386168%20L0.543502639,19.8442581%20L0.545022862,19.8499329%20L0.602008233,20.0630793%20L0.603528457,20.0687204%20L0.60511613,20.0743614%20L0.665006529,20.2867309%20L0.666594202,20.292372%20L0.668249326,20.2979456%20L0.731011027,20.5095381%20L0.73266615,20.5151117%20L0.734388724,20.5206852%20L0.799987829,20.7314332%20L0.801710403,20.736973%20L0.803534498,20.7425129%20L0.871971007,20.9523488%20L0.873761377,20.9578886%20L0.875652922,20.9633946%20L0.946926836,21.1723186%20L0.948784829,21.1778246%20L0.950743997,21.1832967%20L1.02482159,21.3912411%20L1.02674703,21.3967134%20L1.02877382,21.4021518%20L1.1056551,21.6090827%20L1.10768189,21.6145213%20L1.10977613,21.6199597%20L1.18942736,21.8258097%20L1.1915216,21.8312482%20L1.19368346,21.8366529%20L1.27607074,22.0413882%20L1.27826651,22.0467929%20L1.28049582,22.0521638%20L1.36565306,22.2557843%20L1.36791627,22.2611553%20L1.37024711,22.2665262%20L1.4581065,22.4689307%20L1.46043734,22.4742677%20L1.46283562,22.4796049%20L1.55343125,22.6807934%20L1.55582971,22.6861305%20L1.55829544,22.691434%20L1.6515934,22.8913388%20L1.6540932,22.8966421%20L1.65662656,22.9019455%20L1.75262685,23.100533%20L1.75519411,23.1058026%20L1.75782881,23.1110721%20L1.78880436,23.1730231%20L1.87402904,23.3098624%20L1.98316949,23.4284609%20L2.11244226,23.5247652%20L2.25732092,23.5953973%20L2.41280638,23.6379253%20L2.57345991,23.6508628%20L2.73374195,23.6337367%20L2.88804496,23.587189%20L3.03103208,23.5128073%20L3.15773759,23.4131588%20L3.26377031,23.2917566%20L3.3453807,23.1527555%20L3.39983271,23.0010535%20L3.42513328,22.8418524%20L3.42047178,22.6807258%20L3.38601701,22.5232814%20L3.33558469,22.3993119%20L3.30771704,22.3436102%20L3.21617556,22.154278%20L3.12855241,21.9664998%20L3.0420441,21.7743979%20L2.9593865,21.5840862%20L2.87841792,21.3905318%20L2.80059079,21.1970787%20L2.72479045,21.0011935%20L2.65216528,20.8056798%20L2.58217482,20.6091528%20L2.51458282,20.4110719%20L2.44969316,20.2121129%20L2.3872355,20.0114647%20L2.32815571,19.812303%20L2.27160946,19.6118237%20L2.21715762,19.4083044%20L2.16611721,19.2065417%20L2.11798199,19.0047789%20L2.07190729,18.7995707%20L2.02873745,18.5939571%20L1.98891192,18.3907079%20L1.95138333,18.1842837%20L1.91702992,17.9795484%20L1.88531138,17.7729213%20L1.85673413,17.5680847%20L1.8307243,17.3607483%20L1.80765305,17.1533106%20L1.78745311,16.9458054%20L1.77022581,16.7385028%20L1.75590337,16.5309976%20L1.74451986,16.3235937%20L1.73610882,16.1162574%20L1.73063671,15.9091913%20L1.72935342,15.8049826%20L1.71239627,15.6447006%20L1.66598381,15.4903637%20L1.59170334,15.3472753%20L1.49219011,15.2205022%20L1.37085537,15.1143682%20L1.23195556,15.0326227%20L1.08028726,14.9780694%20L0.921120051,14.9525999%20L0.75999679,14.9570925%20Z%20M25.3452978,26.7863436%20L25.1890347,26.8257637%20L25.0427716,26.8935247%20L24.9326514,26.9696291%20L24.9179231,26.9815869%20L24.7547369,27.1105219%20L24.5894545,27.2375315%20L24.4212009,27.3632237%20L24.251325,27.4866525%20L24.0814509,27.6066023%20L23.9094477,27.7245929%20L23.7364986,27.8399149%20L23.5603394,27.9539193%20L23.3827967,28.0654918%20L23.2037667,28.1745985%20L23.0252105,28.2801245%20L22.8434461,28.3842657%20L22.6614776,28.4852989%20L22.4772123,28.5843056%20L22.2926756,28.6802722%20L22.1041886,28.7749888%20L21.9184378,28.8651792%20L21.7297139,28.9536467%20L21.5390634,29.0397835%20L21.3492257,29.1224411%20L21.1567177,29.2030718%20L20.9621499,29.2814056%20L20.7708594,29.3552807%20L20.5738253,29.4282436%20L20.3789531,29.4972881%20L20.1833389,29.5634615%20L19.9849195,29.6274391%20L19.7873113,29.6880389%20L19.5877781,29.7461391%20L19.3877035,29.801199%20L19.1864478,29.8534553%20L18.9874888,29.9020298%20L18.8357535,29.936721%20L18.6826658,29.9871194%20L18.5415704,30.0650479%20L18.4173981,30.1678378%20L18.3144397,30.2918747%20L18.2363082,30.432835%20L18.1857067,30.5858883%20L18.1643596,30.7456299%20L18.1730399,30.9065875%20L18.2114468,31.0631539%20L18.2782622,31.2098229%20L18.3711221,31.3415953%20L18.4868147,31.4538096%20L18.6213242,31.5426148%20L18.7699515,31.6049374%20L18.9275982,31.6385814%20L19.0887591,31.6423646%20L19.2211396,31.6227052%20L19.3785165,31.5867303%20L19.3847323,31.5853122%20L19.3909135,31.5838265%20L19.6042619,31.5317391%20L19.6104448,31.5302189%20L19.6165585,31.5286312%20L19.8291632,31.4734023%20L19.8352441,31.4718492%20L19.841325,31.4701595%20L20.0531203,31.4118568%20L20.0591666,31.410167%20L20.0651783,31.4084445%20L20.2761625,31.347034%20L20.2821414,31.3452775%20L20.2881219,31.3434535%20L20.4982275,31.2790366%20L20.5041389,31.2772125%20L20.5100503,31.2752871%20L20.7192773,31.2078302%20L20.7251559,31.2059386%20L20.7309998,31.2039456%20L20.9392479,31.1334823%20L20.9450919,31.1315231%20L20.9508684,31.1294626%20L21.1581705,31.0560605%20L21.163947,31.054%20L21.169656,31.0518719%20L21.3759446,30.9754973%20L21.3816537,30.9734029%20L21.387361,30.9712073%20L21.5926032,30.8918939%20L21.5982448,30.8896983%20L21.6038864,30.8874351%20L21.8080478,30.8052505%20L21.8136202,30.803021%20L21.8191943,30.8006902%20L22.0222401,30.7156344%20L22.0278143,30.7133036%20L22.033321,30.7109053%20L22.2352184,30.623012%20L22.2406905,30.6206137%20L22.2461626,30.6181478%20L22.4468788,30.5274509%20L22.4523163,30.5249849%20L22.457721,30.5224514%20L22.6572213,30.4289508%20L22.6625914,30.4264511%20L22.6679632,30.4238501%20L22.8661785,30.3275797%20L22.8715157,30.3250125%20L22.8768183,30.3223439%20L23.0737521,30.2233372%20L23.0790201,30.2207025%20L23.0842899,30.2179664%20L23.2798712,30.1162912%20L23.2851081,30.1135551%20L23.2903087,30.1107514%20L23.4845393,30.0064076%20L23.489707,30.0036039%20L23.4948764,30.0007665%20L23.6876871,29.8937204%20L23.692822,29.890883%20L23.6979222,29.8879441%20L23.8893147,29.7782971%20L23.8943821,29.7753921%20L23.8994478,29.7724196%20L24.0893547,29.6601714%20L24.0943875,29.6571651%20L24.0993874,29.654125%20L24.2877741,29.5393097%20L24.2927723,29.5362696%20L24.2977048,29.5331619%20L24.4845712,29.4157794%20L24.489502,29.4126718%20L24.4943999,29.4094965%20L24.6796786,29.2896143%20L24.6845437,29.2864391%20L24.689407,29.2831963%20L24.8730652,29.1608146%20L24.8778957,29.1575718%20L24.8826916,29.1542951%20L25.0646929,29.0294137%20L25.0694905,29.0261032%20L25.0742535,29.0227591%20L25.2545323,28.8954457%20L25.2592953,28.8921015%20L25.2640238,28.8886898%20L25.4425817,28.7589441%20L25.4472755,28.7555324%20L25.4519382,28.7520532%20L25.6287719,28.6199093%20L25.6334328,28.6164299%20L25.6380264,28.612883%20L25.8130371,28.4784083%20L25.8176652,28.4748616%20L25.8222242,28.4712472%20L25.9954103,28.3344418%20L25.999971,28.3308273%20L26.004497,28.3271454%20L26.0230424,28.3121137%20L26.1381279,28.1992576%20L26.230277,28.0670122%20L26.2963142,27.9199717%20L26.333877,27.7632365%20L26.3417479,27.6022452%20L26.3195551,27.4426049%20L26.2681425,27.2898218%20L26.189269,27.1492669%20L26.0856673,27.0257704%20L25.9609553,26.923656%20L25.8194552,26.846437%20L25.6660977,26.7968492%20L25.5061872,26.7765816%20L25.3452978,26.7863436%20Z%20M6.17479245,26.840863%20L6.02194186,26.8920046%20L5.88125168,26.9706763%20L5.75762,27.0740743%20L5.65530309,27.1986179%20L5.57788136,27.3399836%20L5.52802322,27.4932733%20L5.5074855,27.65315%20L5.51697747,27.8140399%20L5.55619508,27.9704036%20L5.62371963,28.1167686%20L5.71722028,28.2480343%20L5.81227471,28.3422781%20L5.85878853,28.3817321%20L5.86392304,28.3860896%20L5.86912501,28.3903459%20L6.03893274,28.5299549%20L6.04416843,28.5342449%20L6.04943802,28.5384673%20L6.22147524,28.675408%20L6.22549492,28.678617%20L6.22951461,28.6817246%20L6.31636069,28.7492154%20L6.31906302,28.7513097%20L6.32176535,28.7534039%20L6.4091858,28.8202192%20L6.41188813,28.8222797%20L6.41462436,28.8243402%20L6.5025851,28.8904798%20L6.50532133,28.8925403%20L6.50809111,28.8946008%20L6.5965925,28.9600647%20L6.59936245,28.9620915%20L6.60216596,28.9641183%20L6.6912078,29.0289066%20L6.69401148,29.0309334%20L6.69681516,29.0329602%20L6.7864312,29.0970392%20L6.78923488,29.0990658%20L6.79207228,29.1010589%20L6.88219506,29.1644285%20L6.88506637,29.1664214%20L6.88790377,29.1684145%20L6.97860074,29.2311086%20L6.98147204,29.2330677%20L6.98434317,29.2350269%20L7.07558061,29.2970117%20L7.07845191,29.2989709%20L7.08135694,29.30093%20L7.17313484,29.3621715%20L7.17603987,29.3641307%20L7.17897862,29.3660561%20L7.2712631,29.4265883%20L7.27420202,29.4285138%20L7.2771745,29.4304392%20L7.36999961,29.490262%20L7.37297209,29.4921537%20L7.37594474,29.4940453%20L7.46931031,29.5531588%20L7.47228279,29.5550505%20L7.47528917,29.5569083%20L7.56919521,29.6152787%20L7.57220159,29.6171365%20L7.57524169,29.6189943%20L7.6696543,29.6766215%20L7.6726944,29.6784456%20L7.6757345,29.6803036%20L7.77068775,29.7371537%20L7.77376158,29.7390117%20L7.77683557,29.7408019%20L7.87229539,29.7969429%20L7.87536922,29.7987331%20L7.87847694,29.8005235%20L7.97447723,29.8559212%20L7.97758495,29.8577116%20L7.98069268,29.859468%20L8.07723343,29.9140888%20L8.08034115,29.9158455%20L8.0834826,29.917602%20L8.18052992,29.9714459%20L8.18367137,29.9732024%20L8.18684671,29.9749249%20L8.28440077,30.027992%20L8.28757612,30.0297145%20L8.2907513,30.0314042%20L8.388846,30.0837281%20L8.39202117,30.0854161%20L8.39523024,30.0871058%20L8.49383151,30.1386191%20L8.49704041,30.1403088%20L8.50028321,30.1419639%20L8.59939121,30.1927003%20L8.60260029,30.1943554%20L8.60587681,30.1959759%20L8.70549156,30.2459353%20L8.70873435,30.2475558%20L8.71201088,30.2491763%20L8.81213237,30.298325%20L8.81540889,30.2999456%20L8.81871914,30.3015332%20L8.9193472,30.3498711%20L8.92262389,30.3514588%20L8.92593414,30.3530119%20L9.02710266,30.4005392%20L9.03041308,30.4021269%20L9.03375723,30.4036471%20L9.13536487,30.4503638%20L9.13870902,30.4519169%20L9.14208689,30.4534025%20L9.24420127,30.4993421%20L9.24757914,30.5008278%20L9.25095701,30.5023134%20L9.35357814,30.5474085%20L9.35695601,30.5488941%20L9.36036761,30.5503469%20L9.4634953,30.5945975%20L9.46690707,30.5960831%20L9.47031884,30.5975013%20L9.5739531,30.6409413%20L9.57736487,30.6423595%20L9.58081036,30.6437777%20L9.68491764,30.6863394%20L9.68836313,30.6877576%20L9.69180862,30.6891429%20L9.79642247,30.7308939%20L9.79990186,30.7322447%20L9.80334736,30.7335954%20L9.90846794,30.7745018%20L9.91194716,30.7758526%20L9.91542638,30.7771705%20L10.02102,30.8171987%20L10.0244992,30.8185494%20L10.0280123,30.8198327%20L10.1341127,30.8590164%20L10.1375919,30.8602997%20L10.1411385,30.861583%20L10.247678,30.8998884%20L10.2512249,30.9011389%20L10.2547378,30.9023893%20L10.3618177,30.9398504%20L10.3653308,30.9410663%20L10.3689114,30.9422821%20L10.4764303,30.978865%20L10.4799771,30.980048%20L10.4835577,30.9812309%20L10.5915835,31.0169354%20L10.5951301,31.0181184%20L10.5987109,31.0192668%20L10.7072093,31.0540593%20L10.7107899,31.0552077%20L10.7144044,31.0563232%20L10.8233758,31.0902373%20L10.8269564,31.0913529%20L10.8305709,31.0924667%20L10.9400152,31.1254688%20L10.9436297,31.1265498%20L10.947244,31.1276307%20L11.0571613,31.1597209%20L11.0607756,31.1608018%20L11.0644238,31.1618153%20L11.1748139,31.1930273%20L11.1784621,31.1940736%20L11.1821103,31.1950525%20L11.2655109,31.2178534%20L11.3469862,31.2460251%20L11.3505668,31.247241%20L11.3541474,31.2484568%20L11.462815,31.2849382%20L11.4663955,31.286154%20L11.4700098,31.287337%20L11.5787786,31.3228051%20L11.5823931,31.323988%20L11.5859736,31.3251018%20L11.6948777,31.3595903%20L11.698492,31.3607041%20L11.7020725,31.3618196%20L11.8111116,31.3952946%20L11.8147259,31.3964101%20L11.8183065,31.3974565%20L11.9274806,31.4299184%20L11.9310614,31.4309993%20L11.9346757,31.4320456%20L12.0439175,31.463494%20L12.0475318,31.4645421%20L12.0511461,31.4655556%20L12.1604892,31.4960244%20L12.1641037,31.4970379%20L12.1677517,31.4980168%20L12.2771962,31.5274721%20L12.2808105,31.528451%20L12.2844249,31.529397%20L12.3939706,31.5578729%20L12.3975851,31.5588189%20L12.4011993,31.5597304%20L12.5108464,31.5872265%20L12.5144608,31.588138%20L12.5180751,31.5890166%20L12.6277898,31.6155331%20L12.6314379,31.6164117%20L12.6350522,31.6172557%20L12.6388018,31.6180997%20L12.7985096,31.6398197%20L12.9595009,31.6315437%20L13.1161348,31.5935084%20L13.2629726,31.5270648%20L13.3949477,31.4345439%20L13.507466,31.3191205%20L13.5966092,31.1848146%20L13.6592696,31.0363215%20L13.693285,30.8787757%20L13.6974737,30.7176491%20L13.6717003,30.5585494%20L13.6168092,30.4069824%20L13.5347596,30.2682179%20L13.4283891,30.1471195%20L13.3014133,30.0478764%20L13.1581898,29.9739002%20L13.0340176,29.9346489%20L13.0340868,29.9344119%20L13.0305737,29.9335679%20L12.9268718,29.9085038%20L12.8243183,29.8827641%20L12.8219876,29.8821899%20L12.7268993,29.8574637%20L12.7255486,29.8570919%20L12.6246839,29.8299672%20L12.6231983,29.8295625%20L12.5225702,29.8015596%20L12.5210154,29.8011203%20L12.4181243,29.771496%20L12.3138481,29.7404868%20L12.2167669,29.7106937%20L12.2145711,29.7099846%20L12.1117812,29.6774892%20L12.0103762,29.6444194%20L11.9090389,29.6104037%20L11.8033777,29.5738885%20L11.7763883,29.5645655%20L11.7488919,29.5570327%20L11.6418796,29.52778%20L11.5379074,29.4983922%20L11.4342732,29.4680922%20L11.4322801,29.467518%20L11.3346584,29.4380627%20L11.2329832,29.4064116%20L11.1307,29.3736119%20L11.0288896,29.339968%20L10.926235,29.3050403%20L10.9257611,29.3048674%20L10.8297608,29.2712571%20L10.729099,29.2350798%20L10.6290451,29.1981254%20L10.627221,29.1974492%20L10.5325381,29.1615081%20L10.4373823,29.12452%20L10.4364034,29.1241153%20L10.33966,29.0855734%20L10.3375319,29.0846948%20L10.2391333,29.0444637%20L10.1409711,29.0033208%20L10.1387416,29.0023748%20L10.046626,28.9628531%20L9.94961238,28.9202239%20L9.85459168,28.8774934%20L9.75821973,28.8332089%20L9.75619293,28.8322628%20L9.66556359,28.7896336%20L9.57165754,28.7445046%20L9.47815689,28.6986326%20L9.38512909,28.6519836%20L9.29490513,28.6058075%20L9.29419604,28.6054357%20L9.19873622,28.5555775%20L9.110978,28.5087936%20L9.10861344,28.5075103%20L9.01974056,28.4591724%20L9.01886198,28.4586985%20L8.92482087,28.4065097%20L8.92269273,28.4053267%20L8.83594799,28.3562119%20L8.74883158,28.3059823%20L8.74737881,28.3051383%20L8.65945179,28.25349%20L8.65752635,28.2523416%20L8.5670997,28.1981599%20L8.48221261,28.1463765%20L8.47991567,28.1449237%20L8.39131294,28.0899314%20L8.30686514,28.036459%20L8.30517543,28.035378%20L8.21461353,27.9770077%20L8.21403934,27.9766359%20L8.1291187,27.9209002%20L8.12763307,27.9199213%20L8.04416485,27.8641857%20L7.96201399,27.8083826%20L7.96056122,27.8073691%20L7.87452575,27.7479178%20L7.79254386,27.6902906%20L7.79095618,27.6891423%20L7.70502206,27.6276979%20L7.70296154,27.6262123%20L7.62229701,27.5675042%20L7.54203787,27.508188%20L7.54075458,27.5072091%20L7.45630661,27.4437381%20L7.4540773,27.4420484%20L7.37753379,27.383543%20L7.37564208,27.3820902%20L7.29369391,27.3183828%20L7.13253364,27.1900559%20L6.97106932,27.0573376%20L6.93117617,27.0234571%20L6.79909973,26.931105%20L6.65216055,26.8648303%20L6.49545908,26.8269977%20L6.3345015,26.8189244%20L6.17479245,26.840863%20Z'%20transform='translate(0%20.358)'/%3e%3c/svg%3e";
const BpmnIconStartEventNone = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.8471717,7.88406834e-05%20C9.60965087,-0.020552156%203.62447576,4.00981668%201.25709426,9.77523116%20C-1.23514456,15.484537%200.0597832436,22.576917%204.41930493,27.0296373%20C8.61221567,31.5429555%2015.5204966,33.1995261%2021.3062012,31.0878052%20C27.302353,29.0459668%2031.7290665,23.1573702%2031.9696995,16.8195392%20C32.3733064,10.5918192%2028.7093692,4.3786264%2023.0992305,1.6658538%20C20.90243,0.569584071%2018.4492876,-0.00210217608%2015.9945664,0.0014079802%20C15.9454216,0.000741440984%2015.8962854,7.88406834e-05%2015.8471717,7.88406834e-05%20Z%20M16.2855738,1.7287868%20C22.3912366,1.76249767%2028.1416972,6.17946876%2029.7207729,12.0879597%20C31.398709,17.7411546%2029.1291173,24.2864974%2024.2578231,27.6347554%20C19.1976916,31.3540249%2011.6937985,31.0849363%206.91536564,27.0095066%20C2.100767,23.1708207%200.377390807,16.0704141%202.84760601,10.439726%20C4.98860143,5.23433676%2010.3629087,1.66462289%2015.9945664,1.73070234%20C16.0916455,1.7287868%2016.1886589,1.72844769%2016.2855738,1.7287868%20Z'%20transform='translate(0%20.004)'/%3e%3c/svg%3e";
const BpmnIconStartEventParallelMultiple = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.8471718,7.88404177e-05%20C9.60965096,-0.0205521218%203.62447587,4.00981689%201.25709438,9.775231%20C-1.23514479,15.4845371%200.0597835381,22.5769185%204.41930503,27.029637%20C8.61221542,31.542957%2015.5204967,33.1995258%2021.3062013,31.087805%20C27.3023531,29.0459649%2031.7290665,23.15737%2031.9696995,16.819539%20C32.3733064,10.5918194%2028.7093692,4.37862643%2023.0992305,1.66585385%20C20.9022658,0.569540023%2018.4494554,-0.00206864559%2015.9945664,0.00140796237%20C15.9454216,0.000741423154%2015.8962855,7.88404177e-05%2015.8471718,7.88404177e-05%20Z%20M16.2855738,1.72878683%20C22.3912366,1.76249754%2028.1416972,6.17946879%2029.7207729,12.0879595%20C31.398709,17.7411561%2029.1291174,24.2864955%2024.2578231,27.6347552%20C19.1976934,31.3540246%2011.6937982,31.0849361%206.91536574,27.0095063%20C2.10076746,23.1708205%200.377390581,16.0704174%202.84760612,10.4397258%20C4.98238264,5.23914873%2010.3700059,1.66089423%2015.9945664,1.73070239%20C16.0916456,1.72878683%2016.188659,1.72844773%2016.2855738,1.72878683%20Z%20M13.5043826,9.08013578%20L13.5043826,13.5071293%20L9.07738903,13.5071293%20L9.07738903,18.4874971%20L13.5043826,18.4874971%20L13.5043826,22.9144906%20L18.4847503,22.9144906%20L18.4847503,18.4874971%20L22.9117439,18.4874971%20L22.9117439,13.5070956%20L18.4847503,13.5070956%20L18.4847503,9.08013578%20L13.5043826,9.08013578%20Z%20M14.3344439,9.91019707%20L17.654689,9.91019707%20L17.654689,14.3371906%20L22.0816826,14.3371906%20L22.0816826,17.6574358%20L17.654689,17.6574358%20L17.654689,22.0844293%20L14.3344439,22.0844293%20L14.3344439,17.6314964%20L9.90745032,17.6314964%20L9.90745032,14.3371906%20L14.3344439,14.3371906%20L14.3344439,9.91019707%20Z'/%3e%3c/svg%3e";
const BpmnIconStartEventSignal = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M15.994575,0.00132330317%20C9.7041477,-0.0839938452%203.64311263,3.96434679%201.25709097,9.77515633%20C-1.23514711,15.4844603%200.0597912261,22.5768268%204.41931135,27.0295457%20C8.61222075,31.5428625%2015.5205166,33.1994152%2021.3062202,31.087695%20C27.3023684,29.0458573%2031.7290666,23.1572712%2031.9696995,16.8194423%20C32.3733063,10.5917249%2028.7093668,4.37853462%2023.0992299,1.66576271%20C20.9024301,0.569493505%2018.4492954,-0.00218686928%2015.994575,0.00132330317%20Z%20M15.994575,1.73061711%20C22.2076285,1.62256029%2028.1166462,6.08560804%2029.7207858,12.0878826%20C31.3987213,17.7410763%2029.1291217,24.2863946%2024.2578291,27.6346515%20C19.1976992,31.3539198%2011.6938239,31.08484%206.91539253,27.0094115%20C2.1007956,23.1707269%200.377390733,16.0703191%202.84760514,10.4396321%20C4.98859988,5.2342447%2010.3629189,1.66453768%2015.994575,1.73061711%20Z%20M15.994575,8.50728722%20C13.7265176,12.5783314%2011.4584666,16.6493783%209.19041187,20.7204247%20C13.7265204,20.7204247%2018.2626285,20.7204247%2022.7987374,20.7204247%20C20.5306838,16.6493783%2018.2626285,12.5783331%2015.994575,8.50728722%20Z%20M15.994575,10.2839002%20C17.7721455,13.4745261%2019.5497143,16.6651512%2021.3272848,19.8557778%20C17.7721455,19.8557778%2014.217005,19.8557778%2010.6618652,19.8557778%20C12.4394352,16.6651512%2014.217005,13.4745261%2015.994575,10.2839002%20Z'%20transform='translate(0%20.004)'/%3e%3c/svg%3e";
const BpmnIconStartEventTimer = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M16,-1.96647503e-15%20C7.17369652,-1.96647503e-15%200,7.17354627%200,15.9998978%20C0,24.826252%207.17368493,31.999967%2016,31.999967%20C24.8263126,31.999967%2032,24.826252%2032,15.9998978%20C32,7.17354645%2024.8263023,-1.96647503e-15%2016,-1.96647503e-15%20Z%20M16,1.7297298%20C23.8915044,1.7297298%2030.2702703,8.10835674%2030.2702703,15.9998978%20C30.2702703,23.8914421%2023.8914941,30.2702373%2016,30.2702373%20C8.10850387,30.2702373%201.72972973,23.8914421%201.72972973,15.9998978%20C1.72972973,8.10835674%208.10849228,1.7297298%2016,1.7297298%20Z%20M15.856621,8.40554057%20C12.8896412,8.42650524%2010.0602918,10.3754367%208.96679057,13.1326352%20C7.82879792,15.8275683%208.45792,19.1446503%2010.5042567,21.2354057%20C12.4939008,23.3773249%2015.7722257,24.1666767%2018.5182097,23.1628038%20C21.3957795,22.1824847%2023.5097392,19.3361106%2023.5859114,16.2925007%20C23.7392086,13.33561%2021.9621397,10.4119518%2019.2865211,9.15621629%20C18.2655204,8.66187856%2017.1322257,8.40451726%2015.9980074,8.40601347%20C15.950848,8.40537232%2015.9037163,8.40520777%2015.856621,8.40554057%20Z%20M16.1271957,9.78879729%20C18.8377894,9.80097771%2021.3806374,11.8043272%2022.012736,14.4448649%20C22.7167152,17.0224829%2021.5306517,19.9615947%2019.2216216,21.3121625%20C16.8639931,22.7918304%2013.5399709,22.3974762%2011.6039865,20.3935134%20C9.56093457,18.4225988%209.19711274,15.0125773%2010.764527,12.6489189%20C11.8746416,10.88552%2013.9135059,9.76949715%2015.9980074,9.78979726%20C16.0411088,9.788981%2016.0841704,9.78865892%2016.1271957,9.78879729%20Z%20M17.9598651,11.5544257%20C17.2685371,12.8086371%2016.5772056,14.0628493%2015.8858776,15.3170607%20C15.2453177,15.385174%2015.0931428,16.3569936%2015.6841548,16.6161832%20C16.0745531,16.8871679%2016.3803226,16.4364263%2016.7357094,16.4519592%20L19.9061829,16.4519592%20L19.9061829,15.5870944%20L16.7245613,15.5870944%20C17.3888069,14.3820264%2018.0530525,13.1769601%2018.7172982,11.971892%20C18.4648199,11.8327369%2018.2123434,11.6935807%2017.9598651,11.5544257%20Z'/%3e%3c/svg%3e";
const BpmnIconSubprocessCollapsed = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M5.63687711,0%20C2.52942949,0%200,2.52942931%200,5.63687711%20L0,21.0540126%20C0,24.1614597%202.52942949,26.6908884%205.63687711,26.6908884%20L26.3631224,26.6908884%20C29.4705712,26.6908884%2032,24.1614597%2032,21.0540126%20L32,5.63687711%20C32,2.52942931%2029.4705712,0%2026.3631224,0%20L5.63687711,0%20Z%20M5.63687711,1.77846862%20L26.3631224,1.77846862%20C28.5160618,1.77846862%2030.2215314,3.4839384%2030.2215314,5.63687711%20L30.2215314,21.0540126%20C30.2215314,23.2069502%2028.5160618,24.9124198%2026.3631224,24.9124198%20L22.161629,24.9124198%20L22.161629,13.6947983%20L9.83837034,13.6947983%20L9.83837034,14.2592202%20L9.83837034,24.9124198%20L5.63687711,24.9124198%20C3.4839384,24.9124198%201.77846862,23.2069502%201.77846862,21.0540126%20L1.77846862,5.63687711%20C1.77846862,3.4839384%203.4839384,1.77846862%205.63687711,1.77846862%20Z%20M10.9672115,14.8236404%20L21.0327887,14.8236404%20L21.0327887,24.8892161%20L10.9672115,24.8892161%20L10.9672115,14.8236404%20Z%20M15.1556093,16.2553414%20L15.1556093,17.0997672%20L15.1556093,19.0600078%20L13.1952994,19.0600078%20L12.3508741,19.0600078%20L12.3508741,20.7488932%20L13.1952994,20.7488932%20L15.1556093,20.7488932%20L15.1556093,22.7092386%20L15.1556093,23.5535595%20L16.8443901,23.5535595%20L16.8443901,22.7092386%20L16.8443901,20.7488932%20L18.8047001,20.7488932%20L19.6491259,20.7488932%20L19.6491259,19.0600078%20L18.8047001,19.0600078%20L16.8443901,19.0600078%20L16.8443901,17.0997672%20L16.8443901,16.2553414%20L15.1556093,16.2553414%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconSubprocessExpanded = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M5.63579855,2.02179691e-15%20C2.52848609,2.02179691e-15%202.02179691e-15,2.52831287%202.02179691e-15,5.63562498%20L2.02179691e-15,21.054313%20C2.02179691e-15,24.1616269%202.52848609,26.6901118%205.63579855,26.6901118%20L26.3642013,26.6901118%20C29.4715152,26.6901118%2032,24.1616269%2032,21.054313%20L32,5.63562498%20C32,2.52831287%2029.4715152,2.02179691e-15%2026.3642013,2.02179691e-15%20L5.63579855,2.02179691e-15%20Z%20M5.63579855,1.77776609%20L26.3642013,1.77776609%20C28.5170472,1.77776609%2030.2221991,3.48292668%2030.2221991,5.63562498%20L30.2221991,21.054313%20C30.2221991,23.2071856%2028.5170472,24.9123446%2026.3642013,24.9123446%20L22.161361,24.9123446%20L22.161361,14.2870484%20L22.161361,13.7225122%20L21.5968266,13.7225122%20L10.4031727,13.7225122%20L9.83863763,13.7225122%20L9.83863763,14.2870484%20L9.83863763,24.9123446%20L5.63579855,24.9123446%20C3.48295354,24.9123446%201.77780077,23.2071856%201.77780077,21.054313%20L1.77780077,5.63562498%20C1.77780077,3.48292668%203.48295354,1.77776609%205.63579855,1.77776609%20Z%20M10.9673604,14.8515827%20L21.0326391,14.8515827%20L21.0326391,24.9123446%20L10.9673604,24.9123446%20L10.9673604,14.8515827%20Z%20M12.3031685,18.848135%20L12.3031685,20.5590719%20L19.6967951,20.5590719%20L19.6967951,18.848135%20L12.3031685,18.848135%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconTaskNone = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M6.49417317,0%20C2.91556567,0%200,2.9032665%200,6.475%20L0,19.8583333%20C0,23.4300667%202.91556567,26.3333333%206.49417317,26.3333333%20L25.5058267,26.3333333%20C29.084435,26.3333333%2032,23.4300667%2032,19.8583333%20L32,6.475%20C32,2.9032665%2029.084435,0%2025.5058267,0%20L6.49417317,0%20Z%20M6.49417317,2%20L25.5058267,2%20C28.0147767,2%2030,3.9804335%2030,6.475%20L30,19.8583333%20C30,22.3529%2028.0147767,24.3333333%2025.5058267,24.3333333%20L6.49417317,24.3333333%20C3.98522283,24.3333333%202,22.3529%202,19.8583333%20L2,6.475%20C2,3.9804335%203.98522283,2%206.49417317,2%20Z'%20transform='translate(0%202.667)'/%3e%3c/svg%3e";
const BpmnIconTextAnnotation = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M22.0872067,0%20L22.0872067,0.894012542%20L22.0872067,15.823025%20L22.0872067,30.7525922%20L22.0872067,31.6466029%20L22.9812174,31.6466029%20L31.1065405,31.6466029%20L32,31.6466029%20L32,29.8591326%20L31.1065405,29.8591326%20L23.8746769,29.8591326%20L23.8746769,15.823025%20L23.8746769,1.78802508%20L31.1065405,1.78802508%20L32,1.78802508%20L32,0%20L31.1065405,0%20L22.9812174,0%20L22.0872067,0%20L22.0872067,0%20Z%20M19.163109,13.9989956%20L16.4256802,16.1664498%20L18.5931353,18.9038786%20L21.3305623,16.7369783%20L19.163109,13.9989956%20Z%20M13.6876976,18.3339049%20L10.9502689,20.5013582%20L13.1177231,23.238787%20L15.8551518,21.0713319%20L13.6876976,18.3339049%20Z%20M8.21284012,22.6688116%20L5.47541139,24.8362666%20L7.64286559,27.5736954%20L10.3802943,25.4062421%20L8.21284012,22.6688116%20L8.21284012,22.6688116%20Z%20M2.73742874,27.0037217%20L-2.05329146e-16,29.171175%20L2.1674542,31.9086038%20L4.90488294,29.7411487%20L2.73742874,27.0037217%20Z'/%3e%3c/svg%3e";
const BpmnIconTransaction = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20d='M5.42222222,0%20C2.42907378,0%200,2.42907378%200,5.42222222%20L0,21.2444444%20C0,24.2375929%202.42907378,26.6666667%205.42222222,26.6666667%20L26.5777778,26.6666667%20C29.5709262,26.6666667%2032,24.2375929%2032,21.2444444%20L32,5.42222222%20C32,2.42907378%2029.5709262,0%2026.5777778,0%20L5.42222222,0%20Z%20M5.42222222,1.24444444%20L26.5777778,1.24444444%20C28.9030293,1.24444444%2030.7555556,3.09697049%2030.7555556,5.42222222%20L30.7555556,21.2444444%20C30.7555556,23.569696%2028.9030293,25.4222222%2026.5777778,25.4222222%20L5.42222222,25.4222222%20C3.09697067,25.4222222%201.24444444,23.569696%201.24444444,21.2444444%20L1.24444444,5.42222222%20C1.24444444,3.09697049%203.09697067,1.24444444%205.42222222,1.24444444%20Z%20M6.47833333,3.02222222%20C4.62381138,3.02222222%203.11111111,4.53408978%203.11111111,6.38822916%20L3.11111111,20.2784729%20C3.11111111,22.1326116%204.62381138,23.6444444%206.47833333,23.6444444%20L25.5216676,23.6444444%20C27.3761884,23.6444444%2028.8888889,22.1326116%2028.8888889,20.2784729%20L28.8888889,6.38822916%20C28.8888889,4.53408978%2027.3761884,3.02222222%2025.5216676,3.02222222%20L6.47833333,3.02222222%20Z%20M6.47833333,4.26666667%20L25.5216676,4.26666667%20C26.708592,4.26666667%2027.6444444,5.20228658%2027.6444444,6.38822916%20L27.6444444,20.2784729%20C27.6444444,21.4644142%2026.7085902,22.4%2025.5216676,22.4%20L6.47833333,22.4%20C5.29140818,22.4%204.35555556,21.4644142%204.35555556,20.2784729%20L4.35555556,6.38822916%20C4.35555556,5.20228658%205.29140818,4.26666667%206.47833333,4.26666667%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const BpmnIconUserTask = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cpath%20fill-rule='evenodd'%20d='M10.2627541,4.46821526%20C8.56533304,4.46821526%207.35103844,5.77309525%207.34763254,7.25944235%20L7.34763254,7.25987227%20L7.34763254,7.26028399%20C7.34773978,7.70977831%207.46936895,8.18416901%207.65939789,8.61205296%20C7.79660923,8.92100854%207.96720381,9.2050437%208.17507967,9.43258076%20C6.93963507,9.85525001%205.492251,10.550889%204.76067711,11.9225898%20L4.72125525,11.9965151%20L4.72125525,16.4368954%20L15.804253,16.4368954%20L15.804253,11.9965151%20L15.7648311,11.9225898%20C15.0437794,10.5706182%2013.627715,9.87594759%2012.4042124,9.45152479%20C13.0014917,8.8441609%2013.1776841,8.06023007%2013.1778756,7.2602839%20L13.1778756,7.25987217%20L13.1778756,7.25944226%20C13.1744697,5.77309534%2011.9601753,4.46821526%2010.2627541,4.46821526%20Z%20M9.10379314,6.05093028%20C9.18225435,6.05113956%209.26839763,6.05376041%209.36336394,6.05935773%20C10.1200055,6.10395505%2010.3746594,6.24015394%2010.5704057,6.36932788%20C10.7661511,6.49850182%2010.9041433,6.62146651%2011.4214536,6.63654733%20L11.4216068,6.63654733%20L11.4217791,6.63654733%20C11.8249005,6.62146871%2012.0187682,6.54959631%2012.1577964,6.46818171%20C12.2141325,6.43519172%2012.2614366,6.40089647%2012.3099107,6.36814968%20C12.4380369,6.64278081%2012.5068395,6.94637031%2012.5076189,7.26056444%20C12.5073508,8.15524712%2012.3535399,8.78179824%2011.5331999,9.29451074%20L11.6134465,9.89935919%20C11.7841936,9.95121105%2011.9606895,10.008105%2012.1398252,10.0704926%20C12.1648426,10.1748606%2012.1937475,10.3117461%2012.2131894,10.457268%20C12.2335563,10.6097242%2012.2415667,10.7683466%2012.2290101,10.8874483%20C12.2164535,11.0065501%2012.1794751,11.0708458%2012.1729823,11.0773396%20C11.7560232,11.4942977%2011.0158848,11.7374678%2010.2651555,11.7374678%20C9.51442659,11.7374678%208.7742882,11.4942977%208.35732926,11.0773396%20C8.35083639,11.0708458%208.31385738,11.0065501%208.3013008,10.8874483%20C8.28874431,10.7683466%208.29675452,10.6097242%208.31712196,10.457268%20C8.33667036,10.3109427%208.36580528,10.1732502%208.39091634,10.0686786%20C8.56826288,10.0070052%208.74298493,9.95070847%208.91207758,9.89935919%20L8.95991486,9.25125516%20C8.92096399,9.20130191%208.88127613,9.16820937%208.83390707,9.13267168%20C8.65082188,8.99531604%208.42879176,8.69314546%208.27195886,8.3400085%20C8.11518189,7.98699745%208.01805136,7.58349734%208.01790496,7.26048966%20C8.01887911,6.87323765%208.12309309,6.50204876%208.31450379,6.1814196%20C8.34875231,6.16867162%208.38486727,6.15519833%208.42545719,6.14184818%20C8.56819863,6.09489993%208.76380268,6.05008747%209.1038008,6.05093028%20L9.10379314,6.05093028%20Z%20M7.65464785,10.355422%20C7.65404559,10.3598153%207.65336682,10.364103%207.65277777,10.3685128%20C7.62800845,10.5539176%207.61345386,10.7557287%207.63474988,10.9577275%20C7.65604589,11.1597262%207.7093452,11.3772077%207.88339921,11.551261%20C8.47750275,12.1453652%209.37662055,12.4077139%2010.2651479,12.4077139%20C11.1536749,12.4077139%2012.0527928,12.1453652%2012.6468961,11.551261%20C12.8209504,11.3772077%2012.8742502,11.1597262%2012.8955459,10.9577275%20C12.9168415,10.7557277%2012.9022876,10.5539176%2012.8775182,10.3685128%20C12.8770299,10.3648589%2012.876463,10.3613088%2012.8759661,10.3576661%20C13.779206,10.7537716%2014.6522599,11.3210535%2015.1340069,12.1680416%20L15.1340069,15.7666493%20L13.5302038,15.7666493%20L13.5302038,13.2292891%20L12.8599577,13.2292891%20L12.8599577,15.7666493%20L7.65118814,15.7666493%20L7.65118814,13.2292891%20L6.98094205,13.2292891%20L6.98094205,15.7666493%20L5.39150133,15.7666493%20L5.39150133,12.1680416%20C5.87415617,11.3194564%206.74959206,10.7516277%207.65464785,10.355422%20Z%20M6.49417325,0%20C2.91556566,0%200,2.90326648%200,6.47500003%20L0,19.8583331%20C0,23.4300669%202.91556566,26.3333335%206.49417325,26.3333335%20L25.5058267,26.3333335%20C29.0844353,26.3333335%2032,23.4300669%2032,19.8583331%20L32,6.47500003%20C32,2.90326648%2029.0844353,0%2025.5058267,0%20L6.49417325,0%20Z%20M6.49417325,2.00000006%20L25.5058267,2.00000006%20C28.0147771,2.00000006%2030,3.98043352%2030,6.47500003%20L30,19.8583331%20C30,22.3529%2028.0147771,24.3333336%2025.5058267,24.3333336%20L6.49417325,24.3333336%20C3.98522269,24.3333336%202.00000003,22.3529%202.00000003,19.8583331%20L2.00000003,6.47500003%20C2.00000003,3.98043352%203.98522269,2.00000006%206.49417325,2.00000006%20Z'%20transform='translate(0%203)'/%3e%3c/svg%3e";
const ImageIndexes = {
  Association: BpmnIconAssociation,
  BusinessRuleTask: BpmnIconBusinessRuleTask,
  CallActivity: BpmnIconCallActivity,
  Collaboration: BpmnIconCollaboration,
  ConditionalFlow: BpmnIconConditionalFlow,
  SequenceFlow: BpmnIconConnection,
  DataInput: BpmnIconDataInput,
  DataInputAssociation: BpmnIconDataInputOutputAssociation,
  DataOutput: BpmnIconDataOutput,
  DataOutputAssociation: BpmnIconDataInputOutputAssociation,
  DataObjectReference: BpmnIconDataObject,
  DataStoreReference: BpmnIconDataStore,
  DefaultFlow: BpmnIconDefaultFlow,
  CancelEndEvent: BpmnIconEndEventCancel,
  CompensateEndEvent: BpmnIconEndEventCompensation,
  ErrorEndEvent: BpmnIconEndEventError,
  EscalationEndEvent: BpmnIconEndEventEscalation,
  LinkEndEvent: BpmnIconEndEventLink,
  MessageEndEvent: BpmnIconEndEventMessage,
  MultipleEndEvent: BpmnIconEndEventMultiple,
  EndEvent: BpmnIconEndEventNone,
  SignalEndEvent: BpmnIconEndEventSignal,
  TerminateEndEvent: BpmnIconEndEventTerminate,
  EventSubProcess: BpmnIconEventSubprocessExpanded,
  ComplexGateway: BpmnIconGatewayComplex,
  EventBasedGateway: BpmnIconGatewayEventbased,
  ExclusiveGateway: BpmnIconGatewayXor,
  Gateway: BpmnIconGatewayNone,
  InclusiveGateway: BpmnIconGatewayOr,
  ParallelGateway: BpmnIconGatewayParallel,
  Group: BpmnIconGroup,
  CancelIntermediateCatchEvent: BpmnIconIntermediateEventCatchCancel,
  CompensateIntermediateCatchEvent: BpmnIconIntermediateEventCatchCompensation,
  ConditionalIntermediateCatchEvent: BpmnIconIntermediateEventCatchCondition,
  ErrorIntermediateCatchEvent: BpmnIconIntermediateEventCatchError,
  EscalationIntermediateCatchEvent: BpmnIconIntermediateEventCatchEscalation,
  LinkIntermediateCatchEvent: BpmnIconIntermediateEventCatchLink,
  MessageIntermediateCatchEvent: BpmnIconIntermediateEventCatchMessage,
  MultipleIntermediateCatchEvent: BpmnIconIntermediateEventCatchMultiple,
  ConditionalIntermediateCatchEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingCondition,
  EscalationIntermediateCatchEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingEscalation,
  MessageIntermediateCatchEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingMessage,
  MultipleIntermediateCatchEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingMultiple,
  ParallelIntermediateCatchEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingParallel,
  SignalIntermediateCatchEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingSignal,
  TimerIntermediateCatchEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingTimer,
  ParallelMultipleIntermediateCatchEvent: BpmnIconIntermediateEventCatchParallelMultiple,
  SignalIntermediateCatchEvent: BpmnIconIntermediateEventCatchSignal,
  TimerIntermediateCatchEvent: BpmnIconIntermediateEventCatchTimer,
  IntermediateThrowEvent: BpmnIconIntermediateEventNone,
  CompensateIntermediateThrowEvent: BpmnIconIntermediateEventThrowCompensation,
  EscalationIntermediateThrowEvent: BpmnIconIntermediateEventThrowEscalation,
  LinkIntermediateThrowEvent: BpmnIconIntermediateEventThrowLink,
  MessageIntermediateThrowEvent: BpmnIconIntermediateEventThrowMessage,
  MultipleIntermediateThrowEvent: BpmnIconIntermediateEventThrowMultiple,
  SignalIntermediateThrowEvent: BpmnIconIntermediateEventThrowSignal,
  Lane: BpmnIconLane,
  ManualTask: BpmnIconManualTask,
  MessageFlow: BpmnIconMessageFlow,
  Participant: BpmnIconParticipant,
  Process: BpmnIconProcess,
  ReceiveTask: BpmnIconReceiveTask,
  ScriptTask: BpmnIconScriptTask,
  SendTask: BpmnIconSendTask,
  ServiceTask: BpmnIconServiceTask,
  CompensateStartEvent: BpmnIconStartEventCompensation,
  ConditionalStartEvent: BpmnIconStartEventCondition,
  ErrorStartEvent: BpmnIconStartEventError,
  EscalationStartEvent: BpmnIconStartEventEscalation,
  MessageStartEvent: BpmnIconStartEventMessage,
  MultipleStartEvent: BpmnIconStartEventMultiple,
  ConditionalStartEventNonInterrupting: BpmnIconStartEventNonInterruptingCondition,
  EscalationStartEventNonInterrupting: BpmnIconStartEventNonInterruptingEscalation,
  MessageStartEventNonInterrupting: BpmnIconStartEventNonInterruptingMessage,
  MultipleStartEventNonInterrupting: BpmnIconStartEventNonInterruptingMultiple,
  ParallelMultipleStartEventNonInterrupting: BpmnIconStartEventNonInterruptingParallelMultiple,
  SignalStartEventNonInterrupting: BpmnIconStartEventNonInterruptingSignal,
  TimerStartEventNonInterrupting: BpmnIconStartEventNonInterruptingTimer,
  CancelBoundaryEvent: BpmnIconIntermediateEventCatchCancel,
  CompensateBoundaryEvent: BpmnIconIntermediateEventCatchCompensation,
  ConditionalBoundaryEvent: BpmnIconIntermediateEventCatchCondition,
  ErrorBoundaryEvent: BpmnIconIntermediateEventCatchError,
  EscalationBoundaryEvent: BpmnIconIntermediateEventCatchEscalation,
  LinkBoundaryEvent: BpmnIconIntermediateEventCatchLink,
  MessageBoundaryEvent: BpmnIconIntermediateEventCatchMessage,
  MultipleBoundaryEvent: BpmnIconIntermediateEventCatchMultiple,
  BoundaryEvent: BpmnIconIntermediateEventNone,
  ConditionalBoundaryEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingCondition,
  EscalationBoundaryEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingEscalation,
  MessageBoundaryEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingMessage,
  MultipleBoundaryEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingMultiple,
  ParallelBoundaryEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingParallel,
  SignalBoundaryEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingSignal,
  TimerBoundaryEventNonInterrupting: BpmnIconIntermediateEventCatchNonInterruptingTimer,
  ParallelMultipleBoundaryEvent: BpmnIconIntermediateEventCatchParallelMultiple,
  SignalBoundaryEvent: BpmnIconIntermediateEventCatchSignal,
  TimerBoundaryEvent: BpmnIconIntermediateEventCatchTimer,
  StartEvent: BpmnIconStartEventNone,
  ParallelMultipleStartEvent: BpmnIconStartEventParallelMultiple,
  SignalStartEvent: BpmnIconStartEventSignal,
  TimerStartEvent: BpmnIconStartEventTimer,
  CollapsedSubProcess: BpmnIconSubprocessCollapsed,
  CollapsedAdHocSubProcess: BpmnIconSubprocessCollapsed,
  ExpandedSubProcess: BpmnIconSubprocessExpanded,
  ExpandedAdHocSubProcess: BpmnIconSubprocessExpanded,
  Task: BpmnIconTaskNone,
  TextAnnotation: BpmnIconTextAnnotation,
  Transaction: BpmnIconTransaction,
  UserTask: BpmnIconUserTask
};
const getAssetsFile = (url) => {
  return new URL((/* @__PURE__ */ Object.assign({}))[`../../../static/images/bpmn-icons-svg/${url}.svg`], import.meta.url).href;
};
const getBpmnIcon = (index2) => {
  const name2 = ImageIndexes[index2];
  return name2;
};
const getRawType = (type) => {
  return type.split(":")[1];
};
const getEventDefinition = (businessObject) => {
  const eventDefinitions = businessObject.eventDefinitions;
  return eventDefinitions && eventDefinitions[0];
};
const getEventDefinitionRawType = (eventDefinition) => {
  const rawType = getRawType(eventDefinition.$type);
  return rawType.replace("EventDefinition", "");
};
const isDefaultFlow = (element) => {
  const businessObject = getBusinessObject(element);
  const sourceBusinessObject = getBusinessObject(element.source);
  if (!is$g(element, "bpmn:SequenceFlow") || !sourceBusinessObject)
    return false;
  return sourceBusinessObject.default && sourceBusinessObject.default === businessObject && (is$g(sourceBusinessObject, "bpmn:Gateway") || is$g(sourceBusinessObject, "bpmn:Activity"));
};
const isConditionalFlow = (element) => {
  const businessObject = getBusinessObject(element);
  const sourceBusinessObject = getBusinessObject(element.source);
  if (!is$g(element, "bpmn:SequenceFlow") || !sourceBusinessObject)
    return false;
  return businessObject.conditionExpression && is$g(sourceBusinessObject, "bpmn:Activity");
};
const parseElementType = (element) => {
  const { type: elementType } = element;
  let type = getRawType(elementType);
  const businessObject = getBusinessObject(element);
  const eventDefinition = getEventDefinition(businessObject);
  if (eventDefinition) {
    type = `${getEventDefinitionRawType(eventDefinition)}${type}`;
    if (is$g(element, "bpmn:StartEvent") && !isInterrupting(element) || is$g(element, "bpmn:BoundaryEvent") && businessObject.cancelActivity === false) {
      type = `${type}NonInterrupting`;
    }
    return type;
  }
  if (is$g(element, "bpmn:SubProcess") && !is$g(element, "bpmn:Transaction")) {
    if (isEventSubProcess(element)) {
      type = `Event${type}`;
    } else {
      const expanded = isExpanded(element) && !isPlane(element);
      type = `${expanded ? "Expanded" : "Collapsed"}${type}`;
    }
  }
  if (isDefaultFlow(element)) {
    type = "DefaultFlow";
  }
  if (isConditionalFlow(element)) {
    type = "ConditionalFlow";
  }
  return type;
};
const LOW_PRIORITY = 500;
function HerodotusPropertiesProvider(propertiesPanel, translate2, eventBus) {
  this.getGroups = function(element) {
    const elementTypeName = parseElementType(element);
    const elementRawTypeName = getRawType(element.type);
    const isMultiInstance = !lodash.isEmpty(element.businessObject.loopCharacteristics) && element.businessObject.loopCharacteristics.$type === "bpmn:MultiInstanceLoopCharacteristics";
    const elementTitle = translate2(elementRawTypeName) + "(" + lodash.upperCase(elementRawTypeName) + ")";
    const elementIcon = getBpmnIcon(elementTypeName);
    const elementCaption = element.businessObject.name;
    return function(groups) {
      eventBus.fire("herodotus.element.changed", {
        panelGroups: groups,
        elementType: element.type,
        elementRawType: elementRawTypeName,
        activeElement: element,
        activeElementId: element.id,
        elementTitle,
        elementIcon,
        elementCaption,
        isMultiInstance
      });
      Logger.prettyPrimary("Selected element changed", `ID: ${element.id} , type: ${element.type}`);
      Logger.prettyInfo("Selected element businessObject", element.businessObject);
      return groups;
    };
  };
  propertiesPanel.registerProvider(LOW_PRIORITY, this);
}
HerodotusPropertiesProvider.$inject = ["propertiesPanel", "translate", "eventBus"];
const HerodotusPropertiesProviderModule = {
  __init__: ["herodotusPropertiesProvider"],
  herodotusPropertiesProvider: ["type", HerodotusPropertiesProvider]
};
const tasks = {
  Task: "任务",
  "Send Task": "发送任务",
  "Receive Task": "接收任务",
  "User Task": "用户任务",
  "Manual Task": "手工任务",
  "Business Rule Task": "业务规则任务",
  "Service Task": "服务任务",
  "Script Task": "脚本任务",
  "Call Activity": "调用活动",
  "Sub Process (collapsed)": "子流程（折叠的）",
  "Sub Process (expanded)": "子流程（展开的）",
  "Start Event": "开始事件",
  "Intermediate Throw Event": "中间事件",
  "End Event": "结束事件",
  StartEvent: "开始事件",
  EndEvent: "结束事件",
  SendTask: "发送任务",
  ReceiveTask: "接收任务",
  UserTask: "用户任务",
  ManualTask: "手工任务",
  BusinessRuleTask: "业务规则任务",
  ServiceTask: "服务任务",
  ScriptTask: "脚本任务",
  CallActivity: "调用活动",
  SubProcess: "子流程"
};
const events = {
  StartEvent: "开始事件",
  EndEvent: "结束事件",
  IntermediateThrowEvent: "中间抛出事件",
  IntermediateCatchEvent: "中间捕获事件",
  "Message Start Event": "消息开始事件",
  "Timer Start Event": "定时开始事件",
  "Conditional Start Event": "条件开始事件",
  "Signal Start Event": "信号开始事件",
  "Error Start Event": "错误开始事件",
  "Escalation Start Event": "升级开始事件",
  "Compensation Start Event": "补偿开始事件",
  "Message Start Event (non-interrupting)": "消息开始事件（非中断）",
  "Timer Start Event (non-interrupting)": "定时开始事件（非中断）",
  "Conditional Start Event (non-interrupting)": "条件开始事件（非中断）",
  "Signal Start Event (non-interrupting)": "信号开始事件（非中断）",
  "Escalation Start Event (non-interrupting)": "升级开始事件（非中断）",
  "Message Intermediate Catch Event": "消息中间捕获事件",
  "Message Intermediate Throw Event": "消息中间抛出事件",
  "Timer Intermediate Catch Event": "定时中间捕获事件",
  "Escalation Intermediate Throw Event": "升级中间抛出事件",
  "Conditional Intermediate Catch Event": "条件中间捕获事件",
  "Link Intermediate Catch Event": "链接中间捕获事件",
  "Link Intermediate Throw Event": "链接中间抛出事件",
  "Compensation Intermediate Throw Event": "补偿中间抛出事件",
  "Signal Intermediate Catch Event": "信号中间捕获事件",
  "Signal Intermediate Throw Event": "信号中间抛出事件",
  "Message End Event": "消息结束事件",
  "Escalation End Event": "定时结束事件",
  "Error End Event": "错误结束事件",
  "Cancel End Event": "取消结束事件",
  "Compensation End Event": "补偿结束事件",
  "Signal End Event": "信号结束事件",
  "Terminate End Event": "终止结束事件",
  "Message Boundary Event": "消息边界事件",
  "Message Boundary Event (non-interrupting)": "消息边界事件（非中断）",
  "Timer Boundary Event": "定时边界事件",
  "Timer Boundary Event (non-interrupting)": "定时边界事件（非中断）",
  "Escalation Boundary Event": "升级边界事件",
  "Escalation Boundary Event (non-interrupting)": "升级边界事件（非中断）",
  "Conditional Boundary Event": "条件边界事件",
  "Conditional Boundary Event (non-interrupting)": "条件边界事件（非中断）",
  "Error Boundary Event": "错误边界事件",
  "Cancel Boundary Event": "取消边界事件",
  "Signal Boundary Event": "信号边界事件",
  "Signal Boundary Event (non-interrupting)": "信号边界事件（非中断）",
  "Compensation Boundary Event": "补偿边界事件"
};
const gateway = {
  Gateway: "网关",
  "Exclusive Gateway": "互斥网关",
  "Parallel Gateway": "并行网关",
  "Inclusive Gateway": "相容网关",
  "Complex Gateway": "复杂网关",
  "Event based Gateway": "事件网关",
  ExclusiveGateway: "互斥网关",
  ParallelGateway: "并行网关",
  InclusiveGateway: "相容网关",
  ComplexGateway: "复杂网关",
  EventBasedGateway: "事件网关"
};
const lint = {
  Errors: "错误",
  Warnings: "警告"
};
const other = {
  Process: "业务流程",
  "Append EndEvent": "追加结束事件",
  "Append Gateway": "追加网关",
  "Append Task": "追加任务",
  "Append Intermediate/Boundary Event": "追加中间抛出事件/边界事件",
  "Activate the global connect tool": "激活全局连接工具",
  "Append {type}": "添加 {type}",
  "Add Lane above": "在上面添加道",
  "Divide into two Lanes": "分割成两个道",
  "Divide into three Lanes": "分割成三个道",
  "Add Lane below": "在下面添加道",
  "Append compensation activity": "追加补偿活动",
  "Change type": "修改类型",
  "Connect using Association": "使用关联连接",
  "Connect using Sequence/MessageFlow or Association": "使用顺序/消息流或者关联连接",
  "Connect using DataInputAssociation": "使用数据输入关联连接",
  Remove: "移除",
  "Activate the hand tool": "激活抓手工具",
  "Activate the lasso tool": "激活套索工具",
  "Activate the create/remove space tool": "激活创建/删除空间工具",
  "Create expanded SubProcess": "创建扩展子过程",
  "Create IntermediateThrowEvent/BoundaryEvent": "创建中间抛出事件/边界事件",
  "Create Pool/Participant": "创建池/参与者",
  "Parallel Multi Instance": "并行多重事件",
  "Sequential Multi Instance": "时序多重事件",
  DataObjectReference: "数据对象参考",
  DataStoreReference: "数据存储参考",
  Loop: "循环",
  "Ad-hoc": "即席",
  "Create {type}": "创建 {type}",
  "Create StartEvent": "创建开始事件",
  "Create EndEvent": "创建结束事件",
  "Create Task": "创建任务",
  "Create User Task": "创建用户任务",
  "Create Gateway": "创建网关",
  "Create DataObjectReference": "创建数据对象",
  "Create DataStoreReference": "创建数据存储",
  "Create Group": "创建分组",
  "Create Intermediate/Boundary Event": "创建中间/边界事件",
  "Message Start Event": "消息开始事件",
  "Timer Start Event": "定时开始事件",
  "Conditional Start Event": "条件开始事件",
  "Signal Start Event": "信号开始事件",
  "Error Start Event": "错误开始事件",
  "Escalation Start Event": "升级开始事件",
  "Compensation Start Event": "补偿开始事件",
  "Message Start Event (non-interrupting)": "消息开始事件（非中断）",
  "Timer Start Event (non-interrupting)": "定时开始事件（非中断）",
  "Conditional Start Event (non-interrupting)": "条件开始事件（非中断）",
  "Signal Start Event (non-interrupting)": "信号开始事件（非中断）",
  "Escalation Start Event (non-interrupting)": "升级开始事件（非中断）",
  "Message Intermediate Catch Event": "消息中间捕获事件",
  "Message Intermediate Throw Event": "消息中间抛出事件",
  "Timer Intermediate Catch Event": "定时中间捕获事件",
  "Escalation Intermediate Throw Event": "升级中间抛出事件",
  "Conditional Intermediate Catch Event": "条件中间捕获事件",
  "Link Intermediate Catch Event": "链接中间捕获事件",
  "Link Intermediate Throw Event": "链接中间抛出事件",
  "Compensation Intermediate Throw Event": "补偿中间抛出事件",
  "Signal Intermediate Catch Event": "信号中间捕获事件",
  "Signal Intermediate Throw Event": "信号中间抛出事件",
  "Collapsed Pool": "折叠池",
  "Expanded Pool": "展开池",
  "no parent for {element} in {parent}": "在{parent}里，{element}没有父类",
  "no shape type specified": "没有指定的形状类型",
  "flow elements must be children of pools/participants": "流元素必须是池/参与者的子类",
  "out of bounds release": "out of bounds release",
  "more than {count} child lanes": "子道大于{count} ",
  "element required": "元素不能为空",
  "diagram not part of bpmn:Definitions": "流程图不符合bpmn规范",
  "no diagram to display": "没有可展示的流程图",
  "no process or collaboration to display": "没有可展示的流程/协作",
  "element {element} referenced by {referenced}#{property} not yet drawn": "由{referenced}#{property}引用的{element}元素仍未绘制",
  "already rendered {element}": "{element} 已被渲染",
  "failed to import {element}": "导入{element}失败",
  Id: "编号",
  Name: "名称",
  General: "常规",
  Details: "详情",
  "Message Name": "消息名称",
  Message: "消息",
  Initiator: "创建者",
  "Asynchronous Continuations": "持续异步",
  "Asynchronous Before": "异步前",
  "Asynchronous After": "异步后",
  "Job Configuration": "工作配置",
  Exclusive: "排除",
  "Job Priority": "工作优先级",
  "Retry Time Cycle": "重试时间周期",
  Documentation: "文档",
  "Element Documentation": "元素文档",
  "History Configuration": "历史配置",
  "History Time To Live": "历史的生存时间",
  Forms: "表单",
  "Form Key": "表单key",
  "Form Fields": "表单字段",
  "Business Key": "业务key",
  "Form Field": "表单字段",
  ID: "编号",
  Type: "类型",
  Label: "名称",
  "Default Value": "默认值",
  "Default Flow": "默认流转路径",
  "Conditional Flow": "条件流转路径",
  "Sequence Flow": "普通流转路径",
  Validation: "校验",
  "Add Constraint": "添加约束",
  Config: "配置",
  Properties: "属性",
  "Add Property": "添加属性",
  Value: "值",
  Listeners: "监听器",
  "Execution Listener": "执行监听",
  "Event Type": "事件类型",
  "Listener Type": "监听器类型",
  "Java Class": "Java类",
  Expression: "表达式",
  "Must provide a value": "必须提供一个值",
  "Delegate Expression": "代理表达式",
  Script: "脚本",
  "Script Format": "脚本格式",
  "Script Type": "脚本类型",
  "Inline Script": "内联脚本",
  "External Script": "外部脚本",
  Resource: "资源",
  "Field Injection": "字段注入",
  Extensions: "扩展",
  "Input/Output": "输入/输出",
  "Input Parameters": "输入参数",
  "Output Parameters": "输出参数",
  Parameters: "参数",
  "Output Parameter": "输出参数",
  "Timer Definition Type": "定时器定义类型",
  "Timer Definition": "定时器定义",
  Date: "日期",
  Duration: "持续",
  Cycle: "循环",
  Signal: "信号",
  "Signal Name": "信号名称",
  Escalation: "升级",
  Error: "错误",
  "Link Name": "链接名称",
  Condition: "条件名称",
  "Variable Name": "变量名称",
  "Variable Event": "变量事件",
  "Specify more than one variable change event as a comma separated list.": "多个变量事件以逗号隔开",
  "Wait for Completion": "等待完成",
  "Activity Ref": "活动参考",
  "Version Tag": "版本标签",
  Executable: "可执行文件",
  "External Task Configuration": "扩展任务配置",
  "Task Priority": "任务优先级",
  External: "外部",
  Connector: "连接器",
  "Must configure Connector": "必须配置连接器",
  "Connector Id": "连接器编号",
  Implementation: "实现方式",
  "Field Injections": "字段注入",
  Fields: "字段",
  "Result Variable": "结果变量",
  Topic: "主题",
  "Configure Connector": "配置连接器",
  "Input Parameter": "输入参数",
  Assignee: "代理人",
  "Candidate Users": "候选用户",
  "Candidate Groups": "候选组",
  "Due Date": "到期时间",
  "Follow Up Date": "跟踪日期",
  Priority: "优先级",
  "The follow up date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)": "跟踪日期必须符合EL表达式，如： ${someDate} ,或者一个ISO标准日期，如：2015-06-26T09:54:00",
  "The due date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)": "跟踪日期必须符合EL表达式，如： ${someDate} ,或者一个ISO标准日期，如：2015-06-26T09:54:00",
  Variables: "变量",
  "Candidate Starter Configuration": "候选人起动器配置",
  "Candidate Starter Groups": "候选人起动器组",
  "This maps to the process definition key.": "这映射到流程定义键。",
  "Candidate Starter Users": "候选人起动器的用户",
  "Specify more than one user as a comma separated list.": "指定多个用户作为逗号分隔的列表。",
  "Tasklist Configuration": "Tasklist配置",
  Startable: "启动",
  "Specify more than one group as a comma separated list.": "指定多个组作为逗号分隔的列表。",
  "Execution listeners": "执行监听器"
};
const translations = {
  ...other,
  ...events,
  ...gateway,
  ...lint,
  ...tasks
};
function translate(template, replacements) {
  replacements = replacements || {};
  const resources = translations;
  template = resources[template] || template;
  return template.replace(/{([^}]+)}/g, function(_2, key) {
    return replacements[key] || "{" + key + "}";
  });
}
function useModelerCreator() {
  const settings = useSettingStore();
  const designer = useDesignerStore();
  const createModules = (panelHtmlId) => {
    const modules = [];
    const options = {};
    const extensions = {};
    modules.push(
      BpmnPropertiesPanelModule,
      BpmnPropertiesProviderModule,
      CamundaPlatformPropertiesProviderModule,
      HerodotusPropertiesProviderModule
    );
    extensions["camunda"] = camundaModdleDescriptors;
    if (settings.useOfficialPanel) {
      options["propertiesPanel"] = {
        parent: panelHtmlId
      };
    }
    if (settings.useOfficialTemplateChooser) {
      modules.push(ElementTemplateChooserModule, ConnectorsExtensionModule);
      options["exporter"] = {
        name: "element-template-chooser",
        version: "1.0.0"
      };
      options["connectorsExtension"] = {
        appendAnything: true
      };
    }
    if (settings.showBpmnLint) {
      modules.push(BpmnLintModule);
      options["linting"] = {
        active: true,
        bpmnlint: bundle
      };
    }
    if (settings.showMiniMap) {
      modules.push(MinimapModule);
      options["minimap"] = {
        open: true
      };
    }
    if (settings.useOfficialBackground) {
      modules.push(GridModule);
    }
    if (settings.useOtherModule) {
      modules.push(TokenSimulationModule);
      options["keyboard"] = {
        bindTo: document
      };
    }
    const TranslateModule2 = {
      translate: ["value", translate]
    };
    modules.push(TranslateModule2);
    return {
      additionalModules: modules,
      moddleExtensions: extensions,
      ...options
    };
  };
  const createBpmnModeler = (containerHtmlId, panelHtmlId) => {
    const modules = createModules(panelHtmlId);
    designer.$reset();
    const modeler = new Modeler({
      container: containerHtmlId,
      ...modules
    });
    designer.modeler = markRaw(modeler);
    designer.modeling = markRaw(modeler.get("modeling"));
    designer.canvas = markRaw(modeler.get("canvas"));
    designer.moddle = markRaw(modeler.get("moddle"));
    designer.elementRegistry = markRaw(modeler.get("elementRegistry"));
    return modeler;
  };
  const createEmptyDiagram = (key, name2) => {
    return `<?xml version="1.0" encoding="UTF-8"?>
    <bpmn:definitions
      xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
      xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
      xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
      xmlns:camunda="http://camunda.org/schema/1.0/bpmn"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
      xmlns:modeler="http://camunda.org/schema/modeler/1.0"
      id="Definitions_${key}" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Dante Cloud Modeler" exporterVersion="5.7.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.18.0">
      <bpmn:process id="${key}" name="${name2}" isExecutable="true">
        <bpmn:startEvent id="StartEvent_1" />
      </bpmn:process>
      <bpmndi:BPMNDiagram id="BPMNDiagram_1">
        <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="${key}">
          <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
            <dc:Bounds x="179" y="159" width="36" height="36" />
          </bpmndi:BPMNShape>
        </bpmndi:BPMNPlane>
      </bpmndi:BPMNDiagram>
    </bpmn:definitions>
    `;
  };
  const createNewDiagram = async (diagram = "") => {
    const processId = settings.processId;
    const processName = settings.processName;
    try {
      const timestamp = Date.now();
      const newId = processId ? processId : `Process_${timestamp}`;
      const newName = processName || `业务流程_${timestamp}`;
      const xmlString = diagram || createEmptyDiagram(newId, newName);
      const result = await designer.modeler.importXML(xmlString);
      const { warnings } = result;
      if (lodash.isEmpty(warnings)) {
        Logger.prettyPrimary("Diagram xml imported", "Succeed!");
      } else {
        Logger.prettyWarn("Diagram xml imported has warnings", warnings);
      }
    } catch (error2) {
      Logger.prettyError("[HBM] |- Could not create BPMN 2.0 diagram!", error2);
    }
  };
  const createModelerListeners = (modeler) => {
    modeler.on("herodotus.element.changed", (data) => {
      designer.switchElement(
        // @ts-ignore
        markRaw(data.activeElement),
        // @ts-ignore
        data.activeElementId,
        // @ts-ignore
        data.panelGroups,
        // @ts-ignore
        data.elementType,
        // @ts-ignore
        data.elementRawType,
        // @ts-ignore
        data.elementTitle,
        // @ts-ignore
        data.elementIcon,
        // @ts-ignore
        data.elementCaption,
        // @ts-ignore
        data.isMultiInstance
      );
    });
  };
  const create2 = (diagram = "") => {
    const modeler = createBpmnModeler("#designer", "#camunda-panel");
    createModelerListeners(modeler);
    createNewDiagram(diagram);
  };
  const destroy = () => {
    if (!lodash.isEmpty(designer.modeler)) {
      designer.modeler.destroy();
      designer.$reset();
    }
  };
  return {
    createBpmnModeler,
    createNewDiagram,
    create: create2,
    destroy
  };
}
function useBpmnTableItems(baseService, sortable, queryParams = {}, loadOnMount = true) {
  const loading = ref(false);
  const tableRows = ref([]);
  const totalPages = ref(0);
  const conditions = ref(queryParams);
  const pagination = ref({
    sortBy: "updateTime",
    descending: true,
    page: 1,
    rowsPerPage: 10,
    rowsNumber: 0
  });
  const findItemsByPage = (pageNumber = 1, pageSize = 10, params = {}) => {
    loading.value = true;
    baseService.getByPage(
      {
        pageNumber: pageNumber - 1,
        pageSize,
        ...sortable
      },
      params
    ).then((result) => {
      const data = result;
      if (data) {
        tableRows.value = data.content;
        totalPages.value = data.totalPages;
        pagination.value.rowsNumber = parseInt(data.totalElements, 0);
      }
      loading.value = false;
    }).catch(() => {
      loading.value = false;
    });
  };
  const findItems = (props) => {
    const { page, rowsPerPage, sortBy: sortBy2, descending } = props.pagination;
    pagination.value.page = page;
    pagination.value.rowsPerPage = rowsPerPage;
    pagination.value.sortBy = sortBy2;
    pagination.value.descending = descending;
    findItemsByPage(pagination.value.page, pagination.value.rowsPerPage, conditions.value);
  };
  onMounted(() => {
    if (loadOnMount) {
      findItems({ pagination: pagination.value, getCellValue: (col, row) => {
      } });
    }
  });
  watch(
    () => pagination.value.page,
    (newValue) => {
      if (newValue) {
        findItemsByPage(newValue, pagination.value.rowsPerPage, conditions.value);
      }
    }
  );
  watch(
    conditions,
    (newValue) => {
      if (newValue) {
        if (pagination.value.page > 1) {
          pagination.value.page = 1;
        } else {
          findItemsByPage(pagination.value.page, pagination.value.rowsPerPage, newValue);
        }
      }
    },
    { deep: true }
  );
  return {
    pagination,
    tableRows,
    loading,
    totalPages,
    conditions,
    findItemsByPage,
    findItems
  };
}
function useViewerCreator(containerHtmlId, height, highlightNodes) {
  let bpmnViewer = {};
  const createBpmnViewer = () => {
    return new Viewer({
      container: containerHtmlId,
      height
    });
  };
  const importDiagram = async (diagram) => {
    await bpmnViewer.importXML(diagram);
    const canvas = bpmnViewer.get("canvas");
    canvas.zoom("fit-viewport", { x: 0, y: 0 });
    if (!lodash.isEmpty(highlightNodes)) {
      highlightNodes.forEach((item) => {
        var _a;
        canvas.addMarker(item, "highlight");
        const ele = (_a = document.querySelector(".highlight")) == null ? void 0 : _a.querySelector(".djs-visual rect");
        if (ele) {
          ele.setAttribute("stroke-dasharray", "4,4");
        }
      });
    }
  };
  const init = (diagram) => {
    bpmnViewer = createBpmnViewer();
    importDiagram(diagram);
  };
  const destroy = () => {
    if (!lodash.isEmpty(bpmnViewer)) {
      bpmnViewer.destroy();
    }
  };
  return {
    init,
    destroy
  };
}
const _sfc_main$_ = defineComponent({
  name: "HBpmnViewer",
  props: {
    diagram: { type: String, default: "" },
    nodes: { type: Array, default: () => [] },
    height: { type: [String, Number], default: "500px" }
  },
  setup(props) {
    const { init, destroy } = useViewerCreator("#bpmn-viewer", props.height, props.nodes);
    onBeforeUnmount(() => {
      destroy();
    });
    onMounted(() => {
      try {
        init(props.diagram);
      } catch (error2) {
      }
    });
    return {};
  }
});
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _hoisted_1$7 = {
  id: "bpmn-viewer",
  class: "bpmn-viewer-canvas"
};
function _sfc_render$_(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1$7);
}
const __unplugin_components_4$1 = /* @__PURE__ */ _export_sfc(_sfc_main$_, [["render", _sfc_render$_]]);
const _sfc_main$Z = defineComponent({
  name: "HBpmnDiagramViewer",
  components: {
    HBpmnViewer: __unplugin_components_4$1
  },
  props: {
    modelValue: { type: Boolean, required: true },
    diagram: { type: String, required: true },
    nodes: { type: Array, default: () => [] },
    title: { type: String, default: "" },
    width: { type: String, default: "800px" },
    height: { type: String, default: "450px" },
    maxWidth: { type: String, default: "80vh" }
  },
  emits: ["update:modelValue"],
  setup(props, { emit }) {
    const isOpen = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const isShow = ref(false);
    watch(
      () => props.diagram,
      (newValue) => {
        if (newValue) {
          isShow.value = true;
        } else {
          isShow.value = false;
        }
      },
      { immediate: true }
    );
    return {
      isOpen,
      isShow
    };
  }
});
const _hoisted_1$6 = { class: "text-h6" };
function _sfc_render$Z(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_space = QSpace;
  const _component_q_btn = QBtn;
  const _component_q_card_section = QCardSection;
  const _component_q_separator = QSeparator;
  const _component_h_bpmn_viewer = __unplugin_components_4$1;
  const _component_q_card = QCard;
  const _component_q_dialog = QDialog;
  return openBlock(), createBlock(_component_q_dialog, {
    modelValue: _ctx.isOpen,
    "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.isOpen = $event),
    persistent: ""
  }, {
    default: withCtx(() => [
      createVNode(_component_q_card, {
        style: normalizeStyle(`width: ${_ctx.width}; max-width: ${_ctx.maxWidth}`)
      }, {
        default: withCtx(() => [
          createVNode(_component_q_card_section, { class: "row items-center q-pb-none" }, {
            default: withCtx(() => [
              createElementVNode("div", _hoisted_1$6, toDisplayString(_ctx.title), 1),
              createVNode(_component_q_space),
              createVNode(_component_q_btn, {
                icon: "close",
                flat: "",
                round: "",
                dense: "",
                onClick: _cache[0] || (_cache[0] = ($event) => _ctx.isOpen = false)
              })
            ]),
            _: 1
          }),
          createVNode(_component_q_separator),
          createVNode(_component_q_card_section, { class: "q-pt-none q-pa-none" }, {
            default: withCtx(() => [
              _ctx.isShow ? (openBlock(), createBlock(_component_h_bpmn_viewer, {
                key: 0,
                diagram: _ctx.diagram,
                nodes: _ctx.nodes,
                height: _ctx.height
              }, null, 8, ["diagram", "nodes", "height"])) : createCommentVNode("", true)
            ]),
            _: 1
          })
        ]),
        _: 1
      }, 8, ["style"])
    ]),
    _: 1
  }, 8, ["modelValue"]);
}
const HBpmnDiagramViewer = /* @__PURE__ */ _export_sfc(_sfc_main$Z, [["render", _sfc_render$Z]]);
function deepFreeze(obj) {
  if (obj instanceof Map) {
    obj.clear = obj.delete = obj.set = function() {
      throw new Error("map is read-only");
    };
  } else if (obj instanceof Set) {
    obj.add = obj.clear = obj.delete = function() {
      throw new Error("set is read-only");
    };
  }
  Object.freeze(obj);
  Object.getOwnPropertyNames(obj).forEach((name2) => {
    const prop = obj[name2];
    const type = typeof prop;
    if ((type === "object" || type === "function") && !Object.isFrozen(prop)) {
      deepFreeze(prop);
    }
  });
  return obj;
}
class Response {
  /**
   * @param {CompiledMode} mode
   */
  constructor(mode) {
    if (mode.data === void 0)
      mode.data = {};
    this.data = mode.data;
    this.isMatchIgnored = false;
  }
  ignoreMatch() {
    this.isMatchIgnored = true;
  }
}
function escapeHTML(value) {
  return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
}
function inherit$1(original, ...objects) {
  const result = /* @__PURE__ */ Object.create(null);
  for (const key in original) {
    result[key] = original[key];
  }
  objects.forEach(function(obj) {
    for (const key in obj) {
      result[key] = obj[key];
    }
  });
  return (
    /** @type {T} */
    result
  );
}
const SPAN_CLOSE = "</span>";
const emitsWrappingTags = (node2) => {
  return !!node2.scope;
};
const scopeToCSSClass = (name2, { prefix: prefix2 }) => {
  if (name2.startsWith("language:")) {
    return name2.replace("language:", "language-");
  }
  if (name2.includes(".")) {
    const pieces = name2.split(".");
    return [
      `${prefix2}${pieces.shift()}`,
      ...pieces.map((x2, i2) => `${x2}${"_".repeat(i2 + 1)}`)
    ].join(" ");
  }
  return `${prefix2}${name2}`;
};
class HTMLRenderer {
  /**
   * Creates a new HTMLRenderer
   *
   * @param {Tree} parseTree - the parse tree (must support `walk` API)
   * @param {{classPrefix: string}} options
   */
  constructor(parseTree, options) {
    this.buffer = "";
    this.classPrefix = options.classPrefix;
    parseTree.walk(this);
  }
  /**
   * Adds texts to the output stream
   *
   * @param {string} text */
  addText(text) {
    this.buffer += escapeHTML(text);
  }
  /**
   * Adds a node open to the output stream (if needed)
   *
   * @param {Node} node */
  openNode(node2) {
    if (!emitsWrappingTags(node2))
      return;
    const className = scopeToCSSClass(
      node2.scope,
      { prefix: this.classPrefix }
    );
    this.span(className);
  }
  /**
   * Adds a node close to the output stream (if needed)
   *
   * @param {Node} node */
  closeNode(node2) {
    if (!emitsWrappingTags(node2))
      return;
    this.buffer += SPAN_CLOSE;
  }
  /**
   * returns the accumulated buffer
  */
  value() {
    return this.buffer;
  }
  // helpers
  /**
   * Builds a span element
   *
   * @param {string} className */
  span(className) {
    this.buffer += `<span class="${className}">`;
  }
}
const newNode = (opts = {}) => {
  const result = { children: [] };
  Object.assign(result, opts);
  return result;
};
class TokenTree {
  constructor() {
    this.rootNode = newNode();
    this.stack = [this.rootNode];
  }
  get top() {
    return this.stack[this.stack.length - 1];
  }
  get root() {
    return this.rootNode;
  }
  /** @param {Node} node */
  add(node2) {
    this.top.children.push(node2);
  }
  /** @param {string} scope */
  openNode(scope) {
    const node2 = newNode({ scope });
    this.add(node2);
    this.stack.push(node2);
  }
  closeNode() {
    if (this.stack.length > 1) {
      return this.stack.pop();
    }
    return void 0;
  }
  closeAllNodes() {
    while (this.closeNode())
      ;
  }
  toJSON() {
    return JSON.stringify(this.rootNode, null, 4);
  }
  /**
   * @typedef { import("./html_renderer").Renderer } Renderer
   * @param {Renderer} builder
   */
  walk(builder) {
    return this.constructor._walk(builder, this.rootNode);
  }
  /**
   * @param {Renderer} builder
   * @param {Node} node
   */
  static _walk(builder, node2) {
    if (typeof node2 === "string") {
      builder.addText(node2);
    } else if (node2.children) {
      builder.openNode(node2);
      node2.children.forEach((child) => this._walk(builder, child));
      builder.closeNode(node2);
    }
    return builder;
  }
  /**
   * @param {Node} node
   */
  static _collapse(node2) {
    if (typeof node2 === "string")
      return;
    if (!node2.children)
      return;
    if (node2.children.every((el) => typeof el === "string")) {
      node2.children = [node2.children.join("")];
    } else {
      node2.children.forEach((child) => {
        TokenTree._collapse(child);
      });
    }
  }
}
class TokenTreeEmitter extends TokenTree {
  /**
   * @param {*} options
   */
  constructor(options) {
    super();
    this.options = options;
  }
  /**
   * @param {string} text
   */
  addText(text) {
    if (text === "") {
      return;
    }
    this.add(text);
  }
  /** @param {string} scope */
  startScope(scope) {
    this.openNode(scope);
  }
  endScope() {
    this.closeNode();
  }
  /**
   * @param {Emitter & {root: DataNode}} emitter
   * @param {string} name
   */
  __addSublanguage(emitter, name2) {
    const node2 = emitter.root;
    if (name2)
      node2.scope = `language:${name2}`;
    this.add(node2);
  }
  toHTML() {
    const renderer = new HTMLRenderer(this, this.options);
    return renderer.value();
  }
  finalize() {
    this.closeAllNodes();
    return true;
  }
}
function source(re) {
  if (!re)
    return null;
  if (typeof re === "string")
    return re;
  return re.source;
}
function lookahead(re) {
  return concat("(?=", re, ")");
}
function anyNumberOfTimes(re) {
  return concat("(?:", re, ")*");
}
function optional(re) {
  return concat("(?:", re, ")?");
}
function concat(...args) {
  const joined = args.map((x2) => source(x2)).join("");
  return joined;
}
function stripOptionsFromArgs(args) {
  const opts = args[args.length - 1];
  if (typeof opts === "object" && opts.constructor === Object) {
    args.splice(args.length - 1, 1);
    return opts;
  } else {
    return {};
  }
}
function either(...args) {
  const opts = stripOptionsFromArgs(args);
  const joined = "(" + (opts.capture ? "" : "?:") + args.map((x2) => source(x2)).join("|") + ")";
  return joined;
}
function countMatchGroups(re) {
  return new RegExp(re.toString() + "|").exec("").length - 1;
}
function startsWith(re, lexeme) {
  const match = re && re.exec(lexeme);
  return match && match.index === 0;
}
const BACKREF_RE = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;
function _rewriteBackreferences(regexps, { joinWith }) {
  let numCaptures = 0;
  return regexps.map((regex) => {
    numCaptures += 1;
    const offset = numCaptures;
    let re = source(regex);
    let out = "";
    while (re.length > 0) {
      const match = BACKREF_RE.exec(re);
      if (!match) {
        out += re;
        break;
      }
      out += re.substring(0, match.index);
      re = re.substring(match.index + match[0].length);
      if (match[0][0] === "\\" && match[1]) {
        out += "\\" + String(Number(match[1]) + offset);
      } else {
        out += match[0];
        if (match[0] === "(") {
          numCaptures++;
        }
      }
    }
    return out;
  }).map((re) => `(${re})`).join(joinWith);
}
const MATCH_NOTHING_RE = /\b\B/;
const IDENT_RE = "[a-zA-Z]\\w*";
const UNDERSCORE_IDENT_RE = "[a-zA-Z_]\\w*";
const NUMBER_RE = "\\b\\d+(\\.\\d+)?";
const C_NUMBER_RE = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";
const BINARY_NUMBER_RE = "\\b(0b[01]+)";
const RE_STARTERS_RE = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";
const SHEBANG = (opts = {}) => {
  const beginShebang = /^#![ ]*\//;
  if (opts.binary) {
    opts.begin = concat(
      beginShebang,
      /.*\b/,
      opts.binary,
      /\b.*/
    );
  }
  return inherit$1({
    scope: "meta",
    begin: beginShebang,
    end: /$/,
    relevance: 0,
    /** @type {ModeCallback} */
    "on:begin": (m2, resp) => {
      if (m2.index !== 0)
        resp.ignoreMatch();
    }
  }, opts);
};
const BACKSLASH_ESCAPE = {
  begin: "\\\\[\\s\\S]",
  relevance: 0
};
const APOS_STRING_MODE = {
  scope: "string",
  begin: "'",
  end: "'",
  illegal: "\\n",
  contains: [BACKSLASH_ESCAPE]
};
const QUOTE_STRING_MODE = {
  scope: "string",
  begin: '"',
  end: '"',
  illegal: "\\n",
  contains: [BACKSLASH_ESCAPE]
};
const PHRASAL_WORDS_MODE = {
  begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
};
const COMMENT = function(begin, end, modeOptions = {}) {
  const mode = inherit$1(
    {
      scope: "comment",
      begin,
      end,
      contains: []
    },
    modeOptions
  );
  mode.contains.push({
    scope: "doctag",
    // hack to avoid the space from being included. the space is necessary to
    // match here to prevent the plain text rule below from gobbling up doctags
    begin: "[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",
    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,
    excludeBegin: true,
    relevance: 0
  });
  const ENGLISH_WORD = either(
    // list of common 1 and 2 letter words in English
    "I",
    "a",
    "is",
    "so",
    "us",
    "to",
    "at",
    "if",
    "in",
    "it",
    "on",
    // note: this is not an exhaustive list of contractions, just popular ones
    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/,
    // contractions - can't we'd they're let's, etc
    /[A-Za-z]+[-][a-z]+/,
    // `no-way`, etc.
    /[A-Za-z][a-z]{2,}/
    // allow capitalized words at beginning of sentences
  );
  mode.contains.push(
    {
      // TODO: how to include ", (, ) without breaking grammars that use these for
      // comment delimiters?
      // begin: /[ ]+([()"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()":]?([.][ ]|[ ]|\))){3}/
      // ---
      // this tries to find sequences of 3 english words in a row (without any
      // "programming" type syntax) this gives us a strong signal that we've
      // TRULY found a comment - vs perhaps scanning with the wrong language.
      // It's possible to find something that LOOKS like the start of the
      // comment - but then if there is no readable text - good chance it is a
      // false match and not a comment.
      //
      // for a visual example please see:
      // https://github.com/highlightjs/highlight.js/issues/2827
      begin: concat(
        /[ ]+/,
        // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */
        "(",
        ENGLISH_WORD,
        /[.]?[:]?([.][ ]|[ ])/,
        "){3}"
      )
      // look for 3 words in a row
    }
  );
  return mode;
};
const C_LINE_COMMENT_MODE = COMMENT("//", "$");
const C_BLOCK_COMMENT_MODE = COMMENT("/\\*", "\\*/");
const HASH_COMMENT_MODE = COMMENT("#", "$");
const NUMBER_MODE = {
  scope: "number",
  begin: NUMBER_RE,
  relevance: 0
};
const C_NUMBER_MODE = {
  scope: "number",
  begin: C_NUMBER_RE,
  relevance: 0
};
const BINARY_NUMBER_MODE = {
  scope: "number",
  begin: BINARY_NUMBER_RE,
  relevance: 0
};
const REGEXP_MODE = {
  scope: "regexp",
  begin: /\/(?=[^/\n]*\/)/,
  end: /\/[gimuy]*/,
  contains: [
    BACKSLASH_ESCAPE,
    {
      begin: /\[/,
      end: /\]/,
      relevance: 0,
      contains: [BACKSLASH_ESCAPE]
    }
  ]
};
const TITLE_MODE = {
  scope: "title",
  begin: IDENT_RE,
  relevance: 0
};
const UNDERSCORE_TITLE_MODE = {
  scope: "title",
  begin: UNDERSCORE_IDENT_RE,
  relevance: 0
};
const METHOD_GUARD = {
  // excludes method names from keyword processing
  begin: "\\.\\s*" + UNDERSCORE_IDENT_RE,
  relevance: 0
};
const END_SAME_AS_BEGIN = function(mode) {
  return Object.assign(
    mode,
    {
      /** @type {ModeCallback} */
      "on:begin": (m2, resp) => {
        resp.data._beginMatch = m2[1];
      },
      /** @type {ModeCallback} */
      "on:end": (m2, resp) => {
        if (resp.data._beginMatch !== m2[1])
          resp.ignoreMatch();
      }
    }
  );
};
var MODES = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  APOS_STRING_MODE,
  BACKSLASH_ESCAPE,
  BINARY_NUMBER_MODE,
  BINARY_NUMBER_RE,
  COMMENT,
  C_BLOCK_COMMENT_MODE,
  C_LINE_COMMENT_MODE,
  C_NUMBER_MODE,
  C_NUMBER_RE,
  END_SAME_AS_BEGIN,
  HASH_COMMENT_MODE,
  IDENT_RE,
  MATCH_NOTHING_RE,
  METHOD_GUARD,
  NUMBER_MODE,
  NUMBER_RE,
  PHRASAL_WORDS_MODE,
  QUOTE_STRING_MODE,
  REGEXP_MODE,
  RE_STARTERS_RE,
  SHEBANG,
  TITLE_MODE,
  UNDERSCORE_IDENT_RE,
  UNDERSCORE_TITLE_MODE
});
function skipIfHasPrecedingDot(match, response) {
  const before = match.input[match.index - 1];
  if (before === ".") {
    response.ignoreMatch();
  }
}
function scopeClassName(mode, _parent) {
  if (mode.className !== void 0) {
    mode.scope = mode.className;
    delete mode.className;
  }
}
function beginKeywords(mode, parent) {
  if (!parent)
    return;
  if (!mode.beginKeywords)
    return;
  mode.begin = "\\b(" + mode.beginKeywords.split(" ").join("|") + ")(?!\\.)(?=\\b|\\s)";
  mode.__beforeBegin = skipIfHasPrecedingDot;
  mode.keywords = mode.keywords || mode.beginKeywords;
  delete mode.beginKeywords;
  if (mode.relevance === void 0)
    mode.relevance = 0;
}
function compileIllegal(mode, _parent) {
  if (!Array.isArray(mode.illegal))
    return;
  mode.illegal = either(...mode.illegal);
}
function compileMatch(mode, _parent) {
  if (!mode.match)
    return;
  if (mode.begin || mode.end)
    throw new Error("begin & end are not supported with match");
  mode.begin = mode.match;
  delete mode.match;
}
function compileRelevance(mode, _parent) {
  if (mode.relevance === void 0)
    mode.relevance = 1;
}
const beforeMatchExt = (mode, parent) => {
  if (!mode.beforeMatch)
    return;
  if (mode.starts)
    throw new Error("beforeMatch cannot be used with starts");
  const originalMode = Object.assign({}, mode);
  Object.keys(mode).forEach((key) => {
    delete mode[key];
  });
  mode.keywords = originalMode.keywords;
  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));
  mode.starts = {
    relevance: 0,
    contains: [
      Object.assign(originalMode, { endsParent: true })
    ]
  };
  mode.relevance = 0;
  delete originalMode.beforeMatch;
};
const COMMON_KEYWORDS = [
  "of",
  "and",
  "for",
  "in",
  "not",
  "or",
  "if",
  "then",
  "parent",
  // common variable name
  "list",
  // common variable name
  "value"
  // common variable name
];
const DEFAULT_KEYWORD_SCOPE = "keyword";
function compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {
  const compiledKeywords = /* @__PURE__ */ Object.create(null);
  if (typeof rawKeywords === "string") {
    compileList(scopeName, rawKeywords.split(" "));
  } else if (Array.isArray(rawKeywords)) {
    compileList(scopeName, rawKeywords);
  } else {
    Object.keys(rawKeywords).forEach(function(scopeName2) {
      Object.assign(
        compiledKeywords,
        compileKeywords(rawKeywords[scopeName2], caseInsensitive, scopeName2)
      );
    });
  }
  return compiledKeywords;
  function compileList(scopeName2, keywordList) {
    if (caseInsensitive) {
      keywordList = keywordList.map((x2) => x2.toLowerCase());
    }
    keywordList.forEach(function(keyword) {
      const pair = keyword.split("|");
      compiledKeywords[pair[0]] = [scopeName2, scoreForKeyword(pair[0], pair[1])];
    });
  }
}
function scoreForKeyword(keyword, providedScore) {
  if (providedScore) {
    return Number(providedScore);
  }
  return commonKeyword(keyword) ? 0 : 1;
}
function commonKeyword(keyword) {
  return COMMON_KEYWORDS.includes(keyword.toLowerCase());
}
const seenDeprecations = {};
const error = (message) => {
  console.error(message);
};
const warn = (message, ...args) => {
  console.log(`WARN: ${message}`, ...args);
};
const deprecated = (version2, message) => {
  if (seenDeprecations[`${version2}/${message}`])
    return;
  console.log(`Deprecated as of ${version2}. ${message}`);
  seenDeprecations[`${version2}/${message}`] = true;
};
const MultiClassError = new Error();
function remapScopeNames(mode, regexes, { key }) {
  let offset = 0;
  const scopeNames = mode[key];
  const emit = {};
  const positions = {};
  for (let i2 = 1; i2 <= regexes.length; i2++) {
    positions[i2 + offset] = scopeNames[i2];
    emit[i2 + offset] = true;
    offset += countMatchGroups(regexes[i2 - 1]);
  }
  mode[key] = positions;
  mode[key]._emit = emit;
  mode[key]._multi = true;
}
function beginMultiClass(mode) {
  if (!Array.isArray(mode.begin))
    return;
  if (mode.skip || mode.excludeBegin || mode.returnBegin) {
    error("skip, excludeBegin, returnBegin not compatible with beginScope: {}");
    throw MultiClassError;
  }
  if (typeof mode.beginScope !== "object" || mode.beginScope === null) {
    error("beginScope must be object");
    throw MultiClassError;
  }
  remapScopeNames(mode, mode.begin, { key: "beginScope" });
  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: "" });
}
function endMultiClass(mode) {
  if (!Array.isArray(mode.end))
    return;
  if (mode.skip || mode.excludeEnd || mode.returnEnd) {
    error("skip, excludeEnd, returnEnd not compatible with endScope: {}");
    throw MultiClassError;
  }
  if (typeof mode.endScope !== "object" || mode.endScope === null) {
    error("endScope must be object");
    throw MultiClassError;
  }
  remapScopeNames(mode, mode.end, { key: "endScope" });
  mode.end = _rewriteBackreferences(mode.end, { joinWith: "" });
}
function scopeSugar(mode) {
  if (mode.scope && typeof mode.scope === "object" && mode.scope !== null) {
    mode.beginScope = mode.scope;
    delete mode.scope;
  }
}
function MultiClass(mode) {
  scopeSugar(mode);
  if (typeof mode.beginScope === "string") {
    mode.beginScope = { _wrap: mode.beginScope };
  }
  if (typeof mode.endScope === "string") {
    mode.endScope = { _wrap: mode.endScope };
  }
  beginMultiClass(mode);
  endMultiClass(mode);
}
function compileLanguage(language) {
  function langRe(value, global) {
    return new RegExp(
      source(value),
      "m" + (language.case_insensitive ? "i" : "") + (language.unicodeRegex ? "u" : "") + (global ? "g" : "")
    );
  }
  class MultiRegex {
    constructor() {
      this.matchIndexes = {};
      this.regexes = [];
      this.matchAt = 1;
      this.position = 0;
    }
    // @ts-ignore
    addRule(re, opts) {
      opts.position = this.position++;
      this.matchIndexes[this.matchAt] = opts;
      this.regexes.push([opts, re]);
      this.matchAt += countMatchGroups(re) + 1;
    }
    compile() {
      if (this.regexes.length === 0) {
        this.exec = () => null;
      }
      const terminators = this.regexes.map((el) => el[1]);
      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: "|" }), true);
      this.lastIndex = 0;
    }
    /** @param {string} s */
    exec(s2) {
      this.matcherRe.lastIndex = this.lastIndex;
      const match = this.matcherRe.exec(s2);
      if (!match) {
        return null;
      }
      const i2 = match.findIndex((el, i3) => i3 > 0 && el !== void 0);
      const matchData = this.matchIndexes[i2];
      match.splice(0, i2);
      return Object.assign(match, matchData);
    }
  }
  class ResumableMultiRegex {
    constructor() {
      this.rules = [];
      this.multiRegexes = [];
      this.count = 0;
      this.lastIndex = 0;
      this.regexIndex = 0;
    }
    // @ts-ignore
    getMatcher(index2) {
      if (this.multiRegexes[index2])
        return this.multiRegexes[index2];
      const matcher = new MultiRegex();
      this.rules.slice(index2).forEach(([re, opts]) => matcher.addRule(re, opts));
      matcher.compile();
      this.multiRegexes[index2] = matcher;
      return matcher;
    }
    resumingScanAtSamePosition() {
      return this.regexIndex !== 0;
    }
    considerAll() {
      this.regexIndex = 0;
    }
    // @ts-ignore
    addRule(re, opts) {
      this.rules.push([re, opts]);
      if (opts.type === "begin")
        this.count++;
    }
    /** @param {string} s */
    exec(s2) {
      const m2 = this.getMatcher(this.regexIndex);
      m2.lastIndex = this.lastIndex;
      let result = m2.exec(s2);
      if (this.resumingScanAtSamePosition()) {
        if (result && result.index === this.lastIndex)
          ;
        else {
          const m22 = this.getMatcher(0);
          m22.lastIndex = this.lastIndex + 1;
          result = m22.exec(s2);
        }
      }
      if (result) {
        this.regexIndex += result.position + 1;
        if (this.regexIndex === this.count) {
          this.considerAll();
        }
      }
      return result;
    }
  }
  function buildModeRegex(mode) {
    const mm = new ResumableMultiRegex();
    mode.contains.forEach((term) => mm.addRule(term.begin, { rule: term, type: "begin" }));
    if (mode.terminatorEnd) {
      mm.addRule(mode.terminatorEnd, { type: "end" });
    }
    if (mode.illegal) {
      mm.addRule(mode.illegal, { type: "illegal" });
    }
    return mm;
  }
  function compileMode(mode, parent) {
    const cmode = (
      /** @type CompiledMode */
      mode
    );
    if (mode.isCompiled)
      return cmode;
    [
      scopeClassName,
      // do this early so compiler extensions generally don't have to worry about
      // the distinction between match/begin
      compileMatch,
      MultiClass,
      beforeMatchExt
    ].forEach((ext) => ext(mode, parent));
    language.compilerExtensions.forEach((ext) => ext(mode, parent));
    mode.__beforeBegin = null;
    [
      beginKeywords,
      // do this later so compiler extensions that come earlier have access to the
      // raw array if they wanted to perhaps manipulate it, etc.
      compileIllegal,
      // default to 1 relevance if not specified
      compileRelevance
    ].forEach((ext) => ext(mode, parent));
    mode.isCompiled = true;
    let keywordPattern = null;
    if (typeof mode.keywords === "object" && mode.keywords.$pattern) {
      mode.keywords = Object.assign({}, mode.keywords);
      keywordPattern = mode.keywords.$pattern;
      delete mode.keywords.$pattern;
    }
    keywordPattern = keywordPattern || /\w+/;
    if (mode.keywords) {
      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);
    }
    cmode.keywordPatternRe = langRe(keywordPattern, true);
    if (parent) {
      if (!mode.begin)
        mode.begin = /\B|\b/;
      cmode.beginRe = langRe(cmode.begin);
      if (!mode.end && !mode.endsWithParent)
        mode.end = /\B|\b/;
      if (mode.end)
        cmode.endRe = langRe(cmode.end);
      cmode.terminatorEnd = source(cmode.end) || "";
      if (mode.endsWithParent && parent.terminatorEnd) {
        cmode.terminatorEnd += (mode.end ? "|" : "") + parent.terminatorEnd;
      }
    }
    if (mode.illegal)
      cmode.illegalRe = langRe(
        /** @type {RegExp | string} */
        mode.illegal
      );
    if (!mode.contains)
      mode.contains = [];
    mode.contains = [].concat(...mode.contains.map(function(c2) {
      return expandOrCloneMode(c2 === "self" ? mode : c2);
    }));
    mode.contains.forEach(function(c2) {
      compileMode(
        /** @type Mode */
        c2,
        cmode
      );
    });
    if (mode.starts) {
      compileMode(mode.starts, parent);
    }
    cmode.matcher = buildModeRegex(cmode);
    return cmode;
  }
  if (!language.compilerExtensions)
    language.compilerExtensions = [];
  if (language.contains && language.contains.includes("self")) {
    throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");
  }
  language.classNameAliases = inherit$1(language.classNameAliases || {});
  return compileMode(
    /** @type Mode */
    language
  );
}
function dependencyOnParent(mode) {
  if (!mode)
    return false;
  return mode.endsWithParent || dependencyOnParent(mode.starts);
}
function expandOrCloneMode(mode) {
  if (mode.variants && !mode.cachedVariants) {
    mode.cachedVariants = mode.variants.map(function(variant) {
      return inherit$1(mode, { variants: null }, variant);
    });
  }
  if (mode.cachedVariants) {
    return mode.cachedVariants;
  }
  if (dependencyOnParent(mode)) {
    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });
  }
  if (Object.isFrozen(mode)) {
    return inherit$1(mode);
  }
  return mode;
}
var version = "11.9.0";
class HTMLInjectionError extends Error {
  constructor(reason, html) {
    super(reason);
    this.name = "HTMLInjectionError";
    this.html = html;
  }
}
const escape = escapeHTML;
const inherit = inherit$1;
const NO_MATCH = Symbol("nomatch");
const MAX_KEYWORD_HITS = 7;
const HLJS = function(hljs) {
  const languages = /* @__PURE__ */ Object.create(null);
  const aliases = /* @__PURE__ */ Object.create(null);
  const plugins = [];
  let SAFE_MODE = true;
  const LANGUAGE_NOT_FOUND = "Could not find the language '{}', did you forget to load/include a language module?";
  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: "Plain text", contains: [] };
  let options = {
    ignoreUnescapedHTML: false,
    throwUnescapedHTML: false,
    noHighlightRe: /^(no-?highlight)$/i,
    languageDetectRe: /\blang(?:uage)?-([\w-]+)\b/i,
    classPrefix: "hljs-",
    cssSelector: "pre code",
    languages: null,
    // beta configuration options, subject to change, welcome to discuss
    // https://github.com/highlightjs/highlight.js/issues/1086
    __emitter: TokenTreeEmitter
  };
  function shouldNotHighlight(languageName) {
    return options.noHighlightRe.test(languageName);
  }
  function blockLanguage(block) {
    let classes2 = block.className + " ";
    classes2 += block.parentNode ? block.parentNode.className : "";
    const match = options.languageDetectRe.exec(classes2);
    if (match) {
      const language = getLanguage(match[1]);
      if (!language) {
        warn(LANGUAGE_NOT_FOUND.replace("{}", match[1]));
        warn("Falling back to no-highlight mode for this block.", block);
      }
      return language ? match[1] : "no-highlight";
    }
    return classes2.split(/\s+/).find((_class) => shouldNotHighlight(_class) || getLanguage(_class));
  }
  function highlight2(codeOrLanguageName, optionsOrCode, ignoreIllegals) {
    let code = "";
    let languageName = "";
    if (typeof optionsOrCode === "object") {
      code = codeOrLanguageName;
      ignoreIllegals = optionsOrCode.ignoreIllegals;
      languageName = optionsOrCode.language;
    } else {
      deprecated("10.7.0", "highlight(lang, code, ...args) has been deprecated.");
      deprecated("10.7.0", "Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277");
      languageName = codeOrLanguageName;
      code = optionsOrCode;
    }
    if (ignoreIllegals === void 0) {
      ignoreIllegals = true;
    }
    const context = {
      code,
      language: languageName
    };
    fire("before:highlight", context);
    const result = context.result ? context.result : _highlight(context.language, context.code, ignoreIllegals);
    result.code = context.code;
    fire("after:highlight", result);
    return result;
  }
  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {
    const keywordHits = /* @__PURE__ */ Object.create(null);
    function keywordData(mode, matchText) {
      return mode.keywords[matchText];
    }
    function processKeywords() {
      if (!top.keywords) {
        emitter.addText(modeBuffer);
        return;
      }
      let lastIndex = 0;
      top.keywordPatternRe.lastIndex = 0;
      let match = top.keywordPatternRe.exec(modeBuffer);
      let buf = "";
      while (match) {
        buf += modeBuffer.substring(lastIndex, match.index);
        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];
        const data = keywordData(top, word);
        if (data) {
          const [kind, keywordRelevance] = data;
          emitter.addText(buf);
          buf = "";
          keywordHits[word] = (keywordHits[word] || 0) + 1;
          if (keywordHits[word] <= MAX_KEYWORD_HITS)
            relevance += keywordRelevance;
          if (kind.startsWith("_")) {
            buf += match[0];
          } else {
            const cssClass = language.classNameAliases[kind] || kind;
            emitKeyword(match[0], cssClass);
          }
        } else {
          buf += match[0];
        }
        lastIndex = top.keywordPatternRe.lastIndex;
        match = top.keywordPatternRe.exec(modeBuffer);
      }
      buf += modeBuffer.substring(lastIndex);
      emitter.addText(buf);
    }
    function processSubLanguage() {
      if (modeBuffer === "")
        return;
      let result2 = null;
      if (typeof top.subLanguage === "string") {
        if (!languages[top.subLanguage]) {
          emitter.addText(modeBuffer);
          return;
        }
        result2 = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);
        continuations[top.subLanguage] = /** @type {CompiledMode} */
        result2._top;
      } else {
        result2 = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);
      }
      if (top.relevance > 0) {
        relevance += result2.relevance;
      }
      emitter.__addSublanguage(result2._emitter, result2.language);
    }
    function processBuffer() {
      if (top.subLanguage != null) {
        processSubLanguage();
      } else {
        processKeywords();
      }
      modeBuffer = "";
    }
    function emitKeyword(keyword, scope) {
      if (keyword === "")
        return;
      emitter.startScope(scope);
      emitter.addText(keyword);
      emitter.endScope();
    }
    function emitMultiClass(scope, match) {
      let i2 = 1;
      const max2 = match.length - 1;
      while (i2 <= max2) {
        if (!scope._emit[i2]) {
          i2++;
          continue;
        }
        const klass = language.classNameAliases[scope[i2]] || scope[i2];
        const text = match[i2];
        if (klass) {
          emitKeyword(text, klass);
        } else {
          modeBuffer = text;
          processKeywords();
          modeBuffer = "";
        }
        i2++;
      }
    }
    function startNewMode(mode, match) {
      if (mode.scope && typeof mode.scope === "string") {
        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);
      }
      if (mode.beginScope) {
        if (mode.beginScope._wrap) {
          emitKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);
          modeBuffer = "";
        } else if (mode.beginScope._multi) {
          emitMultiClass(mode.beginScope, match);
          modeBuffer = "";
        }
      }
      top = Object.create(mode, { parent: { value: top } });
      return top;
    }
    function endOfMode(mode, match, matchPlusRemainder) {
      let matched = startsWith(mode.endRe, matchPlusRemainder);
      if (matched) {
        if (mode["on:end"]) {
          const resp = new Response(mode);
          mode["on:end"](match, resp);
          if (resp.isMatchIgnored)
            matched = false;
        }
        if (matched) {
          while (mode.endsParent && mode.parent) {
            mode = mode.parent;
          }
          return mode;
        }
      }
      if (mode.endsWithParent) {
        return endOfMode(mode.parent, match, matchPlusRemainder);
      }
    }
    function doIgnore(lexeme) {
      if (top.matcher.regexIndex === 0) {
        modeBuffer += lexeme[0];
        return 1;
      } else {
        resumeScanAtSamePosition = true;
        return 0;
      }
    }
    function doBeginMatch(match) {
      const lexeme = match[0];
      const newMode = match.rule;
      const resp = new Response(newMode);
      const beforeCallbacks = [newMode.__beforeBegin, newMode["on:begin"]];
      for (const cb of beforeCallbacks) {
        if (!cb)
          continue;
        cb(match, resp);
        if (resp.isMatchIgnored)
          return doIgnore(lexeme);
      }
      if (newMode.skip) {
        modeBuffer += lexeme;
      } else {
        if (newMode.excludeBegin) {
          modeBuffer += lexeme;
        }
        processBuffer();
        if (!newMode.returnBegin && !newMode.excludeBegin) {
          modeBuffer = lexeme;
        }
      }
      startNewMode(newMode, match);
      return newMode.returnBegin ? 0 : lexeme.length;
    }
    function doEndMatch(match) {
      const lexeme = match[0];
      const matchPlusRemainder = codeToHighlight.substring(match.index);
      const endMode = endOfMode(top, match, matchPlusRemainder);
      if (!endMode) {
        return NO_MATCH;
      }
      const origin = top;
      if (top.endScope && top.endScope._wrap) {
        processBuffer();
        emitKeyword(lexeme, top.endScope._wrap);
      } else if (top.endScope && top.endScope._multi) {
        processBuffer();
        emitMultiClass(top.endScope, match);
      } else if (origin.skip) {
        modeBuffer += lexeme;
      } else {
        if (!(origin.returnEnd || origin.excludeEnd)) {
          modeBuffer += lexeme;
        }
        processBuffer();
        if (origin.excludeEnd) {
          modeBuffer = lexeme;
        }
      }
      do {
        if (top.scope) {
          emitter.closeNode();
        }
        if (!top.skip && !top.subLanguage) {
          relevance += top.relevance;
        }
        top = top.parent;
      } while (top !== endMode.parent);
      if (endMode.starts) {
        startNewMode(endMode.starts, match);
      }
      return origin.returnEnd ? 0 : lexeme.length;
    }
    function processContinuations() {
      const list = [];
      for (let current = top; current !== language; current = current.parent) {
        if (current.scope) {
          list.unshift(current.scope);
        }
      }
      list.forEach((item) => emitter.openNode(item));
    }
    let lastMatch = {};
    function processLexeme(textBeforeMatch, match) {
      const lexeme = match && match[0];
      modeBuffer += textBeforeMatch;
      if (lexeme == null) {
        processBuffer();
        return 0;
      }
      if (lastMatch.type === "begin" && match.type === "end" && lastMatch.index === match.index && lexeme === "") {
        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);
        if (!SAFE_MODE) {
          const err = new Error(`0 width match regex (${languageName})`);
          err.languageName = languageName;
          err.badRule = lastMatch.rule;
          throw err;
        }
        return 1;
      }
      lastMatch = match;
      if (match.type === "begin") {
        return doBeginMatch(match);
      } else if (match.type === "illegal" && !ignoreIllegals) {
        const err = new Error('Illegal lexeme "' + lexeme + '" for mode "' + (top.scope || "<unnamed>") + '"');
        err.mode = top;
        throw err;
      } else if (match.type === "end") {
        const processed = doEndMatch(match);
        if (processed !== NO_MATCH) {
          return processed;
        }
      }
      if (match.type === "illegal" && lexeme === "") {
        return 1;
      }
      if (iterations > 1e5 && iterations > match.index * 3) {
        const err = new Error("potential infinite loop, way more iterations than matches");
        throw err;
      }
      modeBuffer += lexeme;
      return lexeme.length;
    }
    const language = getLanguage(languageName);
    if (!language) {
      error(LANGUAGE_NOT_FOUND.replace("{}", languageName));
      throw new Error('Unknown language: "' + languageName + '"');
    }
    const md = compileLanguage(language);
    let result = "";
    let top = continuation || md;
    const continuations = {};
    const emitter = new options.__emitter(options);
    processContinuations();
    let modeBuffer = "";
    let relevance = 0;
    let index2 = 0;
    let iterations = 0;
    let resumeScanAtSamePosition = false;
    try {
      if (!language.__emitTokens) {
        top.matcher.considerAll();
        for (; ; ) {
          iterations++;
          if (resumeScanAtSamePosition) {
            resumeScanAtSamePosition = false;
          } else {
            top.matcher.considerAll();
          }
          top.matcher.lastIndex = index2;
          const match = top.matcher.exec(codeToHighlight);
          if (!match)
            break;
          const beforeMatch = codeToHighlight.substring(index2, match.index);
          const processedCount = processLexeme(beforeMatch, match);
          index2 = match.index + processedCount;
        }
        processLexeme(codeToHighlight.substring(index2));
      } else {
        language.__emitTokens(codeToHighlight, emitter);
      }
      emitter.finalize();
      result = emitter.toHTML();
      return {
        language: languageName,
        value: result,
        relevance,
        illegal: false,
        _emitter: emitter,
        _top: top
      };
    } catch (err) {
      if (err.message && err.message.includes("Illegal")) {
        return {
          language: languageName,
          value: escape(codeToHighlight),
          illegal: true,
          relevance: 0,
          _illegalBy: {
            message: err.message,
            index: index2,
            context: codeToHighlight.slice(index2 - 100, index2 + 100),
            mode: err.mode,
            resultSoFar: result
          },
          _emitter: emitter
        };
      } else if (SAFE_MODE) {
        return {
          language: languageName,
          value: escape(codeToHighlight),
          illegal: false,
          relevance: 0,
          errorRaised: err,
          _emitter: emitter,
          _top: top
        };
      } else {
        throw err;
      }
    }
  }
  function justTextHighlightResult(code) {
    const result = {
      value: escape(code),
      illegal: false,
      relevance: 0,
      _top: PLAINTEXT_LANGUAGE,
      _emitter: new options.__emitter(options)
    };
    result._emitter.addText(code);
    return result;
  }
  function highlightAuto(code, languageSubset) {
    languageSubset = languageSubset || options.languages || Object.keys(languages);
    const plaintext = justTextHighlightResult(code);
    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(
      (name2) => _highlight(name2, code, false)
    );
    results.unshift(plaintext);
    const sorted = results.sort((a2, b2) => {
      if (a2.relevance !== b2.relevance)
        return b2.relevance - a2.relevance;
      if (a2.language && b2.language) {
        if (getLanguage(a2.language).supersetOf === b2.language) {
          return 1;
        } else if (getLanguage(b2.language).supersetOf === a2.language) {
          return -1;
        }
      }
      return 0;
    });
    const [best, secondBest] = sorted;
    const result = best;
    result.secondBest = secondBest;
    return result;
  }
  function updateClassName(element, currentLang, resultLang) {
    const language = currentLang && aliases[currentLang] || resultLang;
    element.classList.add("hljs");
    element.classList.add(`language-${language}`);
  }
  function highlightElement(element) {
    let node2 = null;
    const language = blockLanguage(element);
    if (shouldNotHighlight(language))
      return;
    fire(
      "before:highlightElement",
      { el: element, language }
    );
    if (element.dataset.highlighted) {
      console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.", element);
      return;
    }
    if (element.children.length > 0) {
      if (!options.ignoreUnescapedHTML) {
        console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk.");
        console.warn("https://github.com/highlightjs/highlight.js/wiki/security");
        console.warn("The element with unescaped HTML:");
        console.warn(element);
      }
      if (options.throwUnescapedHTML) {
        const err = new HTMLInjectionError(
          "One of your code blocks includes unescaped HTML.",
          element.innerHTML
        );
        throw err;
      }
    }
    node2 = element;
    const text = node2.textContent;
    const result = language ? highlight2(text, { language, ignoreIllegals: true }) : highlightAuto(text);
    element.innerHTML = result.value;
    element.dataset.highlighted = "yes";
    updateClassName(element, language, result.language);
    element.result = {
      language: result.language,
      // TODO: remove with version 11.0
      re: result.relevance,
      relevance: result.relevance
    };
    if (result.secondBest) {
      element.secondBest = {
        language: result.secondBest.language,
        relevance: result.secondBest.relevance
      };
    }
    fire("after:highlightElement", { el: element, result, text });
  }
  function configure(userOptions) {
    options = inherit(options, userOptions);
  }
  const initHighlighting = () => {
    highlightAll();
    deprecated("10.6.0", "initHighlighting() deprecated.  Use highlightAll() now.");
  };
  function initHighlightingOnLoad() {
    highlightAll();
    deprecated("10.6.0", "initHighlightingOnLoad() deprecated.  Use highlightAll() now.");
  }
  let wantsHighlight = false;
  function highlightAll() {
    if (document.readyState === "loading") {
      wantsHighlight = true;
      return;
    }
    const blocks = document.querySelectorAll(options.cssSelector);
    blocks.forEach(highlightElement);
  }
  function boot() {
    if (wantsHighlight)
      highlightAll();
  }
  if (typeof window !== "undefined" && window.addEventListener) {
    window.addEventListener("DOMContentLoaded", boot, false);
  }
  function registerLanguage(languageName, languageDefinition) {
    let lang = null;
    try {
      lang = languageDefinition(hljs);
    } catch (error$12) {
      error("Language definition for '{}' could not be registered.".replace("{}", languageName));
      if (!SAFE_MODE) {
        throw error$12;
      } else {
        error(error$12);
      }
      lang = PLAINTEXT_LANGUAGE;
    }
    if (!lang.name)
      lang.name = languageName;
    languages[languageName] = lang;
    lang.rawDefinition = languageDefinition.bind(null, hljs);
    if (lang.aliases) {
      registerAliases(lang.aliases, { languageName });
    }
  }
  function unregisterLanguage(languageName) {
    delete languages[languageName];
    for (const alias of Object.keys(aliases)) {
      if (aliases[alias] === languageName) {
        delete aliases[alias];
      }
    }
  }
  function listLanguages() {
    return Object.keys(languages);
  }
  function getLanguage(name2) {
    name2 = (name2 || "").toLowerCase();
    return languages[name2] || languages[aliases[name2]];
  }
  function registerAliases(aliasList, { languageName }) {
    if (typeof aliasList === "string") {
      aliasList = [aliasList];
    }
    aliasList.forEach((alias) => {
      aliases[alias.toLowerCase()] = languageName;
    });
  }
  function autoDetection(name2) {
    const lang = getLanguage(name2);
    return lang && !lang.disableAutodetect;
  }
  function upgradePluginAPI(plugin) {
    if (plugin["before:highlightBlock"] && !plugin["before:highlightElement"]) {
      plugin["before:highlightElement"] = (data) => {
        plugin["before:highlightBlock"](
          Object.assign({ block: data.el }, data)
        );
      };
    }
    if (plugin["after:highlightBlock"] && !plugin["after:highlightElement"]) {
      plugin["after:highlightElement"] = (data) => {
        plugin["after:highlightBlock"](
          Object.assign({ block: data.el }, data)
        );
      };
    }
  }
  function addPlugin(plugin) {
    upgradePluginAPI(plugin);
    plugins.push(plugin);
  }
  function removePlugin(plugin) {
    const index2 = plugins.indexOf(plugin);
    if (index2 !== -1) {
      plugins.splice(index2, 1);
    }
  }
  function fire(event2, args) {
    const cb = event2;
    plugins.forEach(function(plugin) {
      if (plugin[cb]) {
        plugin[cb](args);
      }
    });
  }
  function deprecateHighlightBlock(el) {
    deprecated("10.7.0", "highlightBlock will be removed entirely in v12.0");
    deprecated("10.7.0", "Please use highlightElement now.");
    return highlightElement(el);
  }
  Object.assign(hljs, {
    highlight: highlight2,
    highlightAuto,
    highlightAll,
    highlightElement,
    // TODO: Remove with v12 API
    highlightBlock: deprecateHighlightBlock,
    configure,
    initHighlighting,
    initHighlightingOnLoad,
    registerLanguage,
    unregisterLanguage,
    listLanguages,
    getLanguage,
    registerAliases,
    autoDetection,
    inherit,
    addPlugin,
    removePlugin
  });
  hljs.debugMode = function() {
    SAFE_MODE = false;
  };
  hljs.safeMode = function() {
    SAFE_MODE = true;
  };
  hljs.versionString = version;
  hljs.regex = {
    concat,
    lookahead,
    either,
    optional,
    anyNumberOfTimes
  };
  for (const key in MODES) {
    if (typeof MODES[key] === "object") {
      deepFreeze(MODES[key]);
    }
  }
  Object.assign(hljs, MODES);
  return hljs;
};
const highlight = HLJS({});
highlight.newInstance = () => HLJS({});
var core = highlight;
highlight.HighlightJS = highlight;
highlight.default = highlight;
const HighlightJS = /* @__PURE__ */ getDefaultExportFromCjs(core);
function xml(hljs) {
  const regex = hljs.regex;
  const TAG_NAME_RE = regex.concat(/[\p{L}_]/u, regex.optional(/[\p{L}0-9_.-]*:/u), /[\p{L}0-9_.-]*/u);
  const XML_IDENT_RE = /[\p{L}0-9._:-]+/u;
  const XML_ENTITIES = {
    className: "symbol",
    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/
  };
  const XML_META_KEYWORDS = {
    begin: /\s/,
    contains: [
      {
        className: "keyword",
        begin: /#?[a-z_][a-z1-9_-]+/,
        illegal: /\n/
      }
    ]
  };
  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {
    begin: /\(/,
    end: /\)/
  });
  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: "string" });
  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: "string" });
  const TAG_INTERNALS = {
    endsWithParent: true,
    illegal: /</,
    relevance: 0,
    contains: [
      {
        className: "attr",
        begin: XML_IDENT_RE,
        relevance: 0
      },
      {
        begin: /=\s*/,
        relevance: 0,
        contains: [
          {
            className: "string",
            endsParent: true,
            variants: [
              {
                begin: /"/,
                end: /"/,
                contains: [XML_ENTITIES]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [XML_ENTITIES]
              },
              { begin: /[^\s"'=<>`]+/ }
            ]
          }
        ]
      }
    ]
  };
  return {
    name: "HTML, XML",
    aliases: [
      "html",
      "xhtml",
      "rss",
      "atom",
      "xjb",
      "xsd",
      "xsl",
      "plist",
      "wsf",
      "svg"
    ],
    case_insensitive: true,
    unicodeRegex: true,
    contains: [
      {
        className: "meta",
        begin: /<![a-z]/,
        end: />/,
        relevance: 10,
        contains: [
          XML_META_KEYWORDS,
          QUOTE_META_STRING_MODE,
          APOS_META_STRING_MODE,
          XML_META_PAR_KEYWORDS,
          {
            begin: /\[/,
            end: /\]/,
            contains: [
              {
                className: "meta",
                begin: /<![a-z]/,
                end: />/,
                contains: [
                  XML_META_KEYWORDS,
                  XML_META_PAR_KEYWORDS,
                  QUOTE_META_STRING_MODE,
                  APOS_META_STRING_MODE
                ]
              }
            ]
          }
        ]
      },
      hljs.COMMENT(
        /<!--/,
        /-->/,
        { relevance: 10 }
      ),
      {
        begin: /<!\[CDATA\[/,
        end: /\]\]>/,
        relevance: 10
      },
      XML_ENTITIES,
      // xml processing instructions
      {
        className: "meta",
        end: /\?>/,
        variants: [
          {
            begin: /<\?xml/,
            relevance: 10,
            contains: [
              QUOTE_META_STRING_MODE
            ]
          },
          {
            begin: /<\?[a-z][a-z0-9]+/
          }
        ]
      },
      {
        className: "tag",
        /*
        The lookahead pattern (?=...) ensures that 'begin' only matches
        '<style' as a single word, followed by a whitespace or an
        ending bracket.
        */
        begin: /<style(?=\s|>)/,
        end: />/,
        keywords: { name: "style" },
        contains: [TAG_INTERNALS],
        starts: {
          end: /<\/style>/,
          returnEnd: true,
          subLanguage: [
            "css",
            "xml"
          ]
        }
      },
      {
        className: "tag",
        // See the comment in the <style tag about the lookahead pattern
        begin: /<script(?=\s|>)/,
        end: />/,
        keywords: { name: "script" },
        contains: [TAG_INTERNALS],
        starts: {
          end: /<\/script>/,
          returnEnd: true,
          subLanguage: [
            "javascript",
            "handlebars",
            "xml"
          ]
        }
      },
      // we need this for now for jSX
      {
        className: "tag",
        begin: /<>|<\/>/
      },
      // open tag
      {
        className: "tag",
        begin: regex.concat(
          /</,
          regex.lookahead(regex.concat(
            TAG_NAME_RE,
            // <tag/>
            // <tag>
            // <tag ...
            regex.either(/\/>/, />/, /\s/)
          ))
        ),
        end: /\/?>/,
        contains: [
          {
            className: "name",
            begin: TAG_NAME_RE,
            relevance: 0,
            starts: TAG_INTERNALS
          }
        ]
      },
      // close tag
      {
        className: "tag",
        begin: regex.concat(
          /<\//,
          regex.lookahead(regex.concat(
            TAG_NAME_RE,
            />/
          ))
        ),
        contains: [
          {
            className: "name",
            begin: TAG_NAME_RE,
            relevance: 0
          },
          {
            begin: />/,
            relevance: 0,
            endsParent: true
          }
        ]
      }
    ]
  };
}
function json(hljs) {
  const ATTRIBUTE = {
    className: "attr",
    begin: /"(\\.|[^\\"\r\n])*"(?=\s*:)/,
    relevance: 1.01
  };
  const PUNCTUATION = {
    match: /[{}[\],:]/,
    className: "punctuation",
    relevance: 0
  };
  const LITERALS = [
    "true",
    "false",
    "null"
  ];
  const LITERALS_MODE = {
    scope: "literal",
    beginKeywords: LITERALS.join(" ")
  };
  return {
    name: "JSON",
    keywords: {
      literal: LITERALS
    },
    contains: [
      ATTRIBUTE,
      PUNCTUATION,
      hljs.QUOTE_STRING_MODE,
      LITERALS_MODE,
      hljs.C_NUMBER_MODE,
      hljs.C_LINE_COMMENT_MODE,
      hljs.C_BLOCK_COMMENT_MODE
    ],
    illegal: "\\S"
  };
}
var r = defineComponent({ props: { code: { type: String, required: true }, language: { type: String, default: "" }, autodetect: { type: Boolean, default: true }, ignoreIllegals: { type: Boolean, default: true } }, setup: function(e2) {
  var n2 = ref(e2.language);
  watch(function() {
    return e2.language;
  }, function(e3) {
    n2.value = e3;
  });
  var r2 = computed(function() {
    return e2.autodetect || !n2.value;
  }), o2 = computed(function() {
    return !r2.value && !HighlightJS.getLanguage(n2.value);
  });
  return { className: computed(function() {
    return o2.value ? "" : "hljs " + n2.value;
  }), highlightedCode: computed(function() {
    var l2;
    if (o2.value)
      return console.warn('The language "' + n2.value + '" you specified could not be found.'), e2.code.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
    if (r2.value) {
      var a2 = HighlightJS.highlightAuto(e2.code);
      return n2.value = null !== (l2 = a2.language) && void 0 !== l2 ? l2 : "", a2.value;
    }
    return (a2 = HighlightJS.highlight(e2.code, { language: n2.value, ignoreIllegals: e2.ignoreIllegals })).value;
  }) };
}, render: function() {
  return h$2("pre", {}, [h$2("code", { class: this.className, innerHTML: this.highlightedCode })]);
} }), o = { install: function(e2) {
  e2.component("highlightjs", r);
}, component: r };
HighlightJS.registerLanguage("xml", xml);
HighlightJS.registerLanguage("json", json);
const _sfc_main$Y = defineComponent({
  name: "HBpmnCodePreviewer",
  components: {
    highlightjs: o.component
  },
  props: {
    modelValue: { type: Boolean, required: true },
    data: { type: String, required: true },
    title: { type: String, default: "" },
    language: { type: String, default: "xml" },
    maxWidth: { type: String, default: "900px" },
    maxHeight: { type: String, default: "50vh" }
  },
  emits: ["update:modelValue"],
  setup(props, { emit }) {
    const isOpen = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const headerTitle = computed(() => {
      if (!props.title) {
        if (props.language === "xml") {
          return "BPMN XML 预览";
        } else {
          return "BPMN JSON 预览";
        }
      } else {
        return props.title;
      }
    });
    const onCopy = () => {
      copyToClipboard(props.data).then(() => {
        isOpen.value = false;
        toast.success("复制成功");
      }).catch(() => {
        isOpen.value = false;
        toast.error("复制失败");
      });
    };
    return {
      isOpen,
      headerTitle,
      onCopy
    };
  }
});
const _hoisted_1$5 = { class: "text-h6" };
function _sfc_render$Y(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_space = QSpace;
  const _component_q_btn = QBtn;
  const _component_q_card_section = QCardSection;
  const _component_highlightjs = resolveComponent("highlightjs");
  const _component_q_card = QCard;
  const _component_q_dialog = QDialog;
  return openBlock(), createBlock(_component_q_dialog, {
    modelValue: _ctx.isOpen,
    "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.isOpen = $event),
    persistent: ""
  }, {
    default: withCtx(() => [
      createVNode(_component_q_card, {
        style: normalizeStyle(`max-width: ${_ctx.maxWidth}`)
      }, {
        default: withCtx(() => [
          createVNode(_component_q_card_section, { class: "row items-center q-pb-none" }, {
            default: withCtx(() => [
              createElementVNode("div", _hoisted_1$5, toDisplayString(_ctx.headerTitle), 1),
              createVNode(_component_q_space),
              createVNode(_component_q_btn, {
                icon: "close",
                flat: "",
                round: "",
                dense: "",
                onClick: _cache[0] || (_cache[0] = ($event) => _ctx.isOpen = false)
              })
            ]),
            _: 1
          }),
          createVNode(_component_q_card_section, {
            style: normalizeStyle(`max-height: ${_ctx.maxHeight}`),
            class: "scroll q-pt-none q-pa-none"
          }, {
            default: withCtx(() => [
              createVNode(_component_q_btn, {
                size: "sm",
                fab: "",
                flat: "",
                round: "",
                dense: "",
                color: "primary",
                icon: "mdi-content-copy",
                class: "absolute",
                style: { "top": "18px", "right": "14px" },
                onClick: _cache[1] || (_cache[1] = ($event) => _ctx.onCopy())
              }),
              createVNode(_component_highlightjs, {
                language: _ctx.language,
                code: _ctx.data
              }, null, 8, ["language", "code"])
            ]),
            _: 1
          }, 8, ["style"])
        ]),
        _: 1
      }, 8, ["style"])
    ]),
    _: 1
  }, 8, ["modelValue"]);
}
const HBpmnCodePreviewer = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["render", _sfc_render$Y]]);
HBpmnDiagramViewer.install = (app) => {
  app.component(HBpmnDiagramViewer.name, HBpmnDiagramViewer);
};
HBpmnCodePreviewer.install = (app) => {
  app.component(HBpmnCodePreviewer.name, HBpmnCodePreviewer);
};
const _sfc_main$X = defineComponent({
  name: "HHeadPanel",
  props: {
    title: { type: String, required: true },
    icon: { type: String, required: true },
    name: { type: String }
  }
});
const _hoisted_1$4 = ["src"];
function _sfc_render$X(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_avatar = QAvatar;
  const _component_q_item_section = QItemSection;
  const _component_q_item_label = QItemLabel;
  const _component_q_item = QItem;
  return openBlock(), createBlock(_component_q_item, { class: "bg-grey-3" }, {
    default: withCtx(() => [
      createVNode(_component_q_item_section, { avatar: "" }, {
        default: withCtx(() => [
          createVNode(_component_q_avatar, { rounded: "" }, {
            default: withCtx(() => [
              createElementVNode("img", { src: _ctx.icon }, null, 8, _hoisted_1$4)
            ]),
            _: 1
          })
        ]),
        _: 1
      }),
      createVNode(_component_q_item_section, null, {
        default: withCtx(() => [
          createVNode(_component_q_item_label, { class: "text-weight-bolder" }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(_ctx.title), 1)
            ]),
            _: 1
          }),
          _ctx.name ? (openBlock(), createBlock(_component_q_item_label, {
            key: 0,
            caption: ""
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(_ctx.name), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true)
        ]),
        _: 1
      })
    ]),
    _: 1
  });
}
const __unplugin_components_0$7 = /* @__PURE__ */ _export_sfc(_sfc_main$X, [["render", _sfc_render$X]]);
const _sfc_main$W = defineComponent({
  name: "HExpansionItem",
  props: {
    icon: { type: String, default: "" },
    label: { type: String, default: "" },
    badge: { type: Boolean, default: false },
    badgeColor: { type: String, default: "red" },
    count: { type: Number, default: 0 },
    defaultOpend: { type: Boolean, default: false }
  }
});
function _sfc_render$W(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_icon = QIcon;
  const _component_q_item_section = QItemSection;
  const _component_q_badge = QBadge;
  const _component_q_card_section = QCardSection;
  const _component_q_card = QCard;
  const _component_q_expansion_item = QExpansionItem;
  return openBlock(), createBlock(_component_q_expansion_item, {
    "expand-separator": "",
    "default-opened": _ctx.defaultOpend,
    "header-class": "text-primary",
    "expand-icon-class": "text-primary"
  }, {
    header: withCtx(() => [
      createVNode(_component_q_item_section, { avatar: "" }, {
        default: withCtx(() => [
          createVNode(_component_q_icon, { name: _ctx.icon }, null, 8, ["name"])
        ]),
        _: 1
      }),
      createVNode(_component_q_item_section, null, {
        default: withCtx(() => [
          createTextVNode(toDisplayString(_ctx.label), 1)
        ]),
        _: 1
      }),
      _ctx.badge ? (openBlock(), createBlock(_component_q_item_section, {
        key: 0,
        side: ""
      }, {
        default: withCtx(() => [
          createVNode(_component_q_badge, { color: _ctx.badgeColor }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(_ctx.count), 1)
            ]),
            _: 1
          }, 8, ["color"])
        ]),
        _: 1
      })) : createCommentVNode("", true)
    ]),
    default: withCtx(() => [
      createVNode(_component_q_card, null, {
        default: withCtx(() => [
          createVNode(_component_q_card_section, null, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          })
        ]),
        _: 3
      })
    ]),
    _: 3
  }, 8, ["default-opened"]);
}
const __unplugin_components_2$3 = /* @__PURE__ */ _export_sfc(_sfc_main$W, [["render", _sfc_render$W]]);
const _sfc_main$V = defineComponent({
  name: "HButton",
  props: {
    tooltip: { type: String, default: "" }
  }
});
function _sfc_render$V(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_tooltip = QTooltip;
  const _component_q_btn = QBtn;
  return openBlock(), createBlock(_component_q_btn, mergeProps({
    dense: "",
    "text-color": "primary",
    class: "q-px-sm"
  }, _ctx.$attrs), createSlots({ _: 2 }, [
    !_ctx.$slots.default && _ctx.tooltip ? {
      name: "default",
      fn: withCtx(() => [
        _ctx.tooltip ? (openBlock(), createBlock(_component_q_tooltip, { key: 0 }, {
          default: withCtx(() => [
            createTextVNode(toDisplayString(_ctx.tooltip), 1)
          ]),
          _: 1
        })) : createCommentVNode("", true)
      ]),
      key: "0"
    } : void 0
  ]), 1040);
}
const __unplugin_components_0$6 = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["render", _sfc_render$V]]);
const _sfc_main$U = defineComponent({
  name: "HButtonDropdown",
  props: {
    label: { type: String },
    icon: { type: String }
  }
});
function _sfc_render$U(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_list = QList;
  const _component_q_btn_dropdown = QBtnDropdown;
  return openBlock(), createBlock(_component_q_btn_dropdown, {
    split: "",
    dense: "",
    color: "primary",
    label: _ctx.label,
    icon: _ctx.icon,
    class: "q-ml-xs"
  }, {
    default: withCtx(() => [
      createVNode(_component_q_list, {
        bordered: "",
        padding: "",
        class: "rounded-borders text-primary"
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      })
    ]),
    _: 3
  }, 8, ["label", "icon"]);
}
const __unplugin_components_2$2 = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["render", _sfc_render$U]]);
const _sfc_main$T = defineComponent({
  name: "HButtonGroup"
});
function _sfc_render$T(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_btn_group = QBtnGroup;
  return openBlock(), createBlock(_component_q_btn_group, { class: "q-ml-xs" }, {
    default: withCtx(() => [
      renderSlot(_ctx.$slots, "default")
    ]),
    _: 3
  });
}
const __unplugin_components_1$5 = /* @__PURE__ */ _export_sfc(_sfc_main$T, [["render", _sfc_render$T]]);
const _sfc_main$S = defineComponent({
  name: "HDialog",
  props: {
    modelValue: { type: Boolean, default: false },
    title: { type: String, default: "" },
    cancelLabel: { type: String, default: "取消" },
    confirmLabel: { type: String, default: "保存" },
    confirmDisable: { type: Boolean, default: false },
    width: { type: String, default: "30vw" }
  },
  emits: ["update:modelValue", "save"],
  setup(props, { emit }) {
    const isOpen = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const onClose = () => {
      isOpen.value = false;
    };
    const onSave = () => {
      emit("save");
    };
    return {
      isOpen,
      onClose,
      onSave
    };
  }
});
const _hoisted_1$3 = {
  key: 0,
  class: "text-h6"
};
function _sfc_render$S(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_space = QSpace;
  const _component_q_btn = QBtn;
  const _component_q_card_section = QCardSection;
  const _component_q_card_actions = QCardActions;
  const _component_q_card = QCard;
  const _component_q_dialog = QDialog;
  return openBlock(), createBlock(_component_q_dialog, {
    modelValue: _ctx.isOpen,
    "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event) => _ctx.isOpen = $event),
    persistent: "",
    "transition-show": "scale",
    "transition-hide": "scale"
  }, {
    default: withCtx(() => [
      createVNode(_component_q_card, {
        style: normalizeStyle(`width: ${_ctx.width}`)
      }, {
        default: withCtx(() => [
          createVNode(_component_q_card_section, { class: "row items-center q-pb-none" }, {
            default: withCtx(() => [
              _ctx.title ? (openBlock(), createElementBlock("div", _hoisted_1$3, toDisplayString(_ctx.title), 1)) : createCommentVNode("", true),
              createVNode(_component_q_space),
              createVNode(_component_q_btn, {
                icon: "close",
                flat: "",
                round: "",
                dense: "",
                onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onClose())
              })
            ]),
            _: 1
          }),
          createVNode(_component_q_card_section, normalizeProps(guardReactiveProps(_ctx.$attrs)), {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 16),
          createVNode(_component_q_card_actions, { align: "right" }, {
            default: withCtx(() => [
              createVNode(_component_q_btn, {
                label: _ctx.cancelLabel,
                color: "red",
                onClick: _cache[1] || (_cache[1] = ($event) => _ctx.onClose())
              }, null, 8, ["label"]),
              createVNode(_component_q_btn, {
                disable: _ctx.confirmDisable,
                label: _ctx.confirmLabel,
                color: "primary",
                onClick: _cache[2] || (_cache[2] = ($event) => _ctx.onSave())
              }, null, 8, ["disable", "label"])
            ]),
            _: 1
          })
        ]),
        _: 3
      }, 8, ["style"])
    ]),
    _: 3
  }, 8, ["modelValue"]);
}
const __unplugin_components_2$1 = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["render", _sfc_render$S]]);
const _sfc_main$R = defineComponent({
  name: "HListItem",
  props: {
    label: { type: String },
    icon: { type: String }
  }
});
function _sfc_render$R(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_avatar = QAvatar;
  const _component_q_item_section = QItemSection;
  const _component_q_item_label = QItemLabel;
  const _component_q_item = QItem;
  const _directive_close_popup = resolveDirective("close-popup");
  const _directive_ripple = resolveDirective("ripple");
  return withDirectives((openBlock(), createBlock(_component_q_item, {
    clickable: "",
    class: "q-mb-sm"
  }, {
    default: withCtx(() => [
      createVNode(_component_q_item_section, { avatar: "" }, {
        default: withCtx(() => [
          createVNode(_component_q_avatar, {
            size: "md",
            round: "",
            dense: "",
            color: "primary",
            "text-color": "white",
            icon: _ctx.icon
          }, null, 8, ["icon"])
        ]),
        _: 1
      }),
      createVNode(_component_q_item_section, null, {
        default: withCtx(() => [
          createVNode(_component_q_item_label, null, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(_ctx.label), 1)
            ]),
            _: 1
          })
        ]),
        _: 1
      })
    ]),
    _: 1
  })), [
    [_directive_close_popup],
    [_directive_ripple]
  ]);
}
const __unplugin_components_0$5 = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["render", _sfc_render$R]]);
const _sfc_main$Q = defineComponent({
  name: "HSeparator"
});
function _sfc_render$Q(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_separator = QSeparator;
  return openBlock(), createBlock(_component_q_separator, {
    vertical: "",
    color: "grey-6"
  });
}
const __unplugin_components_1$4 = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["render", _sfc_render$Q]]);
const _sfc_main$P = defineComponent({
  name: "HTableActionButton",
  props: {
    tooltip: { type: String, default: "" }
  }
});
function _sfc_render$P(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_tooltip = QTooltip;
  const _component_q_btn = QBtn;
  return openBlock(), createBlock(_component_q_btn, mergeProps({
    flat: "",
    round: "",
    dense: "",
    size: "sm"
  }, _ctx.$attrs), createSlots({ _: 2 }, [
    !_ctx.$slots.default && _ctx.tooltip ? {
      name: "default",
      fn: withCtx(() => [
        _ctx.tooltip ? (openBlock(), createBlock(_component_q_tooltip, { key: 0 }, {
          default: withCtx(() => [
            createTextVNode(toDisplayString(_ctx.tooltip), 1)
          ]),
          _: 1
        })) : createCommentVNode("", true)
      ]),
      key: "0"
    } : void 0
  ]), 1040);
}
const __unplugin_components_0$4 = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["render", _sfc_render$P]]);
const _sfc_main$O = defineComponent({
  name: "HTableItemDeleteButton",
  components: {
    HTableActionButton: __unplugin_components_0$4
  }
});
function _sfc_render$O(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_table_action_button = __unplugin_components_0$4;
  return openBlock(), createBlock(_component_h_table_action_button, mergeProps({
    icon: "mdi-delete",
    tooltip: "删除",
    color: "red"
  }, _ctx.$attrs), null, 16);
}
const __unplugin_components_5$1 = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["render", _sfc_render$O]]);
defineComponent({
  name: "HTableItemEditButton",
  components: {
    HTableActionButton: __unplugin_components_0$4
  }
});
const _sfc_main$N = defineComponent({
  name: "HAsynchronousContinuationsPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    const { getBeforeValue, setBeforeValue, getAfterValue, setAfterValue, getExclusiveValue, setExclusiveValue } = useAsynchronousContinuationsProperties();
    const before = ref(false);
    const after = ref(false);
    const exclusive = ref(false);
    const isExclusive = computed(() => {
      return before.value || after.value;
    });
    const updateBefore = (value) => {
      setBeforeValue(designer.activeElement, value);
      if (value) {
        exclusive.value = true;
      }
    };
    const updateAfter = (value) => {
      setAfterValue(designer.activeElement, value);
      if (value) {
        exclusive.value = true;
      }
    };
    const updateExclusive = (value) => {
      setExclusiveValue(designer.activeElement, value);
    };
    const loading = () => {
      before.value = getBeforeValue(designer.activeElement);
      after.value = getAfterValue(designer.activeElement);
      exclusive.value = getExclusiveValue(designer.activeElement);
    };
    watch(
      () => isExclusive.value,
      (newValue) => {
        exclusive.value = newValue;
        updateExclusive(newValue);
      }
    );
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
      },
      { immediate: true }
    );
    return {
      before,
      after,
      exclusive,
      isExclusive,
      updateBefore,
      updateAfter,
      updateExclusive
    };
  }
});
function _sfc_render$N(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_checkbox = QCheckbox;
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-shuffle-variant",
    label: "异步属性"
  }, {
    default: withCtx(() => [
      createVNode(_component_q_checkbox, {
        modelValue: _ctx.before,
        "onUpdate:modelValue": [
          _cache[0] || (_cache[0] = ($event) => _ctx.before = $event),
          _ctx.updateBefore
        ],
        label: "之前"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_q_checkbox, {
        modelValue: _ctx.after,
        "onUpdate:modelValue": [
          _cache[1] || (_cache[1] = ($event) => _ctx.after = $event),
          _ctx.updateAfter
        ],
        label: "之后"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      _ctx.isExclusive ? (openBlock(), createBlock(_component_q_checkbox, {
        key: 0,
        modelValue: _ctx.exclusive,
        "onUpdate:modelValue": [
          _cache[2] || (_cache[2] = ($event) => _ctx.exclusive = $event),
          _ctx.updateExclusive
        ],
        label: "排除"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])) : createCommentVNode("", true)
    ]),
    _: 1
  });
}
const HAsynchronousContinuationsPanel = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["render", _sfc_render$N]]);
const _sfc_main$M = defineComponent({
  name: "HTimerPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$M(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-call-missed",
    label: "被调用元素"
  });
}
const HCalledElementPanel = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["render", _sfc_render$M]]);
const _sfc_main$L = defineComponent({
  name: "HUserSelectTable",
  components: {
    HTextField
  },
  props: {
    modelValue: { type: Array, default: () => [] },
    selection: { type: String, default: "single" }
  },
  setup(props, { emit }) {
    const resource = useResourceStore();
    const { tableRows, totalPages, pagination, loading, findItems, conditions } = useBpmnTableItems(resource.userService, {
      sortBy: "userId",
      sortOrder: "desc"
    });
    const selectedItems = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const rowKey = "id";
    const fieldValue = ref("");
    watch(fieldValue, (newValue) => {
      if (newValue) {
        conditions.value.firstNameLike = "%" + newValue + "%";
      }
    });
    const columns = [
      { name: "id", field: "id", align: "center", label: "ID" },
      { name: "firstName", field: "firstName", align: "center", label: "姓名" }
    ];
    const onClear = () => {
      conditions.value = {};
    };
    return {
      tableRows,
      totalPages,
      pagination,
      loading,
      fieldValue,
      selectedItems,
      rowKey,
      columns,
      findItems,
      onClear
    };
  }
});
function _sfc_render$L(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_q_table = QTable;
  return openBlock(), createBlock(_component_q_table, {
    dense: "",
    flat: "",
    rows: _ctx.tableRows,
    columns: _ctx.columns,
    "row-key": _ctx.rowKey,
    selection: _ctx.selection,
    selected: _ctx.selectedItems,
    "onUpdate:selected": _cache[2] || (_cache[2] = ($event) => _ctx.selectedItems = $event),
    pagination: _ctx.pagination,
    "onUpdate:pagination": _cache[3] || (_cache[3] = ($event) => _ctx.pagination = $event),
    loading: _ctx.loading,
    onRequest: _ctx.findItems
  }, {
    top: withCtx(() => [
      createVNode(_component_h_text_field, {
        modelValue: _ctx.fieldValue,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.fieldValue = $event),
        debounce: "2000",
        label: "姓名",
        dense: "",
        onClear: _cache[1] || (_cache[1] = ($event) => _ctx.onClear())
      }, null, 8, ["modelValue"])
    ]),
    _: 1
  }, 8, ["rows", "columns", "row-key", "selection", "selected", "pagination", "loading", "onRequest"]);
}
const __unplugin_components_1$3 = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["render", _sfc_render$L]]);
const _sfc_main$K = defineComponent({
  name: "HCandidateUserTextField",
  components: {
    HDialog: __unplugin_components_2$1,
    HTextField,
    HUserSelectTable: __unplugin_components_1$3
  },
  props: {
    modelValue: { type: String, default: "" },
    selection: { type: String, default: "multiple" },
    label: { type: String },
    title: { type: String }
  },
  emits: ["update:modelValue"],
  setup(props, { emit }) {
    const assignee = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const isOpen = ref(false);
    const selected = ref([]);
    const isDisabled = computed(() => {
      return lodash.isEmpty(selected.value);
    });
    const onClose = () => {
      isOpen.value = false;
    };
    const onSave = () => {
      onClose();
      if (!lodash.isEmpty(selected.value)) {
        assignee.value = lodash.join(
          lodash.map(selected.value, (item) => item.id),
          ","
        );
      } else {
        assignee.value = "";
      }
    };
    const onOpen = () => {
      if (assignee.value) {
        const items = lodash.split(assignee.value);
        selected.value = lodash.map(items, (item) => {
          return { id: item, firstName: "", lastName: "", email: "" };
        });
      }
      isOpen.value = true;
    };
    return {
      isOpen,
      isDisabled,
      selected,
      assignee,
      onClose,
      onSave,
      onOpen
    };
  }
});
function _sfc_render$K(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_btn = QBtn;
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_h_user_select_table = __unplugin_components_1$3;
  const _component_h_dialog = __unplugin_components_2$1;
  return openBlock(), createElementBlock("div", null, [
    createVNode(_component_h_text_field, {
      modelValue: _ctx.assignee,
      "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.assignee = $event),
      dense: "",
      label: _ctx.label
    }, {
      append: withCtx(() => [
        createVNode(_component_q_btn, {
          round: "",
          dense: "",
          flat: "",
          icon: "mdi-text-box-search-outline",
          color: "red",
          class: "cursor-pointer",
          onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onOpen())
        })
      ]),
      _: 1
    }, 8, ["modelValue", "label"]),
    createVNode(_component_h_dialog, {
      modelValue: _ctx.isOpen,
      "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event) => _ctx.isOpen = $event),
      onSave: _cache[4] || (_cache[4] = ($event) => _ctx.onSave()),
      title: _ctx.title
    }, {
      default: withCtx(() => [
        createVNode(_component_h_user_select_table, {
          modelValue: _ctx.selected,
          "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.selected = $event),
          selection: _ctx.selection
        }, null, 8, ["modelValue", "selection"])
      ]),
      _: 1
    }, 8, ["modelValue", "title"])
  ]);
}
const __unplugin_components_0$3 = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["render", _sfc_render$K]]);
const _sfc_main$J = defineComponent({
  name: "HGroupSelectTable",
  components: {
    HTextField
  },
  props: {
    modelValue: { type: Array, default: () => [] }
  },
  setup(props, { emit }) {
    const resource = useResourceStore();
    const { tableRows, totalPages, pagination, loading, findItems, conditions } = useBpmnTableItems(resource.groupService, {
      sortBy: "id",
      sortOrder: "desc"
    });
    const selectedItems = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const rowKey = "id";
    const fieldValue = ref("");
    watch(fieldValue, (newValue) => {
      if (newValue) {
        conditions.value.nameLike = "%" + newValue + "%";
      }
    });
    const columns = [
      { name: "id", field: "id", align: "center", label: "ID" },
      { name: "name", field: "name", align: "center", label: "名称" },
      { name: "type", field: "type", align: "center", label: "类型" }
    ];
    const onClear = () => {
      conditions.value = {};
    };
    return {
      tableRows,
      totalPages,
      pagination,
      loading,
      fieldValue,
      selectedItems,
      rowKey,
      columns,
      findItems,
      onClear
    };
  }
});
function _sfc_render$J(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_q_table = QTable;
  return openBlock(), createBlock(_component_q_table, {
    dense: "",
    flat: "",
    rows: _ctx.tableRows,
    columns: _ctx.columns,
    "row-key": _ctx.rowKey,
    selection: "multiple",
    selected: _ctx.selectedItems,
    "onUpdate:selected": _cache[2] || (_cache[2] = ($event) => _ctx.selectedItems = $event),
    pagination: _ctx.pagination,
    "onUpdate:pagination": _cache[3] || (_cache[3] = ($event) => _ctx.pagination = $event),
    loading: _ctx.loading,
    onRequest: _ctx.findItems
  }, {
    top: withCtx(() => [
      createVNode(_component_h_text_field, {
        modelValue: _ctx.fieldValue,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.fieldValue = $event),
        debounce: "1000",
        label: "名称",
        dense: "",
        onClear: _cache[1] || (_cache[1] = ($event) => _ctx.onClear())
      }, null, 8, ["modelValue"])
    ]),
    _: 1
  }, 8, ["rows", "columns", "row-key", "selected", "pagination", "loading", "onRequest"]);
}
const __unplugin_components_1$2 = /* @__PURE__ */ _export_sfc(_sfc_main$J, [["render", _sfc_render$J]]);
const _sfc_main$I = defineComponent({
  name: "HCandidateGroupTextField",
  components: {
    HDialog: __unplugin_components_2$1,
    HGroupSelectTable: __unplugin_components_1$2,
    HTextField
  },
  props: {
    modelValue: { type: String, default: "" },
    label: { type: String },
    title: { type: String }
  },
  emits: ["update:modelValue"],
  setup(props, { emit }) {
    const assignee = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const isOpen = ref(false);
    const selected = ref([]);
    const isDisabled = computed(() => {
      return lodash.isEmpty(selected.value);
    });
    const onClose = () => {
      isOpen.value = false;
    };
    const onSave = () => {
      onClose();
      if (!lodash.isEmpty(selected.value)) {
        assignee.value = lodash.join(
          lodash.map(selected.value, (item) => item.id),
          ","
        );
      } else {
        assignee.value = "";
      }
    };
    const onOpen = () => {
      if (assignee.value) {
        const items = lodash.split(assignee.value);
        selected.value = lodash.map(items, (item) => {
          return { id: item, name: "", type: "" };
        });
      }
      isOpen.value = true;
    };
    return {
      isOpen,
      isDisabled,
      selected,
      assignee,
      onClose,
      onSave,
      onOpen
    };
  }
});
function _sfc_render$I(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_btn = QBtn;
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_h_group_select_table = __unplugin_components_1$2;
  const _component_h_dialog = __unplugin_components_2$1;
  return openBlock(), createElementBlock("div", null, [
    createVNode(_component_h_text_field, {
      modelValue: _ctx.assignee,
      "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.assignee = $event),
      dense: "",
      label: _ctx.label
    }, {
      append: withCtx(() => [
        createVNode(_component_q_btn, {
          round: "",
          dense: "",
          flat: "",
          icon: "mdi-text-box-search-outline",
          color: "red",
          class: "cursor-pointer",
          onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onOpen())
        })
      ]),
      _: 1
    }, 8, ["modelValue", "label"]),
    createVNode(_component_h_dialog, {
      modelValue: _ctx.isOpen,
      "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event) => _ctx.isOpen = $event),
      onSave: _cache[4] || (_cache[4] = ($event) => _ctx.onSave()),
      title: _ctx.title
    }, {
      default: withCtx(() => [
        createVNode(_component_h_group_select_table, {
          modelValue: _ctx.selected,
          "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.selected = $event)
        }, null, 8, ["modelValue"])
      ]),
      _: 1
    }, 8, ["modelValue", "title"])
  ]);
}
const __unplugin_components_1$1 = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["render", _sfc_render$I]]);
const _sfc_main$H = defineComponent({
  name: "HExtensionPropertyDialog",
  props: {
    modelValue: { type: Boolean, default: false }
  },
  emits: ["update:modelValue", "update:open", "save"],
  setup(props, { emit }) {
    const property = ref({});
    const isOpen = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    watch(isOpen, (newValue) => {
      if (newValue) {
        property.value = {};
      }
    });
    const isDisabled = computed(() => {
      if (property.value.name && property.value.value) {
        return false;
      } else {
        return true;
      }
    });
    const onSave = () => {
      emit("save", property.value);
    };
    return {
      isOpen,
      property,
      isDisabled,
      onSave
    };
  }
});
const _hoisted_1$2 = /* @__PURE__ */ createElementVNode("div", { class: "text-h6" }, "设置扩展属性", -1);
function _sfc_render$H(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_space = QSpace;
  const _component_q_btn = QBtn;
  const _component_q_card_section = QCardSection;
  const _component_q_input = QInput;
  const _component_q_card_actions = QCardActions;
  const _component_q_card = QCard;
  const _component_q_dialog = QDialog;
  return openBlock(), createBlock(_component_q_dialog, {
    modelValue: _ctx.isOpen,
    "onUpdate:modelValue": _cache[5] || (_cache[5] = ($event) => _ctx.isOpen = $event),
    persistent: "",
    "transition-show": "scale",
    "transition-hide": "scale"
  }, {
    default: withCtx(() => [
      createVNode(_component_q_card, { style: { "width": "20vw" } }, {
        default: withCtx(() => [
          createVNode(_component_q_card_section, { class: "row items-center q-pb-none" }, {
            default: withCtx(() => [
              _hoisted_1$2,
              createVNode(_component_q_space),
              createVNode(_component_q_btn, {
                icon: "close",
                flat: "",
                round: "",
                dense: "",
                onClick: _cache[0] || (_cache[0] = ($event) => _ctx.isOpen = false)
              })
            ]),
            _: 1
          }),
          createVNode(_component_q_card_section, null, {
            default: withCtx(() => [
              createVNode(_component_q_input, {
                modelValue: _ctx.property.name,
                "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.property.name = $event),
                ref: "nameRef",
                outlined: "",
                dense: "",
                label: "属性名称",
                rules: [(val) => !!val || "属性名称不能为空"],
                placeholder: "请输入属性名称"
              }, null, 8, ["modelValue", "rules"]),
              createVNode(_component_q_input, {
                modelValue: _ctx.property.value,
                "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.property.value = $event),
                ref: "valueRef",
                outlined: "",
                dense: "",
                label: "属性值",
                rules: [(val) => !!val || "属性值不能为空"],
                placeholder: "请输入属性值"
              }, null, 8, ["modelValue", "rules"])
            ]),
            _: 1
          }),
          createVNode(_component_q_card_actions, { align: "right" }, {
            default: withCtx(() => [
              createVNode(_component_q_btn, {
                label: "取消",
                color: "red",
                onClick: _cache[3] || (_cache[3] = ($event) => _ctx.isOpen = false)
              }),
              createVNode(_component_q_btn, {
                disable: _ctx.isDisabled,
                label: "保存",
                color: "primary",
                onClick: _cache[4] || (_cache[4] = ($event) => _ctx.onSave())
              }, null, 8, ["disable"])
            ]),
            _: 1
          })
        ]),
        _: 1
      })
    ]),
    _: 1
  }, 8, ["modelValue"]);
}
const __unplugin_components_8 = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["render", _sfc_render$H]]);
const _sfc_main$G = defineComponent({
  name: "HFormSelect",
  props: {
    modelValue: { type: String }
  },
  setup(props, { emit }) {
    const selectedValue = computed({
      get: () => props.modelValue,
      set: (newValue) => {
        emit("update:modelValue", newValue);
      }
    });
    const resource = useResourceStore();
    const options = ref([]);
    const fetchAllItems = async () => {
      const result = await resource.dynamicFormService.fetchAll();
      const data = result.data;
      if (!lodash.isEmpty(data)) {
        options.value = data.map((i2) => {
          return { label: i2.name + "-" + i2.activityName, value: i2.id };
        });
      }
    };
    onMounted(() => {
      fetchAllItems();
    });
    const filter2 = (value, update, abort) => {
      update(() => {
        const needle = value.toLowerCase();
        options.value = options.value.filter((v2) => v2.label.match(needle));
      });
    };
    return {
      selectedValue,
      options,
      filter: filter2
    };
  }
});
function _sfc_render$G(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_item_section = QItemSection;
  const _component_q_item = QItem;
  const _component_q_select = QSelect;
  return openBlock(), createBlock(_component_q_select, mergeProps({
    modelValue: _ctx.selectedValue,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.selectedValue = $event),
    options: _ctx.options,
    dense: "",
    outlined: "",
    clearable: "",
    "use-input": "",
    "use-chips": "",
    "emit-value": "",
    "bottom-slots": "",
    "input-debounce": "300",
    "transition-show": "scale",
    "transition-hide": "scale",
    onFilter: _ctx.filter
  }, _ctx.$attrs), {
    "no-option": withCtx(() => [
      createVNode(_component_q_item, null, {
        default: withCtx(() => [
          createVNode(_component_q_item_section, { class: "text-grey" }, {
            default: withCtx(() => [
              createTextVNode("没有数据")
            ]),
            _: 1
          })
        ]),
        _: 1
      })
    ]),
    _: 1
  }, 16, ["modelValue", "options", "onFilter"]);
}
const __unplugin_components_0$2 = /* @__PURE__ */ _export_sfc(_sfc_main$G, [["render", _sfc_render$G]]);
const _sfc_main$F = defineComponent({
  name: "HCandidateStarterPanel",
  components: {
    HCandidateGroupTextField: __unplugin_components_1$1,
    HCandidateUserTextField: __unplugin_components_0$3,
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    const {
      getCandidateStarterGroupsValue,
      setCandidateStarterGroupsValue,
      getCandidateStarterUsersValue,
      setCandidateStarterUsersValue
    } = useCandidateStarterProperties();
    const candidateStarterUsers = ref("");
    const candidateStarterGroups = ref("");
    const updateCandidateStarterGroups = (value) => {
      setCandidateStarterGroupsValue(designer.activeElement, value);
    };
    const updateCandidateStarterUsers = (value) => {
      setCandidateStarterUsersValue(designer.activeElement, value);
    };
    const loading = () => {
      candidateStarterGroups.value = getCandidateStarterGroupsValue(designer.activeElement);
      candidateStarterUsers.value = getCandidateStarterUsersValue(designer.activeElement);
    };
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
      },
      { immediate: true, deep: true }
    );
    return {
      candidateStarterGroups,
      candidateStarterUsers,
      updateCandidateStarterGroups,
      updateCandidateStarterUsers
    };
  }
});
function _sfc_render$F(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_candidate_group_text_field = __unplugin_components_1$1;
  const _component_h_candidate_user_text_field = __unplugin_components_0$3;
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-account-reactivate-outline",
    label: "候选启动"
  }, {
    default: withCtx(() => [
      createVNode(_component_h_candidate_group_text_field, {
        modelValue: _ctx.candidateStarterGroups,
        "onUpdate:modelValue": [
          _cache[0] || (_cache[0] = ($event) => _ctx.candidateStarterGroups = $event),
          _ctx.updateCandidateStarterGroups
        ],
        label: "候选启动组",
        title: "选择候选启动组",
        hint: "可指定多个组以逗号分隔"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_h_candidate_user_text_field, {
        modelValue: _ctx.candidateStarterUsers,
        "onUpdate:modelValue": [
          _cache[1] || (_cache[1] = ($event) => _ctx.candidateStarterUsers = $event),
          _ctx.updateCandidateStarterUsers
        ],
        label: "候选启动用户",
        title: "选择候选启动用户",
        hint: "可指定多个用户以逗号分隔"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])
    ]),
    _: 1
  });
}
const HCandidateStarterPanel = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["render", _sfc_render$F]]);
const _sfc_main$E = defineComponent({
  name: "HCompensationPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$E(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-archive-plus",
    label: "补偿"
  });
}
const HCompensationPanel = /* @__PURE__ */ _export_sfc(_sfc_main$E, [["render", _sfc_render$E]]);
const _sfc_main$D = defineComponent({
  name: "HConditionPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3,
    HTextField,
    HSelect
  },
  setup() {
    const designer = useDesignerStore();
    const conditionExpression = ref("");
    const format2 = ref("");
    const resource = ref("");
    const script = ref("");
    const {
      getConditionExpressionValue,
      setConditionExpressionValue,
      getFormatValue,
      setFormatValue,
      getResourceValue,
      setResourceValue,
      getScriptValue,
      setScriptValue,
      resetConditionExpression
    } = useConditionProperties();
    const conditionType = ref("NONE");
    const conditionOptions = ref([
      { text: "无", value: "NONE" },
      { text: "脚本", value: "SCRIPT" },
      { text: "表达式", value: "EXPRESSION" }
    ]);
    const scriptType = ref("INLINE_SCRIPT");
    const scriptOptions = ref([
      { text: "外部资源", value: "EXTERNAL_RESOURCE" },
      { text: "内联脚本", value: "INLINE_SCRIPT" }
    ]);
    const isScript = computed(() => {
      return conditionType.value === "SCRIPT";
    });
    const isExpression = computed(() => {
      return conditionType.value === "EXPRESSION";
    });
    const isExternalResource = computed(() => {
      return scriptType.value === "EXTERNAL_RESOURCE";
    });
    const updateConditionExpression = (value) => {
      setConditionExpressionValue(designer.activeElement, value);
    };
    const updateFormat = (value) => {
      setFormatValue(designer.activeElement, value);
    };
    const updateResource = (value) => {
      setResourceValue(designer.activeElement, value);
    };
    const updateScript = (value) => {
      setScriptValue(designer.activeElement, value);
    };
    const initSelectValue = () => {
      if (conditionExpression.value) {
        conditionType.value = "EXPRESSION";
      } else {
        if (resource.value) {
          conditionType.value = "SCRIPT";
          scriptType.value = "EXTERNAL_RESOURCE";
        }
        if (script.value) {
          conditionType.value = "SCRIPT";
          scriptType.value = "INLINE_SCRIPT";
        }
      }
    };
    const loading = () => {
      conditionExpression.value = getConditionExpressionValue(designer.activeElement);
      format2.value = getFormatValue(designer.activeElement);
      resource.value = getResourceValue(designer.activeElement);
      script.value = getScriptValue(designer.activeElement);
      initSelectValue();
    };
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
      },
      { immediate: true, deep: true }
    );
    watch(
      () => conditionType.value,
      () => {
        resetConditionExpression(designer.activeElement);
        loading();
      }
    );
    watch(
      () => scriptType.value,
      () => {
        resetConditionExpression(designer.activeElement);
        if (format2.value) {
          updateFormat(format2.value);
        }
        loading();
      }
    );
    return {
      conditionExpression,
      format: format2,
      resource,
      script,
      conditionType,
      conditionOptions,
      scriptType,
      scriptOptions,
      isScript,
      isExpression,
      isExternalResource,
      updateConditionExpression,
      updateFormat,
      updateResource,
      updateScript
    };
  }
});
function _sfc_render$D(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_select = resolveComponent("h-select");
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-call-split",
    label: "条件"
  }, {
    default: withCtx(() => [
      createVNode(_component_h_select, {
        modelValue: _ctx.conditionType,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.conditionType = $event),
        dense: "",
        options: _ctx.conditionOptions,
        label: "类型",
        "hide-hint": ""
      }, null, 8, ["modelValue", "options"]),
      _ctx.isScript ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        createVNode(_component_h_text_field, {
          modelValue: _ctx.format,
          "onUpdate:modelValue": [
            _cache[1] || (_cache[1] = ($event) => _ctx.format = $event),
            _ctx.updateFormat
          ],
          dense: "",
          label: "格式"
        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
        createVNode(_component_h_select, {
          modelValue: _ctx.scriptType,
          "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.scriptType = $event),
          dense: "",
          options: _ctx.scriptOptions,
          label: "脚本类型",
          "hide-hint": ""
        }, null, 8, ["modelValue", "options"]),
        _ctx.isExternalResource ? (openBlock(), createBlock(_component_h_text_field, {
          key: 0,
          modelValue: _ctx.resource,
          "onUpdate:modelValue": [
            _cache[3] || (_cache[3] = ($event) => _ctx.resource = $event),
            _ctx.updateResource
          ],
          dense: "",
          label: "资源"
        }, null, 8, ["modelValue", "onUpdate:modelValue"])) : (openBlock(), createBlock(_component_h_text_field, {
          key: 1,
          modelValue: _ctx.script,
          "onUpdate:modelValue": [
            _cache[4] || (_cache[4] = ($event) => _ctx.script = $event),
            _ctx.updateScript
          ],
          dense: "",
          outlined: "",
          type: "textarea",
          label: "脚本"
        }, null, 8, ["modelValue", "onUpdate:modelValue"]))
      ], 64)) : createCommentVNode("", true),
      _ctx.isExpression ? (openBlock(), createBlock(_component_h_text_field, {
        key: 1,
        modelValue: _ctx.conditionExpression,
        "onUpdate:modelValue": [
          _cache[5] || (_cache[5] = ($event) => _ctx.conditionExpression = $event),
          _ctx.updateConditionExpression
        ],
        dense: "",
        label: "条件表达式"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])) : createCommentVNode("", true)
    ]),
    _: 1
  });
}
const HConditionPanel = /* @__PURE__ */ _export_sfc(_sfc_main$D, [["render", _sfc_render$D]]);
const _sfc_main$C = defineComponent({
  name: "HDocumentationPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup(props) {
    const designer = useDesignerStore();
    const { getDocumentationValue, setDocumentationValue } = useDocumentProperties();
    const document2 = ref("");
    const updateDocument = (value) => {
      setDocumentationValue(designer.activeElement, value);
    };
    const loading = () => {
      document2.value = getDocumentationValue(designer.activeElement);
    };
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
      },
      { immediate: true, deep: true }
    );
    return {
      document: document2,
      updateDocument
    };
  }
});
function _sfc_render$C(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_input = QInput;
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-file-document-outline",
    label: "附加文档"
  }, {
    default: withCtx(() => [
      createVNode(_component_q_input, {
        modelValue: _ctx.document,
        "onUpdate:modelValue": [
          _cache[0] || (_cache[0] = ($event) => _ctx.document = $event),
          _ctx.updateDocument
        ],
        dense: "",
        outlined: "",
        type: "textarea",
        label: "元素文档"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])
    ]),
    _: 1
  });
}
const HDocumentationPanel = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["render", _sfc_render$C]]);
const _sfc_main$B = defineComponent({
  name: "HErrorPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$B(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-close-octagon",
    label: "错误"
  });
}
const HErrorPanel = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["render", _sfc_render$B]]);
const _sfc_main$A = defineComponent({
  name: "HTimerPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$A(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-escalator-box",
    label: "上报"
  });
}
const HEscalationPanel = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["render", _sfc_render$A]]);
const _sfc_main$z = defineComponent({
  name: "HExecutionListenerPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    return {
      count
    };
  }
});
function _sfc_render$z(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-access-point",
    label: "执行监听",
    badge: "",
    count: _ctx.count
  }, null, 8, ["count"]);
}
const HExecutionListenerPanel = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["render", _sfc_render$z]]);
const _sfc_main$y = defineComponent({
  name: "HExtensionPropertiesPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3,
    HTableItemDeleteButton: __unplugin_components_5$1,
    HExtensionPropertyDialog: __unplugin_components_8
  },
  setup() {
    const designer = useDesignerStore();
    const { getExtensionProperties, modifyExtensionProperty, deleteExtensionProperty } = useExtensionProperties();
    const openDialog = ref(false);
    const tableColumns = [
      { align: "center", name: "name", field: "calories", label: "名称" },
      { align: "center", name: "value", field: "fat", label: "值" },
      { align: "center", name: "actions", field: "actions", label: "操作" }
    ];
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    const onCreate = (item) => {
      if (!lodash.isEmpty(item)) {
        openDialog.value = false;
        tableRows.value.push(item);
        modifyExtensionProperty(designer.activeElement, tableRows.value);
        loading();
      }
    };
    const onDelete = (item) => {
      if (!lodash.isEmpty(tableRows.value)) {
        deleteExtensionProperty(designer.activeElement, item);
        loading();
      }
    };
    const onModify = () => {
      modifyExtensionProperty(designer.activeElement, tableRows.value);
      loading();
    };
    const loading = () => {
      tableRows.value = getExtensionProperties(designer.activeElement);
    };
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
      },
      { immediate: true }
    );
    return {
      tableRows,
      tableColumns,
      openDialog,
      count,
      onCreate,
      onDelete,
      onModify
    };
  }
});
function _sfc_render$y(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_space = QSpace;
  const _component_q_btn = QBtn;
  const _component_q_input = QInput;
  const _component_q_popup_edit = QPopupEdit;
  const _component_q_td = QTd;
  const _component_h_table_item_delete_button = __unplugin_components_5$1;
  const _component_q_tr = QTr;
  const _component_q_table = QTable;
  const _component_h_extension_property_dialog = __unplugin_components_8;
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-note-plus",
    label: "扩展属性",
    badge: "",
    count: _ctx.count
  }, {
    default: withCtx(() => [
      createVNode(_component_q_table, {
        rows: _ctx.tableRows,
        columns: _ctx.tableColumns,
        "row-key": "name",
        dense: "",
        flat: "",
        bordered: "",
        "hide-pagination": "",
        "no-data-label": "尚未设置",
        "card-container-class": "q-ml-2"
      }, {
        "top-right": withCtx(() => [
          createVNode(_component_q_space),
          createVNode(_component_q_btn, {
            rounded: "",
            size: "sm",
            icon: "mdi-plus-circle-outline",
            color: "primary",
            label: "新建",
            onClick: _cache[0] || (_cache[0] = ($event) => _ctx.openDialog = true)
          })
        ]),
        body: withCtx((props) => [
          createVNode(_component_q_tr, { props }, {
            default: withCtx(() => [
              createVNode(_component_q_td, {
                key: "label",
                props
              }, {
                default: withCtx(() => [
                  createTextVNode(toDisplayString(props.row.label) + " ", 1),
                  createVNode(_component_q_popup_edit, {
                    modelValue: props.row.label,
                    "onUpdate:modelValue": [($event) => props.row.label = $event, _ctx.onModify],
                    title: "修改标签",
                    buttons: "",
                    "label-set": "确定",
                    "label-cancel": "取消"
                  }, {
                    default: withCtx((scope) => [
                      createVNode(_component_q_input, {
                        modelValue: scope.value,
                        "onUpdate:modelValue": ($event) => scope.value = $event,
                        dense: "",
                        autofocus: ""
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 2
                  }, 1032, ["modelValue", "onUpdate:modelValue"])
                ]),
                _: 2
              }, 1032, ["props"]),
              createVNode(_component_q_td, {
                key: "value",
                props
              }, {
                default: withCtx(() => [
                  createTextVNode(toDisplayString(props.row.value) + " ", 1),
                  createVNode(_component_q_popup_edit, {
                    modelValue: props.row.value,
                    "onUpdate:modelValue": [($event) => props.row.value = $event, _ctx.onModify],
                    title: "修改属性值",
                    buttons: "",
                    "label-set": "确定",
                    "label-cancel": "取消"
                  }, {
                    default: withCtx((scope) => [
                      createVNode(_component_q_input, {
                        modelValue: scope.value,
                        "onUpdate:modelValue": ($event) => scope.value = $event,
                        dense: "",
                        autofocus: ""
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 2
                  }, 1032, ["modelValue", "onUpdate:modelValue"])
                ]),
                _: 2
              }, 1032, ["props"]),
              createVNode(_component_q_td, {
                key: "actions",
                props
              }, {
                default: withCtx(() => [
                  createVNode(_component_h_table_item_delete_button, {
                    onClick: ($event) => _ctx.onDelete(props.row)
                  }, null, 8, ["onClick"])
                ]),
                _: 2
              }, 1032, ["props"])
            ]),
            _: 2
          }, 1032, ["props"])
        ]),
        _: 1
      }, 8, ["rows", "columns"]),
      createVNode(_component_h_extension_property_dialog, {
        modelValue: _ctx.openDialog,
        "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.openDialog = $event),
        onSave: _ctx.onCreate
      }, null, 8, ["modelValue", "onSave"])
    ]),
    _: 1
  }, 8, ["count"]);
}
const HExtensionPropertiesPanel = /* @__PURE__ */ _export_sfc(_sfc_main$y, [["render", _sfc_render$y]]);
const _sfc_main$x = defineComponent({
  name: "HExternalTaskPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$x(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-transfer",
    label: "外部任务"
  });
}
const HExternalTaskPanel = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["render", _sfc_render$x]]);
const _sfc_main$w = defineComponent({
  name: "HFieldInjectionPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    return {
      count
    };
  }
});
function _sfc_render$w(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-focus-field-horizontal",
    label: "字段注入",
    badge: "",
    count: _ctx.count
  }, null, 8, ["count"]);
}
const HFieldInjectionPanel = /* @__PURE__ */ _export_sfc(_sfc_main$w, [["render", _sfc_render$w]]);
var FormTypeEnum = /* @__PURE__ */ ((FormTypeEnum2) => {
  FormTypeEnum2["NONE"] = "NONE";
  FormTypeEnum2["CAMUNDA_FORMS"] = "CAMUNDA_FORMS";
  FormTypeEnum2["EMBEDDED_OR_EXTERNAL_TASK_FORMS"] = "EMBEDDED_OR_EXTERNAL_TASK_FORMS";
  FormTypeEnum2["GENERATED_TASK_FORMS"] = "GENERATED_TASK_FORMS";
  return FormTypeEnum2;
})(FormTypeEnum || {});
var BindingTypeEnum = /* @__PURE__ */ ((BindingTypeEnum2) => {
  BindingTypeEnum2["DEVELOPMENT"] = "deployment";
  BindingTypeEnum2["LATEST"] = "latest";
  BindingTypeEnum2["VERSION"] = "version";
  return BindingTypeEnum2;
})(BindingTypeEnum || {});
const _sfc_main$v = defineComponent({
  name: "HFormPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3,
    HSelect,
    HTextField,
    HFormSelect: __unplugin_components_0$2
  },
  setup() {
    const designer = useDesignerStore();
    const {
      getFormKeyValue,
      setFormKeyValue,
      getFormRefValue,
      setFormRefValue,
      getFormRefVersionValue,
      setFormRefVersionValue,
      getFormRefBindingValue,
      setFormRefBindingValue,
      setGeneratedTaskFormsValues,
      resetGeneratedTaskFormsValues,
      hasExtensionElements,
      resetProperties
    } = useFormsProperties();
    const formKey = ref("");
    const formRef = ref("");
    const formRefVersion = ref("");
    const formRefBinding = ref("");
    const formsType = ref(FormTypeEnum.NONE);
    const formsOptions = ref([
      { text: "无", value: FormTypeEnum.NONE },
      { text: "Camunda 表单", value: FormTypeEnum.CAMUNDA_FORMS },
      { text: "嵌入或外部任务表单", value: FormTypeEnum.EMBEDDED_OR_EXTERNAL_TASK_FORMS },
      { text: "生成的任务表单", value: FormTypeEnum.GENERATED_TASK_FORMS }
    ]);
    const bindingType = ref(BindingTypeEnum.LATEST);
    const bindingOptions = ref([
      { text: "部署", value: BindingTypeEnum.DEVELOPMENT },
      { text: "最新", value: BindingTypeEnum.LATEST },
      { text: "版本", value: BindingTypeEnum.VERSION }
    ]);
    const isCamundaForms = computed(() => {
      return formsType.value === FormTypeEnum.CAMUNDA_FORMS;
    });
    const isEmbeddedOrExternalTaskForms = computed(() => {
      return formsType.value === FormTypeEnum.EMBEDDED_OR_EXTERNAL_TASK_FORMS;
    });
    const isFormRefVersion = computed(() => {
      return bindingType.value === BindingTypeEnum.VERSION;
    });
    const updateFormKey = (value) => {
      setFormKeyValue(designer.activeElement, value);
    };
    const updateFormRef = (value) => {
      setFormRefValue(designer.activeElement, value);
    };
    const updateVersion = (value) => {
      setFormRefVersionValue(designer.activeElement, value);
    };
    const initSelectValue = () => {
      if (hasExtensionElements(designer.activeElement)) {
        formsType.value = FormTypeEnum.GENERATED_TASK_FORMS;
      } else {
        if (formKey.value) {
          formsType.value = FormTypeEnum.EMBEDDED_OR_EXTERNAL_TASK_FORMS;
        }
        if (formRef.value || formRefVersion.value || formRefBinding.value) {
          formsType.value = FormTypeEnum.CAMUNDA_FORMS;
          if (formRefVersion.value) {
            bindingType.value = BindingTypeEnum.VERSION;
          }
          if (formRefBinding.value) {
            bindingType.value = formRefBinding.value;
          }
        }
      }
    };
    const loading = () => {
      formKey.value = getFormKeyValue(designer.activeElement);
      formRef.value = getFormRefValue(designer.activeElement);
      formRefVersion.value = getFormRefVersionValue(designer.activeElement);
      formRefBinding.value = getFormRefBindingValue(designer.activeElement);
    };
    const changeFormType = (type) => {
      switch (type) {
        case FormTypeEnum.GENERATED_TASK_FORMS:
          setGeneratedTaskFormsValues(designer.activeElement);
          break;
        case FormTypeEnum.CAMUNDA_FORMS:
          setFormRefValue(designer.activeElement, "");
          resetGeneratedTaskFormsValues(designer.activeElement);
          break;
        case FormTypeEnum.EMBEDDED_OR_EXTERNAL_TASK_FORMS:
          setFormKeyValue(designer.activeElement, "");
          resetGeneratedTaskFormsValues(designer.activeElement);
          break;
        default:
          resetGeneratedTaskFormsValues(designer.activeElement);
          break;
      }
    };
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
        initSelectValue();
      },
      { immediate: true, deep: true }
    );
    watch(
      () => bindingType.value,
      (newValue) => {
        setFormRefBindingValue(designer.activeElement, newValue);
      }
    );
    watch(
      () => formsType.value,
      (newValue) => {
        changeFormType(newValue);
        resetProperties(designer.activeElement);
      }
    );
    return {
      formsType,
      formsOptions,
      bindingType,
      bindingOptions,
      formKey,
      formRef,
      formRefVersion,
      isCamundaForms,
      isEmbeddedOrExternalTaskForms,
      isFormRefVersion,
      updateFormKey,
      updateFormRef,
      updateVersion
    };
  }
});
function _sfc_render$v(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_select = resolveComponent("h-select");
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_h_form_select = __unplugin_components_0$2;
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-clipboard-text",
    label: "表单"
  }, {
    default: withCtx(() => [
      createVNode(_component_h_select, {
        modelValue: _ctx.formsType,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.formsType = $event),
        dense: "",
        options: _ctx.formsOptions,
        label: "类型",
        "hide-hint": ""
      }, null, 8, ["modelValue", "options"]),
      _ctx.isCamundaForms ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        createVNode(_component_h_text_field, {
          modelValue: _ctx.formRef,
          "onUpdate:modelValue": [
            _cache[1] || (_cache[1] = ($event) => _ctx.formRef = $event),
            _ctx.updateFormRef
          ],
          dense: "",
          label: "表单引用"
        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
        createVNode(_component_h_select, {
          modelValue: _ctx.bindingType,
          "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.bindingType = $event),
          dense: "",
          options: _ctx.bindingOptions,
          label: "绑定",
          "hide-hint": ""
        }, null, 8, ["modelValue", "options"]),
        _ctx.isFormRefVersion ? (openBlock(), createBlock(_component_h_text_field, {
          key: 0,
          modelValue: _ctx.formRefVersion,
          "onUpdate:modelValue": [
            _cache[3] || (_cache[3] = ($event) => _ctx.formRefVersion = $event),
            _ctx.updateVersion
          ],
          dense: "",
          label: "版本"
        }, null, 8, ["modelValue", "onUpdate:modelValue"])) : createCommentVNode("", true)
      ], 64)) : createCommentVNode("", true),
      _ctx.isEmbeddedOrExternalTaskForms ? (openBlock(), createBlock(_component_h_form_select, {
        key: 1,
        modelValue: _ctx.formKey,
        "onUpdate:modelValue": [
          _cache[4] || (_cache[4] = ($event) => _ctx.formKey = $event),
          _ctx.updateFormKey
        ],
        dense: "",
        label: "Form Key"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])) : createCommentVNode("", true)
    ]),
    _: 1
  });
}
const HFormPanel = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["render", _sfc_render$v]]);
const _sfc_main$u = defineComponent({
  name: "HElementGeneral",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup(props) {
    const elementId = ref("");
    const elementName = ref("");
    const versionTag = ref("");
    const isExecutable = ref(true);
    const designer = useDesignerStore();
    const {
      isProcess,
      setIdValue,
      getNameValue,
      setNameValue,
      getIsExecutableValue,
      setIsExecutableValue,
      getVersionTagValue,
      setVersionTagValue,
      isIdValid,
      isVersionTagValid
    } = useGeneralProperties();
    const isProcessElement = computed(() => {
      return !!isProcess(designer.activeElement);
    });
    const loading = () => {
      elementId.value = designer.activeElementId;
      elementName.value = getNameValue(designer.activeElement);
      if (isProcess(designer.activeElement)) {
        isExecutable.value = getIsExecutableValue(designer.activeElement);
        versionTag.value = getVersionTagValue(designer.activeElement);
      }
    };
    const updateName = (value) => {
      setNameValue(designer.activeElement, value);
    };
    const updateId = (value) => {
      const errorMsg = isIdValid(designer.activeElement, value);
      if (lodash.isEmpty(errorMsg)) {
        setIdValue(designer.activeElement, value);
      } else {
        toast.error(errorMsg);
      }
    };
    const updateVersionTag = (value) => {
      if (isVersionTagValid(value)) {
        setVersionTagValue(designer.activeElement, value);
      } else {
        toast.error("版本号必须符合语义化版本2.0.0 要点");
      }
    };
    const updateIsExecutable = (value) => {
      setIsExecutableValue(designer.activeElement, value);
    };
    watch(
      () => designer.activeElement.id,
      (newValue) => {
        loading();
      },
      { immediate: true, deep: true }
    );
    return {
      isProcessElement,
      elementId,
      elementName,
      versionTag,
      isExecutable,
      updateName,
      updateId,
      updateVersionTag,
      updateIsExecutable
    };
  }
});
function _sfc_render$u(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_input = QInput;
  const _component_q_toggle = QToggle;
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-information-outline",
    label: "常规信息",
    "default-opened": ""
  }, {
    default: withCtx(() => [
      createVNode(_component_q_input, {
        modelValue: _ctx.elementName,
        "onUpdate:modelValue": [
          _cache[0] || (_cache[0] = ($event) => _ctx.elementName = $event),
          _ctx.updateName
        ],
        dense: "",
        outlined: "",
        label: "名称"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_q_input, {
        modelValue: _ctx.elementId,
        "onUpdate:modelValue": [
          _cache[1] || (_cache[1] = ($event) => _ctx.elementId = $event),
          _ctx.updateId
        ],
        dense: "",
        outlined: "",
        label: "编号",
        class: "q-mt-md"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      _ctx.isProcessElement ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        createVNode(_component_q_input, {
          modelValue: _ctx.versionTag,
          "onUpdate:modelValue": [
            _cache[2] || (_cache[2] = ($event) => _ctx.versionTag = $event),
            _ctx.updateVersionTag
          ],
          dense: "",
          outlined: "",
          label: "版本",
          class: "q-mt-md"
        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
        createVNode(_component_q_toggle, {
          modelValue: _ctx.isExecutable,
          "onUpdate:modelValue": [
            _cache[3] || (_cache[3] = ($event) => _ctx.isExecutable = $event),
            _ctx.updateIsExecutable
          ],
          dense: "",
          outlined: "",
          label: "可执行文件",
          class: "q-mt-md"
        }, null, 8, ["modelValue", "onUpdate:modelValue"])
      ], 64)) : createCommentVNode("", true)
    ]),
    _: 1
  });
}
const HGeneralPanel = /* @__PURE__ */ _export_sfc(_sfc_main$u, [["render", _sfc_render$u]]);
const _sfc_main$t = defineComponent({
  name: "HHistoryCleanupPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$t(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-delete-clock-outline",
    label: "历史清理"
  });
}
const HHistoryCleanupPanel = /* @__PURE__ */ _export_sfc(_sfc_main$t, [["render", _sfc_render$t]]);
const _sfc_main$s = defineComponent({
  name: "HImplementationPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$s(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-code-braces-box",
    label: "实现"
  });
}
const HImplementationPanel = /* @__PURE__ */ _export_sfc(_sfc_main$s, [["render", _sfc_render$s]]);
const _sfc_main$r = defineComponent({
  name: "HInMappingPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    return {
      count
    };
  }
});
function _sfc_render$r(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-file-import",
    label: "输入映射",
    badge: "",
    count: _ctx.count
  }, null, 8, ["count"]);
}
const HInMappingPanel = /* @__PURE__ */ _export_sfc(_sfc_main$r, [["render", _sfc_render$r]]);
const _sfc_main$q = defineComponent({
  name: "HInMappingPropagationPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$q(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-file-import",
    label: "输入映射分页"
  });
}
const HInMappingPropagationPanel = /* @__PURE__ */ _export_sfc(_sfc_main$q, [["render", _sfc_render$q]]);
const _sfc_main$p = defineComponent({
  name: "HInputPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    return {
      count
    };
  }
});
function _sfc_render$p(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-application-import",
    label: "输入",
    badge: "",
    count: _ctx.count
  }, null, 8, ["count"]);
}
const HInputPanel = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["render", _sfc_render$p]]);
const _sfc_main$o = defineComponent({
  name: "HJobExecutionPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$o(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-timer-play",
    label: "作业执行"
  });
}
const HJobExecutionPanel = /* @__PURE__ */ _export_sfc(_sfc_main$o, [["render", _sfc_render$o]]);
const _sfc_main$n = defineComponent({
  name: "HLinkPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$n(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-link",
    label: "链接"
  });
}
const HLinkPanel = /* @__PURE__ */ _export_sfc(_sfc_main$n, [["render", _sfc_render$n]]);
const _sfc_main$m = defineComponent({
  name: "HMessagePanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$m(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-message",
    label: "消息"
  });
}
const HMessagePanel = /* @__PURE__ */ _export_sfc(_sfc_main$m, [["render", _sfc_render$m]]);
const _sfc_main$l = defineComponent({
  name: "HMultiInstancePanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$l(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-hexagon-multiple",
    label: "多实例"
  });
}
const HMultiInstancePanel = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["render", _sfc_render$l]]);
const _sfc_main$k = defineComponent({
  name: "HOutMappingPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    return {
      count
    };
  }
});
function _sfc_render$k(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-file-export",
    label: "输出映射",
    badge: "",
    count: _ctx.count
  }, null, 8, ["count"]);
}
const HOutMappingPanel = /* @__PURE__ */ _export_sfc(_sfc_main$k, [["render", _sfc_render$k]]);
const _sfc_main$j = defineComponent({
  name: "HOutMappingPropagationPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$j(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-file-export-outline",
    label: "输出映射分页"
  });
}
const HOutMappingPropagationPanel = /* @__PURE__ */ _export_sfc(_sfc_main$j, [["render", _sfc_render$j]]);
const _sfc_main$i = defineComponent({
  name: "HOutputPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    return {
      count
    };
  }
});
function _sfc_render$i(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-application-export",
    label: "输出",
    badge: "",
    count: _ctx.count
  }, null, 8, ["count"]);
}
const HOutputPanel = /* @__PURE__ */ _export_sfc(_sfc_main$i, [["render", _sfc_render$i]]);
const _sfc_main$h = defineComponent({
  name: "HScriptPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$h(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-script-text",
    label: "脚本"
  });
}
const HScriptPanel = /* @__PURE__ */ _export_sfc(_sfc_main$h, [["render", _sfc_render$h]]);
const _sfc_main$g = defineComponent({
  name: "HSignalPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$g(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-signal",
    label: "信号"
  });
}
const HSignalPanel = /* @__PURE__ */ _export_sfc(_sfc_main$g, [["render", _sfc_render$g]]);
const _sfc_main$f = defineComponent({
  name: "HStartInitiatorPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3,
    HTextField
  },
  setup() {
    const designer = useDesignerStore();
    const { getInitiatorValue, setInitiatorValue } = useStartInitiatorProperties();
    const initiator = ref();
    const updateInitiator = (value) => {
      setInitiatorValue(designer.activeElement, value);
    };
    const loading = () => {
      initiator.value = getInitiatorValue(designer.activeElement);
    };
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
      },
      { immediate: true, deep: true }
    );
    return {
      initiator,
      updateInitiator
    };
  }
});
function _sfc_render$f(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-account-cog",
    label: "启动发起人"
  }, {
    default: withCtx(() => [
      createVNode(_component_h_text_field, {
        modelValue: _ctx.initiator,
        "onUpdate:modelValue": [
          _cache[0] || (_cache[0] = ($event) => _ctx.initiator = $event),
          _ctx.updateInitiator
        ],
        dense: "",
        label: "创建者"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])
    ]),
    _: 1
  });
}
const HStartInitiatorPanel = /* @__PURE__ */ _export_sfc(_sfc_main$f, [["render", _sfc_render$f]]);
const _sfc_main$e = defineComponent({
  name: "HTasklistPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$e(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-list-status",
    label: "任务列表"
  });
}
const HTasklistPanel = /* @__PURE__ */ _export_sfc(_sfc_main$e, [["render", _sfc_render$e]]);
const _sfc_main$d = defineComponent({
  name: "HTaskListenerPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const tableRows = ref([]);
    const count = computed(() => {
      return tableRows.value.length;
    });
    return {
      count
    };
  }
});
function _sfc_render$d(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-account-tie-voice",
    label: "任务监听",
    badge: "",
    count: _ctx.count
  }, null, 8, ["count"]);
}
const HTaskListenerPanel = /* @__PURE__ */ _export_sfc(_sfc_main$d, [["render", _sfc_render$d]]);
const _sfc_main$c = defineComponent({
  name: "HTimerPanel",
  components: {
    HExpansionItem: __unplugin_components_2$3
  },
  setup() {
    const designer = useDesignerStore();
    watch(
      () => designer.activeElement.id,
      (newValue) => {
      },
      { immediate: true, deep: true }
    );
  }
});
function _sfc_render$c(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-timer",
    label: "计时器"
  });
}
const HTimerPanel = /* @__PURE__ */ _export_sfc(_sfc_main$c, [["render", _sfc_render$c]]);
const _sfc_main$b = defineComponent({
  name: "HUserAssignmentPanel",
  components: {
    HCandidateGroupTextField: __unplugin_components_1$1,
    HCandidateUserTextField: __unplugin_components_0$3,
    HExpansionItem: __unplugin_components_2$3,
    HTextField
  },
  setup() {
    const designer = useDesignerStore();
    const {
      getAssigneeValue,
      setAssigneeValue,
      getCandidateGroupsValue,
      setCandidateGroupsValue,
      getCandidateUsersValue,
      setCandidateUsersValue,
      getDueDateValue,
      setDueDateValue,
      getFollowUpDateValue,
      setFollowUpDateValue,
      getPriorityValue,
      setPriorityValue
    } = useUserAssignmentProperties();
    const assignee = ref("");
    const candidateUsers = ref("");
    const candidateGroups = ref("");
    const dueDate = ref("");
    const followUpDate = ref("");
    const priority = ref();
    const updateAssignee = (value) => {
      setAssigneeValue(designer.activeElement, value);
    };
    const updateCandidateGroups = (value) => {
      setCandidateGroupsValue(designer.activeElement, value);
    };
    const updateCandidateUsers = (value) => {
      setCandidateUsersValue(designer.activeElement, value);
    };
    const updateDueDate = (value) => {
      setDueDateValue(designer.activeElement, value);
    };
    const updateFollowUpDate = (value) => {
      setFollowUpDateValue(designer.activeElement, value);
    };
    const updatePriority = (value) => {
      setPriorityValue(designer.activeElement, value);
    };
    const loading = () => {
      assignee.value = getAssigneeValue(designer.activeElement);
      candidateGroups.value = getCandidateGroupsValue(designer.activeElement);
      candidateUsers.value = getCandidateUsersValue(designer.activeElement);
      dueDate.value = getDueDateValue(designer.activeElement);
      followUpDate.value = getFollowUpDateValue(designer.activeElement);
      priority.value = getPriorityValue(designer.activeElement);
    };
    watch(
      () => designer.activeElement.id,
      () => {
        loading();
      },
      { immediate: true }
    );
    return {
      assignee,
      candidateUsers,
      candidateGroups,
      dueDate,
      followUpDate,
      priority,
      updateAssignee,
      updateCandidateGroups,
      updateCandidateUsers,
      updateDueDate,
      updateFollowUpDate,
      updatePriority
    };
  }
});
function _sfc_render$b(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_candidate_user_text_field = __unplugin_components_0$3;
  const _component_h_candidate_group_text_field = __unplugin_components_1$1;
  const _component_h_text_field = resolveComponent("h-text-field");
  const _component_h_expansion_item = __unplugin_components_2$3;
  return openBlock(), createBlock(_component_h_expansion_item, {
    icon: "mdi-account-supervisor",
    label: "用户分配"
  }, {
    default: withCtx(() => [
      createVNode(_component_h_candidate_user_text_field, {
        modelValue: _ctx.assignee,
        "onUpdate:modelValue": [
          _cache[0] || (_cache[0] = ($event) => _ctx.assignee = $event),
          _ctx.updateAssignee
        ],
        selection: "single",
        label: "代理人",
        title: "选择代理人"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_h_candidate_group_text_field, {
        modelValue: _ctx.candidateGroups,
        "onUpdate:modelValue": [
          _cache[1] || (_cache[1] = ($event) => _ctx.candidateGroups = $event),
          _ctx.updateCandidateGroups
        ],
        label: "候选组",
        title: "选择候选组"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_h_candidate_user_text_field, {
        modelValue: _ctx.candidateUsers,
        "onUpdate:modelValue": [
          _cache[2] || (_cache[2] = ($event) => _ctx.candidateUsers = $event),
          _ctx.updateCandidateUsers
        ],
        label: "候选用户",
        title: "选择候选用户"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_h_text_field, {
        modelValue: _ctx.dueDate,
        "onUpdate:modelValue": [
          _cache[3] || (_cache[3] = ($event) => _ctx.dueDate = $event),
          _ctx.updateDueDate
        ],
        dense: "",
        label: "到期时间",
        hint: "表达式(eg.'${someDate}')或时间(eg.2015-06-26T09:00:30)"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_h_text_field, {
        modelValue: _ctx.followUpDate,
        "onUpdate:modelValue": [
          _cache[4] || (_cache[4] = ($event) => _ctx.followUpDate = $event),
          _ctx.updateFollowUpDate
        ],
        dense: "",
        label: "后续时间",
        hint: "表达式(eg.'${someDate}')或时间(eg.2015-06-26T09:00:30)"
      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_h_text_field, {
        modelValue: _ctx.priority,
        "onUpdate:modelValue": [
          _cache[5] || (_cache[5] = ($event) => _ctx.priority = $event),
          _ctx.updatePriority
        ],
        dense: "",
        label: "优先级"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])
    ]),
    _: 1
  });
}
const HUserAssignmentPanel = /* @__PURE__ */ _export_sfc(_sfc_main$b, [["render", _sfc_render$b]]);
const _sfc_main$a = defineComponent({
  name: "HBpmnPropertyPanel",
  components: {
    HAsynchronousContinuationsPanel,
    HCalledElementPanel,
    HCandidateStarterPanel,
    HCompensationPanel,
    HConditionPanel,
    HDocumentationPanel,
    HErrorPanel,
    HEscalationPanel,
    HExecutionListenerPanel,
    HExtensionPropertiesPanel,
    HFormPanel,
    HFieldInjectionPanel,
    HExternalTaskPanel,
    HGeneralPanel,
    HHeadPanel: __unplugin_components_0$7,
    HHistoryCleanupPanel,
    HImplementationPanel,
    HInMappingPanel,
    HInMappingPropagationPanel,
    HInputPanel,
    HJobExecutionPanel,
    HLinkPanel,
    HMessagePanel,
    HMultiInstancePanel,
    HOutMappingPanel,
    HOutMappingPropagationPanel,
    HOutputPanel,
    HScriptPanel,
    HSignalPanel,
    HStartInitiatorPanel,
    HTaskListenerPanel,
    HTasklistPanel,
    HTimerPanel,
    HUserAssignmentPanel
  },
  props: {
    title: { type: String, required: true },
    icon: { type: String, required: true },
    type: { type: String, required: true },
    label: { type: String }
  },
  setup(props) {
    const isShow = ref(true);
    const designer = useDesignerStore();
    const { panelGroups } = storeToRefs(designer);
    const parsePropertyPanelName = (id) => {
      let result = id;
      const index2 = id.indexOf("__");
      if (index2 !== -1) {
        result = id.substring(index2 + 2);
      }
      result = lodash.upperFirst(result);
      console.log("======", result);
      return "H" + result + "Panel";
    };
    const thumbStyle = {
      right: "2px",
      borderRadius: "5px",
      backgroundColor: "#027be3",
      width: "5px",
      opacity: "0.75"
    };
    return {
      thumbStyle,
      isShow,
      panelGroups,
      parsePropertyPanelName
    };
  }
});
function _sfc_render$a(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_head_panel = __unplugin_components_0$7;
  const _component_q_list = QList;
  const _component_q_scroll_area = QScrollArea;
  const _component_q_drawer = QDrawer;
  return openBlock(), createBlock(_component_q_drawer, {
    modelValue: _ctx.isShow,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.isShow = $event),
    side: "right",
    "show-if-above": "",
    bordered: "",
    width: 400
  }, {
    default: withCtx(() => [
      createVNode(_component_q_scroll_area, { class: "fit" }, {
        default: withCtx(() => [
          createVNode(_component_q_list, {
            bordered: "",
            class: "rounded-borders"
          }, {
            default: withCtx(() => [
              createVNode(_component_h_head_panel, {
                title: _ctx.title,
                icon: _ctx.icon,
                name: _ctx.label
              }, null, 8, ["title", "icon", "name"]),
              (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.panelGroups, (element, index2) => {
                return openBlock(), createBlock(resolveDynamicComponent(_ctx.parsePropertyPanelName(element.id)), { key: index2 });
              }), 128))
            ]),
            _: 1
          })
        ]),
        _: 1
      })
    ]),
    _: 1
  }, 8, ["modelValue"]);
}
const __unplugin_components_3$1 = /* @__PURE__ */ _export_sfc(_sfc_main$a, [["render", _sfc_render$a]]);
const _sfc_main$9 = defineComponent({
  name: "HToolGroup",
  components: {
    HButton: __unplugin_components_0$6,
    HButtonGroup: __unplugin_components_1$5,
    HSeparator: __unplugin_components_1$4
  },
  setup(props) {
    const designer = useDesignerStore();
    const settings = useSettingStore();
    const { showMiniMap, showBpmnLint } = storeToRefs(settings);
    const toggleSimulation = () => {
      const simulation = designer.modeler.get("toggleMode");
      simulation && simulation.toggleMode();
    };
    const toggleMinimap = () => {
      const minimap = designer.modeler.get("minimap");
      minimap && minimap.toggle();
    };
    const toggleBpmnLint = () => {
      const bpmnLint = designer.modeler.get("linting");
      bpmnLint && bpmnLint.toggle(!bpmnLint.isActive());
    };
    return {
      showMiniMap,
      showBpmnLint,
      toggleSimulation,
      toggleMinimap,
      toggleBpmnLint
    };
  }
});
function _sfc_render$9(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_button = __unplugin_components_0$6;
  const _component_h_separator = __unplugin_components_1$4;
  const _component_h_button_group = __unplugin_components_1$5;
  return openBlock(), createBlock(_component_h_button_group, null, {
    default: withCtx(() => [
      createVNode(_component_h_button, {
        icon: "mdi-motion-play",
        tooltip: "开启/关闭流程模拟",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.toggleSimulation())
      }),
      createVNode(_component_h_separator),
      _ctx.showMiniMap ? (openBlock(), createBlock(_component_h_button, {
        key: 0,
        icon: "mdi-map-outline",
        tooltip: "开启/关闭小地图",
        onClick: _cache[1] || (_cache[1] = ($event) => _ctx.toggleMinimap())
      })) : createCommentVNode("", true),
      createVNode(_component_h_separator),
      _ctx.showBpmnLint ? (openBlock(), createBlock(_component_h_button, {
        key: 1,
        icon: "mdi-alert-circle-check-outline",
        tooltip: "开启/关闭模型校验",
        onClick: _cache[2] || (_cache[2] = ($event) => _ctx.toggleBpmnLint())
      })) : createCommentVNode("", true)
    ]),
    _: 1
  });
}
const __unplugin_components_7 = /* @__PURE__ */ _export_sfc(_sfc_main$9, [["render", _sfc_render$9]]);
const _sfc_main$8 = defineComponent({
  name: "HCommandGroup",
  components: {
    HButton: __unplugin_components_0$6,
    HButtonGroup: __unplugin_components_1$5,
    HSeparator: __unplugin_components_1$4
  },
  setup(props) {
    const { createNewDiagram } = useModelerCreator();
    const designer = useDesignerStore();
    let command = {};
    nextTick(() => {
      if (!lodash.isEmpty(designer.modeler)) {
        command = designer.modeler.get("commandStack");
      }
    });
    const onUndo = () => {
      command && command.undo();
    };
    const onRedo = () => {
      command && command.redo();
    };
    const onRestart = () => {
      command && command.clear();
      createNewDiagram();
    };
    return {
      onUndo,
      onRedo,
      onRestart
    };
  }
});
function _sfc_render$8(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_button = __unplugin_components_0$6;
  const _component_h_separator = __unplugin_components_1$4;
  const _component_h_button_group = __unplugin_components_1$5;
  return openBlock(), createBlock(_component_h_button_group, null, {
    default: withCtx(() => [
      createVNode(_component_h_button, {
        icon: "mdi-undo-variant",
        tooltip: "撤销",
        onClick: _ctx.onUndo
      }, null, 8, ["onClick"]),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-redo-variant",
        tooltip: "恢复",
        onClick: _ctx.onRedo
      }, null, 8, ["onClick"]),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-eraser",
        tooltip: "擦除重做",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onRestart())
      })
    ]),
    _: 1
  });
}
const __unplugin_components_6 = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["render", _sfc_render$8]]);
const _sfc_main$7 = defineComponent({
  name: "HZoomGroup",
  components: {
    HButton: __unplugin_components_0$6,
    HButtonGroup: __unplugin_components_1$5,
    HSeparator: __unplugin_components_1$4
  },
  setup(props) {
    const currentScale = ref(1);
    const designer = useDesignerStore();
    let canvas = {};
    nextTick(() => {
      if (!lodash.isEmpty(designer.modeler)) {
        canvas = designer.modeler.get("canvas");
        designer.modeler.on("canvas.viewbox.changed", (viewbox) => {
          currentScale.value = viewbox.scale;
        });
      }
    });
    const onZoomReset = (newScale) => {
      canvas && canvas.zoom(newScale, newScale === "fit-viewport" ? void 0 : { x: 0, y: 0 });
    };
    const onZoomMinus = (step = 0) => {
      currentScale.value = step || Math.floor(currentScale.value * 100 - 0.1 * 100) / 100;
      onZoomReset(currentScale.value);
    };
    const onZoomPlus = (step = 0) => {
      currentScale.value = step || Math.floor(currentScale.value * 100 + 0.1 * 100) / 100;
      onZoomReset(currentScale.value);
    };
    const percentage = computed(() => {
      return Math.floor(currentScale.value * 10) * 10 + "%";
    });
    return {
      onZoomReset,
      onZoomMinus,
      onZoomPlus,
      percentage
    };
  }
});
function _sfc_render$7(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_button = __unplugin_components_0$6;
  const _component_h_separator = __unplugin_components_1$4;
  const _component_h_button_group = __unplugin_components_1$5;
  return openBlock(), createBlock(_component_h_button_group, null, {
    default: withCtx(() => [
      createVNode(_component_h_button, {
        icon: "mdi-magnify-minus",
        tooltip: "缩小视图",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onZoomMinus())
      }),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        label: _ctx.percentage,
        disable: ""
      }, null, 8, ["label"]),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-magnify-plus",
        tooltip: "放大视图",
        onClick: _cache[1] || (_cache[1] = ($event) => _ctx.onZoomPlus())
      }),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-magnify-scan",
        tooltip: "重置视图并居中",
        onClick: _cache[2] || (_cache[2] = ($event) => _ctx.onZoomReset("fit-viewport"))
      })
    ]),
    _: 1
  });
}
const __unplugin_components_5 = /* @__PURE__ */ _export_sfc(_sfc_main$7, [["render", _sfc_render$7]]);
const _sfc_main$6 = defineComponent({
  name: "HAlignGroup",
  components: {
    HButton: __unplugin_components_0$6,
    HButtonGroup: __unplugin_components_1$5,
    HSeparator: __unplugin_components_1$4
  },
  setup(props) {
    const designer = useDesignerStore();
    let modeling = {};
    let selection = {};
    let alignElements = {};
    nextTick(() => {
      if (!lodash.isEmpty(designer.modeler)) {
        modeling = designer.modeler.get("modeling");
        selection = designer.modeler.get("selection");
        alignElements = designer.modeler.get("alignElements");
      }
    });
    const alignment = (align) => {
      if (modeling && selection) {
        const selectedElements = selection.get();
        if (!selectedElements || selectedElements.length <= 1) {
          toast.warning("请按住 Ctrl 键选择多个元素对齐");
          return;
        }
        alignElements.trigger(selectedElements, align);
      }
    };
    const onAlignLeft = () => {
      alignment("left");
    };
    const onAlignRight = () => {
      alignment("right");
    };
    const onAlignTop = () => {
      alignment("top");
    };
    const onAlignBottom = () => {
      alignment("bottom");
    };
    const onAlignHorizontalCenter = () => {
      alignment("center");
    };
    const onAlignVerticalCenter = () => {
      alignment("middle");
    };
    return {
      onAlignLeft,
      onAlignRight,
      onAlignTop,
      onAlignBottom,
      onAlignHorizontalCenter,
      onAlignVerticalCenter
    };
  }
});
function _sfc_render$6(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_button = __unplugin_components_0$6;
  const _component_h_separator = __unplugin_components_1$4;
  const _component_h_button_group = __unplugin_components_1$5;
  return openBlock(), createBlock(_component_h_button_group, null, {
    default: withCtx(() => [
      createVNode(_component_h_button, {
        icon: "mdi-align-horizontal-left",
        tooltip: "向左对齐",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onAlignLeft())
      }),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-align-horizontal-right",
        tooltip: "向右对齐",
        onClick: _cache[1] || (_cache[1] = ($event) => _ctx.onAlignRight())
      }),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-align-vertical-top",
        tooltip: "向上对齐",
        onClick: _cache[2] || (_cache[2] = ($event) => _ctx.onAlignTop())
      }),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-align-vertical-bottom",
        tooltip: "向下对齐",
        onClick: _cache[3] || (_cache[3] = ($event) => _ctx.onAlignBottom())
      }),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-align-horizontal-center",
        tooltip: "水平居中",
        onClick: _cache[4] || (_cache[4] = ($event) => _ctx.onAlignHorizontalCenter())
      }),
      createVNode(_component_h_separator),
      createVNode(_component_h_button, {
        icon: "mdi-align-vertical-center",
        tooltip: "垂直居中",
        onClick: _cache[5] || (_cache[5] = ($event) => _ctx.onAlignVerticalCenter())
      })
    ]),
    _: 1
  });
}
const __unplugin_components_4 = /* @__PURE__ */ _export_sfc(_sfc_main$6, [["render", _sfc_render$6]]);
const _sfc_main$5 = defineComponent({
  name: "HUploadDialog",
  components: {
    HButton: __unplugin_components_0$6,
    HButtonGroup: __unplugin_components_1$5
  },
  props: {
    tooltip: { type: String, default: "" }
  },
  setup() {
    const loading = ref(false);
    const openUploadDialog = ref(false);
    const enableDuplicateCheck = ref(false);
    const deployChangedOnly = ref(false);
    const deploymentName = ref("");
    ref("");
    const $q = useQuasar();
    const designer = useDesignerStore();
    const resource = useResourceStore();
    const showLoading = () => {
      $q.loading.show({
        spinner: QSpinnerGears,
        message: '<span class="text-amber text-italic">发布中， 请稍后...</span>',
        html: true
      });
    };
    const hideLoading = () => {
      $q.loading.hide();
    };
    const showComfirm = () => {
      Swal.fire({
        title: "发布成功！",
        text: "您是否需要关闭设计器？",
        icon: "success",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "确定!",
        cancelButtonText: "取消",
        showClass: {
          popup: "animate__animated animate__fadeIn"
        },
        hideClass: {
          popup: "animate__animated animate__fadeOut"
        }
      }).then((confirm) => {
        if (confirm.value) {
          designer.isClosed = true;
        }
      });
    };
    const onSave = async () => {
      openUploadDialog.value = false;
      showLoading();
      try {
        if (!designer.modeler) {
          return toast.warning("模型加载失败，请刷新重试");
        }
        const { xml: xml2 } = await designer.modeler.saveXML();
        const data = {
          deploymentName: deploymentName.value,
          enableDuplicateFiltering: enableDuplicateCheck.value,
          deployChangedOnly: deployChangedOnly.value,
          resource: xml2
        };
        await resource.deploymentService.create(data);
        hideLoading();
        showComfirm();
      } catch (e2) {
        toast.error(e2.message || e2);
      }
    };
    watch(
      deployChangedOnly,
      (newValue) => {
        if (newValue) {
          enableDuplicateCheck.value = true;
        } else {
          enableDuplicateCheck.value = false;
        }
      },
      { immediate: true }
    );
    return {
      openUploadDialog,
      enableDuplicateCheck,
      deployChangedOnly,
      deploymentName,
      loading,
      onSave
    };
  }
});
const _hoisted_1$1 = /* @__PURE__ */ createElementVNode("div", { class: "text-h6" }, "模型信息", -1);
function _sfc_render$5(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_button = __unplugin_components_0$6;
  const _component_h_button_group = __unplugin_components_1$5;
  const _component_q_card_section = QCardSection;
  const _component_q_input = QInput;
  const _component_q_toggle = QToggle;
  const _component_q_btn = QBtn;
  const _component_q_card_actions = QCardActions;
  const _component_q_card = QCard;
  const _component_q_dialog = QDialog;
  return openBlock(), createElementBlock("div", null, [
    createVNode(_component_h_button_group, null, {
      default: withCtx(() => [
        createVNode(_component_h_button, {
          icon: "mdi-cloud-upload",
          tooltip: "上传云端",
          onClick: _cache[0] || (_cache[0] = ($event) => _ctx.openUploadDialog = true)
        })
      ]),
      _: 1
    }),
    createVNode(_component_q_dialog, {
      modelValue: _ctx.openUploadDialog,
      "onUpdate:modelValue": _cache[6] || (_cache[6] = ($event) => _ctx.openUploadDialog = $event),
      persistent: "",
      "transition-show": "scale",
      "transition-hide": "scale"
    }, {
      default: withCtx(() => [
        createVNode(_component_q_card, null, {
          default: withCtx(() => [
            createVNode(_component_q_card_section, null, {
              default: withCtx(() => [
                _hoisted_1$1
              ]),
              _: 1
            }),
            createVNode(_component_q_card_section, {
              style: { "max-height": "50vh" },
              class: "scroll"
            }, {
              default: withCtx(() => [
                createVNode(_component_q_input, {
                  modelValue: _ctx.deploymentName,
                  "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.deploymentName = $event),
                  outlined: "",
                  dense: "",
                  label: "流程名称",
                  hint: "流程名称是该流程主要显示名称，请使用规范准确的文字描述",
                  rules: [(val) => !!val || "流程名称不能为空"],
                  placeholder: "请输入流程名称"
                }, null, 8, ["modelValue", "rules"]),
                createVNode(_component_q_toggle, {
                  modelValue: _ctx.enableDuplicateCheck,
                  "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.enableDuplicateCheck = $event),
                  label: "开启部署重复检查",
                  "true-value": true,
                  "false-value": false
                }, null, 8, ["modelValue"]),
                createVNode(_component_q_toggle, {
                  modelValue: _ctx.deployChangedOnly,
                  "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event) => _ctx.deployChangedOnly = $event),
                  label: "仅在模型存在变化时部署",
                  "true-value": true,
                  "false-value": false
                }, null, 8, ["modelValue"])
              ]),
              _: 1
            }),
            createVNode(_component_q_card_actions, { align: "right" }, {
              default: withCtx(() => [
                createVNode(_component_q_btn, {
                  label: "取消",
                  color: "red",
                  onClick: _cache[4] || (_cache[4] = ($event) => _ctx.openUploadDialog = false)
                }),
                createVNode(_component_q_btn, {
                  label: "发布",
                  color: "primary",
                  onClick: _cache[5] || (_cache[5] = ($event) => _ctx.onSave())
                })
              ]),
              _: 1
            })
          ]),
          _: 1
        })
      ]),
      _: 1
    }, 8, ["modelValue"])
  ]);
}
const __unplugin_components_3 = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["render", _sfc_render$5]]);
const _sfc_main$4 = defineComponent({
  name: "HPreviewDropdown",
  components: {
    HButtonDropdown: __unplugin_components_2$2,
    HListItem: __unplugin_components_0$5,
    HBpmnCodePreviewer
  },
  setup(props) {
    const designer = useDesignerStore();
    const isOpen = ref(false);
    const data = ref("");
    const language = ref("xml");
    const onPreviewXml = async () => {
      try {
        const modeler = designer.modeler;
        if (!designer.modeler) {
          return toast.warning("模型加载失败，请刷新重试");
        }
        const { xml: xml2 } = await modeler.saveXML({ format: true, preamble: true });
        if (xml2) {
          language.value = "xml";
          data.value = xml2;
          isOpen.value = true;
        }
      } catch (e2) {
        toast.error(e2.message || e2);
      }
    };
    const onPreviewJson = async () => {
      try {
        if (!designer.modeler) {
          return toast.warning("模型加载失败，请刷新重试");
        }
        const { xml: xml2 } = await designer.modeler.saveXML({ format: true, preamble: true });
        if (xml2) {
          const moddle = new BpmnModdle();
          const json2 = await moddle.fromXML(xml2);
          if (json2) {
            const result = json2;
            language.value = "json";
            data.value = JSON.stringify(result.elementsById, null, 2);
            isOpen.value = true;
          }
        }
      } catch (e2) {
        toast.error(e2.message || e2);
      }
    };
    return {
      isOpen,
      data,
      language,
      onPreviewXml,
      onPreviewJson
    };
  }
});
function _sfc_render$4(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_list_item = __unplugin_components_0$5;
  const _component_q_separator = QSeparator;
  const _component_h_button_dropdown = __unplugin_components_2$2;
  const _component_h_bpmn_code_previewer = HBpmnCodePreviewer;
  return openBlock(), createElementBlock(Fragment, null, [
    createVNode(_component_h_button_dropdown, {
      label: "预览",
      icon: "mdi-eye"
    }, {
      default: withCtx(() => [
        createVNode(_component_h_list_item, {
          label: "预览XML",
          icon: "mdi-xml",
          onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onPreviewXml())
        }),
        createVNode(_component_q_separator, {
          spaced: "",
          inset: ""
        }),
        createVNode(_component_h_list_item, {
          label: "预览JSON",
          icon: "mdi-code-json",
          onClick: _cache[1] || (_cache[1] = ($event) => _ctx.onPreviewJson())
        })
      ]),
      _: 1
    }),
    createVNode(_component_h_bpmn_code_previewer, {
      modelValue: _ctx.isOpen,
      "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => _ctx.isOpen = $event),
      data: _ctx.data,
      language: _ctx.language
    }, null, 8, ["modelValue", "data", "language"])
  ], 64);
}
const __unplugin_components_2 = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["render", _sfc_render$4]]);
const _sfc_main$3 = defineComponent({
  name: "HDownloadDropdown",
  components: {
    HButtonDropdown: __unplugin_components_2$2,
    HListItem: __unplugin_components_0$5
  },
  setup(props) {
    const designer = useDesignerStore();
    const download = (href, filename) => {
      if (href && filename) {
        const a2 = document.createElement("a");
        a2.download = filename;
        a2.href = href;
        a2.click();
        URL.revokeObjectURL(a2.href);
      }
    };
    const downloadEncode = (type, filename = "diagram", data = "") => {
      const encodedData = encodeURIComponent(data);
      return {
        filename: `${filename}.${type}`,
        href: `data:application/${type === "svg" ? "text/xml" : "bpmn20-xml"};charset=UTF-8,${encodedData}`,
        data
      };
    };
    const downloadProcess = async (type, name2 = "diagram") => {
      try {
        if (type === "xml" || type === "bpmn") {
          const { xml: xml2 } = await designer.modeler.saveXML();
          const { href, filename } = downloadEncode(type, name2, xml2);
          download(href, filename);
        } else {
          const { svg } = await designer.modeler.saveSVG();
          const { href, filename } = downloadEncode("svg", name2, svg);
          download(href, filename);
        }
      } catch (error2) {
        Logger.prettyError("Could not download diagram!", error2);
      }
    };
    const onDownloadXml = () => {
      downloadProcess("xml");
    };
    const onDownloadSvg = () => {
      downloadProcess("svg");
    };
    const onDownloadBpmn = () => {
      downloadProcess("bpmn");
    };
    return {
      onDownloadXml,
      onDownloadSvg,
      onDownloadBpmn
    };
  }
});
function _sfc_render$3(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_list_item = __unplugin_components_0$5;
  const _component_q_separator = QSeparator;
  const _component_h_button_dropdown = __unplugin_components_2$2;
  return openBlock(), createBlock(_component_h_button_dropdown, {
    label: "下载",
    icon: "mdi-download-box"
  }, {
    default: withCtx(() => [
      createVNode(_component_h_list_item, {
        label: "下载 XML",
        icon: "mdi-xml",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onDownloadXml())
      }),
      createVNode(_component_q_separator, {
        spaced: "",
        inset: ""
      }),
      createVNode(_component_h_list_item, {
        label: "下载 SVG",
        icon: "mdi-svg",
        onClick: _cache[1] || (_cache[1] = ($event) => _ctx.onDownloadSvg())
      }),
      createVNode(_component_q_separator, {
        spaced: "",
        inset: ""
      }),
      createVNode(_component_h_list_item, {
        label: "下载 BPMN",
        icon: "mdi-code-tags",
        onClick: _cache[2] || (_cache[2] = ($event) => _ctx.onDownloadBpmn())
      })
    ]),
    _: 1
  });
}
const __unplugin_components_1 = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["render", _sfc_render$3]]);
const _sfc_main$2 = defineComponent({
  name: "HOpenFile",
  setup() {
    const diagramFile = ref(null);
    const { createNewDiagram } = useModelerCreator();
    const readOpenedFileContent = async (file) => {
      if (file) {
        const content = await file.text();
        if (content) {
          createNewDiagram(content);
        }
      } else {
        toast.error("无法打开该文件！");
      }
    };
    const clear2 = () => {
      diagramFile.value = null;
      createNewDiagram();
    };
    watch(diagramFile, (newValue) => {
      if (newValue) {
        readOpenedFileContent(newValue);
      }
    });
    return {
      diagramFile,
      clear: clear2
    };
  }
});
function _sfc_render$2(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_q_icon = QIcon;
  const _component_q_file = QFile;
  return openBlock(), createBlock(_component_q_file, {
    modelValue: _ctx.diagramFile,
    "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.diagramFile = $event),
    dense: "",
    filled: "",
    label: "打开",
    "label-color": "primary",
    class: "text-no-wrap",
    style: { "max-width": "200px" }
  }, {
    prepend: withCtx(() => [
      createVNode(_component_q_icon, {
        name: "mdi-folder-open",
        color: "primary",
        onClick: _cache[0] || (_cache[0] = withModifiers(() => {
        }, ["stop", "prevent"]))
      })
    ]),
    append: withCtx(() => [
      _ctx.diagramFile !== null ? (openBlock(), createBlock(_component_q_icon, {
        key: 0,
        name: "close",
        onClick: withModifiers(_ctx.clear, ["stop", "prevent"]),
        class: "cursor-pointer"
      }, null, 8, ["onClick"])) : createCommentVNode("", true)
    ]),
    _: 1
  }, 8, ["modelValue"]);
}
const __unplugin_components_0$1 = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["render", _sfc_render$2], ["__scopeId", "data-v-6bd97e24"]]);
const _sfc_main$1 = defineComponent({
  name: "HBpmnDesignerToolbar",
  components: {
    HAlignGroup: __unplugin_components_4,
    HCommandGroup: __unplugin_components_6,
    HToolGroup: __unplugin_components_7,
    HZoomGroup: __unplugin_components_5,
    HDownloadDropdown: __unplugin_components_1,
    HPreviewDropdown: __unplugin_components_2,
    HOpenFile: __unplugin_components_0$1,
    HUploadDialog: __unplugin_components_3
  },
  setup(props, { emit }) {
  }
});
function _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_open_file = __unplugin_components_0$1;
  const _component_h_download_dropdown = __unplugin_components_1;
  const _component_h_preview_dropdown = __unplugin_components_2;
  const _component_h_upload_dialog = __unplugin_components_3;
  const _component_h_align_group = __unplugin_components_4;
  const _component_h_zoom_group = __unplugin_components_5;
  const _component_h_command_group = __unplugin_components_6;
  const _component_h_tool_group = __unplugin_components_7;
  const _component_q_toolbar = QToolbar;
  return openBlock(), createBlock(_component_q_toolbar, { class: "q-px-none" }, {
    default: withCtx(() => [
      createVNode(_component_h_open_file),
      createVNode(_component_h_download_dropdown),
      createVNode(_component_h_preview_dropdown),
      createVNode(_component_h_upload_dialog),
      createVNode(_component_h_align_group),
      createVNode(_component_h_zoom_group),
      createVNode(_component_h_command_group),
      createVNode(_component_h_tool_group)
    ]),
    _: 1
  });
}
const __unplugin_components_0 = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);
const _sfc_main = defineComponent({
  name: "HBpmnDesigner",
  components: {
    HBpmnDesignerToolbar: __unplugin_components_0,
    HBpmnPropertyPanel: __unplugin_components_3$1
  },
  emits: ["close"],
  props: {
    instance: { type: Object, required: true },
    height: { type: String, default: "100vh" }
  },
  setup(props, { emit }) {
    const { create: create2, destroy } = useModelerCreator();
    const designer = useDesignerStore();
    const settings = useSettingStore();
    const resource = useResourceStore();
    const { elementTitle, elementCaption, elementIcon, elementType } = storeToRefs(designer);
    const isOfficialPanel = computed(() => {
      return settings.useOfficialPanel;
    });
    watch(
      () => designer.isClosed,
      (newValue) => {
        if (newValue) {
          emit("close");
        }
      }
    );
    onBeforeUnmount(() => {
      destroy();
    });
    onMounted(() => {
      try {
        create2();
        resource.init(props.instance);
      } catch (error2) {
      }
    });
    return {
      isOfficialPanel,
      elementTitle,
      elementIcon,
      elementCaption,
      elementType
    };
  }
});
const _hoisted_1 = /* @__PURE__ */ createElementVNode("div", { class: "main-content" }, [
  /* @__PURE__ */ createElementVNode("div", {
    id: "designer",
    class: "designer"
  }),
  /* @__PURE__ */ createElementVNode("div", {
    id: "camunda-panel",
    class: "camunda-panel"
  })
], -1);
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_h_bpmn_designer_toolbar = __unplugin_components_0;
  const _component_q_page = QPage;
  const _component_q_page_container = QPageContainer;
  const _component_h_bpmn_property_panel = __unplugin_components_3$1;
  const _component_q_layout = QLayout;
  return openBlock(), createBlock(_component_q_layout, {
    view: "hHr lpR fFr",
    container: "",
    style: normalizeStyle(`height: ${_ctx.height}`)
  }, {
    default: withCtx(() => [
      createVNode(_component_q_page_container, null, {
        default: withCtx(() => [
          createVNode(_component_q_page, null, {
            default: withCtx(() => [
              createElementVNode("div", {
                class: "designer-container designer-with-background",
                style: normalizeStyle(`height: ${_ctx.height}`)
              }, [
                createVNode(_component_h_bpmn_designer_toolbar),
                _hoisted_1
              ], 4)
            ]),
            _: 1
          })
        ]),
        _: 1
      }),
      createVNode(_component_h_bpmn_property_panel, {
        title: _ctx.elementTitle,
        icon: _ctx.elementIcon,
        type: _ctx.elementType,
        label: _ctx.elementCaption
      }, null, 8, ["title", "icon", "type", "label"])
    ]),
    _: 1
  }, 8, ["style"]);
}
const HBpmnDesigner = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
HBpmnDesigner.install = (app) => {
  app.component(HBpmnDesigner.name, HBpmnDesigner);
};
const components = [HBpmnDesigner, HBpmnDiagramViewer, HBpmnCodePreviewer];
const install = (app) => {
  components.map((component) => app.component(component.name, component));
};
const index = { install };
export {
  bundle as BpmnLinter,
  BpmnQueryByGetService,
  DeploymentService,
  HerodotusPropertiesProviderModule,
  ImageIndexes,
  Logger,
  Swal2 as Swal,
  translate as Translator,
  add$1 as add,
  index as default,
  getAssetsFile,
  getBpmnIcon,
  getBusinessObject,
  getRawType,
  is$g as is,
  isAny$7 as isAny,
  lodash2 as lodash,
  parseElementType,
  toast2 as toast
};
